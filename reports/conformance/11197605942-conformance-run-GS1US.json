{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1b693bbe-d0b9-4543-b7ab-5a3fe90b1e39",
        "name": "Clear Cache",
        "item": [
          {
            "id": "886fdc4e-3bbb-464b-a9e9-808270db3720",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69a7ba52-6971-4403-ac52-5d88fb5471cf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dbcf964e-5c47-44d0-a1ec-7e9ec175af53"
                }
              }
            ]
          },
          {
            "id": "d289a0db-858d-4545-b0b2-875bd13f0be3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84e66720-2a97-46b9-a8b9-3e473e9bd68c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6512aef0-5a96-4dca-99f4-d7bef5006c4c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e73d82bd-caa7-4bca-b577-9a9c3b580052",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "036f473e-4399-49d6-9766-431db3e157ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad10f4c5-860f-483a-9897-631b219eb5ff",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b7085ee-0513-4bca-83ea-f139dcbc57ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c631e2a-c373-4a26-bdf5-0c17590e23c7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a673b69a-2dca-4bf4-aefd-5e3f66232d2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "362ae253-0ef1-4d83-b4e1-d9bb7f3247ed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2588a4ef-c556-412f-9cdf-923ef7a3531e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a04e1b8-f60f-4e2a-beed-e0016be70a95"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a70ebbba-5261-404a-9a7f-e15903137a7e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c35ca390-4501-4dfe-8046-6296938d938b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29662f61-0ad6-4191-a218-101822d20b12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da20b2ff-c406-4dc7-a394-9779bc18f839"
            }
          }
        ]
      },
      {
        "id": "77e7f8c3-6cb1-491c-ab50-f5b0225fe5fc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "445343f5-a8ec-4ff9-8b33-cf4ee4b243cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7b045be-50d0-41fb-b92c-0d3e6180584a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c947a53-2316-4e7a-acbe-45bc24860e99",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e4c469-7743-42f6-a26b-db38d422b5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6b9fbed-d551-43d8-82fe-4235c55844d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6c3e65-7b0a-4414-8ed2-10b6d51dcb85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5b531a-92a1-4a74-8ef0-784b953159a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8dbf0d3-8831-4187-adb2-89972865c639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c5a3aa-a772-4224-9c20-6621fad3e0a7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2828e1-257a-468b-a7f6-f6d54c8fdc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc288452-c554-41f8-ba78-bb498ce3f6d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b28f468-2d53-4184-8e08-6ca847b34b9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b94261ba-584b-4c59-bb00-14e13d54b6c9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08aff6ed-81a1-4e0b-91e7-44d676c72768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a45bd86-6cf3-4140-a050-2ccaf26648cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7901fe1f-b5f3-4c7d-8aa8-cd5fa5fd555a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f187f7-e7f1-4243-8af9-6681e0f41708"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "04bd53b4-48c0-4176-9d12-639b79c9eba8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b380ca17-32fb-485e-b8a2-3ab666758cf8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "794b111f-2541-427a-a917-6142502ff66f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "aa037c55-b7f4-43c0-9999-7ce7b3f013e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e53131a-53dd-40de-bec6-79f28fe3f57e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "471e42b0-ead0-44b0-8a3e-b39e463002b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c2e0dcf-084e-4fbd-93c5-0ff2823d3d30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c857c30d-8dad-467a-a74a-86b29e0c5502"
            }
          }
        ]
      },
      {
        "id": "c01606e7-91df-4527-9bdd-fb60a0f705ff",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ea790f41-dae6-4202-9955-569c4b34c50a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34a7b89f-73d3-4956-979e-79e9e885e02c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ac7d2f2a-61cf-47ee-a481-5973692ef17c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f4c38e-8846-4ebc-aff6-0c70d00c668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b423eb-364f-47eb-86bb-9a6775a01e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa508b4-08e9-406b-91fb-a1584294a132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e660852e-6ae5-4d9a-87ff-dd380e25d202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69209fc3-cd44-4f78-a4e2-f40e98072e15",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d220fa-22c8-4bcb-b2ae-f3501ef7572c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a62833a-ee2f-44d4-9a30-f2887da422f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f1b86e-a65e-445f-83e7-99fa9f31da73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70f5d782-9249-4143-bc65-e0a06ccc6ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e0fd75-b44b-4245-8ec8-7f3ec6041dd6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc3583e-b503-4b6c-965b-d7f076748733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfd5e82-4175-4d6f-8ccd-2dff565166b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82941b06-7f2b-4adf-95f6-0683378e66df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4206da91-dd8c-4e71-ae54-bf445a3342b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218ac8a1-4d1c-4487-9dc0-341d49e78c3d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e23fa80-25de-4396-a4e5-90b4a0039098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93929382-6c1c-4e34-95aa-af515a6bdcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30d8e07-7507-4ba5-8e93-dd3ecf2612bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba45092a-7af3-4b18-b8ae-52b673f79b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f001ce-a3f3-4479-a152-a97011be3b5f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21c781a-fb0a-4409-991a-72c3667dc2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da38c42-ec92-4607-9874-49bf6f412aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064b976e-e478-4ec8-94b6-e556af1a4b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd4985b-6142-41e5-9bd9-8cc4384ed5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacd0f21-84d3-4ada-9a03-f608328b1d4c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bf6301-fb16-4f07-a7eb-73c6d9a7af0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7c16df-d5fb-44be-9920-237c844f00d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7da2aab-3294-4c7e-9d7b-18a8ad8072b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6cc9d28-50b0-4a7f-9566-84c84c4349f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1129db88-5320-4c8c-a25a-6b92d113dfb3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a3765e-ccc4-4517-8312-e4c29bc56b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3bb5cc-034f-4bd2-bc62-010cc115ed5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f40680b-a9cb-45c3-bdef-8dcfa9a51202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "572cf105-1b07-440e-a692-f3b58c808594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879e5c87-7dc1-421f-8210-a71f14cf45af",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dde134-3d61-440c-9aef-bdfa9b2cb073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77ccd3f-6a79-4165-a0d3-ddf08af9737a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8aa88e-564d-4d41-9480-d54474411f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe4a300a-be43-476b-918c-6c2762e6f240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7af79f3-cf78-4661-9010-a837a55b8486",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d206f0-1077-47ab-96ac-cd8b505fc605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3100f1ae-61b8-4f85-a922-d76936702906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df3a1c3-1632-4aca-ac94-47f1e64126ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e0e46a6-6480-4aaa-ac1c-1faf43300a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffec6c25-8d15-491a-bce4-2853de5a08fd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8776a8e9-0719-428b-9f2f-462376b29aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1988c9-53c1-48ad-a177-4bb7ce6d5261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e05374d-49f2-43bd-8f2b-e5cc83522a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73dda6e8-c9d3-443a-bae2-fe30e0053f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d825d3ab-376f-445d-87c8-5499752ec89c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecad9dc-7a51-4ff7-a97d-04e84d115f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b9ce54-4ee6-4163-9e68-47cc9c24a819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22316bbd-c6b2-4ca1-a1a0-0da64d286966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "838fd84a-17bb-4235-927c-fb29456427cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7111a3cf-12ee-4a98-9811-23bd05207b26",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d536008-22a8-4986-9ceb-d5f805d1f0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7d390f-397b-4bc3-85b9-3bc75b4a6a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0049143b-1eab-4b28-9cb2-3519e0949139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c16fde6d-e315-40ab-bf60-660d07788ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbe0714-8c8f-4f4c-b416-55075d49018c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b068b8-e540-4a00-bddb-f4e5e969400d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bb3e28-d7d4-452e-b750-8e8e4e05d1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2abf6ce-d23c-46e4-a4d5-48baaef95816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db96a78f-966d-4815-aed2-1297378244b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155905de-9aea-41bd-a5fb-744bae91a2c1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a0575d-38bd-4b9d-8acd-a71f96dca3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2f5abd-dbe6-4f73-8aea-be0dfb16104c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72f0c7c-fe92-4bf3-861e-f23a2298649a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12e1f231-f88c-46e7-8258-232186fa82a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1bf62d-0fbd-405f-8bf3-2ca9837f1f54",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f5e521-385e-4da4-bab1-5ab4cadc82cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef764c2-0d3c-4ca3-b33d-9b64306e7ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c1c4a3-2862-438e-8ac9-d7a27adda171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b217e46e-23b3-4dd4-9b14-2660ff24718e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba251269-6009-4a54-91bc-03cb2fb77c20",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebccd01d-1281-4ed9-8f66-9d0b98c20425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5dbd46-96f0-4aea-914b-bb7ad304fb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabf691b-dd5b-4858-b518-dfacc1f2b83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "729513f7-9d88-4fee-af0f-dcbc81d010d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42093db-83ff-44d3-b97f-a865f9c89a4d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72431e6d-055b-4769-b427-104c4f26e52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4f34ea-f32b-41e0-83ac-233ae019be3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d255604-48aa-4c70-a041-8a2591a82718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7276021a-3ee6-42dc-b6fd-43dd2b33ea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1a0fae-a7e0-4516-a5de-4d31ba24781d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883a5184-d1e8-4db5-bcc6-cc29788b85a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4b643c-894d-4a6a-841d-51e9fefa6e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcc52cd-1df3-4686-9cee-208d8e1151d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f1142b-0994-4e8c-8892-0569deb369c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3883463d-eb9d-4f06-ab94-06928ed8e748",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a105393-17f2-427b-9cbf-35120f597df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35183050-22a1-48dc-9972-7244f3e92fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3c5493-8bf2-4588-870c-76050d6029df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecad1e5-4abf-47da-be35-cd3f4ef07816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3dc59b-4aa9-4119-8d1d-0b129c1bbf37",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4121adb0-8e10-4a2e-9cc7-25341e21ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5b8522-bd4f-4e79-b08a-61ecf52d3fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d5b89c-99dc-4c90-a87f-3b41e0271100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ebbaf8-569e-4b6a-8dbe-9437b847e773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bf132b-2bdd-475c-897f-4eb7f0317167",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9846c2c-573d-47ec-9290-9c587c0cb048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e644e9e0-2317-40f6-8897-b3a6ec497cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d72e37-0cf4-4fd4-8444-2d6caa7c6212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5b91b6-0bdb-4d13-b07f-df54b04afb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783df255-125a-4803-bcbb-013819e23859",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f9aa14-d0e2-4eeb-9cf0-5e764bb0b5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb08680-f7f0-4793-a7c7-17346e73c266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00051eac-153f-4002-a6ba-de11d68c5013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88aeabde-67b4-4f52-bf2e-5cc8bf547807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e49589-de39-4647-91e3-2147230d8d62",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72f4081-9b22-48f3-9fb1-6a2ea2eca82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40e2077-9b0c-4ad3-9b16-185a2f2a431a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82dc724-f01a-41f0-833d-a1f2c00d0863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "989b01db-412c-4acf-ba5d-83be3829fb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ea040d-02a6-41ce-a4e7-cb03836a6fe7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342cf2ed-26e7-4b8f-b1eb-279ca30a58b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9202dc40-e17e-4ec7-b110-bfcf4e585957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006c5d38-f583-49a9-a3b1-7e14810ef544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f190c45-5b5b-4af1-8263-b51fe0dc05b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30f7af7-9817-4108-b17b-dd1526a69315",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817b11fa-357a-453e-ac0c-05e8e8b6404d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11dc3985-6d55-4547-b199-9c5cd89bcb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbbe7f3-41f5-4788-b786-da1954974fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb3ec66-7a2e-43d6-84df-e53716c52e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7298353c-b89c-4bcd-b5fd-192b00b4bc15",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38adb76-5ce6-4374-a697-567b9bc8de36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ffd85d-df8c-4bc4-81fe-91a142be4909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e81150e-9d78-4003-998b-59aa03c370ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bab7c13-df44-4433-8732-e52b2e199488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2024c074-41aa-4ebb-b31d-0200a4555ca8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1469d1-6079-46c7-afc8-537a716181c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf394fb-a720-4151-8afd-706f4b394ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7e55c1-1a95-4f8a-a160-a86d45d44eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da565ee-e144-4b64-ac35-27cd825f5a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1873920-63af-4abd-9f5f-dd0d5bb63169",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfc7f48-4091-41bd-b8cc-6adad494292a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a41c129-e7fa-4be2-b7cb-a7586b96ebe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f3686b-70f4-4097-b8c9-5e3d7e0ea48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c971a286-69ba-4ca7-b078-4c271c90c715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c135bbe2-b3be-425a-81ba-2b19e77ddb1e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da0e04a-ef24-424b-8da7-4acef4780ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c23d373-3a2d-4f26-b771-ba97efe4e624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2246f080-4b3f-4852-b900-51dd35e5e2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3400ac35-dfde-40d6-9177-650b0f2352a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd5603-c9d1-44ea-a3d4-ce61a5bcb181",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445aae2b-4635-4110-8120-fc13a58eab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb589b8f-c829-4437-b799-43a46c5aa1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9230ccab-6a7c-48f5-84b4-10c07e29340a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d461500b-61d5-4303-8497-47a616a57e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed0a1a9-3327-45f2-be8d-f2f4a7023c84",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c45deca-1d98-4fcf-8219-7e0ebb6db988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88eee2d3-d5f4-4791-8836-fae9008b7f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400fa521-cae8-4956-afd7-bba1c529839c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e2b979-e2b9-4905-81db-30635848b572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0944a7bd-45ab-41ba-80ad-dadd6ace2935",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0debd949-683b-40e7-85ba-aebb7cf6c853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cb52d2-037b-4f94-a60e-a0896c83aedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3093dfb-c5f8-4e30-8c9f-8c114a15ffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "758bebbf-360c-41db-9da6-7f2aa4c0406b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767788a0-c472-4bb0-8a91-abdc60324f76",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88ff2ed-0879-4385-a08a-d905a703abd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e613ab3-17ae-4c96-ab9e-304b8c5cf2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8f0d6-9073-4c8a-a8e9-40644730a1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aab7565-7220-48eb-82d4-0ff50180ed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aeb60e7-51d6-47f5-a04a-5cde6bca23f2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b80324-f488-4850-9acf-20c819308e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182c8879-2a13-42a1-9dd6-456969b09eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ea0659-ebe0-43c4-bb8e-c00227479b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e410ca-e00e-42a4-96c1-ffa553086ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ece984-e4aa-4740-8691-6d9c7e440abe",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf776d7b-07d6-488f-bad2-5ae6e56cc388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744ccb68-0ac4-4ab6-ad9a-a639ba106da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2c6810-5296-453d-86cb-d4f8b498af47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf2ae41-dd6b-4729-b19e-763be996f7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836a2eae-5955-49fd-b327-1ea9df17ed55",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2605a094-f7f2-4038-869f-8f121aa16845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a17bf6a9-1407-41a9-931a-6386a4c42e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5f6b93-9a7f-4ad2-a262-5da5ceb6fa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ade068d2-455a-4b17-a0ce-13a94a5c80a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454baec6-9eaf-4ce2-a1bd-f33a0aea6168",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623f5ca3-e740-45bb-8457-bc68fb4027e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ba7cc8-4ff3-4228-9feb-94ac33096bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd071c1a-0f5c-463e-ad28-1b48a4a144d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7305af41-2d18-4f0a-a31e-fca5a7318307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474427fe-692e-4cb6-bb8b-a9c970d5ec5f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359ee52e-548d-4a12-a399-0e373304e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a90ba43-3388-4694-ada3-20be6daa3874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6fa121-987e-4d54-acd6-1c4341189c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30ba53eb-b3b8-4725-b3d5-959c09cf5459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deaba26-0861-4191-9c3b-79ba80ae930f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e382b778-c9af-4c00-8612-7d82124d42cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7231dd61-2d35-42ee-a434-26a678c27eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066cd604-2362-4140-83ae-58ff1a343c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8006afae-4e00-4386-87dd-13f465c7fadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b72f5bd-f02b-4a89-8705-60c821f5bec9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd86ef6-dea3-4306-876d-c6f28809780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c73280-12e8-4b71-ac47-b0be8cd930af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f036946d-e309-40d1-95f9-2cf8db9492b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0440446e-d0c8-4250-8b89-b8d2a349fb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e4c6cd-cc07-446e-8d55-53c632384916",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294d7730-cbd8-4e9d-bae4-5f96a52772b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60436a80-72a9-4986-8e0c-d62c6591b4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba98876-9ce9-48aa-8a7c-7f2d3bde9276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fad7564-3a5d-48d7-8722-f7f8d5edad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f285ef5-4345-4d4b-aeb2-ba22a891d8e6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8988b583-5cb8-4791-ad11-cde44c58383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfc7bdd-4f14-493a-8fe5-333c9641f155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223d531b-6dbd-43c2-bd4c-052c9c1c94cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7cace7f2-fdad-46df-a87d-a4287f133575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1174e6-e7ec-4745-a165-d1a4dd6d7497",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f8e5a1-4c8b-4132-86ef-ae70645eba20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98762a75-6069-42a9-ae0e-03b28a5be229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac0c39f-e11d-4629-afa4-97bba8f2994e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3c4276-8d0e-4246-8ac9-6e9db738e681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c67756b-b120-4545-8d91-1301b1146380",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46056ad-147c-4e9c-837e-fa3d82de68c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdbf68c-2d69-482d-b36f-f2f3c42b4654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbb31a0-a023-40f3-9414-995d061df555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1306d9-fd96-4085-8b66-375a5a01672f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388f6a73-4be0-47fb-8572-8a0f0294ad6b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0385e47-864b-4908-8c73-ce09f8c69454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d40df53-c143-458b-b423-6ce444c4e24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65474572-9fb3-43f8-8898-3baeccf3626e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2678a179-d82e-437b-90b7-8f9af4fc7392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ccc792-8914-41d6-be84-8f90cbd990c1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5609a4-229d-4b03-9d9e-35d094f02973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce18084-eea2-476e-9ed9-37bbce6b7c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7764f6d0-d50b-43b2-806d-754575dc2f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24ed7063-4085-457f-b2b6-92eacd1546fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974ea567-4732-4d97-87c9-da87117725a3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827e4d1c-075a-466d-ad0d-65c464700391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879cac1d-1793-4003-8719-660f61dc1c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca94b901-8290-4b6b-91bd-ff607ceb5129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68be73a-eaae-4639-8550-bfa1cb61dbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a4530f-41ad-4028-aff3-c9626c9fa5d1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58dbacd-303f-4592-b3d1-cb33a2c4696b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339950c0-8ccd-4705-be17-59fc45ca5042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a042e3-d1a5-405f-8ba8-245d5f61cda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a30ed4-9bcc-4b43-a6cb-07ffdaaf0002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52757b5-c695-4875-b15e-a522e3d8185f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147e004e-9517-4583-899f-fdaf05b7ab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639463c5-4603-4d61-b2ca-fe7e8d68ff03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a936480-18ed-4e3f-80e8-ced21e8b40b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "348feaab-ade5-4eb7-abe8-1f61c861ea24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b475f3e2-c1bc-40b6-94f9-6f777034e8d9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6c1962-53c9-4d09-a7fa-0c0c5c5bcf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e674e6-8c56-4f58-98d2-c456d5099871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7540f0e8-5ba4-4265-9990-d9a001e65353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62b1b18b-4eff-4bde-889a-0ce2fe5274e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d831bdc4-b0d9-4535-ab58-c7154edd1bc8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84694e8-1852-4951-bfb5-946c6725374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57ad767-0615-45fd-bafd-3a1d749c13c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6b06f9-d179-47f2-8660-ac27ec5961b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "15245953-6792-4933-900c-a5b842804abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9421e27d-95c0-4591-bac9-98c6973078a4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77404d61-4274-4b55-9267-3419b88e8a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23e887d-aadb-4c35-88ce-671bc9b1ea97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fd1f23-a444-4ed1-bf0f-f4bf417f762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9be92ef9-0af9-4b3c-934b-df430da0d67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1d80d9-40b1-4a6d-8704-b7fa921d121c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90ef211-fa55-4e30-946e-1553cacee367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff7e7db-76a8-4011-b9c7-e2f329c66aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b938d90-4c9c-4408-b423-8345049760c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a4b7ef-839c-43d5-b2ea-656858835f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e471d55-67ae-4f9d-9364-51f0888c132b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471b0dc4-3224-4a6b-a21d-d55e2add303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dbf046-b633-40b0-900e-f085b4aa472b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc93c0f-b6db-4532-8d71-ffd27cb8c029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bb0381-d15d-41ef-a7d3-195ecce78e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e00c45-6be5-4335-bbc4-2425ec20564f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b85d0b-0313-46f9-89eb-e73ce26bfa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9dd195-55a3-4d38-ac9f-f76d90303ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb449629-4b19-419a-89d7-c0217da3ab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba59c434-e0de-4484-927e-be89ea818b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2065663e-fce3-460b-b4e8-078663f4ef25",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7788bfe-7a06-4d5e-a2a3-e9cf80ae2f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a6d10f-a523-42ab-b68d-8da0673f513d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8a693c-263f-494d-b912-2cba6046c058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5b94196b-6caa-42a1-80f9-fe7aa1b06de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8282113b-3873-4538-87e2-d26e00fd53f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfd6b15-f5b3-4b7b-9e59-cd2d1be7904c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b27d8a-55c6-437c-abdb-b3c594720bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dd9446-f008-4a47-81f2-1cf1d9e68a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3c9478-3049-4c51-a51e-9e6c7be63490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca216768-f996-4915-8ab6-d94ccf1b9006",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e91bf6-a63f-4968-861b-415bc724dda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7f01ae-bc0f-4860-8adb-49f1a1293d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8531d8e0-0fd5-42c4-b5c0-e12ba423e669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a118aa6-fa9f-4a8c-8399-a9e6e495aa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabd24d9-40a4-481d-98e3-230de8507827",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7f479d-75f4-4fcc-ac9d-dce1febf6e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb28a9d-88ff-4c04-9e80-acdc24d4b995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf9ceb4-7531-42d5-b7a3-b6b57b24d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "454edb5b-d8e7-4a69-a7fe-eba27717ce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d38d028-f10f-45fc-b015-8f5191fdf604",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b7e8d1-51c2-4104-866a-23a89d7141cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9760b337-2b60-491f-a422-ba499d30c89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9714db7-f5f3-4a7d-889d-c2d52c5b460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9454313d-3cf9-4944-b870-e1224d6269fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4026415-0f2b-4be6-99fd-e4c285283d2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cbd354-3b0f-41ea-99c4-2dd42b7eb531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33caf20f-6fd2-4e4b-a097-9768ff10eb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f4d334-4252-4d8e-88a0-3b10f6f3412f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c37019d-2a12-4d1e-bbc8-5688cd86ca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05739949-d657-4504-998c-01ac3cb0574c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fcb994-5dd7-4fe9-a13a-f4c5c628f6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0727e0-6120-495c-87c2-ba18e1249fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def48f05-39fb-46da-9fa3-4e1277dea319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2a2904-8c7d-4be6-ae41-1c8672bcce2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbe99fb-1d60-4da3-9b9f-3b2f8ed4fd9d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2b87f4-99b9-4dd5-980a-3e165e6e8817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda8ed39-2e71-4d32-9086-7294973fc43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3658cf2-eea7-400f-be47-779c117c24ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "446ea09b-177e-4ae5-a36d-59c17b42bb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52327ae-2255-4696-89a6-c40c1d5f202d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67160fa7-8416-401e-a209-2d7680af09f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d093d0-b95a-41d6-923c-e0a0a2db95c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b3c08f-9f98-4d18-8ef7-762113d61388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b268b0-33c5-46ca-86fb-90ac18da666a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f8ca03-c8bc-4d96-84e1-3cbddb413c01",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cb66bb-bf81-45d8-b575-4f2d0633e048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9d9dfd-f30e-472e-81ac-4624737a84c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b56fec4-8d8d-440c-95f9-d49566bf2fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e409cd-57d8-4c0f-900e-93418534d3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f3b690-efea-4159-8a50-89eed0611163",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ec1a35-61f0-4aa1-95a5-e1adfad6682a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69e67f3-f505-44a1-a565-e054bc8cd74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4494cd40-84a7-4ca8-920e-41562876e4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a8aa07-f047-4585-913d-1084b3ad173f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb379a20-352c-4baa-9168-e1a03ce9346e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadd294f-4204-498c-b628-23a7435b04b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c77be1-0c8e-4f49-a675-a74802982a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa16dbb-da11-4b09-89e0-c284a8689291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3eca6195-1c7a-4915-b977-b97a17948b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73abe07-2bf5-4325-997f-263d9af66ee1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b14fc2f-2757-4d3e-b42c-759d0140ec57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23391757-1ae1-476f-b85f-c490073e08b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f08655-cfa9-4eff-8674-9473742cde4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0bf7fe-e7af-46ee-850a-d220f2c3028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c069454-ef7e-4e13-957c-dcf00f2616a4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18744e4-bf45-46c8-b289-ac9626e3bece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302ba707-9a46-4496-9108-af984b0e1a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8306fe1e-6a59-4f25-afe0-4cc94089668b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f47aca-672a-4ab6-a4fa-382d217a5ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598ed76b-fc12-42be-8590-6b65d4c7b6e0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dddad4b-f8e0-4ff8-adac-f784e899eb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b393bb-0e20-4a3a-8b24-b9cab68d7b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cdc3a1-ca39-4a62-9871-fb2561b11d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd96037-e58d-4235-a319-34841760c0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6ccb73-aa65-4a85-97d1-e1e522662a12",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb08720-93bc-4455-80a4-aea27474e1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706ebe72-d77b-435d-a3c2-fd9e5ca01210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec97311b-bd98-4bbd-8bbc-406108a1ffd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b29189c-a5b7-4a33-bd19-7a1467f43197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a4b1aa-5fb9-42e3-a163-15a76cc5a991",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b4bf54-cba4-4a3f-9300-fdb4a8b8c2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72483063-1291-4bbc-be5a-5e62463889de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15851c3-ba0d-4f63-a225-e742d3b59f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cefc0da-7144-4c8c-98d3-712a54f3a1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c686579-19f1-4c3f-9d8b-d06871b8ac88",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0cf330-de17-4f33-90cd-a60b05572416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc3ec16-44e2-4b8d-87cf-e8ac1ebc89d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f18e21-3ec8-4621-bef3-70f1cad30c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "689f3936-7e71-46f8-9e4a-dc07796ac872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223afaac-4fa7-4f51-85f5-8869fe4d0d8b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe53c79-78c9-4b8a-afe7-11946793b1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d848fc71-10be-4dd7-81b8-c697357ce240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0978ea27-010a-4965-b961-225f8953cf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8025ab06-e3e3-450c-9863-e9747da4c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2bdcc2-b7ef-4fd4-86c9-1886f291e313",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0a0317-ae86-4bcd-a13f-77a5069a5ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58592f56-0bca-45cb-aa27-3b94a14740e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89655533-e0c8-499a-9ddc-c7af1fcfe771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2c0d8d-b3ae-4b2c-99ab-f63f37d1563c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bdb50a-c248-4b1b-86d3-6876e1df3b98",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad429993-93a9-4606-a127-dc25da554934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f8d517-2d58-4f31-bf76-669568f0e02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd7be51-2eac-4aae-a6ef-ebce9cd42944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a83f6f87-616b-4df7-aa55-dc398cd4675a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18eaf51-f858-402d-bde1-d6ef6cb6862d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da07ed1-0390-4dbb-8305-d7c18d51148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7395925d-53e7-40f9-b4d3-e453df59ce14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128045ae-7a4d-4942-9cba-4e12c0da24e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45ea36f-9172-4661-b3d4-25e60fbff464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cdd180-c86f-4b67-b192-f8645fd5c129",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e537b4a-2414-45e5-9149-6fb6b24a086b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15d8987-1814-40a6-aa0c-36eaffcb7060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5bf707-8396-42e7-ad14-9ec13b6e0bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a814871b-be66-473e-8192-49c6858a1a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908de795-e517-4a74-831c-d978b0a90ab8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85a0d34-0790-497d-958a-ecb0432f3711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e260a12-6854-4514-b5f8-8c0b3a2fbc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98e3c4c-57a0-40ea-b99b-8e0a821749dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16f89b47-ce5d-4735-b458-a3123a30f2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343e870a-3b52-4100-8117-1e783d31bc0d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3757775e-5155-4874-9254-e4544bb0d735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c860cb9-a115-479b-b3db-a912dd93d87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af25cc1-8b7d-4129-977d-d08f51715af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d208e4c6-156f-450e-8a17-c200cf024168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace51821-f4af-41fd-b67c-08908431f0ee",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5149e6c-eaba-413a-9b06-f87212f6b469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a987d9-169b-40db-b3e5-edbb8b8373f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9789c18-84f1-4dd4-94d0-275356ba7d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd05f663-6c1a-4617-9ed8-695ec076bdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6d1dc9-76c7-40c9-95ef-3cb6b21512cc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da10440-e050-495d-8cbd-bcd4511488e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fa2dcd-074d-4a03-809f-495e868abe17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820d0962-5151-41a7-995c-336fbeed777a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79624f0-5ec3-4468-9c2d-d736b338ef7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d51b14-fe5c-41d6-bdc0-894356b4bded",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626b8f6c-7d56-40f8-bfe2-37d1a072c68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a467db9-d97d-47e6-895c-ef264650ab0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f931054-60ca-432d-a7b3-31004e4e11dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96aa09ca-7bd9-4843-90fb-d3f0f259b1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c23fdf-f29f-46ac-8e60-9dd270de48d5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da94d85-2c59-4e4b-bf16-bf068307fe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c45709-287a-477b-9d0f-b8c76a6d93f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b579f81f-9f03-4ad8-85a5-aab08b12aa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "936f0da9-b422-499e-9d8a-95cf6cec8e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0adcc42-437e-4558-af5d-d9f86d7b56d2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0f1c90-a644-47ae-aa74-c565cef73482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc4dc62-3c98-4034-86b5-a209729fa2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b9a053-8340-495d-8e69-78d4d42a63ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb45fc29-3295-46e4-8817-63f79b8d7205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c43a46-7cae-4c58-b9f5-050778e5fe06",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0569f4-ada1-4942-b78b-a16cbeaf1f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad74bcc-d7f0-4b84-99ef-ceb3a28b75e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fd5993-ec20-4b78-a351-ac7b8fc2fa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d28563-ad01-4059-bafc-e2b0d699fe84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289cc705-4f19-44d8-9523-8acd93e91810",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af119bd9-84f5-4c12-b5ea-15550722228b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babe223d-f81b-44ec-b8a3-7773df958a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6e59f9-5fb1-4b22-8575-7e987998a94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62384104-5922-4d89-b14c-1eb546e1d079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b0ecd9-db66-4c50-9e58-34399c1081b8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a786645f-7997-4dd8-b5a5-3b41657fe29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be4a20b-17bd-4a87-bddb-351c7981d570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bbaf6b-10c1-4387-bb37-53bed054c688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b272d42c-e4a6-4176-a80e-556b57990979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ad46f9-828a-4afa-835f-b72e534a6c95",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a596ac61-a35a-46cf-b0b0-3e3c787f89ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbfc8d9-afd4-4c42-afb3-67e9f3fc4bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853e86fc-f429-41bd-b8b6-85cd2568be8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a430d2-dd49-4dae-b864-c83c04f7d521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225daf69-5cca-4836-aefa-7e9a398fc64e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe42d51-dd49-47f7-b1e0-adcacd1c2524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2173f3a0-dd08-4f1a-a55c-14b00789ed8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfb0de7-af77-48b5-8e09-17ffef5ed31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b949c6c-9a07-4e2d-9f90-7769653d3ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4671eb-4ab2-4bc5-acbf-5be2ed773295",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ff7feb-89aa-48a9-824f-01afcc085ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83adb1ad-ddc7-4b8b-aca3-e1aa93329ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409347b3-9a7d-4278-95d2-7bb9f6fd8636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "16fee327-4161-4ef7-8b56-5905f99076da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed474284-38b8-44e2-8ff7-a107eff6cccc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f95ff4-e9f2-438b-ba9a-23a5a223cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4e147454-fed9-4fbd-b78a-66084a7a7517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42064bf-6b9a-4406-b5b7-0eb5f6faae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e40204-baf3-452f-b252-fc5c6af3d48c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1c9e45e-313f-46aa-a3ad-944e61c1a4ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6280f38-7bd1-462d-8346-047a140d89a3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582a58a7-acd5-4a52-9c23-bbd171e5f33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46971418-1a08-43c7-960f-9d3fb0781a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf75728b-19fe-41a4-b69f-9083ed1ed414",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a40b353-45d2-42fb-852f-28de11a387dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "773b5bb1-0817-48de-9a6f-5ed8e08ceddd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e58d1ee-9a15-47fd-99d9-ebe514c6e9fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35052d5f-0866-41b5-a221-676ded60ae02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7af4755-b357-413b-a623-4a9a1c36f32d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e69c87ab-a25f-4881-a758-2a7b5b646374",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fff294dd-22e2-47f3-89a3-ce2efd652cd9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c481c695-ef07-47e9-a4e6-82c7fc893c28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97184c25-3841-4e9b-ae87-9d80046ccb6f"
                }
              }
            ]
          },
          {
            "id": "d7dcbbe5-f95d-4d3e-b206-1a8c6f320643",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0fd37cca-718a-474d-8f27-2537353993b7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e3fa7b3e-9a5d-465a-a752-24943669bd02",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1386f9-5fed-47b5-8358-61b7291b64eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "29c1602e-51b8-446d-bca8-d0b016a57fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82cd98e-c209-4edb-876f-f41eecb29b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9311a98-ddd9-4296-b73b-b3c00cbfe392"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6efbe2b3-d343-4b2f-8383-8649e596e5b1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d249dcb3-913d-41cf-aad4-6f5b5db64cd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e7cee8c-cf5d-4854-b2b8-58528afe56ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abdfc1ac-8df3-4dce-b7ef-a184b9429213",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cac659c8-3b13-408f-9d6a-f4f2c27fe16f"
                    }
                  }
                ]
              },
              {
                "id": "3a3c7b0f-ab33-42f8-8fa4-988876eca282",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ff1ffdd-50c7-4765-ac96-ca4a6de9729a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d812cf82-cc3f-48ef-b496-48214db2e7cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af71f81f-a69e-432b-973c-fdfc65e8ac2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3e2c10bd-11d0-4b07-9874-0e8357b024e7"
                    }
                  }
                ]
              },
              {
                "id": "d691da05-51a2-44bf-a9e5-e550c638f44c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fee876ee-0116-4148-b824-f0081e7d78f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ef37293-3f97-48a3-85d5-e250fbca24ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33acb889-19dc-47e6-ace3-2955c1b77e08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "553457d4-3d76-48b1-a81a-5fb44730504e"
                    }
                  }
                ]
              },
              {
                "id": "db4a7943-3ca7-4ab5-bc22-a0248a4bd299",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c697329-ef58-4aa8-b9a0-1e52311a27c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cca3ee5-ec4a-47f8-a911-8bb6617eb038"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b41dad3c-f3c8-4f2c-8657-1ea45aa1b317",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "395cc434-0759-49a0-82e8-fe5653cec7b1"
                    }
                  }
                ]
              },
              {
                "id": "7668c801-0655-4b05-aae0-0076bc291795",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70f79b1b-4baf-4794-9d5a-a851707b443a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39b47ad2-7cea-4e59-bd46-c5ab6633fea1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c060a3e-7e21-4a38-8c15-5384d1bcc30c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ee86c1ed-cec6-48a1-8b56-1bd6d10d2531"
                    }
                  }
                ]
              },
              {
                "id": "9c3b6da4-092e-4f16-a432-e37559150762",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c967cfd3-af1b-4d94-906c-bd820af879c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cc56c9d-3b46-44bb-8693-3780f754e3ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e70c448-b8dd-4f2c-9507-943e84eb112d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6eaf6b35-720f-46df-b7ea-0af6d40c84f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47e006aa-f33b-45ed-9a09-ae57cdd4d4fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c38f462a-4ae2-435a-83b9-64f2620c62d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "de646876-2556-4442-871d-cd6119e9dcce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ee60e21-a909-459c-8f57-20a99939627a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93d20a90-368c-493d-abe7-1833ab432234",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9ee5e50f-3874-4706-9c9e-69a361d4de84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caae22b2-c984-48be-8ece-b084edeef6d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fba3fe7b-852f-4bb8-8566-ea339464ca8d"
            }
          }
        ]
      },
      {
        "id": "0caa7875-e9ae-4949-8a68-1284ac930436",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a2bd9270-8e54-4475-99e4-abe9cbca1902",
            "name": "Negative Testing",
            "item": [
              {
                "id": "089695e3-af98-4ddc-be5e-11cfbe55483b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93f074ef-3db7-4417-a2d0-f707fb142a33",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fd7a77-460e-4c58-8ba8-49f0817104a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459a79d9-6d6b-4732-bce0-95f77d39987b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519e4bb2-2f7d-444e-80de-3a27304eae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2515aef-2e2c-4bd9-93b1-d5234d67a568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9165cdca-6e57-479e-a6b8-7058f9b20d32",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abc5536-c722-46a2-b0d9-1e83fb2baff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc0fc9f-394a-4bf1-90d4-b59b8a9fdf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba9036f-3dfc-4100-ac74-6b2bfc814351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a91e860d-4fab-467f-bab4-3ba1f77223c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd19bd8c-ab9e-4c56-99fe-61141b3c3f67",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59366140-6566-428d-a37b-32437337a414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c3b724-44a6-493c-84f1-256488ea3834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2839d3-2ae2-4378-a9ec-e6a801636d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc651de-2e41-42d2-8e11-89f52825e26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0a12dc-057f-4168-8c8f-ee224b94b288",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f64d24b-7978-4027-b255-59e11cc2859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6c6f7a-407d-4ce5-990d-31dfdab80197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46082a6-1222-4803-988e-88950cbe5617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3945497e-95fa-40dd-af1f-013fc5bfa2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a5b5cc-294e-4d84-bb83-9b0b1e9fda9c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcc5bd2-1d66-439d-8a02-4b00f2997714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50a4e0f-5b15-4cd2-bcde-e5c3664c8ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d927089-9e83-4ec1-a86a-e3087749fea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a08a49d4-238e-4b97-99bb-31955e6d2846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2539eff0-728a-478f-b7fd-1d568c03e42d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70a10dc-7380-4ab9-88cf-a2f2571ba30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220ef8ab-884f-45b8-b47f-27516102f445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f104d4f-64cc-4063-ba4d-e186ae80493f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d771d22-95a1-4b78-bb35-5c05f836001c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685d2ff4-0ec7-4381-9a66-0ed12059daac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01098384-e89f-4579-a59c-b05b9a19f0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b509301-3a46-4f75-b140-2e73961b539e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c77d439-6dad-427e-9b42-2dd352badfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "64795dd0-5a99-40f8-ae8d-75ab64cbcd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bc1bfb-08a3-4bcd-8a75-c2e25ab92c0d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f439aa5-b85c-4160-9d57-10bb221e5e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb365abe-c91e-404b-84cb-d50087cce95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594ac815-5301-4cc9-9b0e-9b72774fce6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbffb380-3569-49a6-b082-24f15f2d1629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b140668-fc71-432a-a5e7-ff98403aec60",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6920c1-d76b-49d3-946c-34483f5094ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38541858-ea79-4e73-9ad8-202a8bfcc6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def9234a-1653-4f5a-92d4-fbbd9d8202ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd08551-7b17-4f38-8b84-533d125adc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbdce9e-94a8-427e-9b55-61a915a32270",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be3a39c-3074-49ec-9aa2-fca159e84af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcb9f11-8d2c-46cb-9e39-0288567072b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd57a670-3bad-41d0-b5af-486156e5da03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecbe07b-cadb-4d19-81e1-6ffc137459c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ed219e-d161-4aee-9e8a-c133d9e9e619",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc613dc-085c-453a-9976-226d64a0badf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b01cea-23e8-4f18-bee3-1b71980f2d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533fb4be-4e4a-4e45-9fb4-fbde06a14d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "78e093a6-b955-4fcb-9f9f-707dc805ae6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34729f4-e1a2-493a-b8d6-9a978f0e26e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d7fc52-4722-43ca-b8dd-91279b476bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea10eaf-bf45-4f8b-89f6-d08e11dff93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f5f4e1-8297-4814-a54e-7bd1b04e3a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8355a2-e164-4d80-9b3e-2a7fd11f6124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269c6e2f-fef2-45cd-b94b-cba805f1264e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1af8bd8-1f7b-4746-8732-a7574ea2118f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0be979-c20d-41cc-b7da-c5400e156d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d619cc1-17a5-4956-ac6b-297010807966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac1b0bc-c0d1-4b1b-a328-8029d7de292f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a06f1ca-c527-4bca-88ff-40f8fa795b91",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e589fc41-31a3-4101-b77a-a2268b78a2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650dfd47-332a-4feb-a506-75f5e472eb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37ac088-dd02-49cd-9374-b29409361310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "460a92d5-dd7a-4684-aa8a-923c000970ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3867a0d8-8a3d-484b-a916-3282fa7d8c5b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2e9764-0777-45aa-89f2-63655e5dafcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5feae7a-03a6-4ead-8b8f-11c8d9a6db6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4e8dd5-75aa-4973-888b-2620fbea4469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b87898b-4824-4f22-95c3-fc624d12235d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa0ed35-17c0-477c-b06c-9e85ed61b400",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc4fae1-d711-4b60-8b1c-4a5746a7a79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45637898-2a10-4e04-9497-2a9a43668516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353482d6-b6d4-4392-80a3-361bb918827f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a20d2b-1eb1-4463-bd8f-5c8553c58764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063d6e46-8c7a-4daa-a09b-c48921e3f6c4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dfaad1-79a7-4b63-973c-cfc2a3d4b10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0dea87-f818-40b5-ac45-93404ea42a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c61da9-4874-4c5c-8ee6-11715dd48461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0abdfa-d5ed-405c-9a2f-2edc7c71278b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf5421-b4c9-430e-9b9c-f704db98d089",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e4e770-1d1f-435c-96d4-08e179cc25ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a5b1f4-1efb-4b13-a7f0-48ff8c808d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f562ad-6cbf-4c36-9e45-957fb927d42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9636a444-d2ca-4f11-bae2-9e221c1e3cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409c353e-6349-4e4a-9047-aa4b6e7256c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990c09fc-6079-401c-9c8d-c9f64b15d87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571c1060-ea0a-4a36-9e4a-1d5d710ff09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84982fad-407e-446d-92b2-61825f4f1524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e473bc88-9ed5-44bc-8edc-d0e81e13b0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99c6f4e-37fc-4ebd-b09c-ebdce08ba544",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75c5627-4242-426a-8444-3307746b232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027fa59d-0a48-4f24-816f-75bb7a2c4879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee79f47-5e09-4875-b510-241c995f71ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8442ee4-c121-4d0f-807f-491b02307c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feff0856-599c-4d91-8a7f-d8a38bbc1f1b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db341d0-d0d9-4834-968f-2e69c55d1d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c10dc1-a7fd-46d6-a7c3-925a2b9f6dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0debbd7-5295-4afd-99b5-7f2a27c86fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0ae299-4d72-4456-a29f-d9acd3876c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ee0d72-8aea-4835-aff7-d38b2c8a84f3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df666cbc-20b0-462a-86a2-80088d00a520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb02661e-9fa9-4651-87fe-b6d00fc1f60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc624fa1-7a7d-4527-9fa4-1d8768ecbb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "244d92f2-0535-4059-a841-9580d11d5164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e31c28d-5201-4569-8037-c297a159cac4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6171161b-a490-4b35-85a9-8f7dc9c6bdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5422cc29-67b6-4552-8299-b462059b26e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ef4827-57f7-4ea3-bbc5-484df4617ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d81878-3adc-4374-bcd6-c9e2ae65524c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44048426-fa34-4816-ad01-1aa58bf445ec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c1afa4-b23b-4925-bcd7-ffe73a5279ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adbb270-1f89-47fb-9b4e-cf8ff1675cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3c2483-bea4-409b-8506-caf2e41a9468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9992f7-f108-4bbe-b4df-35c25983b916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276b0048-44a5-4649-a39f-01ab5c64c494",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2fa9cc-9250-4880-9ebe-0bb41db0ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34337c2-d08e-48ac-99c6-ab39f1323262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919f15d1-d9e5-464b-b855-0a07386a6ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d571034e-ae11-46a0-a19f-aa93d6587734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd5d417-403a-4b84-965b-04ded359188f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002188b5-558d-4857-95cf-2060177185a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673ea3bf-60d7-4c4e-8946-d127eb3e5548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091d5d52-db72-4e73-8076-111280ca6ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a437f8a-8d7c-4917-a43e-96ec1d83f902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2983b14-32f5-4979-8e14-1db198cda377",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddb62c8-76b4-477b-b385-09a5dcc31827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1993bf13-4491-443c-81e1-00f9b7360379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bd36b9-4220-41ce-bd01-de5a0210b313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5d7d39-0a0b-439e-b032-12c3b534555b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7612d626-6044-4edc-b41c-da8d9d623284",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea73e06f-a24b-402a-899d-beb9a2357819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abab3556-7085-4edc-833b-b1fbcdf757b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e14733c-9414-484c-977c-2f6ddf2c6907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03986858-3a7b-43d6-a0f6-fac92133c496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec941db-d008-46b5-bdb4-ed950a03a699",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc3288e-efcf-49de-ac12-8c3594adb6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e6235e-8ce0-43c6-9513-9c87390ea0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d4be48-d6e3-4ddf-92f9-7ddd0e786798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f037b4-b3d1-49a7-bbba-37bd5194581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e37551-a174-4570-ba71-051edfccf2c5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb72a85-c3d5-4420-be01-6625cb59d205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e424fd-d047-47fc-8a9f-bc6250fb4d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e441e6d5-70ec-4e03-8400-593d7aad2e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6419eb-8ae1-4402-83df-b13a650855ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a7c00a-795f-4da9-87ef-671fd87458a7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2605fc3c-ed92-48eb-8185-8b2191206830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c332c1c1-d1b4-43b0-a439-5bb3b7e90e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6009f321-3b01-413a-89ad-f545f8dcd01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad342977-69e4-4fc4-9ed6-2e6c0b1eb1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7b67dc-c630-483f-8ee2-6266891d2b11",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ade9f6-eee1-445b-bb0d-f346697844bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294f6dbf-fd6c-4806-aab7-41fc0fa55d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2295b1-e7e1-48aa-9d63-35c025f0ee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6112d1f-2dbf-4e3d-8f3b-af221a9b3c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82de2095-50ef-42f7-a15b-4b51c5f600f3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82f0114-3624-4d76-b2fd-0e9b7254de43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd224c33-3c1a-4d36-bf04-c478812b31df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a867ba24-1f76-40f5-b10c-db19a27e7bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "939fbff7-0049-4cbb-b397-42c747a9c15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0a50bc-881f-4082-ac90-02ce87e702fc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcd3a52-30d6-4ecc-a9f7-1e0f37cbab06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ec4dd0-9d6a-455d-a6f3-d30d133fae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a851d14-d0a9-4f58-bc75-7e4aba1e3d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45dc5c02-384c-4e1c-9760-4621f962254a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66f5ce3-3e8f-46db-8e81-cf36c68ce76e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd3a327-af32-4842-a29e-908b75cb6b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692e5e2f-40da-43f9-a3a2-83895363d420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb8b552-d169-44c3-8731-a11762e5dc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19260e4-2084-4657-8eef-d670499100ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da349a99-0647-4631-9126-7446966e7ced",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662fc840-c8e6-4c40-8282-91e45cf00848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d190f83-c141-49c3-b4e7-ba6098b4ded7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af371463-8e43-4c3d-b053-2577001dff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d3bfc8-1155-41de-bf08-1a3c44ba6647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a591f1-ffbc-4381-8fae-030e7296eb89",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12efd816-de67-4b32-8ab7-6c22950fe027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57ab690-e098-4215-b703-2f080821f02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79c0a87-a06a-4c44-8355-e87101c03346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ec8120-34a7-4d65-a2ae-43d7c5b76e4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae3e3465-57c0-43c6-bc07-4617420f31a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66fcde5c-d32c-48e8-baf1-27755985cf94",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a582e73-bfdd-449c-a198-7a4ad9ae57e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f160b160-8a30-4a7e-822a-c9d21f67b684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f6e08e-2708-4b5e-825f-90eb6a332f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd3dffdf-e9d3-4532-ae22-eb5ab586fa6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be4dba77-2514-4462-8651-c0e109d8f91e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85ae0718-9e35-4bfd-a563-d45a45e976e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68aac9ab-f90e-4a7d-a893-424a532cf9ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82bcab4b-cd56-44a1-8fce-cbbf0625fb21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cbbcf8b-a6bb-41a1-8e88-1c834c604c23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac1ed0fb-2176-4f5e-838a-5736bc890d85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10af43ea-316a-47e5-827f-1060f678a0be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7f9f6a3-a206-4667-b3dc-028ab2610d36"
            }
          }
        ]
      },
      {
        "id": "49bfa5ad-0532-4c1a-a514-d6987141c665",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "473cbe4e-fb50-4b61-8b79-a599158a7e05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57a9cafc-1bb7-4ec1-af06-95a4718ed262",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d129083-51ca-417e-9fe0-acee5ec97a22",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41a549a-42c1-4f13-b5e0-b3df017105ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89d0c4b-550c-464a-8296-39dbcead2958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b82d90-1621-4890-8a73-b8d45d86dc11",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973714be-2c1a-4a94-8c3c-0dd36b72b4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff12d47-b624-4bba-94f7-e1b6d1d8e0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55f4a4a-d827-43e4-826f-1909423398f7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d45c812-d2b6-457f-b3f5-f2f18c000203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b84ad5e-dcc3-49dc-93a7-88e99900b04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29494d09-a210-49de-8177-e9c215a18f60",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b26ae7-2199-4cb1-898d-8f1996dc0cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fa89c7-497d-487d-a8b4-49963f7a03d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a714ff-508d-40cf-9146-5e69aea3d49d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f93d77-77cb-451c-bb1b-1dd443f1c662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6565cf-ac9e-4501-8009-874fb6af32f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3383ea42-3c80-4976-8225-a74533496a38",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c31799f-c757-4268-a6ae-508e63987e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70ef87d-a4af-4d12-a56c-87bb66f8f484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450f7ea4-3e3c-4cfd-97ac-dbc06cfc6cd9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f340cdc3-d01f-4697-815d-95c26899ff41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94e2b57-ad58-4e60-92d4-025662607d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8979770d-bd7b-4566-9cc0-6b3b7425f894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17ae5a8-c6d5-4447-927b-e6d0e7f14849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e434a278-b146-4e5a-9b89-88f566de9a2b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf1f4fa-bc6b-4a69-82db-bccb0d96c31f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e5b8b7-37f1-4957-a5f5-01f70bdca2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670c3457-dde8-43fc-8bd7-ca6f3befcd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebc5355-6da2-4484-9c53-70e22b1556ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0e47c6-460b-46d8-a004-26c9cdae532e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15fdfa4-b7b1-431b-a869-22280d108adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab90fa7-7766-4a74-960c-e23e6c106a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2d7d89-a8e8-4c10-a28f-86dac90ebb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56eb3fa7-9ff5-486e-9a71-fcf80514eabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5475c43e-9b48-4d30-a77a-7d47bae44eed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944aede4-6fc7-474c-acfd-4c06bb1f3c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0536bba7-2bd4-46bf-9a1a-1052694dc69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8082f055-1a5c-4166-9a00-32b44cee2203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143b2bb1-8049-469c-a5e9-ec352fd341db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86c8bd8-111d-4017-a8bb-185329de93ea",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46734b15-7183-4997-b968-0b9c5af8033a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fff589-3eaf-4f40-836b-c014c93891c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2765ac54-a247-4301-9156-837aa53dbd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f70f61f-8f33-457d-927e-21b41a21bc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4607de06-bb9f-441c-921e-a8e29e587e66",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cc6705-d49d-4c80-8a30-0170542cda92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c0c7ef-337e-4aca-8f2f-daaa57e0d99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da99ad0-3de6-48f6-8292-74a6b765b7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b779dc-e9dd-4c27-b2fa-dafc4d16c310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a520f629-0a59-4efe-a1ad-4d5379b12405",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72e1753-5568-433d-956e-418bcaf8e80f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f666d1a-f859-4df3-980a-f39559f4feba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fe7552-0298-4ef8-9018-f5feeb8a55a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f99fdfb-8884-4f61-87bc-869726bafd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427fa245-f584-4c05-a191-6303c11c9d7e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5dda14-41b3-4d49-8c69-a25dfb7b92f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5031419-4e9f-4d0b-a732-00bebb38ad76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329eb762-ab02-499a-8061-3e2e0919c344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36419936-b45a-4746-87bd-8e468a22a729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4257133-66c4-447c-9a17-9a10c865b9c6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a92ce09-15bb-4e3a-aa9f-bc84ef635b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e3022a-48e0-442b-ba1c-b1cef3950619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd779744-765f-45b8-a0bb-ca902f373cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8181a803-8257-41cc-8d7a-596df2ce8699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f459e7e-ccb9-4426-aa52-c54160ed480b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b678f0dd-c9c7-4f9a-9b90-e068ccd71a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3938c029-cb0b-4509-834b-4043da3bda42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f92b5a-7d1a-44b6-9e6f-d531d98b97d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d90f81-84aa-49b7-9499-df8c2a2621ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e053f9-44fa-4935-b710-842d2a023344",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf03f458-ba66-4585-ae6e-2e883ebd1640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6ed47d-e3ed-4515-b7c4-2ed01602559d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6378b4-dd70-4d04-bcbb-65c6b815159a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3d212c-7519-44f9-8d9f-2eee7bb5db98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849a9b2d-49f7-49b2-b7fd-ec1784812263",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a67fff2-d933-47d5-8840-1e8cdedaa2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475daeff-9d9c-4c68-84bd-c3e41fee89f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a729215-034a-44d8-9a3c-5364f78fcd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d98fc2-1250-4f8c-b273-094051d566c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2530d40-8aa6-4a28-9276-8fd6e9731cd8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5bde19-a043-4801-8ad9-e6b9e4fb6e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff2be3b-b629-4ad3-a938-4396b55717c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb7de9c-a997-42df-b2dc-c45a0b2b714b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420616be-38f9-4ae4-9ede-edb6ce68e67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cdf2b8-9cba-4cb8-8a6f-349276ef989e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74889958-0b2c-4be9-9a23-93eae05baee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4efc61-9b0d-4d77-b902-e0e85e4baa9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a955fce0-de00-4819-8915-b5da536d7d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef75902-fc8a-4a0d-b780-b462eb61158a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1fc768-8893-4ad9-8902-74d395518acb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acdd1ca-4678-4c87-8d2f-5b26ad92d89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce02d13c-502b-4463-bbde-3fad9d2d51c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131e2707-ef11-4396-9b07-76946034684f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49e72b1-bdd9-48f8-b701-5e91ee7f0540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030df70b-236a-4193-b9c2-0862eea9ffe2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b6616c-524c-4cee-bfc3-aa0c1435cb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341dca65-49c9-4778-a504-8fd7a048d2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03adc5d-67a3-4324-a75a-eac023461eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d00c36b-099e-4708-aa2b-3602c09e61d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e941ff85-7e26-4979-a343-a589a135c09f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5271672-25cd-495e-a53d-978270f1c0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795e65f8-be67-42ad-a649-f133374f2e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3d1412-df18-4395-b383-776a4bda4dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bb9e10-654e-4c06-b5a6-9e67e1e9abfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f876b4-324d-49b2-8dba-8ae54571890d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fb4702-c4a7-41b0-b404-ab5693a31644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf88292-eb3d-4211-a62d-17943c0bdf45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6423961-c136-4333-9c88-f2a145eb021e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fc4803-d837-490f-9ce0-be0bd4102058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12537fe6-5941-4c27-96a5-c1aa4c5f0eee",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eff6371-4616-4bb3-9ad3-62b56f2b48d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b475bccf-098b-4ef1-a362-031459895cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80252dc5-efe2-4319-a7eb-a86a1352c31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9474f11f-8198-40b9-86df-2da28b16d251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652bb790-cdf3-47b8-92d9-e261f653e509",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3a9a85-d23f-45e8-b022-0cb1b9c2728c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a315568f-9a94-4050-aff8-21cd5ce2199d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c58f511-1c33-4baf-9118-f022f9efa8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8d2dc7-b82e-4e6f-98dd-7f8f5ba4ba80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19e10a2-a70c-4d2d-9d9b-2839457b8179",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d7f2b1-8bb2-4886-93c9-1261297a479d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c7ef1c6-83fb-4e06-81f0-6d387938f42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771b4778-3641-409e-b556-6f72f94bfa04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ca38ff-7fe0-4673-9734-38925f2162d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefaab84-1d5e-46b6-9ba7-1e3f8dd54118",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2917159-ebb7-428f-8be6-b4d74dcb486d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d45fede-eff2-4761-b9dc-4e9e3478b7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab27150-7143-4cb8-9d4f-9c603335bfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031e3d2b-70b3-492d-b015-7e3abcaf960c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a50c0f-8a68-4714-9113-e8a001370db3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f391c369-64a4-491e-b879-4c423a33ec19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fafb28d-e596-4618-915d-b94c8f3305a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1300a94a-175c-450e-bdcc-b635fa5dceb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25040250-ef5e-446e-8488-9bc47be2f170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b283ee-be52-431b-bd69-a6f312292711",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9184bcb-539f-4d81-88fe-3b019750bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818737e8-7a65-42e1-b1d2-b053ad19c73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74852ed-ffdb-48ca-9cfc-78a839e51b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ac667c-0644-4d3e-8b5a-d026b4d1b22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf77d5d3-54b7-4c23-914f-99122936338a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53ee5a8-79fd-441d-b790-a532da9abdc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a083dc44-a827-440e-b993-b2d639c8262c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbc0765-fb69-42a9-98f1-0974b7872476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98675ab7-8472-4f7e-b6d5-c7637fe64a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59058a5d-b310-490a-81d8-8bffccf6bc85",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2c333e-4d08-47d1-b116-e9b9b1d2ee3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf4b02a-9ab1-45d8-8aab-e2bfead582e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a7fdcd-da56-43bb-a171-9286a5128000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c753d1b7-5160-42c3-8374-4582d2a7e5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5c5c3c-0aee-43a7-aab7-5e50544af39c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf91d6a8-3a46-4943-8082-b9ecd55ed108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc4afcd-9e97-4877-8e2c-c72755f37e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0737b7b-7f1b-4d65-a26c-771093f0dcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883923f1-6fba-4442-9f91-5d2542b78a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09dd2261-e2bf-4f93-97e8-005fe6a3141a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1babf7e7-5960-4dcd-855d-a5b201353a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e399c2-c4a3-41e3-a381-792daf61bde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5a3ef8-fad8-4ac9-bfe9-e2b26aed25b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a109bf49-d898-48da-afe4-77aeda9937f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d710164-a212-4d6c-b4e0-52680ebcb6b6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4e8af9-1ff1-4014-9074-2d691700dd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4f87e6-a9ae-4e26-9c38-61a5a3879dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104df1f5-523e-4975-b9a2-6846d40dbaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77626326-3449-4b34-9292-4ede92dd8d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3822fd4e-2b50-4de7-be79-1d021f346b9c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e36354-555d-49eb-8cf4-55a28684d1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549e28bd-032b-442f-88e1-9813a47a05cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ebdac2-04bc-47cd-aa0e-04aa957f3542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc54b68-1dbe-4a0f-afc2-d09d1c274281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9963883a-4b13-4747-b046-bdff54d69cc0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e4fe04-ffa2-43cd-bb92-4c7c4f6a0df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddb0bbb-2532-4415-8ade-8ca25c67c110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62214ec-35eb-40e6-8f23-fc18e07549e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c1fd02-3f02-42c2-923e-3f4f22319909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137db198-8e9b-4be2-a0d1-6e7acf651666",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6094fb6b-ad4d-4187-9efa-28fa7adbfa73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d71464-7059-4b81-93df-2a0f333be00c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e98b2ce-9199-44e7-9f55-ff25b8030c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1110b3-6778-48ec-be88-ead78dd5b3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c338f2c9-2424-4143-965a-8cb217372c36",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72a926b-f9c9-4657-94d7-94b1331b85b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2035ef9-a744-4255-938a-c920b6a74639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b7e124-1176-459f-964a-9414e932c7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3fbb89-eff8-438b-b6e3-93e45435a9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8602e9e-c698-40a6-b2b9-e144625f2ddb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b339d7-8fad-41c8-804f-a1a51a0c5c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e276051d-5cbd-43e6-8e16-a951e2c7f356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470758fd-9597-423f-9905-c594789a1d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec4deb5-cdfa-44f5-b57c-b8f1dd7e11a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be80a13-7c29-4672-9814-c24e51b40a2c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d54d8da-5f9f-4587-9b92-5ee5d63c9978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c3b2cb-9241-498e-a1a7-3f7a8598440b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fb0520-b370-4331-9ac5-6cdc9f98da68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3e2590-221c-4e06-a2e2-a500374a28d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a172ed4-7268-42db-81d7-6ad61254fd74",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054ee1ab-bf1a-4257-a08a-39b94fb4f450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd80b08-f595-45d9-b5fe-8f522a1722e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9092f3df-0a9c-4e9e-a2dd-ecd258a92c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4aba2d6-5a94-4167-a84b-75a0cdfebfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ea5a69-a4a8-46de-9edf-afdc860b0a34",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4710de5a-c21b-4294-a996-cf4b9a8717ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f404f91-d971-4ff7-83b1-464e00c761c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baee8d8-7fcb-45b4-8838-f90c433c4598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113e0d3f-b4b0-4fa0-bfb1-971422a5ac0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c5c2a4-68a1-4f12-bf85-32f2ed5a6e64",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1805763-fdb9-4e26-bc0a-60880631e6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c87044-ddb7-45ca-ba1d-d9449811fe59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f42e166-2010-48b5-a5e7-a23506bfa030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9e2fe2-e2a9-4c37-8b99-9c27a6460a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7d109c-2b2a-48a2-b692-c583f4c9c4b1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8260c8-7a2e-43a7-9bab-b500662d038b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9245db-bfbc-4977-9ae5-1f2a4c359c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f012e627-f33d-44fa-8529-7dcdbe49d0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e11d972-62a9-43b6-9233-4ef06327fd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a7131e-04a8-4514-bcfa-ca74d96aabc7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1fc666-9801-42d4-aac5-afbc11299e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0981e101-53f5-4185-b23d-e28f5d91e431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667ae820-a2e0-44d1-b35d-8196e345a366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c0161c-57a2-4b38-b734-d0da94109e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8b8a10-3a95-40e2-b640-a4fb69348749",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65f7213-e18d-4627-9b31-a018c500f8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a7560d-88be-4bff-978e-6b7d87b6fc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06205f26-19a8-4a9e-971c-85262a0463ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab643bd9-f43b-49f7-babf-2e7cd6526f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb889c95-5288-4de8-9b8c-0c5e027eb796",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce290f6-d02b-4ae0-be72-01e71697aba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4b4922-1e17-4ee8-9b4a-3588315045f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2d9c3b-1c29-450d-9840-6acec2ae54b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a6b1d1-5744-4f7d-88d3-b61b440ee8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ae0b9e-4e51-45c1-98de-fb49f8f263cc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6958ba4a-e8d7-43ce-8d63-b440243035fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c572af48-58f1-4f40-85e3-17c3784a8d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a235e6e7-d9a5-42e5-a6dd-e3a9490e94e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4307867-7a70-4569-ba96-a8ff35fdc32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b368ac0-57b3-4131-be34-0daa7f46a204",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7525e613-1a1f-4542-bab4-8ce4168673a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db0d7fc-5cf5-4586-bc50-86c7ff344f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93986b9-daec-4975-bf92-36caa81f17d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05be0db4-dc45-42d3-8cf4-a743c486ec15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24edea6-e40a-4810-a940-4c12ea785748",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612234df-8334-4844-9adc-6f62fb36b4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5142a659-bf19-4721-9eb5-bb5b2d74c688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b182f2-76a0-469f-b7d0-3042fd5edbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c346d395-ca24-483c-8f11-2d46a33a732d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928450f6-e78a-4b51-9309-2288358ae97e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a63512-2f4d-4cce-b39f-500cfe770cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17857ea-3f5a-493c-9813-ba621495d780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e581b4c-8753-4fcc-8ea8-ca64133871cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b96c703-2ffe-4a5f-91fc-32d8413b8658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d00297-b4af-42c7-ba4b-83c00d21af9d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c10ecdb-4fa4-4342-beef-1e2fbbc16e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b41341-2607-4775-9f7e-c5db8330461b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d1234d-692a-4b26-95a4-8ca910d32d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e254da7d-dbbc-4f77-8b12-0c29675b8f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daef189-4b7e-414d-ab07-914661377f36",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2ae6bc-ccac-4570-ba75-847c98c9b788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97b0f69-a717-44cb-b2bf-ef2c4f62237c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337fe7e5-6eb5-4760-8638-35ea6871bc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e010c5e6-0685-4251-a84f-1e88a0f59d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92004ecb-41e4-4e9c-90a2-ba2ef091af13",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe10e24e-2c8d-4e5a-a8f8-c0b144be63dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7398b5-3cf4-469d-bd28-534e2e60b18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93ebc52-8bea-4137-a446-5d83f4f4f14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1b69ae-ed39-4b06-9254-16bd99c5e183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbe7f1e-2e39-4cf8-9c5c-9cf7fcddfa46",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7170fe-865e-4434-8585-08f6b08c1d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b4983a-8127-45e1-9c55-1a249b756646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a90375e-843a-4e0b-a1a4-1957adfe1dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20eb1c04-cc13-4ffd-a465-9844621794cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52d6cd1-edd4-4df0-b2fa-2378cdff18b1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f9c2f1-3645-4f73-b9ee-1851af518a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbaeb8b4-d4e9-408c-8a4c-64afb227df68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbc5da5-4e89-4cbf-87fa-9d1ce7e498a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5bb0a7-a7c4-4d5d-8041-26d34dd3ab41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9b82cc-58ec-42c5-a35c-665211b11d81",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb644df4-9212-4c30-a90a-48dd4e10fc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0ef1b9-25a4-4f8b-835f-908982dc9a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c3ffd5-675d-4ca1-a9fb-990bb390c6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df283aa1-2f1f-4851-b64e-2ff1c007e330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d1692d-6385-40ad-88dd-6fc58b6e1910",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9ed69f-2417-4481-b0eb-d92b4d3a32d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a8f853-9a6f-41fe-83c0-0c1704702e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb9c13d-cfd5-4478-b2f3-2b9f14b08afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f311854-182f-49ca-b0fb-9b55c72c1e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12544fd3-8ab2-48a1-8982-b7d557e781a5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4a90c9-8809-492e-85f0-449143838c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41eae5de-c083-4f81-8718-63dca59b72a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a410118-fbed-4835-884a-ac7b65027591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463ab23e-7212-4015-afa9-ff01eb8aa33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2951ae0-6fa5-4e5d-b946-6e1313fb1a7a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70348c82-db86-4e08-b1cc-0bc3fa43273f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13436dd-4db3-4433-a615-da57e744ccbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec0a520-d8b9-4324-82eb-d465f1d20d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1da00b-0691-4e04-a8ac-a84b47f53184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec16d88a-6f37-4012-9839-440bb5268403",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749d7a63-88c5-462c-973b-cf2500fa244a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c522fe-8d82-493b-af9d-33b70511a075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595b7175-e106-465e-8eb1-edad727c5b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ed6490-56dd-4420-a6c3-54ce482ab2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0682ae7-7f48-4c87-8528-3c180177cff9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c61ff6f-4d60-41ad-bd35-97ca8f1037da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c365613-ac46-4abe-997f-ac3fbbd7c5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96194e2d-c224-4655-93d4-5bbfc2229e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e4ed12-6920-41fc-acc7-3098093eaf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69df8409-6bab-41f7-bd2a-648b0dc7c70d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7334db37-3262-45f6-8557-684a9b285b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4e0f13-c774-48c7-911b-e94ed912849e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ccdca0-37df-423e-85e8-6864954a8d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9919737-04fb-4b7f-9a24-7725ae57039e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f8ba47-a24b-4cd8-8781-e073b30e8c9b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa5277a-b5d8-4133-8132-d195e68dbecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c93e1aed-565e-4bd2-8207-b5bafaee3065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcef91f2-fce5-456a-9f3b-72591016e8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730fe881-e37b-47c9-84bf-9e904bf8ec90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2041f3-e268-4e8b-8c15-97beb18ed26a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7417cf0-4911-472c-ba8f-0e3ff8b15ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0427898-4be0-4eee-9ade-2c420e55f79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dee6ce-f908-4277-a077-6c7409139353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1de07a0-efab-4122-86d2-fb4984dcfce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e27c91-faea-4eb2-949c-6c3e1148fa24",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1bcc6b-5c79-49ea-93b8-66776e0bac69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6918ea57-18c6-4c20-8b0e-20a48f3945ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7093d13f-4ca0-42e3-8204-e004946b4a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd431c24-0e26-444a-b157-f80db9a63787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d3b173-9b11-44aa-95f8-61516660db3e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73b8961-f042-4960-8838-e08e4ac990a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca6db1ed-dd81-4e15-8618-612c3b07ae2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd146897-24bd-4dda-acf8-d06f054545a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e04440-ea66-462a-837c-9ea7a95b3d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee006b4f-f082-4794-82ed-bb2e47ad17ad",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6635b422-0ee2-4f5c-a9a5-5483078cc39f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fad4b7b-9d0f-4ce4-932f-2bbd3f2b5039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cc6582-7e4f-4246-81c9-96585f765bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42457ad-0735-47f3-bdb1-bcc3e1f52227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be475d3-517e-4a7b-8a21-84c5340b96b6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b08829-1634-4740-89a0-d287bfb6b3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67f7b894-f67f-441c-b1aa-c9c8531d2f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd56339-8d74-4a10-bc27-39b82ed5c0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca8eff5-a0dc-4fff-998e-c0b78bd181f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86aab13-56b7-4df4-8576-4d45fbffc59c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a0689d-4a05-4523-8eb9-ae975bffda9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0bb2789-16a0-4ca9-8a21-f91153f9bfb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7706a83a-2e83-4fd7-9b4d-4db3640f7744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d5baba-9460-41be-9ddd-df632b3d31a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b37797a-9601-4991-b0bc-e508332bf96c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120774ff-c18b-49a8-a124-a2a5819a7e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b82a49-5759-4369-9bf2-15930a633bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7242a13a-484e-4fa0-86c8-6594fa97cada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286fd1b2-6f74-45a7-a709-3ae04384500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd31c6bf-934a-4de2-a9ef-4cfd6481edd6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a85830b-6b81-4a22-bb93-53b457f87959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cbed75-0a79-4ec0-9e26-e795b5544ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a0b0d6-5567-40fc-b336-948c48706f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a51497e-bfd9-4e35-864d-0bfa12628663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8275bd9e-3534-444b-af3f-1ed8f30e9428",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89c77d8-a4bb-49ba-b0cd-d8f1acfe36c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b40f47-0ea6-4eae-b910-ed0cf15f74ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507a6a38-efed-4456-9270-bd2405db0bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38dcf39-88c7-4a79-999f-8bb17ad11d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8679c2a-9d8d-4a83-ae80-3c3e423cfe1b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff398fb5-1b72-4ae9-b02a-7dfbf595a584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0048f69c-1218-4bd9-acb1-5a6347189d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf62520-c542-4895-aab8-44f4c7deaa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2417bb8-7a7b-467b-9f6c-bce05176872c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e27231-8be2-4694-a9b4-a703625d4bc1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237961aa-4e89-4d1a-aae6-bb499cf2298c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a6a485-62a0-4097-b926-645e77702111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8c0803-184c-43a7-84ce-805ccc86068e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d15f91-4750-47e6-939c-e04dc9a9b25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41867969-acf4-4ad6-b35f-a9c20553d43b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e180d6ee-48ad-4339-ac66-da90fba1211f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d906294-a8ce-42e5-8e22-ea290ba28e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2702718-97db-4023-aea8-b9002a036d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebf762b-7611-41fb-8c98-878f465210d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5690c6c5-e7c1-4892-9dc3-e76781e49954",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140ed0af-13e3-4073-9d55-2a2ca5620d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e6961c-d025-43b3-8c28-e7b558bd3866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7178d9f7-c367-4955-bc7f-a064d48880cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d26eef1-bd69-4103-9c82-ba7bc2ca400e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea74209-0523-468b-88f4-83d1113eacb7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1ded21-b4b3-4152-9028-c6c3fd05c0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c49197-ebdc-479e-9c7e-c8b682593276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83caa1b-6c2f-486a-8ef2-0544fd4e1cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ba77ca-aa22-4970-a0ad-48c98e4ef6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5975e1-3134-441a-bdad-66f24491b70e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a010d9ed-f4e0-406a-a1fc-8f535f1a3d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21beed0-3eb3-464e-a710-808c68887fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3649d65a-6ec9-42df-858e-758e7890a0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e9d8da-a960-490f-a23c-12cd2f683c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57dfff-9d74-4cd6-b9e5-60eaf9ffaf0b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07c7050-eaf8-4d76-89df-4db5e7f27939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990cade4-771a-410d-9132-a2c229e910c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a689e0-1665-43c3-bc90-493ebd1dd876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c334234-a554-4e8b-b59c-1b57461ca011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d0f582-9dc2-4a22-adfa-3a0b995d73f9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1070a726-6727-45ea-9ee9-bd94768102f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf67a69-8126-49e6-9472-dc3007202a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e246e51-27fb-4bde-9548-728595331bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad69f246-30a2-4c4b-bfb0-6639b1068064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8666af0-4151-4fe3-b3b1-48a51383b863",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d773d2c9-9e2b-4ca3-a7f1-c665fabee966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc80c961-3d15-4e59-a139-3c541cd4c456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4615cfe2-3107-4781-94a1-c5a1a4315c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6e4369-c0b2-45a6-95be-dd3c19f8282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea43a5-0676-4dc9-a5c6-73d87de9cca1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5269152-c6e8-4e64-8753-0f7fee71af62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529988bc-cc23-425f-94be-f04ba24e5382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcd453c-2696-4176-abf6-7fc9e3460cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287c2d1c-8dc0-4301-803b-fb4b97823026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2d01cd-f02a-45b8-9208-4b39133a6570",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd89672-8506-4234-b236-f53212c0b13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b57584dc-e989-4144-a88b-820edaa37af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac53290-ae9d-4657-9a7e-81745c649ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11038296-f8d5-41f6-8563-95f6800b6baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9c198d-e8fb-4af4-9b81-2c0e152a8096",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845ceef1-18ff-47c0-ba57-e7fb0130132a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85162bfb-0ae2-4244-b146-646fb484f8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2898997f-b9e6-433f-974e-7cff0d8761ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da4366d-4aae-4cc4-a0a3-319fa608e498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575d91b5-28fb-434b-9ed5-74553e9b2e21",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116c82f1-05c2-4c99-9ce8-a7c394d2cb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c866e7-385a-4aa2-a0ef-d92fe583af0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e6c567-240e-43c5-bb58-de298e60a239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68d218c-e523-43ef-a363-1da4f41f5cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2dbd50-cd82-4c13-9078-0cceab6b9b8e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2332c3e9-6616-4ef4-ab9f-a4e45d757074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16e05f6-4ebc-41c7-9eda-5143afda30cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba245c89-d227-410d-a1ba-95efcee93f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4a1529-0d4b-4eb8-810a-285b47359c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e13969-b931-4bb6-a126-fe3aa5a020e4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ae0040-c16d-41a1-8433-82e9bfb15032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb23a29-c2ce-4741-af19-2a8473211427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65540a62-46e0-4d5c-87df-302530822a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d4b043-34d9-4f16-b931-8837f7a38881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9192e102-55c2-4e5c-943d-3cc8732cda19",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fd2629-99d1-4d86-99da-8e9b1c214d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6b4fea-9da9-49fd-bb9a-d45235159916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb8609f-f619-4c2f-8789-c61ddcf7eeba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5f7889-5c3f-43eb-936c-d6e4f5570d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4985c0b3-5749-47f4-9efb-d19c17cf1d62",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77417b35-06d8-42e9-8e9b-d49ba99bfb5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69b7a94-b073-4864-bc68-157cf4d862d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e87039-7cd2-4328-9118-b2f99042f6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fe3831-83b6-4475-81ae-aaa42ea0b31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe054cf6-a5bb-4eca-b818-d2fc8e20b2db",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64764d8c-51ba-45f4-b5d0-807a8ee12edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5934cb4-eeb6-4b74-ad62-8a309aa317dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3ca7cb-b66f-429c-ad39-a06189e197aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c074924c-669c-4234-bed2-b01349dd8dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c79ba0-225c-47d1-85cd-6632a7fc0d40",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2f6476-add8-46d3-9e9d-c03725f25cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c590c3b-d438-470d-b549-7bde162a66fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0c69ac-4f00-479c-9dff-1b4064464259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25f80ee-bd76-4604-a604-0679b88e9867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac07f274-9b22-4f35-8e8a-aa4f64bff8f0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf2cc64-c7b0-43c9-b284-916fc49763fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc78e2e3-aa41-4185-b428-b5d7febc4bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3cabe7-bdf0-4a95-ab92-0fea053e349b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f2dcfa-a257-45bb-8c4a-0f0a735d39a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fca429f-899b-4a50-a2f8-dfb63a0cecb7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b992b855-66a5-4b1e-acc6-07e82d445673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b923cf54-a500-4f7f-9a3a-8f7dacbdc236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6540840-33f6-4032-967f-30337caa2221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1156920b-0adc-4d04-a2de-f4e9abcaff9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0556b6bf-bab4-4f7d-84ca-be5771296fed",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc474c-4d52-41df-9ac8-e4995273cab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b96e03-f533-4c31-9688-be90f7ac4ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca4647-2e14-4c17-be4d-dbabcf2e7134",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233c5b33-aa52-4463-a9b6-2486beb1215b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5338ebef-f239-4fc5-a7b9-a25eee86bd85",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9b89f2-8355-4a04-9a84-790f7e8321d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c72373-d188-47f9-9949-fb703e101fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f00bb1a-9832-4bd3-9942-6dbe994c5524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d9358f-dbf7-4848-827e-79f27fd56985"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc297044-9740-4bbe-aa48-691f0e7ec36b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19a9cee2-cd65-413c-a67a-39eca0ad0b02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82ba05b2-0efc-42f4-9443-9d4d40d906dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be43090d-aa49-4071-944d-53f9f99bafba"
                    }
                  }
                ]
              },
              {
                "id": "9fdb3600-826a-4f30-99e3-8460768efeab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c73f9a7-4d9f-4aa4-bed0-971fbda592f4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e6262b-00b7-4d98-9d6b-d6fcf1bf1597",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "86f55300-f9d5-4819-8c09-2264ae564d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20932c9f-7713-41ce-95ca-9f7bd9e2858d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab2b22cf-cf70-400d-91b2-7aeb668af6a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c50be98-c692-4e04-939f-2fe55e2d5c1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc97a0eb-f69e-4c25-bbf0-ac4ba502aab0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f66857-e28f-4241-a9b7-cf5c9a6cd416",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36b3dd3e-877d-4532-87cd-cc3541cd64ee"
                    }
                  }
                ]
              },
              {
                "id": "7745d8c2-286b-4a04-aa86-4fcc476e0918",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6d072b61-0b98-4e87-9503-3906408848cd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dc544a-9798-4173-a98b-d83b2aa46edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f3526c3f-f9e9-4125-9032-0942c70f3ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5107d418-ab0f-4d1a-a066-b92e4be4cbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ff3227-a98c-44c0-81b3-1003a76e0621"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d05b997b-40a7-4ce5-9b56-b1c72c2d1d77",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eed85668-0ba0-475e-983f-9c68139c407a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a202307d-4a61-451b-9d07-acb01e53338b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1c4ec5f3-7457-4f2b-aff0-ad7ca5ca9fb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8101b06b-7701-4797-98f2-e79ca08258d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09f92ffd-2a29-4d1d-acd9-2431acabcca3"
                    }
                  }
                ]
              },
              {
                "id": "65e26ba6-728a-4e88-9eb2-6f190c4cdfc0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ae8c794-39cd-407b-af47-832ec3514666",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "85fb2c03-4b16-49be-aa26-f6cf55da64ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "214793e7-27b3-4a2d-9bdd-b0d746be4fd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0da4fcc-8570-49be-a978-bb123dbb004f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8d4af01-c29e-4d05-96a4-6379d2582665",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d7b72ded-c7f4-4c4b-b6eb-721a833aa42a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e73aaf8-1de0-40fc-a27d-6bd1b9e88678",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8279cf41-76a4-4140-b141-9daf6c30af47"
            }
          }
        ]
      },
      {
        "id": "14061765-266d-4275-bd9f-9b932ba17310",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "968ea7b3-af55-4074-b6f4-fffc5f044db0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "901a243f-bb45-4ed4-bac3-5a688858665a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "478d1e7a-7d66-4549-8fd4-30098086e98c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c501d55d-5433-4d9e-aa3b-3903ecb70367",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e8c76752-fadd-4e5f-af2c-a8df5e634a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b262eaed-f752-49a7-a732-3b4849334d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd2948f9-0c9b-43fb-8c87-69440970219e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ce1109e-7cab-4ef6-860a-7ed09d40daad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a985f614-0f2d-4dd0-a4ed-36b6327672ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d03a8d47-38cf-44e9-9427-13507482a7ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53938804-3622-4f1e-8292-8e36ba6b7e3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28e127ee-ce08-4f7f-9372-71680752e2d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f66a8aaa-3afb-4f5a-949e-79974ed8bc4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0029b88d-2268-4511-b9cc-f705770833b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85626922-d714-4319-81a5-b0e894ed50d8"
            }
          }
        ]
      },
      {
        "id": "1deccd8a-dc1f-4969-88cc-2b6543e6d93e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3bfd000f-acf3-403f-aad4-f5cb3f48b7d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c03f11b3-b97a-4de4-aa1a-b4acf1dd97e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23f7dc47-3528-4e92-a2b5-8c6983807567",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5ed49b-93b1-482f-b8d6-ee0884d7b78b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a244e05-5bec-492f-9984-3c58ad7b8d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4beca9-fd15-439c-a308-097963fd67ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31faad69-efd6-45cb-9141-1968b1bfd3ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4383a36c-22a8-4b89-ac45-7549e1f36da0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1325448d-0c2c-442c-8609-0427fd774931"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f72d9d81-2fb6-46b7-acf7-173d190c1d5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0cee24a-9b12-4476-bf57-10cbcaa787ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "919ec131-c1be-4917-bdcd-32c274cc3bf8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74f80b2d-2aac-4467-9d85-5435079b9fad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75a8dc53-577b-42f0-a8bf-81b94ab474de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9453567-2914-4562-ac2f-22db08077655"
            }
          }
        ]
      },
      {
        "id": "00b553aa-34a9-47da-b7cd-36629b87b387",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b122a44a-03e9-409e-aac4-9340a06bfea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c4e882a-ab4b-4177-8b92-d0ac28c2ee7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9452293-c693-41bc-ac76-89078b622b12",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa22175-39f1-4460-8b2e-9f96ea9db4f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "331fd7d1-a96e-4439-9ac1-34e84a21f08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905b38e1-d68a-4c3a-a9fe-9ab8ac2b3723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80751f17-8b6c-427d-834c-463bc6f76b19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6da2b0d-4d35-4817-8e3d-3d68a51cc9dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf8db5bc-9e6c-4e01-bb76-9d8940bce1f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "601fb22b-bdd9-4251-a97c-601f39c33ca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17bbf812-0884-44e2-854d-e03b37ec04f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd69a67d-d629-4158-a96e-8c6de3d0cf88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e037a2d6-c1f4-4c53-ba78-8ad325afffc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e2b9896-728e-4ed8-baf4-5c914c556a4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cd83fb0-fd33-4364-b8bd-840f163d06e6"
            }
          }
        ]
      },
      {
        "id": "2bd2820e-cf65-4740-a08c-b4657888644c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d0b7383-d4d6-46fc-97cf-f67f6646387e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e9d24ca-5945-47a6-933e-6a7abb29fa15",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "94a4d66a-23ab-4813-bc0f-aba8e5e97fa6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ae5cd9a-e7c2-4558-9f15-f95dfd081409",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f24b3bed-10f1-40f2-b658-4423e5ae1efa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 39
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.50000000000001,
      "responseMin": 4,
      "responseMax": 8020,
      "responseSd": 570.5215276324492,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728175827315,
      "completed": 1728175858141
    },
    "executions": [
      {
        "id": "886fdc4e-3bbb-464b-a9e9-808270db3720",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "56a3c8f7-07dc-4041-ba8a-9a40fe320b5a",
          "httpRequestId": "a8c1f5ff-5763-4899-a647-ecc97a6a6bdb"
        },
        "item": {
          "id": "886fdc4e-3bbb-464b-a9e9-808270db3720",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6425f544-f2b6-4cd9-bec0-028f3ed45911",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "d289a0db-858d-4545-b0b2-875bd13f0be3",
        "cursor": {
          "ref": "f28431bd-9f79-4cb0-9e37-829107046268",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "79e26899-c42d-4a25-ae37-08623a14d7ea"
        },
        "item": {
          "id": "d289a0db-858d-4545-b0b2-875bd13f0be3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "890ae8fa-12bf-4ade-a7f6-02b633770473",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "ad10f4c5-860f-483a-9897-631b219eb5ff",
        "cursor": {
          "ref": "1f93708c-8705-4f6b-ac85-40dce8fc60ed",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ec085810-3b4a-43b1-9299-e6f322f8eef8"
        },
        "item": {
          "id": "ad10f4c5-860f-483a-9897-631b219eb5ff",
          "name": "did_json"
        },
        "response": {
          "id": "812d9889-c3db-4d02-9bee-88e0abd1daca",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c947a53-2316-4e7a-acbe-45bc24860e99",
        "cursor": {
          "ref": "f267b75b-7917-4d2f-86ab-e916bf6331a1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2bfb81db-6d3b-43bd-9762-3210a5f721e9"
        },
        "item": {
          "id": "9c947a53-2316-4e7a-acbe-45bc24860e99",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e02a0f5-dff9-4833-8e83-c3208978d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c947a53-2316-4e7a-acbe-45bc24860e99",
        "cursor": {
          "ref": "f267b75b-7917-4d2f-86ab-e916bf6331a1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2bfb81db-6d3b-43bd-9762-3210a5f721e9"
        },
        "item": {
          "id": "9c947a53-2316-4e7a-acbe-45bc24860e99",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e02a0f5-dff9-4833-8e83-c3208978d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6c3e65-7b0a-4414-8ed2-10b6d51dcb85",
        "cursor": {
          "ref": "3cc23cce-5dc4-42c3-b3b5-bd3904474938",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0a1f7ccf-3d92-4ef5-90be-ba647da6be74"
        },
        "item": {
          "id": "5c6c3e65-7b0a-4414-8ed2-10b6d51dcb85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "54a1d26d-1ebb-476e-81de-6fd12d8541d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c5a3aa-a772-4224-9c20-6621fad3e0a7",
        "cursor": {
          "ref": "52b16de9-93f0-4ae8-84bc-5f36bfb9b0b3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4148900-7712-4ba9-af78-51b2ac451c7f"
        },
        "item": {
          "id": "b3c5a3aa-a772-4224-9c20-6621fad3e0a7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4300337c-7c2c-4c39-a612-d9e0e4a77b86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94261ba-584b-4c59-bb00-14e13d54b6c9",
        "cursor": {
          "ref": "2cecbeeb-d163-425f-a9a6-59a4275fec04",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9748a9fa-f339-4044-ac7b-16dd38f1b132"
        },
        "item": {
          "id": "b94261ba-584b-4c59-bb00-14e13d54b6c9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eef0c1e6-3729-47e5-b896-c72ddd562ff0",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 200",
              "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "b380ca17-32fb-485e-b8a2-3ab666758cf8",
        "cursor": {
          "ref": "490775a0-173c-4454-aecd-e282f910b962",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5aa51347-be07-4a93-ba1f-e95b8ffc8706"
        },
        "item": {
          "id": "b380ca17-32fb-485e-b8a2-3ab666758cf8",
          "name": "identifiers"
        },
        "response": {
          "id": "da42988d-bd07-4ebf-8d7f-7fc5ee23c0df",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7d2f2a-61cf-47ee-a481-5973692ef17c",
        "cursor": {
          "ref": "eccd73d3-ee51-4b50-8da7-d33a83fc2d36",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c843ca6f-9280-40a8-8d41-4b50543c01ec"
        },
        "item": {
          "id": "ac7d2f2a-61cf-47ee-a481-5973692ef17c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cf27be41-6ebe-4e3d-bcb9-acadb98a34cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69209fc3-cd44-4f78-a4e2-f40e98072e15",
        "cursor": {
          "ref": "f966e968-cc94-4bfb-a553-58c9abe4b87d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec71f76f-c869-46b8-b5b1-ea123fd39318"
        },
        "item": {
          "id": "69209fc3-cd44-4f78-a4e2-f40e98072e15",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2800ae08-0ce1-4b03-bc24-27419caf253e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e0fd75-b44b-4245-8ec8-7f3ec6041dd6",
        "cursor": {
          "ref": "5dea7292-24f0-469c-acd5-d8adf66d6ce1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0a08bf55-8c32-4633-a9b0-d7b28fd13a22"
        },
        "item": {
          "id": "f7e0fd75-b44b-4245-8ec8-7f3ec6041dd6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "de84e9c7-d327-4330-a88b-3c32ad5a6032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218ac8a1-4d1c-4487-9dc0-341d49e78c3d",
        "cursor": {
          "ref": "77c10758-6734-439c-bdd2-6bfd8219a5fc",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "35c563ec-5eb2-42cb-a133-bf3fb55d0c66"
        },
        "item": {
          "id": "218ac8a1-4d1c-4487-9dc0-341d49e78c3d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0aa2fd2d-79ed-404c-846e-b2f113121da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f001ce-a3f3-4479-a152-a97011be3b5f",
        "cursor": {
          "ref": "0bbea0f2-2449-4a04-90a2-6c1caa825b12",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c6518fe1-ee49-4a5c-acdf-cf505e885992"
        },
        "item": {
          "id": "b2f001ce-a3f3-4479-a152-a97011be3b5f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "51e0bceb-aac9-42d0-afb5-4112688e1fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacd0f21-84d3-4ada-9a03-f608328b1d4c",
        "cursor": {
          "ref": "901045ff-a4d1-4047-a256-e2aa0b6e8fca",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e62fa140-c834-48a9-ae4d-6d0cc00dc81c"
        },
        "item": {
          "id": "bacd0f21-84d3-4ada-9a03-f608328b1d4c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "45df3fb3-4231-4e9f-a3ab-ca6ab36047c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1129db88-5320-4c8c-a25a-6b92d113dfb3",
        "cursor": {
          "ref": "801c6043-f11f-47c8-badc-e4ddf27c5667",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1218a2ac-0eab-4e92-8353-7ed284faa192"
        },
        "item": {
          "id": "1129db88-5320-4c8c-a25a-6b92d113dfb3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fc82e66d-54a3-414c-81b7-422702cc2f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879e5c87-7dc1-421f-8210-a71f14cf45af",
        "cursor": {
          "ref": "9225a58d-a3aa-45a4-98b2-7e6c2b964c9a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ffb6b34c-5451-4efc-980b-48c8e3876252"
        },
        "item": {
          "id": "879e5c87-7dc1-421f-8210-a71f14cf45af",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "77c880f7-74de-4249-b8ef-b8daa718914a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7af79f3-cf78-4661-9010-a837a55b8486",
        "cursor": {
          "ref": "ff5e00cc-0450-4e80-bb85-b3ddfce58a95",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0ab71044-2ea4-4bd0-9e54-75c40c993265"
        },
        "item": {
          "id": "b7af79f3-cf78-4661-9010-a837a55b8486",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0292d688-2c18-4d66-8cb4-892172ff6597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffec6c25-8d15-491a-bce4-2853de5a08fd",
        "cursor": {
          "ref": "dd4bff40-0d64-4f4b-893b-cfadfba290a0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1faa54eb-a160-48ca-b68d-7d1b9b297a30"
        },
        "item": {
          "id": "ffec6c25-8d15-491a-bce4-2853de5a08fd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06986ce4-d8a9-4a2d-b089-a20d4a3a60fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d825d3ab-376f-445d-87c8-5499752ec89c",
        "cursor": {
          "ref": "1773e026-fe58-4cd8-920d-abbb04b3471f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "94240a9c-3eed-4e9d-9c6e-8dc542bee906"
        },
        "item": {
          "id": "d825d3ab-376f-445d-87c8-5499752ec89c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9ccf286e-9a23-4098-b3b9-44886c961dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7111a3cf-12ee-4a98-9811-23bd05207b26",
        "cursor": {
          "ref": "cfe22553-6043-4441-8ef1-79a97b695ce1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "17e62f63-3a4d-43a7-9f26-4237ee51c619"
        },
        "item": {
          "id": "7111a3cf-12ee-4a98-9811-23bd05207b26",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a7a66e84-28cb-464d-9dcb-4efda5b68786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbe0714-8c8f-4f4c-b416-55075d49018c",
        "cursor": {
          "ref": "2e8b5439-4277-4cd3-acaa-65b5aa675e26",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2ad0a319-e55b-4a02-bf00-cb0ed75d061d"
        },
        "item": {
          "id": "ecbe0714-8c8f-4f4c-b416-55075d49018c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "299c6775-a88d-4ab7-bee1-d4dd107ad2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155905de-9aea-41bd-a5fb-744bae91a2c1",
        "cursor": {
          "ref": "74f9acb4-53f3-428b-a5f8-e9141d7b2ea1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4f9788ea-786b-45b2-aec3-98a5a5d167a9"
        },
        "item": {
          "id": "155905de-9aea-41bd-a5fb-744bae91a2c1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ef6a5e6-23dc-41c0-878a-0078b3090b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1bf62d-0fbd-405f-8bf3-2ca9837f1f54",
        "cursor": {
          "ref": "18f2c21b-d0fd-4191-99f5-c030dac5131c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "27cef6f4-04c0-4dd0-9fdd-b94a2d684663"
        },
        "item": {
          "id": "ff1bf62d-0fbd-405f-8bf3-2ca9837f1f54",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3854ad49-4bb7-4d35-a431-73b3dc689113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba251269-6009-4a54-91bc-03cb2fb77c20",
        "cursor": {
          "ref": "7b8384e1-f011-4081-aef2-ea7ff062eb91",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "080f004e-3343-40ad-a819-54736edc3c94"
        },
        "item": {
          "id": "ba251269-6009-4a54-91bc-03cb2fb77c20",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "14859fac-f8bb-485e-9c86-ed0234a3d297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42093db-83ff-44d3-b97f-a865f9c89a4d",
        "cursor": {
          "ref": "4a0655b3-b4cb-4761-bdd6-24fa1412db64",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cec4c2db-4dfa-48da-9cd2-78e45fb405e9"
        },
        "item": {
          "id": "a42093db-83ff-44d3-b97f-a865f9c89a4d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "44322b1e-0a7f-49dd-9110-1d1e7589f3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1a0fae-a7e0-4516-a5de-4d31ba24781d",
        "cursor": {
          "ref": "27053b34-3d78-482c-9de3-842a2499dbb0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2fb3ad66-4be8-456e-bf44-f2cc0d85cc0d"
        },
        "item": {
          "id": "4a1a0fae-a7e0-4516-a5de-4d31ba24781d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "325b1ea8-1346-46e5-93b8-1cc978203bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3883463d-eb9d-4f06-ab94-06928ed8e748",
        "cursor": {
          "ref": "c8219fdb-e223-4447-81cb-6d194ca28f23",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "68a1a405-a4e3-4fed-88b4-725779dc99e9"
        },
        "item": {
          "id": "3883463d-eb9d-4f06-ab94-06928ed8e748",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b348bf24-3f1f-4176-b3a5-0ff454aff041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3dc59b-4aa9-4119-8d1d-0b129c1bbf37",
        "cursor": {
          "ref": "f8b2319b-9da6-4645-b396-c9b9a91c0193",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "82ac14ee-f503-4173-8355-9ec67d0f087d"
        },
        "item": {
          "id": "8a3dc59b-4aa9-4119-8d1d-0b129c1bbf37",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "493bb361-a263-4ea5-a16a-1263831b6f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bf132b-2bdd-475c-897f-4eb7f0317167",
        "cursor": {
          "ref": "0b439d49-9dcc-4b0f-bec6-787b168be51c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3b8306d6-78c6-471b-bef0-ae0495d9bb02"
        },
        "item": {
          "id": "f1bf132b-2bdd-475c-897f-4eb7f0317167",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "05557764-fafe-43f8-bb91-42bdcdd78175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783df255-125a-4803-bcbb-013819e23859",
        "cursor": {
          "ref": "d7378874-ed17-4137-b716-5df66c5bce56",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "946b6691-5d98-4b7d-8ff3-e06cee2b602a"
        },
        "item": {
          "id": "783df255-125a-4803-bcbb-013819e23859",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "64c78858-c855-4516-bc00-258b92f55bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e49589-de39-4647-91e3-2147230d8d62",
        "cursor": {
          "ref": "8e5d3cc9-b94f-474a-a864-d6c4c74d89e7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "59582397-1e73-48d5-86c0-9ef120c9b12b"
        },
        "item": {
          "id": "97e49589-de39-4647-91e3-2147230d8d62",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "25585e1b-95bd-40b1-bb0b-13e034117b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ea040d-02a6-41ce-a4e7-cb03836a6fe7",
        "cursor": {
          "ref": "50177499-8f5e-4a60-9f6d-bb78ff4b915d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8e16c91e-767c-4c9f-bc7a-eb043febfc07"
        },
        "item": {
          "id": "c1ea040d-02a6-41ce-a4e7-cb03836a6fe7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "decfa500-b74b-4357-93b4-d3e6549ec862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30f7af7-9817-4108-b17b-dd1526a69315",
        "cursor": {
          "ref": "8b0f072c-6000-4b22-85c8-5775037e230f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ed88e48f-9451-49b7-b838-a05110706d4c"
        },
        "item": {
          "id": "c30f7af7-9817-4108-b17b-dd1526a69315",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "436c2147-70eb-4521-a311-9d08488f51d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7298353c-b89c-4bcd-b5fd-192b00b4bc15",
        "cursor": {
          "ref": "09f24ab8-1fc7-42b9-8c37-d72efc001763",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "36507527-815d-45ad-b49f-2149ef0c015f"
        },
        "item": {
          "id": "7298353c-b89c-4bcd-b5fd-192b00b4bc15",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9f370096-3841-4f55-9c3c-e7bb478f5670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2024c074-41aa-4ebb-b31d-0200a4555ca8",
        "cursor": {
          "ref": "ccccc58f-cf7c-4ab6-97f4-1313e6a64afd",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b043dd22-90fd-4588-8056-3e7f3a18efaa"
        },
        "item": {
          "id": "2024c074-41aa-4ebb-b31d-0200a4555ca8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "89ead953-350b-44a9-8783-75875532c7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1873920-63af-4abd-9f5f-dd0d5bb63169",
        "cursor": {
          "ref": "6a87fe93-71bf-43ef-bd86-59d2852ba308",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "50060ec3-7fdf-4f15-84a7-00a21439add4"
        },
        "item": {
          "id": "f1873920-63af-4abd-9f5f-dd0d5bb63169",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ac8c7034-a85b-489c-9f4c-e2325a45dc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c135bbe2-b3be-425a-81ba-2b19e77ddb1e",
        "cursor": {
          "ref": "984112d1-1063-424b-a30b-44f60d9d5418",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2c9e4c26-52d3-4bf0-9091-0756b6358e7f"
        },
        "item": {
          "id": "c135bbe2-b3be-425a-81ba-2b19e77ddb1e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9d887b07-4003-4788-8355-82ad636d8cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd5603-c9d1-44ea-a3d4-ce61a5bcb181",
        "cursor": {
          "ref": "aa75cdb7-58a2-4f76-8e81-b85b6574c87a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7e780cde-74db-47aa-9baa-3a86246255b8"
        },
        "item": {
          "id": "2ddd5603-c9d1-44ea-a3d4-ce61a5bcb181",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a2066b46-9f8f-419d-8931-38c8fdbb88f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed0a1a9-3327-45f2-be8d-f2f4a7023c84",
        "cursor": {
          "ref": "5dc6433e-a01e-40c4-88cf-2acedeac96ad",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d04e040f-c03f-4d9d-b7c8-2b0dba3c5da5"
        },
        "item": {
          "id": "8ed0a1a9-3327-45f2-be8d-f2f4a7023c84",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8ef993ca-dfa2-41b5-808c-555ff9cc5ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0944a7bd-45ab-41ba-80ad-dadd6ace2935",
        "cursor": {
          "ref": "f33eec2c-0e2d-4e83-9bd5-45b4b398d864",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1123fa8e-b1c3-42ac-b54b-9bc49c288fa8"
        },
        "item": {
          "id": "0944a7bd-45ab-41ba-80ad-dadd6ace2935",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "47c1e524-1a3c-4739-b509-530ca6261dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767788a0-c472-4bb0-8a91-abdc60324f76",
        "cursor": {
          "ref": "aeb8ff08-88b3-4ed2-8dbc-0c01960b207c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "74888b74-c031-4a62-8a44-f0f218142f10"
        },
        "item": {
          "id": "767788a0-c472-4bb0-8a91-abdc60324f76",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "05603eba-3413-41f8-9689-020dceddcab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aeb60e7-51d6-47f5-a04a-5cde6bca23f2",
        "cursor": {
          "ref": "7317b374-b7b2-42eb-a751-ac4f50a335af",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fefc7e51-bc48-4516-a5f3-67591f9113a1"
        },
        "item": {
          "id": "0aeb60e7-51d6-47f5-a04a-5cde6bca23f2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "da214c78-396a-4608-ac73-d6ad97c46410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ece984-e4aa-4740-8691-6d9c7e440abe",
        "cursor": {
          "ref": "8e8670c9-aede-495b-85eb-1460b0e9925e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a07724c4-656a-460b-80d4-69f53d22d3a0"
        },
        "item": {
          "id": "d2ece984-e4aa-4740-8691-6d9c7e440abe",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8866956d-64b7-4921-a893-37e0b8d4784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836a2eae-5955-49fd-b327-1ea9df17ed55",
        "cursor": {
          "ref": "cd5f9059-8747-43fe-b6d8-78005710f0b3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ebba151d-1c7f-42ef-9bde-a6dbbf63acbc"
        },
        "item": {
          "id": "836a2eae-5955-49fd-b327-1ea9df17ed55",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c6cb2ca2-5916-4c9e-940b-a8896fd2d45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454baec6-9eaf-4ce2-a1bd-f33a0aea6168",
        "cursor": {
          "ref": "f4d8b1bb-62f8-4e10-a1c8-5c8fa2cbc9c3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bb415ad2-8e96-4f79-9644-092643dcf203"
        },
        "item": {
          "id": "454baec6-9eaf-4ce2-a1bd-f33a0aea6168",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "daacc320-3abb-4ce6-a008-bdc7f589d238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474427fe-692e-4cb6-bb8b-a9c970d5ec5f",
        "cursor": {
          "ref": "68cac17f-591a-4a45-b61f-83892f2fc65e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "03a6b048-1c77-4659-a107-7f67139145f4"
        },
        "item": {
          "id": "474427fe-692e-4cb6-bb8b-a9c970d5ec5f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d51d8daa-3119-4c76-a056-8d615a0ba620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deaba26-0861-4191-9c3b-79ba80ae930f",
        "cursor": {
          "ref": "6c1e6685-8426-4a9c-b2fe-163882be1678",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "80f2a4e3-e5da-4477-b979-281353e0d7e7"
        },
        "item": {
          "id": "5deaba26-0861-4191-9c3b-79ba80ae930f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "553c9927-e3b0-4178-9a75-40f4b4a49505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b72f5bd-f02b-4a89-8705-60c821f5bec9",
        "cursor": {
          "ref": "efc3d222-714c-413b-aa85-1413cd377a1c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "30c3ffb9-45db-4d8e-a3b3-5dc165244741"
        },
        "item": {
          "id": "6b72f5bd-f02b-4a89-8705-60c821f5bec9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "83f4c809-d540-4154-9f5f-76ef3853a205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e4c6cd-cc07-446e-8d55-53c632384916",
        "cursor": {
          "ref": "bca48c7b-3c4f-4de7-b6fb-f4e07fbd1dbe",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "08d7c705-9bfa-47e0-8a73-0398d48ea278"
        },
        "item": {
          "id": "a6e4c6cd-cc07-446e-8d55-53c632384916",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c593f621-5ae6-4595-8db8-488955df611e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f285ef5-4345-4d4b-aeb2-ba22a891d8e6",
        "cursor": {
          "ref": "575139ea-a8d4-4fec-880b-ec502f6cd27f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6daee7c8-db0d-4904-ab2f-28c8bd2acfe7"
        },
        "item": {
          "id": "0f285ef5-4345-4d4b-aeb2-ba22a891d8e6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "84eecd36-6f61-43a9-acb8-907dd4fa3200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1174e6-e7ec-4745-a165-d1a4dd6d7497",
        "cursor": {
          "ref": "2b15d73d-e2f3-410b-8003-420b55326df4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bb7f18ad-b9d4-4871-8d9d-b98c82fc0925"
        },
        "item": {
          "id": "2a1174e6-e7ec-4745-a165-d1a4dd6d7497",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ca465d2d-dc71-400c-ad48-63b060df6cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c67756b-b120-4545-8d91-1301b1146380",
        "cursor": {
          "ref": "656b4d49-afe6-44af-a365-74c5d315f9a9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "029109c4-6ef5-4cee-9a90-06c6d9759d9b"
        },
        "item": {
          "id": "3c67756b-b120-4545-8d91-1301b1146380",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eadc7187-d60f-4e30-bafc-05694af1617a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388f6a73-4be0-47fb-8572-8a0f0294ad6b",
        "cursor": {
          "ref": "9c40d671-35b8-4583-8f68-855e06d6de2f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "eaa1137f-164b-4b60-a947-35b67124f2bb"
        },
        "item": {
          "id": "388f6a73-4be0-47fb-8572-8a0f0294ad6b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ddbab8cd-718d-48d3-826d-c98e8c1d7768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ccc792-8914-41d6-be84-8f90cbd990c1",
        "cursor": {
          "ref": "e2b14348-71ca-4f9f-acfa-c97a2a587666",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7ff825e8-575b-46f9-8e01-93a70d43a1fc"
        },
        "item": {
          "id": "83ccc792-8914-41d6-be84-8f90cbd990c1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "04318dd2-d93f-4a8e-82ce-97bcd4d2cd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974ea567-4732-4d97-87c9-da87117725a3",
        "cursor": {
          "ref": "0752ee83-a6b4-4629-9abb-a09c71d4098c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7ca2cf00-16bb-4c9c-9447-e78371e29055"
        },
        "item": {
          "id": "974ea567-4732-4d97-87c9-da87117725a3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "395bd9f0-106b-4205-b1f6-aa426789a8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a4530f-41ad-4028-aff3-c9626c9fa5d1",
        "cursor": {
          "ref": "20ff13d3-19ea-4931-9a7a-015dec0ff1ba",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3ea33b98-e936-4c06-a92c-49affc0f73b8"
        },
        "item": {
          "id": "56a4530f-41ad-4028-aff3-c9626c9fa5d1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "995da81a-7bd5-4353-be50-7653ccc3ccf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52757b5-c695-4875-b15e-a522e3d8185f",
        "cursor": {
          "ref": "d0cba780-5a08-4033-82bd-b793fe8ecd59",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "27d22332-4bed-4815-a96b-c76bc9459f7c"
        },
        "item": {
          "id": "f52757b5-c695-4875-b15e-a522e3d8185f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2bd1eb9c-6b6b-4ace-adc2-11a60afb3ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b475f3e2-c1bc-40b6-94f9-6f777034e8d9",
        "cursor": {
          "ref": "fbf5313a-4ad0-4c61-8543-414a009bbd81",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b6d5fdf9-d68b-435f-9280-6e01ea5ed605"
        },
        "item": {
          "id": "b475f3e2-c1bc-40b6-94f9-6f777034e8d9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "296cf939-e216-44e5-a95a-b777fe74755b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d831bdc4-b0d9-4535-ab58-c7154edd1bc8",
        "cursor": {
          "ref": "87d1832a-1402-49d5-b31e-c673d8b5dbfb",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "277d143b-ec80-4e9d-9001-16a6ddc506b3"
        },
        "item": {
          "id": "d831bdc4-b0d9-4535-ab58-c7154edd1bc8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9a58dd81-6bf6-46f3-bde9-e4738f9de434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9421e27d-95c0-4591-bac9-98c6973078a4",
        "cursor": {
          "ref": "e93cb675-9a51-4c27-9b51-7b77d0fab805",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7cd77822-2399-4761-bfaa-3b44cdb27a04"
        },
        "item": {
          "id": "9421e27d-95c0-4591-bac9-98c6973078a4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1215874b-12ae-4a57-86f9-33c2427e69dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1d80d9-40b1-4a6d-8704-b7fa921d121c",
        "cursor": {
          "ref": "0d417bcb-99ce-4c76-9702-25eba75b4d01",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b46ab2bc-9e8b-4440-8101-7f66b498f9ea"
        },
        "item": {
          "id": "3d1d80d9-40b1-4a6d-8704-b7fa921d121c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c0be168e-8961-451d-97f4-46d05d3edb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e471d55-67ae-4f9d-9364-51f0888c132b",
        "cursor": {
          "ref": "8b493617-53e8-4d75-a84b-1fd5e5680ce3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d18d827b-84f4-48a6-90b9-8cbac0e43d43"
        },
        "item": {
          "id": "4e471d55-67ae-4f9d-9364-51f0888c132b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "eb4e2623-d07c-4dba-a252-6f9d7c878d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e00c45-6be5-4335-bbc4-2425ec20564f",
        "cursor": {
          "ref": "c8845556-2d09-45af-8c7e-9ded797af19b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ce55577a-2398-47b4-a882-376b3d40ef35"
        },
        "item": {
          "id": "e9e00c45-6be5-4335-bbc4-2425ec20564f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fbaa19b1-cedb-45db-b315-c2c854130c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2065663e-fce3-460b-b4e8-078663f4ef25",
        "cursor": {
          "ref": "27c4f6d2-915b-4a50-9837-f90899e49ab5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d132e9ac-06cf-48b6-b34f-bf727a36bd1c"
        },
        "item": {
          "id": "2065663e-fce3-460b-b4e8-078663f4ef25",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0c4e5761-f65d-4dc3-90ef-f7e512902a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8282113b-3873-4538-87e2-d26e00fd53f0",
        "cursor": {
          "ref": "ad3cf6a8-6fc3-4264-85c8-8ad02c2a9014",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "baafaaa4-78dd-405f-90a2-15b8a8dd3b8d"
        },
        "item": {
          "id": "8282113b-3873-4538-87e2-d26e00fd53f0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6f0a4cf1-e5c9-4f3e-b02f-98bbf8f0eeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca216768-f996-4915-8ab6-d94ccf1b9006",
        "cursor": {
          "ref": "127be84d-9629-44ab-b648-d3e3b47c3b2b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "44046b7b-48d9-4cdf-b18f-0decc5b2a941"
        },
        "item": {
          "id": "ca216768-f996-4915-8ab6-d94ccf1b9006",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aab11368-8853-461f-8296-cbfe0e627792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabd24d9-40a4-481d-98e3-230de8507827",
        "cursor": {
          "ref": "fea13aca-f96d-48cd-a6f9-77b533d2adae",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "344f2601-cb15-4971-804a-c34893f68e67"
        },
        "item": {
          "id": "aabd24d9-40a4-481d-98e3-230de8507827",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "350eac4a-1019-498e-80ef-568500ad69e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d38d028-f10f-45fc-b015-8f5191fdf604",
        "cursor": {
          "ref": "1e302f4a-950a-494e-a82c-3d2bda92fa39",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3aa1ee46-1843-4542-b285-1115e0cded39"
        },
        "item": {
          "id": "7d38d028-f10f-45fc-b015-8f5191fdf604",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b28bd2de-afca-49d6-9ecb-b4aa02e1397d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4026415-0f2b-4be6-99fd-e4c285283d2b",
        "cursor": {
          "ref": "90909bb5-0355-4e9d-a28e-fb3e7ecd1925",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f64b30e8-f648-45db-afff-19c9cb9aef9e"
        },
        "item": {
          "id": "e4026415-0f2b-4be6-99fd-e4c285283d2b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ac526bec-32d5-4f78-8acf-89d9cd227e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05739949-d657-4504-998c-01ac3cb0574c",
        "cursor": {
          "ref": "ffbf4747-cc7e-4aab-952d-400c71bfe55b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9ef0866e-2023-4cec-bd99-a66731d01ebb"
        },
        "item": {
          "id": "05739949-d657-4504-998c-01ac3cb0574c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5d8c563d-603c-465d-ad29-bbbbee846d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbe99fb-1d60-4da3-9b9f-3b2f8ed4fd9d",
        "cursor": {
          "ref": "042105a8-80af-4f6e-84a1-09c1e82e57b4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "65f93545-3f4d-459c-8039-90617b92ff9f"
        },
        "item": {
          "id": "1cbe99fb-1d60-4da3-9b9f-3b2f8ed4fd9d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6cb459ab-1bbd-408f-8798-da267c473044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52327ae-2255-4696-89a6-c40c1d5f202d",
        "cursor": {
          "ref": "8885173a-4b51-4a95-8951-201e5c75d386",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c2b3501d-aa38-42a9-9db2-481715b3a0c5"
        },
        "item": {
          "id": "f52327ae-2255-4696-89a6-c40c1d5f202d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "482686f4-c601-41ab-b80a-3b0267c3492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f8ca03-c8bc-4d96-84e1-3cbddb413c01",
        "cursor": {
          "ref": "e1e69ae8-3791-45af-a726-467d90385c73",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "69ed19c2-f900-4ff3-b21a-7ed86430e0d3"
        },
        "item": {
          "id": "f2f8ca03-c8bc-4d96-84e1-3cbddb413c01",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9891b0fa-4718-4959-bb85-b156ec45aaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f3b690-efea-4159-8a50-89eed0611163",
        "cursor": {
          "ref": "6e9decf4-411b-414d-992a-7a31e08c311e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6605c2c1-5afd-476d-8893-8044fffdbdb4"
        },
        "item": {
          "id": "b7f3b690-efea-4159-8a50-89eed0611163",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8f78fae2-a1ac-4e1f-b252-81669c3fe755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb379a20-352c-4baa-9168-e1a03ce9346e",
        "cursor": {
          "ref": "0cd25048-906e-4f5b-9691-b27ea4cbcb19",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ca76f7f6-bda8-4f13-964b-ed5987257684"
        },
        "item": {
          "id": "eb379a20-352c-4baa-9168-e1a03ce9346e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aa801907-a203-4336-b3a4-374f73d76234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73abe07-2bf5-4325-997f-263d9af66ee1",
        "cursor": {
          "ref": "800c6280-86a0-4353-b3be-e0b11b96c3c2",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b816ff63-95be-45fe-81b2-3de03d58787d"
        },
        "item": {
          "id": "e73abe07-2bf5-4325-997f-263d9af66ee1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2fdf6944-5e13-48e8-a2ea-82ca71747876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c069454-ef7e-4e13-957c-dcf00f2616a4",
        "cursor": {
          "ref": "e4a65d5c-2ab4-43f8-afb9-ad1d392ab4c6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "519465d3-aff7-4313-9924-9897a3874dbf"
        },
        "item": {
          "id": "2c069454-ef7e-4e13-957c-dcf00f2616a4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f50d8763-9858-45c9-a2fa-3481a8fd1433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598ed76b-fc12-42be-8590-6b65d4c7b6e0",
        "cursor": {
          "ref": "c4021105-f10c-4e0f-a8a1-d5e69674b879",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "15a09e6e-cbad-45b1-b6bf-65fc26cfa5b9"
        },
        "item": {
          "id": "598ed76b-fc12-42be-8590-6b65d4c7b6e0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8637a659-8f26-478b-8dcc-0e78e8b5cad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6ccb73-aa65-4a85-97d1-e1e522662a12",
        "cursor": {
          "ref": "bb797c44-ebe4-4566-a2ed-c6f700264a59",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cafcbaf6-5548-482f-a26f-428fb19d64c5"
        },
        "item": {
          "id": "dd6ccb73-aa65-4a85-97d1-e1e522662a12",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bb343e66-89b3-48b5-acf3-3fee32620ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a4b1aa-5fb9-42e3-a163-15a76cc5a991",
        "cursor": {
          "ref": "972d5426-79e0-4260-a010-fdeddb3185f6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cab562ff-6cec-40c8-920e-16680ec1fd7d"
        },
        "item": {
          "id": "c1a4b1aa-5fb9-42e3-a163-15a76cc5a991",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c159d448-04ce-4a9e-8347-b7e46965df1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c686579-19f1-4c3f-9d8b-d06871b8ac88",
        "cursor": {
          "ref": "8992527f-0f5c-4433-8b9b-78c12e3cacba",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a9bb25eb-aa60-4a0f-adac-e780db38d558"
        },
        "item": {
          "id": "5c686579-19f1-4c3f-9d8b-d06871b8ac88",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eb3f8346-de53-4954-bd3a-c5aae2b335b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223afaac-4fa7-4f51-85f5-8869fe4d0d8b",
        "cursor": {
          "ref": "a4befecf-9f6e-47b1-b839-bc4bb2048bc3",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "444eba79-7a1b-404f-a3c9-b8efd8aef92c"
        },
        "item": {
          "id": "223afaac-4fa7-4f51-85f5-8869fe4d0d8b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "411b554c-a6a7-4ba1-9b2f-0c5276fee3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2bdcc2-b7ef-4fd4-86c9-1886f291e313",
        "cursor": {
          "ref": "4ae8f312-1b29-442c-8cbf-5e1eed393d71",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d9c85326-f952-4123-8a9a-3ae7c4efc51a"
        },
        "item": {
          "id": "3e2bdcc2-b7ef-4fd4-86c9-1886f291e313",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7bbb750e-c3cc-4ad6-b478-f816eb204894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bdb50a-c248-4b1b-86d3-6876e1df3b98",
        "cursor": {
          "ref": "76040797-4242-4330-882f-71d0af0a5dba",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b5f99a11-789f-409e-963d-5013925730dc"
        },
        "item": {
          "id": "d2bdb50a-c248-4b1b-86d3-6876e1df3b98",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c5a6c125-babd-4464-a970-38de98c5bb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18eaf51-f858-402d-bde1-d6ef6cb6862d",
        "cursor": {
          "ref": "bc69361a-e83f-49a4-815c-bc723fca2418",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "749c9551-5a7a-4b77-9c72-7cb39cc24ed3"
        },
        "item": {
          "id": "b18eaf51-f858-402d-bde1-d6ef6cb6862d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ebc96133-4bc6-4e57-b204-8ca659024e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cdd180-c86f-4b67-b192-f8645fd5c129",
        "cursor": {
          "ref": "8bcd376f-5d8e-4a04-9ed7-95b38fe9d1bc",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3564206d-e8f8-4a80-ac95-0af84af4488b"
        },
        "item": {
          "id": "08cdd180-c86f-4b67-b192-f8645fd5c129",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ab672a12-01b1-496c-a747-da026dfe0794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908de795-e517-4a74-831c-d978b0a90ab8",
        "cursor": {
          "ref": "719652fe-e4af-44ac-9084-33a0d4131346",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6dc55e3c-c676-4e1e-b0a0-7dbfe7b54ebf"
        },
        "item": {
          "id": "908de795-e517-4a74-831c-d978b0a90ab8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c6e4acfd-b672-49c3-995e-2a7f16d256f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343e870a-3b52-4100-8117-1e783d31bc0d",
        "cursor": {
          "ref": "b1877926-804e-40af-8fd8-04e270df6ec4",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "43fc3dc6-6e1d-4315-ba8d-37369d2e40a6"
        },
        "item": {
          "id": "343e870a-3b52-4100-8117-1e783d31bc0d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e0744bef-a2b7-4df9-8289-05d0207d0bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace51821-f4af-41fd-b67c-08908431f0ee",
        "cursor": {
          "ref": "6587ca58-44cd-47e0-aef6-f6a67ab78269",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fbc0f43a-6585-4785-8bcf-80c845a7e669"
        },
        "item": {
          "id": "ace51821-f4af-41fd-b67c-08908431f0ee",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "723353cc-2837-4b30-a31a-2343cfc5f430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6d1dc9-76c7-40c9-95ef-3cb6b21512cc",
        "cursor": {
          "ref": "1c9a2006-ddf2-4a49-af93-8740f18488f5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "928e7e54-2eb6-47fe-9bc2-32287cf1d694"
        },
        "item": {
          "id": "6b6d1dc9-76c7-40c9-95ef-3cb6b21512cc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f5dde04f-b5a0-4c38-9799-085648da1855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d51b14-fe5c-41d6-bdc0-894356b4bded",
        "cursor": {
          "ref": "d598c380-d47c-42c4-b0f2-a4f88ab9cb3a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9af32ee1-b7d3-45b1-bc46-9ca77a3ee040"
        },
        "item": {
          "id": "96d51b14-fe5c-41d6-bdc0-894356b4bded",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "82b0c0ca-dbd9-470f-ba73-c471dff9698a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c23fdf-f29f-46ac-8e60-9dd270de48d5",
        "cursor": {
          "ref": "9c07d742-d1be-4c5e-877d-ab712474d46b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "56b2576f-cc44-4029-a7ba-b6b2d1b86463"
        },
        "item": {
          "id": "68c23fdf-f29f-46ac-8e60-9dd270de48d5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f950164c-be89-4e0f-b992-c6d004b74e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0adcc42-437e-4558-af5d-d9f86d7b56d2",
        "cursor": {
          "ref": "513ff7c1-bc6c-47c2-8b8f-483bc22bc500",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4980be47-ebaa-4e1c-a296-f4c7a8eb8245"
        },
        "item": {
          "id": "f0adcc42-437e-4558-af5d-d9f86d7b56d2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "190d4780-2181-4288-a950-dd368a343da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c43a46-7cae-4c58-b9f5-050778e5fe06",
        "cursor": {
          "ref": "a40265a0-5b3c-47c3-bd25-484b7ba669db",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "15f49550-6baa-48c4-951c-1523159981ec"
        },
        "item": {
          "id": "97c43a46-7cae-4c58-b9f5-050778e5fe06",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "42b84ea6-304b-4786-b14d-5c1d78ed32e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289cc705-4f19-44d8-9523-8acd93e91810",
        "cursor": {
          "ref": "d8ebbde7-713b-40fc-b8d1-840e31df82d7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "76be64c4-9ae8-43a9-a911-41e1a4ffdb5f"
        },
        "item": {
          "id": "289cc705-4f19-44d8-9523-8acd93e91810",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "132f7ed7-93fb-49e7-b571-56eba04677a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b0ecd9-db66-4c50-9e58-34399c1081b8",
        "cursor": {
          "ref": "45ede59a-9a17-4566-8229-b1377a23f293",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2efb343e-0b47-4032-bbb1-2b8541bb88ab"
        },
        "item": {
          "id": "36b0ecd9-db66-4c50-9e58-34399c1081b8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fbe47717-ee4f-434e-8ad8-926903143e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ad46f9-828a-4afa-835f-b72e534a6c95",
        "cursor": {
          "ref": "459f8446-afbf-4e37-8087-5b48f06d0445",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "88cc170f-0c62-44e9-a548-3138b69c5202"
        },
        "item": {
          "id": "50ad46f9-828a-4afa-835f-b72e534a6c95",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3790475c-db03-4a1c-b9f4-aaaefc42f522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225daf69-5cca-4836-aefa-7e9a398fc64e",
        "cursor": {
          "ref": "e9eec0e1-b8ed-43c6-a0f5-9829de9d5839",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "07fcd4bc-8210-4a90-90bf-48ad7613c840"
        },
        "item": {
          "id": "225daf69-5cca-4836-aefa-7e9a398fc64e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e9b4c166-8bae-46a6-b912-ffdc388dcd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4671eb-4ab2-4bc5-acbf-5be2ed773295",
        "cursor": {
          "ref": "c3661fff-f012-4114-b606-a8b1b3169045",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4602c79c-cd17-40a0-8e33-0d38b10848cc"
        },
        "item": {
          "id": "9f4671eb-4ab2-4bc5-acbf-5be2ed773295",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "82617489-5429-456b-807e-5a241622fab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed474284-38b8-44e2-8ff7-a107eff6cccc",
        "cursor": {
          "ref": "07848902-695e-4b81-b048-0316a274a7ea",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bc7b314f-4dfd-45c6-b081-9f9c49e07f7c"
        },
        "item": {
          "id": "ed474284-38b8-44e2-8ff7-a107eff6cccc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "269ed38d-9308-4dca-9b07-23d507e97088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6280f38-7bd1-462d-8346-047a140d89a3",
        "cursor": {
          "ref": "93ea2cef-1120-4022-a665-30f8a125de7b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4c637438-07ca-4af4-8c01-c90405f8ead8"
        },
        "item": {
          "id": "d6280f38-7bd1-462d-8346-047a140d89a3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "13a3c17b-d9c9-45f1-ae50-fe42a98044ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fa7b3e-9a5d-465a-a752-24943669bd02",
        "cursor": {
          "ref": "85a003f2-fa1e-4086-88fb-e80315a85f6d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "305a88ed-a95c-4af6-9fee-ea0af1483f17"
        },
        "item": {
          "id": "e3fa7b3e-9a5d-465a-a752-24943669bd02",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fcd11a4c-7f83-4aeb-903f-0b63052d058d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6efbe2b3-d343-4b2f-8383-8649e596e5b1",
        "cursor": {
          "ref": "f277668b-6ead-43ce-b013-6071a5f7e5c3",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aa7cd514-3720-4fbc-9dd4-2caff3615c18"
        },
        "item": {
          "id": "6efbe2b3-d343-4b2f-8383-8649e596e5b1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5824513d-5506-41b7-84e4-f0cf6a14abb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3a3c7b0f-ab33-42f8-8fa4-988876eca282",
        "cursor": {
          "ref": "b24d0b44-bd35-4e9d-85c5-1c4322aa8406",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "55bc3d1a-4f54-4b5f-96e9-1d2209848d36"
        },
        "item": {
          "id": "3a3c7b0f-ab33-42f8-8fa4-988876eca282",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5ce6de8d-f33b-4165-ad07-91e39a8ccd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d691da05-51a2-44bf-a9e5-e550c638f44c",
        "cursor": {
          "ref": "25a5ecf6-f3c8-42ad-ac0b-c4bdaeab4d28",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "52ca3555-d53c-4e55-bdb1-1d465eee54d6"
        },
        "item": {
          "id": "d691da05-51a2-44bf-a9e5-e550c638f44c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bed6e2fd-445f-4584-bc22-75c90ff20cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "db4a7943-3ca7-4ab5-bc22-a0248a4bd299",
        "cursor": {
          "ref": "0ceb4d6f-cbfb-4e22-bcfb-ee3400a32782",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "144d9e3d-49f0-4773-ad3f-71b90aba9a7d"
        },
        "item": {
          "id": "db4a7943-3ca7-4ab5-bc22-a0248a4bd299",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f16f8b0f-2b4c-497c-a5a5-2995cc5ff5e1",
          "status": "Created",
          "code": 201,
          "responseTime": 8020,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7668c801-0655-4b05-aae0-0076bc291795",
        "cursor": {
          "ref": "e1c13e1d-6682-4df2-8777-e3a94998b19f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "37a91d19-c7b3-4dcd-b60c-af218afbaffa"
        },
        "item": {
          "id": "7668c801-0655-4b05-aae0-0076bc291795",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c9f4e195-f01f-4ee1-bb26-665d41701bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9c3b6da4-092e-4f16-a432-e37559150762",
        "cursor": {
          "ref": "986a4d22-3f66-46ff-95ae-99d1aeeba2d9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "25d27e13-43c1-4590-b9e0-9a7d92cc1a3d"
        },
        "item": {
          "id": "9c3b6da4-092e-4f16-a432-e37559150762",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c7d0a114-bc10-46bb-b9ee-7a454ea44dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "93f074ef-3db7-4417-a2d0-f707fb142a33",
        "cursor": {
          "ref": "671ddcec-a642-4958-909e-c8ef3e88b706",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "791ff32e-35e0-4638-aac6-2ca68c31824a"
        },
        "item": {
          "id": "93f074ef-3db7-4417-a2d0-f707fb142a33",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0801c2ab-5469-46a0-bcce-773c5ebb5810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9165cdca-6e57-479e-a6b8-7058f9b20d32",
        "cursor": {
          "ref": "5e61bf51-aa6a-4f55-a966-a93a4225a98f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c2910329-ec8d-4073-a99f-5a5e7dff8639"
        },
        "item": {
          "id": "9165cdca-6e57-479e-a6b8-7058f9b20d32",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c32e0b3e-9848-4d48-a94c-d0e77a71218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd19bd8c-ab9e-4c56-99fe-61141b3c3f67",
        "cursor": {
          "ref": "8e6b5850-d47e-4149-a5c8-7efe6f79e31f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4886bfe4-50ae-443d-9fb2-0af2f21a01ac"
        },
        "item": {
          "id": "dd19bd8c-ab9e-4c56-99fe-61141b3c3f67",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "446538f8-fb1c-4e5a-91ef-9149021777e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0a12dc-057f-4168-8c8f-ee224b94b288",
        "cursor": {
          "ref": "6fc23165-ba25-44a2-8407-40e79eeadcf7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9b2dfe34-96fd-4258-b0ae-5bdef8712bc1"
        },
        "item": {
          "id": "8f0a12dc-057f-4168-8c8f-ee224b94b288",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b21c852-3ad4-45f6-a3df-997cf6af6ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a5b5cc-294e-4d84-bb83-9b0b1e9fda9c",
        "cursor": {
          "ref": "3acc8db3-b205-43c1-8e9c-8e1ae1e80e04",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4edac39c-5f82-4ace-94b8-d8f07d2e1518"
        },
        "item": {
          "id": "79a5b5cc-294e-4d84-bb83-9b0b1e9fda9c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "33fb70ff-1e81-493d-9147-54fd7e6e5b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2539eff0-728a-478f-b7fd-1d568c03e42d",
        "cursor": {
          "ref": "4da87618-8ee5-4b54-8c97-1474b6d351e6",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "79f9991d-c9d5-453c-a96d-59502c01c7c5"
        },
        "item": {
          "id": "2539eff0-728a-478f-b7fd-1d568c03e42d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6caba115-0d3a-46fe-bba0-45e3a63f0b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685d2ff4-0ec7-4381-9a66-0ed12059daac",
        "cursor": {
          "ref": "46092750-0b39-4f8e-a7ca-dfa7508b2a95",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e4190f5e-fe68-414f-ae73-fb011f8e6788"
        },
        "item": {
          "id": "685d2ff4-0ec7-4381-9a66-0ed12059daac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7dea0fef-769e-4486-8625-adcf6b9d4d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bc1bfb-08a3-4bcd-8a75-c2e25ab92c0d",
        "cursor": {
          "ref": "9076226c-ebc2-44e3-b4b8-31ce330820c6",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0842cd72-8855-4a28-96af-fb723eb04cfc"
        },
        "item": {
          "id": "02bc1bfb-08a3-4bcd-8a75-c2e25ab92c0d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4f510d8e-2316-4d04-ae30-2a7263c9e71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b140668-fc71-432a-a5e7-ff98403aec60",
        "cursor": {
          "ref": "ee32eed4-d923-4b78-8a69-2128d0ff70cd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "73dc71c3-bc10-4136-a762-5c3c57e70f19"
        },
        "item": {
          "id": "6b140668-fc71-432a-a5e7-ff98403aec60",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "76fcfaf7-e9d5-4b9c-babe-3a94cca5cbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbdce9e-94a8-427e-9b55-61a915a32270",
        "cursor": {
          "ref": "d9f452b0-19a7-44fb-9614-89f3d05570a1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "76b90d22-e903-4996-b7cd-a96ad4caf763"
        },
        "item": {
          "id": "7fbdce9e-94a8-427e-9b55-61a915a32270",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b9e3f93a-37a8-453e-8651-ceaa8fb3e6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ed219e-d161-4aee-9e8a-c133d9e9e619",
        "cursor": {
          "ref": "099cfebf-336f-4ef8-94c8-63b74ccf8d50",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9bf89a45-6561-4ff6-a040-5b6053c01499"
        },
        "item": {
          "id": "39ed219e-d161-4aee-9e8a-c133d9e9e619",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3b94a619-11cc-4c40-9bbd-642253d1106f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34729f4-e1a2-493a-b8d6-9a978f0e26e2",
        "cursor": {
          "ref": "049c8220-6480-4af9-ac68-2830d40a3e75",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cede4cfd-f575-4148-a539-930e03e2839c"
        },
        "item": {
          "id": "e34729f4-e1a2-493a-b8d6-9a978f0e26e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ee5d39ea-df93-4654-b009-ba48edd05b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269c6e2f-fef2-45cd-b94b-cba805f1264e",
        "cursor": {
          "ref": "1b714aea-e9e0-4b28-8fc1-8bd663b39aad",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ac51217-d8d9-40a1-9db8-ba9bab5305d4"
        },
        "item": {
          "id": "269c6e2f-fef2-45cd-b94b-cba805f1264e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "411977b5-01a6-4981-8f35-33f846024593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a06f1ca-c527-4bca-88ff-40f8fa795b91",
        "cursor": {
          "ref": "32421418-c2e0-460a-a7b5-8b8025dd239b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "191fbbeb-c3e9-4c0c-9691-5cc0ec3ab6ef"
        },
        "item": {
          "id": "0a06f1ca-c527-4bca-88ff-40f8fa795b91",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "410f3748-3b10-4c2c-84b3-f251add20b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3867a0d8-8a3d-484b-a916-3282fa7d8c5b",
        "cursor": {
          "ref": "07ccb906-55e0-43d7-9aee-586cceb180ca",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fa159f5a-1b7c-4a0b-89bf-3e7d127d4ef0"
        },
        "item": {
          "id": "3867a0d8-8a3d-484b-a916-3282fa7d8c5b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7648fe6b-0244-4157-b32f-4cdab8d45d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa0ed35-17c0-477c-b06c-9e85ed61b400",
        "cursor": {
          "ref": "32cf9e88-6a63-4189-8da1-75e6aa2ce89c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "80c13237-9109-48f4-a059-ed5e2dbc9b0d"
        },
        "item": {
          "id": "daa0ed35-17c0-477c-b06c-9e85ed61b400",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e7976e22-0ced-4385-8d64-ed970ab0c481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063d6e46-8c7a-4daa-a09b-c48921e3f6c4",
        "cursor": {
          "ref": "63ac107f-5e97-454d-88a1-2553fd2249ce",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c91f7528-f8ef-4341-bb5e-bb2b09f4b435"
        },
        "item": {
          "id": "063d6e46-8c7a-4daa-a09b-c48921e3f6c4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c7378df6-1a7d-47d4-a482-c0e13d57e19b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "40bf5421-b4c9-430e-9b9c-f704db98d089",
        "cursor": {
          "ref": "3c168b98-49ea-444e-ba17-f0ef3f5b3be7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bce91129-e614-4fec-bb99-a3151685290b"
        },
        "item": {
          "id": "40bf5421-b4c9-430e-9b9c-f704db98d089",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "265eb671-6ae5-44cf-b497-fcc0114d08d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409c353e-6349-4e4a-9047-aa4b6e7256c0",
        "cursor": {
          "ref": "cd869460-2ae6-47f0-956e-92436871eb27",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ba8325da-ca46-4adf-ab26-8bffbfc4ac40"
        },
        "item": {
          "id": "409c353e-6349-4e4a-9047-aa4b6e7256c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6bb53aea-e1f9-49a2-92ac-6a7a5ff7aef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99c6f4e-37fc-4ebd-b09c-ebdce08ba544",
        "cursor": {
          "ref": "2c51089c-d951-4bcf-b293-e26691ba8b09",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2eaf35c6-f496-482d-8748-20cf3baabf79"
        },
        "item": {
          "id": "b99c6f4e-37fc-4ebd-b09c-ebdce08ba544",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6e510cb5-42f4-4035-81e1-954249082e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feff0856-599c-4d91-8a7f-d8a38bbc1f1b",
        "cursor": {
          "ref": "f99e8da0-db8e-4cbe-a9f0-6dfc1f493f4a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0b2bc687-0a5c-47a5-987c-acd9d890a348"
        },
        "item": {
          "id": "feff0856-599c-4d91-8a7f-d8a38bbc1f1b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9c5205ef-5239-4be8-b6ce-aa8728f5acf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ee0d72-8aea-4835-aff7-d38b2c8a84f3",
        "cursor": {
          "ref": "e5275373-4245-428a-a307-56e5e671bdcb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "501bb6b9-269f-49e5-a5fe-0aa0dc359acc"
        },
        "item": {
          "id": "a8ee0d72-8aea-4835-aff7-d38b2c8a84f3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "953fbcf6-6a63-494a-87f8-326c2293c30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e31c28d-5201-4569-8037-c297a159cac4",
        "cursor": {
          "ref": "07231ca5-892c-4830-978a-3637cea90432",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8a9c7956-462a-4b64-adac-94053ca71f48"
        },
        "item": {
          "id": "5e31c28d-5201-4569-8037-c297a159cac4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ac21995a-b516-4056-b2fc-675b2fae26aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44048426-fa34-4816-ad01-1aa58bf445ec",
        "cursor": {
          "ref": "cb6d93b7-117a-45ae-8e9d-0cfb147ceb18",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c05cbb51-47f8-45a8-9ac2-85918eef6d4a"
        },
        "item": {
          "id": "44048426-fa34-4816-ad01-1aa58bf445ec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "34436472-8e68-4184-8743-ea47367c0f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276b0048-44a5-4649-a39f-01ab5c64c494",
        "cursor": {
          "ref": "6b1b48a1-5491-48ae-8f95-3fc77a507aad",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "859830e2-4d7e-44e0-b83d-7a79e7004823"
        },
        "item": {
          "id": "276b0048-44a5-4649-a39f-01ab5c64c494",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3453c5ed-77b7-468a-9bcd-2304b9c9aac8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4bd5d417-403a-4b84-965b-04ded359188f",
        "cursor": {
          "ref": "2e6909c3-2bd1-472b-baf0-e41476687fac",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ad7edf76-9171-4805-807d-cd9cdd7ff979"
        },
        "item": {
          "id": "4bd5d417-403a-4b84-965b-04ded359188f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4380c8a0-084d-4bda-957e-4a1a2e2d52fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2983b14-32f5-4979-8e14-1db198cda377",
        "cursor": {
          "ref": "a4f01199-7f70-45e9-85a0-a3eb5cb76b72",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3f3bc6f5-357a-4402-991d-30720793003d"
        },
        "item": {
          "id": "d2983b14-32f5-4979-8e14-1db198cda377",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5cb18222-27da-49de-9da8-7fc80444671d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7612d626-6044-4edc-b41c-da8d9d623284",
        "cursor": {
          "ref": "c616705d-cf14-4293-bd7a-a39c35321032",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b9e6830a-7157-4b54-baa9-622222823496"
        },
        "item": {
          "id": "7612d626-6044-4edc-b41c-da8d9d623284",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fd2eab55-af18-497d-9cb8-88c2bf3e7290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec941db-d008-46b5-bdb4-ed950a03a699",
        "cursor": {
          "ref": "ab7aad45-cd69-4fe7-9a0b-7c3b59ca3c58",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "65307fe0-0765-40ad-8b5e-1549588c2c75"
        },
        "item": {
          "id": "aec941db-d008-46b5-bdb4-ed950a03a699",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "122dea86-2d8b-4baa-848b-6c8ea2fc3dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e37551-a174-4570-ba71-051edfccf2c5",
        "cursor": {
          "ref": "658efb38-1d6a-4343-9f9c-257bbc2da3ff",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a6b66f4f-6044-41bd-aedc-0a56f6bdfce0"
        },
        "item": {
          "id": "c1e37551-a174-4570-ba71-051edfccf2c5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c0113863-8cb0-4c26-ad48-34a968d8ea69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a7c00a-795f-4da9-87ef-671fd87458a7",
        "cursor": {
          "ref": "f3258d2f-8bef-4e5e-a7f8-99071efb5955",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3a09e807-73d8-4366-9aff-05d5b8df6314"
        },
        "item": {
          "id": "78a7c00a-795f-4da9-87ef-671fd87458a7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1d7a6037-9660-41f0-8d09-37da4238dad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7b67dc-c630-483f-8ee2-6266891d2b11",
        "cursor": {
          "ref": "f5199279-e7a4-4b86-b693-58f1280056c4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "69d20b3b-30ff-4baa-8641-2954ad7c9241"
        },
        "item": {
          "id": "fd7b67dc-c630-483f-8ee2-6266891d2b11",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e406a2f0-daca-4aca-b390-f0049f42b104",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "82de2095-50ef-42f7-a15b-4b51c5f600f3",
        "cursor": {
          "ref": "01add2e1-bc1e-4255-98a1-656e27356d13",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bfe095dc-b8bf-4717-9f21-6928edac1377"
        },
        "item": {
          "id": "82de2095-50ef-42f7-a15b-4b51c5f600f3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "83001a63-2c97-4626-83b7-7e0558aed104",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "6c0a50bc-881f-4082-ac90-02ce87e702fc",
        "cursor": {
          "ref": "8e29fecc-6a09-42bb-bed1-ec0aeeedac86",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "590e600b-b407-4041-b748-5a5bd46ad176"
        },
        "item": {
          "id": "6c0a50bc-881f-4082-ac90-02ce87e702fc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fa3ab17b-8b4f-4f87-af51-0141ce1f6840",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a66f5ce3-3e8f-46db-8e81-cf36c68ce76e",
        "cursor": {
          "ref": "90ebc7b7-67ad-4a84-8eb6-340846e9ef17",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2077e512-d114-47b7-8601-855e95a16298"
        },
        "item": {
          "id": "a66f5ce3-3e8f-46db-8e81-cf36c68ce76e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4ba4c18e-1ba2-47bc-a914-e5c59f4c115d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "da349a99-0647-4631-9126-7446966e7ced",
        "cursor": {
          "ref": "e3fe19de-0423-40ac-b1af-f093ab233115",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1924fc80-d526-43c3-9d96-ad232d33d3eb"
        },
        "item": {
          "id": "da349a99-0647-4631-9126-7446966e7ced",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "25f4f408-27d4-4be7-a9ed-96f1530d0ddb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "12a591f1-ffbc-4381-8fae-030e7296eb89",
        "cursor": {
          "ref": "20913e8a-2a5c-4443-940f-0ddd4d80a0ad",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4208bc28-b49c-4996-9308-9bf11f29f4e6"
        },
        "item": {
          "id": "12a591f1-ffbc-4381-8fae-030e7296eb89",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "717245cd-f13c-4f31-8e4a-cae7e43f92be",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "66fcde5c-d32c-48e8-baf1-27755985cf94",
        "cursor": {
          "ref": "8603adc2-8109-475c-8e45-87753156e451",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ee1b8425-df2f-44d7-8f16-7aaa98117194"
        },
        "item": {
          "id": "66fcde5c-d32c-48e8-baf1-27755985cf94",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f90e516a-70ef-4286-ae68-f79778a95b3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d129083-51ca-417e-9fe0-acee5ec97a22",
        "cursor": {
          "ref": "b0725022-e3e4-4e51-9c64-29122d5a2936",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a730f626-bf39-40e7-9c7e-9bdc9b8b5b19"
        },
        "item": {
          "id": "9d129083-51ca-417e-9fe0-acee5ec97a22",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2b7208dc-5277-4e83-856a-d58d162c14cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b82d90-1621-4890-8a73-b8d45d86dc11",
        "cursor": {
          "ref": "e2ee14a2-ef48-45e2-bafa-06d5f37e2a2d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1cc17f45-123e-4e8a-b27c-86e230437c1f"
        },
        "item": {
          "id": "61b82d90-1621-4890-8a73-b8d45d86dc11",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "057862b9-d5c0-4b9a-a8b0-83960b540933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55f4a4a-d827-43e4-826f-1909423398f7",
        "cursor": {
          "ref": "5171496f-173d-4f06-88f2-20d783789a8f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2b357f2c-e498-42e9-befa-2c6d59902435"
        },
        "item": {
          "id": "d55f4a4a-d827-43e4-826f-1909423398f7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "623c3e10-1268-4f6c-9d9e-f153b9c9b02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29494d09-a210-49de-8177-e9c215a18f60",
        "cursor": {
          "ref": "e1de00b3-7262-429f-ac10-25c579b750bf",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7a3775a4-0158-4278-88da-3a217c7d4af6"
        },
        "item": {
          "id": "29494d09-a210-49de-8177-e9c215a18f60",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e822a31d-204e-4b05-8928-5b8da94d731a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a714ff-508d-40cf-9146-5e69aea3d49d",
        "cursor": {
          "ref": "6e6f80d3-8dd7-44a4-acec-00fda0e3e7bc",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d9def0ef-0c5e-488c-b091-f889e2b3b22b"
        },
        "item": {
          "id": "45a714ff-508d-40cf-9146-5e69aea3d49d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee0f199e-97c4-49e1-8ff0-58acf2dc036a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3383ea42-3c80-4976-8225-a74533496a38",
        "cursor": {
          "ref": "1fa9b0a9-fb34-4c71-bb2c-9add70b69431",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aff69a49-59c7-4a1f-b615-71345dc8819f"
        },
        "item": {
          "id": "3383ea42-3c80-4976-8225-a74533496a38",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1bb70736-0c53-4dfa-8b09-0a091c3cd66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450f7ea4-3e3c-4cfd-97ac-dbc06cfc6cd9",
        "cursor": {
          "ref": "d78bb020-ce98-41a8-98e0-aefdcbf78c88",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5c363edd-972a-4579-8c4b-986d64d3e727"
        },
        "item": {
          "id": "450f7ea4-3e3c-4cfd-97ac-dbc06cfc6cd9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f2964184-9787-45a4-a06b-be298bf1e7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e434a278-b146-4e5a-9b89-88f566de9a2b",
        "cursor": {
          "ref": "69b8db34-6eac-4700-8b07-4ae40f727f1a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f5f35998-893b-4320-a1ca-804898b3fe4f"
        },
        "item": {
          "id": "e434a278-b146-4e5a-9b89-88f566de9a2b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9d4ccc4f-2c2d-4fb3-a8cd-eb963fc70ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0e47c6-460b-46d8-a004-26c9cdae532e",
        "cursor": {
          "ref": "1837acfa-c1a4-4567-ab6a-588cb05ec09c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ae8d0810-99b0-41d4-a62b-727d910fe539"
        },
        "item": {
          "id": "ee0e47c6-460b-46d8-a004-26c9cdae532e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f9603a79-8d1f-4959-80a7-8bd9da1382d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5475c43e-9b48-4d30-a77a-7d47bae44eed",
        "cursor": {
          "ref": "a1922d05-3205-4bd4-a27f-b048d574065f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a40f69d0-f0d3-4c46-a174-defa76c569a8"
        },
        "item": {
          "id": "5475c43e-9b48-4d30-a77a-7d47bae44eed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "92ca4141-cbfd-4cb8-801b-75e6924680cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86c8bd8-111d-4017-a8bb-185329de93ea",
        "cursor": {
          "ref": "43f270ce-1921-4fb2-87e8-58b9023afc21",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2cdd40b8-5f99-4f8a-bd92-5bb23d4c39b4"
        },
        "item": {
          "id": "e86c8bd8-111d-4017-a8bb-185329de93ea",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bad7d988-6e45-4b4f-89bf-189749d72abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4607de06-bb9f-441c-921e-a8e29e587e66",
        "cursor": {
          "ref": "aa8ffdfe-17fb-485d-a83a-d3a0c5d845ae",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a30442f2-ff1b-4bf4-90f8-12edde0871e9"
        },
        "item": {
          "id": "4607de06-bb9f-441c-921e-a8e29e587e66",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1c27d6fd-2c8e-4f62-b606-ef525f797777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a520f629-0a59-4efe-a1ad-4d5379b12405",
        "cursor": {
          "ref": "86e2b6c0-894c-4c0e-a64f-441a2fa90c80",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3c61478f-d838-424d-9cee-40bc6ccca1cf"
        },
        "item": {
          "id": "a520f629-0a59-4efe-a1ad-4d5379b12405",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6b9b16a1-9d64-4cb2-a544-95e8d761ed6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427fa245-f584-4c05-a191-6303c11c9d7e",
        "cursor": {
          "ref": "8d378616-f664-40b1-a3be-695f231bdd54",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5da8606e-33b0-4a90-a5d9-79dee20b8c7e"
        },
        "item": {
          "id": "427fa245-f584-4c05-a191-6303c11c9d7e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9e513c8b-3771-4686-abf2-77e8619e893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4257133-66c4-447c-9a17-9a10c865b9c6",
        "cursor": {
          "ref": "14c31d52-42db-48ae-ad2a-e3aab94e78a1",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1fe81e21-26bb-48ab-bdce-449eba103fb1"
        },
        "item": {
          "id": "a4257133-66c4-447c-9a17-9a10c865b9c6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "98c311ef-2cfd-4924-a5b7-519da28ff9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f459e7e-ccb9-4426-aa52-c54160ed480b",
        "cursor": {
          "ref": "9fab1175-df7b-41a0-a881-96cb7b78a9a1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4fbac646-2dc4-4d60-9aa1-3a627980ecfa"
        },
        "item": {
          "id": "1f459e7e-ccb9-4426-aa52-c54160ed480b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5dc4c4e1-2892-45b0-a5a6-044f8ba56ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e053f9-44fa-4935-b710-842d2a023344",
        "cursor": {
          "ref": "930b537c-3535-472e-a5a3-e32ac7fe4261",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ba839f4b-4f85-4f87-b33d-46775b52a39d"
        },
        "item": {
          "id": "69e053f9-44fa-4935-b710-842d2a023344",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d806c8ec-bbb7-4629-a22c-98a266a9470f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849a9b2d-49f7-49b2-b7fd-ec1784812263",
        "cursor": {
          "ref": "28fcdc9d-0d06-4a25-88fa-dd55ceec3e87",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8b50e527-ecd6-4896-958f-52f2d835b26d"
        },
        "item": {
          "id": "849a9b2d-49f7-49b2-b7fd-ec1784812263",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "87f1fed7-0293-45b4-b261-0c03ccd597c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2530d40-8aa6-4a28-9276-8fd6e9731cd8",
        "cursor": {
          "ref": "4f4e5c23-0b69-4b75-a8ab-03237eb89ae0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b829915f-6d2d-449d-9470-e4fadf8946d6"
        },
        "item": {
          "id": "f2530d40-8aa6-4a28-9276-8fd6e9731cd8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b6309cdd-a681-416f-adfe-5a6cb070816e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cdf2b8-9cba-4cb8-8a6f-349276ef989e",
        "cursor": {
          "ref": "57f7bf1c-3ab0-47eb-9c7d-066f64997d29",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f826f5dc-b9e5-4677-88f4-b7d9be4cc603"
        },
        "item": {
          "id": "e5cdf2b8-9cba-4cb8-8a6f-349276ef989e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6bac3b5e-2590-446b-91e5-6fae02df8bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1fc768-8893-4ad9-8902-74d395518acb",
        "cursor": {
          "ref": "4a58c114-8426-4d07-9775-824a68b33af1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b6861dd6-6d64-4ca4-8447-962204c1619c"
        },
        "item": {
          "id": "be1fc768-8893-4ad9-8902-74d395518acb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "091f53f9-ad46-48da-9162-f55b33b87498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030df70b-236a-4193-b9c2-0862eea9ffe2",
        "cursor": {
          "ref": "ac5964ff-7ec7-409f-b28f-0770a27850fd",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4a26262b-5983-4278-90f5-0e77dec3b605"
        },
        "item": {
          "id": "030df70b-236a-4193-b9c2-0862eea9ffe2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "16d3b211-b232-4407-8b96-80088c590101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e941ff85-7e26-4979-a343-a589a135c09f",
        "cursor": {
          "ref": "78a71658-e0e6-4099-bccd-927f4f21b851",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "74c9b803-9829-4b51-a9dc-601bf78bdb9e"
        },
        "item": {
          "id": "e941ff85-7e26-4979-a343-a589a135c09f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "83db015d-2c65-4922-9a0b-9b4189a6bf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f876b4-324d-49b2-8dba-8ae54571890d",
        "cursor": {
          "ref": "a22c8863-0b4d-490d-b813-d8bdf72d6f9c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d1d08740-3e0c-4b2a-87e2-72086f2d6690"
        },
        "item": {
          "id": "08f876b4-324d-49b2-8dba-8ae54571890d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "55f5dc11-46e9-4d30-a490-50dd5f71956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12537fe6-5941-4c27-96a5-c1aa4c5f0eee",
        "cursor": {
          "ref": "d4d8d84d-c09d-49eb-a121-55c21e2e7b46",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8cb45549-06d4-4878-ade4-f9050fba773c"
        },
        "item": {
          "id": "12537fe6-5941-4c27-96a5-c1aa4c5f0eee",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "658f8570-b6f5-4ac2-bc84-28cca5604d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652bb790-cdf3-47b8-92d9-e261f653e509",
        "cursor": {
          "ref": "2f94635c-93cf-488d-acd8-ae75cbc78d6a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "29f17d34-5413-4282-9324-5d2a0077ae0b"
        },
        "item": {
          "id": "652bb790-cdf3-47b8-92d9-e261f653e509",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5820ffed-e45c-4f42-b3aa-4f905fafdeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19e10a2-a70c-4d2d-9d9b-2839457b8179",
        "cursor": {
          "ref": "07d372d8-b937-48e7-9c52-252359c5faeb",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "da42db07-b010-41c7-a602-247749da661e"
        },
        "item": {
          "id": "a19e10a2-a70c-4d2d-9d9b-2839457b8179",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "aab571ed-2024-4826-9b3e-4252d7358bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefaab84-1d5e-46b6-9ba7-1e3f8dd54118",
        "cursor": {
          "ref": "f65966b9-2488-4047-b9d6-48819017fe87",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a111dd61-afb9-4967-bba1-3cd8dd85dd04"
        },
        "item": {
          "id": "cefaab84-1d5e-46b6-9ba7-1e3f8dd54118",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "93401e53-0dd4-4ac0-921a-e14d0fd9cc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a50c0f-8a68-4714-9113-e8a001370db3",
        "cursor": {
          "ref": "7dba395f-637a-4c0c-b24b-236ca2fdf8d9",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fa9fedf3-c77b-44ff-a056-11e9b2b8221d"
        },
        "item": {
          "id": "f4a50c0f-8a68-4714-9113-e8a001370db3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4656d707-9f3d-4243-b7e3-5b1a14414e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b283ee-be52-431b-bd69-a6f312292711",
        "cursor": {
          "ref": "a895ac59-1c13-440e-a95a-502a37144844",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "96dea429-8682-47ba-bfed-e7e3d335d150"
        },
        "item": {
          "id": "97b283ee-be52-431b-bd69-a6f312292711",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c4daca28-1e53-4d8c-b056-1a145f93203f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf77d5d3-54b7-4c23-914f-99122936338a",
        "cursor": {
          "ref": "9235cdd0-74b7-4c0a-b41f-f1d86a8768d5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3f5b959f-a922-4072-802e-447ad6c773a7"
        },
        "item": {
          "id": "bf77d5d3-54b7-4c23-914f-99122936338a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "57d88905-a5ce-42bd-96cd-295924a32de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59058a5d-b310-490a-81d8-8bffccf6bc85",
        "cursor": {
          "ref": "689f332f-6b20-4faa-af8c-40d897394aa1",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6019e1b3-79af-49d8-8ea8-5176ea6390aa"
        },
        "item": {
          "id": "59058a5d-b310-490a-81d8-8bffccf6bc85",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d28d6ad9-3119-404a-bfbb-7720e5227645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5c5c3c-0aee-43a7-aab7-5e50544af39c",
        "cursor": {
          "ref": "6792ad6d-1f91-4c01-9025-5488f0a16343",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "acd68f98-e573-47cb-9cb8-f96152323f06"
        },
        "item": {
          "id": "7b5c5c3c-0aee-43a7-aab7-5e50544af39c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "60c5e1e6-a06f-4b05-a607-1ede65a4a63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dd2261-e2bf-4f93-97e8-005fe6a3141a",
        "cursor": {
          "ref": "08c6f063-9b36-4cf6-8867-850d8f5f935d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4367df4e-683a-4203-b838-8b590e598f7b"
        },
        "item": {
          "id": "09dd2261-e2bf-4f93-97e8-005fe6a3141a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1295da2d-a0b4-4c68-8e25-6c7d3d6b5249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d710164-a212-4d6c-b4e0-52680ebcb6b6",
        "cursor": {
          "ref": "48ba214c-f566-43e3-89a9-034b881e75f6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "36120b82-1ceb-4d10-99f7-555247a5d11c"
        },
        "item": {
          "id": "3d710164-a212-4d6c-b4e0-52680ebcb6b6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4a7aa962-7de1-4dc0-ad3b-4f01afde6753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3822fd4e-2b50-4de7-be79-1d021f346b9c",
        "cursor": {
          "ref": "120d9c7b-2ba3-41ef-bddc-c7483f4cf51d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "07df6c19-f690-45a8-95cf-bffa4e946905"
        },
        "item": {
          "id": "3822fd4e-2b50-4de7-be79-1d021f346b9c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ee65494f-e6db-4b49-8296-57973f09e892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9963883a-4b13-4747-b046-bdff54d69cc0",
        "cursor": {
          "ref": "3a852084-7d44-4f5e-baba-faeda4a56978",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "95b5f775-dc5f-4e08-91de-c3a407529538"
        },
        "item": {
          "id": "9963883a-4b13-4747-b046-bdff54d69cc0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "433392a5-7bed-46ef-84aa-79659a3116a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137db198-8e9b-4be2-a0d1-6e7acf651666",
        "cursor": {
          "ref": "e9e2e4ec-a613-44c0-a6f3-f84a95554eca",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cda173cd-ece6-46ed-8820-c2177c2edccc"
        },
        "item": {
          "id": "137db198-8e9b-4be2-a0d1-6e7acf651666",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "43b483f6-6f30-46d0-a0bf-aaf488790bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c338f2c9-2424-4143-965a-8cb217372c36",
        "cursor": {
          "ref": "3b53d649-e169-4ff5-8250-d25c1da01126",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2f2686e3-c414-460d-bf9d-dd1d3fd16091"
        },
        "item": {
          "id": "c338f2c9-2424-4143-965a-8cb217372c36",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3ab44f39-6fe0-4e6d-bfe1-3f9f5d29eac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8602e9e-c698-40a6-b2b9-e144625f2ddb",
        "cursor": {
          "ref": "cc86184e-f219-4916-8dfe-368468152f13",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0bdc1f23-809f-46e0-b972-dd45fd1002bb"
        },
        "item": {
          "id": "a8602e9e-c698-40a6-b2b9-e144625f2ddb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5bedcd59-471a-40f5-969c-084f9b48332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be80a13-7c29-4672-9814-c24e51b40a2c",
        "cursor": {
          "ref": "735495fc-50de-4264-9601-c026615fc441",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d58540c4-b2b5-4959-9103-68d98b71e8f7"
        },
        "item": {
          "id": "1be80a13-7c29-4672-9814-c24e51b40a2c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "07b8b11b-7ab5-4d83-9d13-9a55e2fd8f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a172ed4-7268-42db-81d7-6ad61254fd74",
        "cursor": {
          "ref": "88c107d4-1d06-4e3e-b1d6-d26f58097c5c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "78699f59-258a-43a9-8424-2f69dd20a75e"
        },
        "item": {
          "id": "1a172ed4-7268-42db-81d7-6ad61254fd74",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ff0a7d22-fca9-4eb9-91d3-6e24375082b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ea5a69-a4a8-46de-9edf-afdc860b0a34",
        "cursor": {
          "ref": "79e32cdf-18da-4df3-8597-69f98592bc82",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e9030db3-e0d4-405f-aa6b-bbac53339f92"
        },
        "item": {
          "id": "20ea5a69-a4a8-46de-9edf-afdc860b0a34",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8c83ca82-9cb5-4617-a183-2d3fd3a91304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c5c2a4-68a1-4f12-bf85-32f2ed5a6e64",
        "cursor": {
          "ref": "e7faf7aa-f9f7-4120-b0cf-e48a16a5496e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e3e83d8d-b548-4585-a748-cf7b2d8e8c90"
        },
        "item": {
          "id": "d9c5c2a4-68a1-4f12-bf85-32f2ed5a6e64",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3020aa59-9383-4bef-acef-ed778e85b051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7d109c-2b2a-48a2-b692-c583f4c9c4b1",
        "cursor": {
          "ref": "1c99de3b-a0c4-4e2a-9932-26ff355dafc8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "738a5a05-1bf0-431a-aec2-e7e902d71529"
        },
        "item": {
          "id": "5d7d109c-2b2a-48a2-b692-c583f4c9c4b1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "653de7a0-43c1-4f62-8d7d-7f8c4fe1b303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a7131e-04a8-4514-bcfa-ca74d96aabc7",
        "cursor": {
          "ref": "316d601c-403f-44a4-ac93-6879f96dd258",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "801cc47c-a038-4ed6-9c72-144d9c520d8d"
        },
        "item": {
          "id": "80a7131e-04a8-4514-bcfa-ca74d96aabc7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4fcfe0e8-f58a-46a4-9cca-7ae1e342042d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8b8a10-3a95-40e2-b640-a4fb69348749",
        "cursor": {
          "ref": "78041cbe-d168-441b-98fc-b3b5c0b6d0bf",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bf4fd634-dfa3-49ce-bbe9-c7d2cb0416df"
        },
        "item": {
          "id": "df8b8a10-3a95-40e2-b640-a4fb69348749",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "17a29f9d-7fc3-4e96-9d50-e907d502c48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb889c95-5288-4de8-9b8c-0c5e027eb796",
        "cursor": {
          "ref": "86a6fada-acc1-4571-873e-ea979c55d22c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0cc5c77d-e046-40df-b482-2c7a0879a529"
        },
        "item": {
          "id": "cb889c95-5288-4de8-9b8c-0c5e027eb796",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7f8aba7f-bb40-4510-b77b-a97c36e2c736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ae0b9e-4e51-45c1-98de-fb49f8f263cc",
        "cursor": {
          "ref": "bca18f60-098e-4e68-91a4-21859f6355d5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "488682ca-315a-4bec-8cad-f245b62cc8e7"
        },
        "item": {
          "id": "35ae0b9e-4e51-45c1-98de-fb49f8f263cc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a0aa7d82-d27c-4079-8f22-49794647cb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b368ac0-57b3-4131-be34-0daa7f46a204",
        "cursor": {
          "ref": "854befe9-d41d-4fd0-bc25-cbfffe840ef6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e3a61202-1b97-4334-a09b-442bc8286602"
        },
        "item": {
          "id": "1b368ac0-57b3-4131-be34-0daa7f46a204",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e9f9b9c9-5a2c-44dd-8dec-6cf3d98ae984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24edea6-e40a-4810-a940-4c12ea785748",
        "cursor": {
          "ref": "d6a4dba0-0eef-4cf2-96c3-87f24acb282a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "88aa32d6-532b-4b37-9902-819abfb917c6"
        },
        "item": {
          "id": "a24edea6-e40a-4810-a940-4c12ea785748",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2fa2aff8-8161-4155-bc46-4856d9a761bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928450f6-e78a-4b51-9309-2288358ae97e",
        "cursor": {
          "ref": "2f43885a-c731-46d9-9134-dfb7b5936415",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "14927f78-7281-4490-b9c3-4c90282dd0eb"
        },
        "item": {
          "id": "928450f6-e78a-4b51-9309-2288358ae97e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "522674e1-03ac-4e4c-bd79-1ec948483454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d00297-b4af-42c7-ba4b-83c00d21af9d",
        "cursor": {
          "ref": "fdf84cca-3d25-456b-9fbc-9cfa690444dc",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "de4cc3af-3f83-4357-80e5-413d63ca20d1"
        },
        "item": {
          "id": "77d00297-b4af-42c7-ba4b-83c00d21af9d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d11a30e6-68e3-436a-a2c5-c7ef069a309a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daef189-4b7e-414d-ab07-914661377f36",
        "cursor": {
          "ref": "6edd4797-4186-4590-a8ac-173e9b9eb59e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3de72626-1e14-459e-a13b-532018bca333"
        },
        "item": {
          "id": "7daef189-4b7e-414d-ab07-914661377f36",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e756a06b-a489-4917-9a7c-7cc09f3535ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92004ecb-41e4-4e9c-90a2-ba2ef091af13",
        "cursor": {
          "ref": "e382fd42-597a-4c16-9acd-7709310d1806",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "47a00781-97cd-4356-8d87-b8ad6e1d27b5"
        },
        "item": {
          "id": "92004ecb-41e4-4e9c-90a2-ba2ef091af13",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8e67321c-c192-490c-8fe4-2b7c1fd3d4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbe7f1e-2e39-4cf8-9c5c-9cf7fcddfa46",
        "cursor": {
          "ref": "52e7e052-299b-46c6-8d81-314bd8067a81",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3d12fd21-cf21-49fb-be2b-1bf6edc3c58a"
        },
        "item": {
          "id": "bcbe7f1e-2e39-4cf8-9c5c-9cf7fcddfa46",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d76e4386-57a3-4cce-abe4-c2000383bf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52d6cd1-edd4-4df0-b2fa-2378cdff18b1",
        "cursor": {
          "ref": "173f1ed0-d404-416d-818b-df54eecadb1f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1bfa044c-aec3-4590-a074-828b1fcfb3d5"
        },
        "item": {
          "id": "f52d6cd1-edd4-4df0-b2fa-2378cdff18b1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "94776951-74f3-444f-b025-77a4517d68a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9b82cc-58ec-42c5-a35c-665211b11d81",
        "cursor": {
          "ref": "688440db-3f5a-4fe5-b33a-dfb6e0b52111",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bb2a1d92-b3ea-43ac-94ca-b0a001a2b9ec"
        },
        "item": {
          "id": "3b9b82cc-58ec-42c5-a35c-665211b11d81",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "837f7aa6-811d-40c0-92d8-9470b9d71784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d1692d-6385-40ad-88dd-6fc58b6e1910",
        "cursor": {
          "ref": "26d94397-4131-47b1-83bc-fc21ed351955",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e3f0cabc-7616-47d0-b271-58ac04c132be"
        },
        "item": {
          "id": "79d1692d-6385-40ad-88dd-6fc58b6e1910",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "857fc5c4-a0ee-416b-b373-7a6bdea2a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12544fd3-8ab2-48a1-8982-b7d557e781a5",
        "cursor": {
          "ref": "6f6c33b9-fd75-498c-8fa9-5eb33ec6bb33",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4a754970-6b6a-44d7-b82c-97a673554fb4"
        },
        "item": {
          "id": "12544fd3-8ab2-48a1-8982-b7d557e781a5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f854c4bf-5fa7-4188-ab5b-d2cfddb0a829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2951ae0-6fa5-4e5d-b946-6e1313fb1a7a",
        "cursor": {
          "ref": "096cacd0-f11d-4c6c-8e76-b124aec51052",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6b95c22c-ce5f-4fff-a9c6-d3f2512970ce"
        },
        "item": {
          "id": "f2951ae0-6fa5-4e5d-b946-6e1313fb1a7a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c5823fc6-f461-4732-9b9b-024f0a23bea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec16d88a-6f37-4012-9839-440bb5268403",
        "cursor": {
          "ref": "62d4dda9-1f6d-4f6e-92e5-c6ba159f3d39",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1c222c86-2b41-43da-aa33-87a76a2029a4"
        },
        "item": {
          "id": "ec16d88a-6f37-4012-9839-440bb5268403",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "04548a0d-b28f-4bd2-85aa-6cee6b270012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0682ae7-7f48-4c87-8528-3c180177cff9",
        "cursor": {
          "ref": "d2f1248e-553a-4a5d-ab53-fc7fa1fb1a88",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "286d01a6-b477-4524-9612-c77196c260ca"
        },
        "item": {
          "id": "b0682ae7-7f48-4c87-8528-3c180177cff9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "15fd23d2-6f60-43f5-ae0a-95a9a06af02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69df8409-6bab-41f7-bd2a-648b0dc7c70d",
        "cursor": {
          "ref": "dda4c490-71d6-4ef3-a86b-44ce95010ab9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0fd2a746-f206-44b6-b0f6-223d3fde1cf1"
        },
        "item": {
          "id": "69df8409-6bab-41f7-bd2a-648b0dc7c70d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "96f8a9fe-7591-4e48-9f0c-8fbe6b10b85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f8ba47-a24b-4cd8-8781-e073b30e8c9b",
        "cursor": {
          "ref": "10e84a38-73fb-4128-b465-c9c02c050fed",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "952c5f27-b2b2-44e3-97b4-3de645e84896"
        },
        "item": {
          "id": "f7f8ba47-a24b-4cd8-8781-e073b30e8c9b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0378044f-6001-4761-b169-4d7e64f0f58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2041f3-e268-4e8b-8c15-97beb18ed26a",
        "cursor": {
          "ref": "6bc84f1c-f051-4367-acaa-e127b2b698f9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "55982118-eddc-4386-b5cc-38ef7fead07e"
        },
        "item": {
          "id": "0e2041f3-e268-4e8b-8c15-97beb18ed26a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "acf202d2-b7e8-4cb9-bc3e-b1a4caab0d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e27c91-faea-4eb2-949c-6c3e1148fa24",
        "cursor": {
          "ref": "047389e7-419b-4e8b-84b7-86234c9ea97a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "301d0c63-1c4a-4191-bffd-d0b30eaa7dcc"
        },
        "item": {
          "id": "20e27c91-faea-4eb2-949c-6c3e1148fa24",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e98f92d1-37af-4298-ade6-e719a59ee99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d3b173-9b11-44aa-95f8-61516660db3e",
        "cursor": {
          "ref": "2f436621-ad91-491a-8602-bf9783183676",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "68e6753e-fe34-4203-9de8-d2d4dec23b69"
        },
        "item": {
          "id": "53d3b173-9b11-44aa-95f8-61516660db3e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "67216a62-fc61-4760-b5bb-eae8c2c7d8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee006b4f-f082-4794-82ed-bb2e47ad17ad",
        "cursor": {
          "ref": "7e5341bb-2388-4456-9895-bb7c92c6be63",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cc47d82c-81c5-4725-af6d-2ba6e113da57"
        },
        "item": {
          "id": "ee006b4f-f082-4794-82ed-bb2e47ad17ad",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bb9fb143-fc88-4733-af80-1aa0d288d034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be475d3-517e-4a7b-8a21-84c5340b96b6",
        "cursor": {
          "ref": "f324e963-eb4f-4eb5-9cfe-e0872fd075fa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "796c638b-9444-4f35-b8a4-05259b1af598"
        },
        "item": {
          "id": "2be475d3-517e-4a7b-8a21-84c5340b96b6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b98d1d5a-5bc6-4d17-bd9a-97f12f900fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86aab13-56b7-4df4-8576-4d45fbffc59c",
        "cursor": {
          "ref": "76cfe1b9-e27a-48a9-9c95-c2139c2bb271",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "278ff24d-1aee-4fa6-88d8-ca29c707cfb0"
        },
        "item": {
          "id": "b86aab13-56b7-4df4-8576-4d45fbffc59c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c6d38896-b0c9-4e76-832e-fde597bd7335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b37797a-9601-4991-b0bc-e508332bf96c",
        "cursor": {
          "ref": "984940c0-d906-496f-89ea-60987ff35617",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3786e0a3-2054-4251-94d0-ebafd82c8f62"
        },
        "item": {
          "id": "7b37797a-9601-4991-b0bc-e508332bf96c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0a94fdb6-7c38-450e-aa52-d4eb1a1cca1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd31c6bf-934a-4de2-a9ef-4cfd6481edd6",
        "cursor": {
          "ref": "0eddc30f-40bb-4575-b971-bf840619d35c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8cf6586d-e3e9-4db3-85a0-b9dd6a7fd8ed"
        },
        "item": {
          "id": "bd31c6bf-934a-4de2-a9ef-4cfd6481edd6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c13ac2e3-1e1b-46fe-be94-62e09ab386d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8275bd9e-3534-444b-af3f-1ed8f30e9428",
        "cursor": {
          "ref": "43162829-2551-41e7-8000-f2eeecfc1e19",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3727703b-797d-4233-a3b3-f5019bdbc65c"
        },
        "item": {
          "id": "8275bd9e-3534-444b-af3f-1ed8f30e9428",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a8eb9eed-1455-42c7-a2ac-9e89346c3c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8679c2a-9d8d-4a83-ae80-3c3e423cfe1b",
        "cursor": {
          "ref": "5242416b-35d6-4789-ab7b-12a57754c30c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "abc7d769-fa43-4bd5-81d0-f6d27bd6a63b"
        },
        "item": {
          "id": "a8679c2a-9d8d-4a83-ae80-3c3e423cfe1b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2d9751d8-2f17-417f-bc79-463c2f08af2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e27231-8be2-4694-a9b4-a703625d4bc1",
        "cursor": {
          "ref": "3b3ba7e3-ce43-49fb-99d5-608444998c08",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6ac530a9-8258-48df-a9e9-67baa869d82d"
        },
        "item": {
          "id": "53e27231-8be2-4694-a9b4-a703625d4bc1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2be9a76e-0884-4ba0-bfde-9b6e07e25531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41867969-acf4-4ad6-b35f-a9c20553d43b",
        "cursor": {
          "ref": "c4fe9619-7217-4e0d-8457-b2734b37335b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ae2d9367-9f4e-488b-b3ce-cb14ffe63829"
        },
        "item": {
          "id": "41867969-acf4-4ad6-b35f-a9c20553d43b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "75aae8af-4690-4beb-a403-7c0e2f3ea57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5690c6c5-e7c1-4892-9dc3-e76781e49954",
        "cursor": {
          "ref": "3d7ee727-0264-479f-a346-5f67393879ce",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "455655e2-7cd7-4ca2-a1de-28629ffe22db"
        },
        "item": {
          "id": "5690c6c5-e7c1-4892-9dc3-e76781e49954",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8bc419f9-54dc-4039-9800-b03af623c1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea74209-0523-468b-88f4-83d1113eacb7",
        "cursor": {
          "ref": "89a29d17-d47a-48ff-80d3-64e1f0a52a8a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d9a01f10-eece-44e8-809a-c7561ffabb9c"
        },
        "item": {
          "id": "aea74209-0523-468b-88f4-83d1113eacb7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bf7ea2a4-2ee1-4c77-9573-c0dfcb0a2e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5975e1-3134-441a-bdad-66f24491b70e",
        "cursor": {
          "ref": "8d4ec3a3-ad2c-4419-8bc0-8dd6e3d6ac1e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "284c69c7-0304-4aea-8974-19b6dfe07c58"
        },
        "item": {
          "id": "0e5975e1-3134-441a-bdad-66f24491b70e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "38e0981b-023f-4a45-a635-5a5c7c64d015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57dfff-9d74-4cd6-b9e5-60eaf9ffaf0b",
        "cursor": {
          "ref": "eb714381-3930-451e-822f-47406dcaebc7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7e0fce68-3175-4b63-8bcf-2acec39e8799"
        },
        "item": {
          "id": "7d57dfff-9d74-4cd6-b9e5-60eaf9ffaf0b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b8897b0a-2425-46fe-bfbb-38907f220a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d0f582-9dc2-4a22-adfa-3a0b995d73f9",
        "cursor": {
          "ref": "a89782ec-4107-4a63-8ea7-20af03eb25bd",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fc1f382e-e73d-429f-828e-f402bab54d05"
        },
        "item": {
          "id": "72d0f582-9dc2-4a22-adfa-3a0b995d73f9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "503dbfe6-2de9-473c-9759-cb61c8d37d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8666af0-4151-4fe3-b3b1-48a51383b863",
        "cursor": {
          "ref": "067b6893-b6b3-4f9d-b83f-30fa27a6744f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "02b91a62-d725-4390-9a12-c3be627b3590"
        },
        "item": {
          "id": "a8666af0-4151-4fe3-b3b1-48a51383b863",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d078f45-f943-4835-8f91-531dca1b46e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea43a5-0676-4dc9-a5c6-73d87de9cca1",
        "cursor": {
          "ref": "d5bfffc0-9aef-486f-b47b-1f68f1dc14c3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f3a8d32e-cbad-4249-a9fd-0adb1d132093"
        },
        "item": {
          "id": "4eea43a5-0676-4dc9-a5c6-73d87de9cca1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6604dc8d-7285-408c-9e2c-b327c1560be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2d01cd-f02a-45b8-9208-4b39133a6570",
        "cursor": {
          "ref": "5983fd94-58bd-49da-842d-cf8311fc4ef2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3b49dc33-b0d8-4b2a-acbd-e63cb7404991"
        },
        "item": {
          "id": "6f2d01cd-f02a-45b8-9208-4b39133a6570",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a8639de3-394c-43ff-ab6d-dc491662ae7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9c198d-e8fb-4af4-9b81-2c0e152a8096",
        "cursor": {
          "ref": "0a180a21-96a0-493f-b465-c13e68563ff2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e51f4d33-000e-403a-a83a-c0dd6bc45949"
        },
        "item": {
          "id": "0f9c198d-e8fb-4af4-9b81-2c0e152a8096",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3c3b0092-7975-42f5-9306-245e5fb0540e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575d91b5-28fb-434b-9ed5-74553e9b2e21",
        "cursor": {
          "ref": "9ab39b5b-886e-4fee-b957-030f745b4bb8",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "81cd65e2-65fe-457a-875b-9b3d103a4f22"
        },
        "item": {
          "id": "575d91b5-28fb-434b-9ed5-74553e9b2e21",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "83b6c6f2-c125-486d-8623-3bf49014bdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2dbd50-cd82-4c13-9078-0cceab6b9b8e",
        "cursor": {
          "ref": "d8fcd3db-82ac-4cb1-aca6-da0494b24dfe",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "63645f67-d045-4817-b747-e302632df0d0"
        },
        "item": {
          "id": "6c2dbd50-cd82-4c13-9078-0cceab6b9b8e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "26418b7e-4f24-4210-b80c-16a023f8d27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e13969-b931-4bb6-a126-fe3aa5a020e4",
        "cursor": {
          "ref": "8a9ff9f8-6c5a-4fcb-aa62-6fe1225e2e37",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "918dcf66-462f-45ce-9549-40057cbb0324"
        },
        "item": {
          "id": "b0e13969-b931-4bb6-a126-fe3aa5a020e4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "56f3f926-bb10-44a2-93c7-d993fad54a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9192e102-55c2-4e5c-943d-3cc8732cda19",
        "cursor": {
          "ref": "4b2ee8f3-d325-4cc2-92c7-3469c0bb4269",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9df3643a-1d7f-4c1a-a733-891dace1f217"
        },
        "item": {
          "id": "9192e102-55c2-4e5c-943d-3cc8732cda19",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2e65f388-5bc6-411b-b624-10137d0e8542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4985c0b3-5749-47f4-9efb-d19c17cf1d62",
        "cursor": {
          "ref": "446414fe-4328-4ec4-b43a-0680d01e1b52",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc2b7fdc-d58c-4cfe-a657-72088dadf394"
        },
        "item": {
          "id": "4985c0b3-5749-47f4-9efb-d19c17cf1d62",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9152ad69-3ce4-4157-ade2-956e0993fb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe054cf6-a5bb-4eca-b818-d2fc8e20b2db",
        "cursor": {
          "ref": "e9bbad33-77d6-44a7-8964-77b62db3cb00",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b99f936b-ecec-4b94-85b2-6d9df36b9602"
        },
        "item": {
          "id": "fe054cf6-a5bb-4eca-b818-d2fc8e20b2db",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6059a569-872c-49bb-bd83-c86614c0e3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c79ba0-225c-47d1-85cd-6632a7fc0d40",
        "cursor": {
          "ref": "69bbf347-95f0-4530-8927-3528cf747ebc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "568e1746-ba10-48e4-977c-875f754e5352"
        },
        "item": {
          "id": "34c79ba0-225c-47d1-85cd-6632a7fc0d40",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4c2b42f3-6b00-44bd-964a-9aaae194ab81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac07f274-9b22-4f35-8e8a-aa4f64bff8f0",
        "cursor": {
          "ref": "d7b6f6f0-b677-42fb-a97e-84c45b5898b9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1884c228-d03c-45f5-9aa9-fff805b25260"
        },
        "item": {
          "id": "ac07f274-9b22-4f35-8e8a-aa4f64bff8f0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f0456384-ecf5-4ec3-afae-78b05a8f243d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fca429f-899b-4a50-a2f8-dfb63a0cecb7",
        "cursor": {
          "ref": "f6698581-a29c-4a43-b48c-8036b435e58d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8dd90d5b-bfd6-44fd-813e-0da6ae1a8dde"
        },
        "item": {
          "id": "7fca429f-899b-4a50-a2f8-dfb63a0cecb7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "26307036-2457-473b-b9e4-88acdfb46424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0556b6bf-bab4-4f7d-84ca-be5771296fed",
        "cursor": {
          "ref": "3cdd8acf-e47b-419f-9ce3-e149bce765b1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f020f7c6-8cff-4dd8-b30c-a0a8c9ccd2cc"
        },
        "item": {
          "id": "0556b6bf-bab4-4f7d-84ca-be5771296fed",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2c64c4ea-5b4e-4431-bd70-a3ea95440e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5338ebef-f239-4fc5-a7b9-a25eee86bd85",
        "cursor": {
          "ref": "a1f1beb9-436e-4d41-a762-f6a550658ebb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7fe2a715-09a8-4f67-849b-af1adf0db0c9"
        },
        "item": {
          "id": "5338ebef-f239-4fc5-a7b9-a25eee86bd85",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cc75168d-7b02-4f45-9a6d-355120da1883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c73f9a7-4d9f-4aa4-bed0-971fbda592f4",
        "cursor": {
          "ref": "14aea56f-3df5-4c3e-80c1-3eb1ffd13234",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "03a74ef4-d0d4-4606-bf2f-0e1cd542c8e8"
        },
        "item": {
          "id": "8c73f9a7-4d9f-4aa4-bed0-971fbda592f4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bce75cd4-3ad0-4b8d-b531-30b882025d5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d072b61-0b98-4e87-9503-3906408848cd",
        "cursor": {
          "ref": "26b40be7-b2a6-45f2-a15c-b4ec9d750715",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dc30caf9-79cd-4312-b746-bb79d3c87ab9"
        },
        "item": {
          "id": "6d072b61-0b98-4e87-9503-3906408848cd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "df76df4e-2503-4bfd-98c5-5bf618f8b87e",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed85668-0ba0-475e-983f-9c68139c407a",
        "cursor": {
          "ref": "f2d77c7a-2961-4a58-91c3-18bbf5a4a8d1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1aa4006b-0aaf-49c7-818c-95ddd90d32bd"
        },
        "item": {
          "id": "eed85668-0ba0-475e-983f-9c68139c407a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "25247f68-508d-440f-a11f-209e547a8751",
          "status": "OK",
          "code": 200,
          "responseTime": 2843,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e26ba6-728a-4e88-9eb2-6f190c4cdfc0",
        "cursor": {
          "ref": "1aba788f-9242-46d4-9125-ebb56e6d7c9f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a40ff946-0944-46ca-ae3a-77625455167a"
        },
        "item": {
          "id": "65e26ba6-728a-4e88-9eb2-6f190c4cdfc0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "370f8d1a-1bb4-412a-abe0-f75e00999b4b",
          "status": "OK",
          "code": 200,
          "responseTime": 2886,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "478d1e7a-7d66-4549-8fd4-30098086e98c",
        "cursor": {
          "ref": "0ddc5cbd-8c19-4e39-9c33-9f35d7aa79af",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6079c4d6-2ec1-4981-90f6-3e5e535298b4"
        },
        "item": {
          "id": "478d1e7a-7d66-4549-8fd4-30098086e98c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3a907289-35a4-4ee3-89d4-a83114e523d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478d1e7a-7d66-4549-8fd4-30098086e98c",
        "cursor": {
          "ref": "0ddc5cbd-8c19-4e39-9c33-9f35d7aa79af",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6079c4d6-2ec1-4981-90f6-3e5e535298b4"
        },
        "item": {
          "id": "478d1e7a-7d66-4549-8fd4-30098086e98c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3a907289-35a4-4ee3-89d4-a83114e523d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f7dc47-3528-4e92-a2b5-8c6983807567",
        "cursor": {
          "ref": "3c7ddfca-d25b-4ce2-8d33-e10143edbc05",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0317dc8d-5d2a-41bf-9d6b-9184d820b7b9"
        },
        "item": {
          "id": "23f7dc47-3528-4e92-a2b5-8c6983807567",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3f545675-6a33-421c-9993-227488c5adfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9452293-c693-41bc-ac76-89078b622b12",
        "cursor": {
          "ref": "fbc6d6b5-0168-4bb7-a94d-112ee67ec498",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "14efcf2f-0562-4442-b793-52e92daa6899"
        },
        "item": {
          "id": "c9452293-c693-41bc-ac76-89078b622b12",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a8eaa539-012d-42c3-9334-ffbf241f76b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}