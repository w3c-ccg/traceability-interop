{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "41abedb6-6b18-499a-8537-1f7ad2fa7aed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3724f2c0-35f3-4c30-944c-01d40216990d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "276a870d-8978-42ce-8112-8fbfdec32947",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4b22738c-0774-401c-897c-b2805682f187"
                }
              }
            ]
          },
          {
            "id": "288ff4ee-f35f-41ef-8e62-04533d71e517",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "707fb657-0553-4266-a4da-0a3c078ba388",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "052fcd7a-635d-4435-8772-683bc6795b58"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "74f05a20-9e34-47c0-a1c9-9fd20e56c0a2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6bc5d6b3-f288-4c30-bdb4-5703f080569d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1155a116-129f-4273-a8df-982fc9bf1426",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19dbad77-9349-43e3-bf19-b35ae22960b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c109e63-df60-4c3e-9c8e-5bd3f00eb4ae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b893e52b-37fb-4b23-9dd3-b5f5f9ce8a53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d44377a0-1820-4d7e-93b1-cdef5c89ae89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af060c03-2537-4157-9b0d-247b206e39fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06af5664-0140-46a8-beb3-2efe302dc497"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb16e25b-8fa2-4f4b-97f4-b3089460debd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "88f66ceb-f02b-455d-a46f-a6797ae4608d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c48b8d71-c98b-4b90-afbe-82434004e18a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb935629-1446-4fbc-9127-947fd5391437"
            }
          }
        ]
      },
      {
        "id": "1742218c-df78-4b8b-86a9-97681913b960",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "59c03bde-7046-4223-8233-5f37576cf118",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab437e85-4dc3-49f4-b2ac-051cfe38c6f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc3a3e0b-11e2-40c0-a63d-ecdbb90380b6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8d5caa-fd93-4a0a-b175-9b48d38871ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1963ce93-e698-42f8-bf5f-a0f16331b829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b2de1d-4966-44a7-8b9f-00bbb14a2228",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521b1c97-cdf4-4292-86a9-bdabce78163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2180b191-9520-4f95-9148-99fbdbc9375a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a22fd22-ae9e-4dc2-939f-02be3de8c071",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bcd1b7-02fc-4862-a13e-140f0764a902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e96f237-4323-4dce-b7a0-13730710a5a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6a369ad-b1a3-4563-87a3-078f3ecf41e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "335a5c0c-c28f-4da4-aa21-7089523887e2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7c2272-8d65-460f-bc04-68327c35f6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db597d2d-94ff-49b2-886a-07b5c7e4cc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5062cf2-d4af-4557-bea9-d394e5cebfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d862110a-1160-43ad-ab35-d6abd6b16ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e194cac-a9eb-4198-9ad0-6b488cde1404",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a9117e-1570-4573-aab4-8080a7f2b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e0627b0-17b5-40d3-97fc-ce68e0f06802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ce278f-5dc7-4c23-8879-ac26999bd2c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3adcc1cf-166b-4d1c-9e08-1599e76a1bad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0134468e-6509-4fd1-863a-f284e21cfb34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c0d3862-dd6a-4900-94bf-1adaf27edf59",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67192ea6-ebaa-4a56-a1e9-d072e2006744",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bc6d66eb-31f5-40f4-92a3-3c59735bf4bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3faf89b-d759-4d90-b3a4-083dae022135",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "557429f2-d257-4e11-ad78-0014bfbc8e82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40138717-271d-4698-9ec8-f6cf21973b84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53c8f0a0-4ae6-4d13-95d5-83ab8aaf5f96"
            }
          }
        ]
      },
      {
        "id": "e434918e-424d-4f97-bdb4-d290320a3df0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a082a437-4e65-45bf-b842-e62f8fda4cf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f34d10b-4f58-4f84-ac25-a4c5b09eeb05",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "591cc467-5a93-4167-93e5-57fa12c2c117",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bd1173-0d69-4649-a548-f0391a20b98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f4c8c2-390a-4f16-b288-c54e8104d770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b5d06a-fc89-46d5-ad7c-9371633ba6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3b31e70-b46a-4852-866d-e638f0c8b348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102d1d47-3b9f-48b1-8762-d508e43788b4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e5b982-f3b2-41e9-a6c2-761d87088cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc835f0b-c3ba-4626-88de-23ef3aaf54e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c79aa15-5afc-48f0-9d5b-255d6a435279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02a49670-5657-4f3f-b5f6-68a8a74fc51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf0699a-1cad-4e54-825e-d2df8a9b44c2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ab518e-cd18-4c58-a8f4-a819225b10f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562151ca-2a04-4291-99cf-248227d1a009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63922811-c6f3-4b2d-8b0c-0698cf3b0e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2b774a5-00f0-4bbc-875a-9206660623e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c444078-7145-4a3e-b2c2-99aec2b837fc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd9de1d-e377-49e7-95e9-896d732695b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851922ef-22d3-4dd4-96c6-eccb784261e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c29b64-63db-4b95-bb02-5394b295a3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1936997-6561-4e00-859b-31b190006c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f283ec9c-9dff-4cba-82ec-8353d92b8274",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39e9afb-fb35-4693-9db1-5ec62bace697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9171edb2-d00a-4b38-90d9-5060e3e7b9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a8da54-87a3-44e9-8120-58d009c5a5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d247adab-4082-414d-a803-a753da7c0ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565f58d1-c73b-4545-b810-dbf9b5899cf5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf91059-bb89-4276-aa60-e4e5ef2923bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3e98e3-1f2c-4988-af3c-5f83e25e4ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4d3137-290d-4f27-8918-81e53d84472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3880d57-5998-4c2f-987a-2a4691a60ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9a89d6-24ad-4795-93fb-d0c6305bb6e5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aad7b41-4a06-40ae-8c37-20e20225f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3500b496-fdff-48f2-86a8-928472b0faa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68e9e7a-6784-442d-b8fd-9851443c54e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1434a1b1-6bc9-43ca-acd3-b7505d34f4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab187dc-773e-4f04-9bbf-93bcc86efb6d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05d2cdc-9b43-4de2-8e30-55098e6c3f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbafa53-45de-45b6-a8a8-9499837519b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73279724-be0d-4e5b-9803-820872a03b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56aa8ec4-424a-4a6d-98e6-8ba812401881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d168ea9-dc62-495f-9cfc-bb4f368453ce",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7e868b-a31a-4ca5-bfb2-26f1225a9b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395386ed-b5fb-4e04-9b92-d1b23a138dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab466fa-09ce-4053-bdbf-49197784155c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eed26c7d-4c8b-44f3-99ad-1d3fa1b4babf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4d1d9a-7f52-4600-a3aa-d11a94c848e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a436679b-d966-4a35-91f8-824d04346650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74242c1-ca77-49e7-9148-fa46050ba0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b706469c-d9cc-4188-9509-3df8e862ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f6a0db2-1092-446e-991b-cae5fcb164fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da44381-39d3-41dc-b5bc-493322c640bc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883469d7-ab4d-4139-9290-27bc124cde36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37298776-c311-41f2-a036-0c2e67fd7976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21554eaa-62d4-40d2-9c27-2e1073840650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12300b5a-95e1-47f6-8df4-f99bc5930369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed46f6d-761b-4378-a60f-f49e582d5f03",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c136c7-ec02-490b-8c92-cfdc651cbc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a7a341-ce9a-4c5c-9105-7ae8dfb2fafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf380e03-69a3-447f-9e04-014a67750c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a2d7af7-a33f-4b49-8969-9879b6d06a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be11d8b-5ceb-4c85-b8e8-27f726fe36c7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f179e0-344f-41de-a4b3-50b37a3f302d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97447ef1-46fb-425c-8eff-5db67e00ac79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633e17bc-51b4-481c-b054-3edeeb536602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db386d84-cb15-4709-8a56-e316be372c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b117a13b-8b2e-4c4e-841b-c9e339c98b9b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d26b55-05b7-46a2-a1f2-eb3c5a60f10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2afb574-b52b-4f81-a03c-cdad65ff8189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40c8cc4-c80f-48ac-b9b9-138950a2c29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ad584ea-07b5-4fea-ba99-62bb2e8207fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02796ba2-38db-4e63-a9f7-32a39e3b7775",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26583c38-7379-462e-87af-208b7444e388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e9eded-84b3-4fb5-aee9-55ad85f575b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366cba9a-c2e9-4923-bbf0-0a45accd602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed1faf2d-7233-4e00-851e-28d4a706eeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4618dab7-fa75-45c3-8f4c-6c17fd333791",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7499aaf-917b-41da-a748-e5f5040efe3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a387bae-5df0-4aa6-8d02-02f9a3157dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995fe441-a4ad-472a-afad-0db7a19cd38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbd85784-8822-4832-8279-6a6cba02d5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02831efb-e6f0-46e9-a16c-281d546c5dc2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c9ae63-3071-45f6-a6a9-741d8e978b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc8a05e-23a0-4bf5-8594-1953aec27cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af46b47-a91b-471f-8627-e8b8671a0cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad7c9e56-c7a3-42e3-af4d-211e05ddbfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b31a8b-b7fb-47ce-b0ab-587db9ba0da9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26b98f5-83b5-4278-98e3-08b83e607a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957093c5-06ea-4de2-8870-48db14d2ed13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3c5682-d143-4060-8b78-e45e42a4ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "67557ec0-6291-4c7c-aa36-cb24d3330564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e763ad8a-0551-4ba4-b80b-dea70b9601d2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6df8c05-bf35-4830-9a6d-cad8cddd7665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ba30d1-41ad-464c-8b2e-1268256fc01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56420187-4b87-4868-ae5c-fce5a5b68164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf0760a-02ef-4851-926f-019b8d41fdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4162c0-e4f7-4778-8aaf-14188dedfdb3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04da1a00-39f4-4455-a6f8-d74a6f1dd38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65433048-c105-42d8-a118-f42b77410ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fed503-94ee-4489-b3d5-6f9f77f40fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e93053e-28e4-4343-a7f8-9c3b0c1d7134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d82b897-4636-4089-8c56-b5b6e61c3826",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b880e6f9-93c2-41ff-b923-3bbc79a9c5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047c108a-fd21-42fe-8649-1f15fef26d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea886f3-6919-4e4f-aa7e-f8e3c93f22b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d927204-d9dd-4400-bdeb-15a194f044c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a0110f-99aa-48cf-befe-79ded0c3bb90",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46236fd-3f17-4113-ab27-505484f8a198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5409ba3f-e8a8-42bd-ab82-ab3be578c482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a40c55c-2a1b-41d8-89f1-80e56ef4ebd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3f3423-02a5-4036-a657-e3ba2bb1e663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc07657a-ad5e-41df-90ee-fdd4c6f5fdd0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79049a38-75ba-4c36-975b-1319789f504b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f15d387-7e62-4c2f-a209-f92cfeaa07bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81dcc94-d888-4b77-b08c-36e23d77f721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "444f8860-b651-47ce-bac2-b3305d2e7a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb78cac-032a-4839-87ed-18a1653476ce",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb21f4c-50bd-4623-a585-9e34e8c89796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d4cd1a-90f3-422d-95fc-b41c576433a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876c8a41-0e38-47bd-b2f4-581df2fb628a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e42d5d-a1e0-4444-b566-b9f6d09fb238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49fa510-52f0-4cc3-b53e-d467bdee45e1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d561dc72-8cbe-4865-b434-cf12e8a98c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ce2617-72ee-4e15-a723-ad8e84f7c3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd3a649-8d08-431b-ab2b-12e3993ff36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40878d21-2a7c-4a05-af93-42fb1ead7cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f98aef6-fe64-4b3d-a35c-0af7ebe176c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c7ea44-e4ed-4102-8ea6-994399a7911f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226b42df-2cf2-40df-b03f-cbcf9797ea37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1318cac5-cb6a-4b50-97f6-5c64d4569149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ee3491-1d84-4238-ba3f-b272f98899bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5e3f1b-7cc1-49e3-a8af-8296025b8d1a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ecdc2e-100c-4463-9aca-6fb9a72197be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c521cf10-c56a-4775-9cf7-8f8e2f3c9315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dca2bc-73cb-471e-9003-1fb36b948c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "059b71af-6465-4ca4-a2ee-e63edfa8dc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649b7dd9-dd2e-4c74-87cd-35113ad77918",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b70645f-df5b-4d2f-916b-8fb6e246fe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf3ba81-80d7-480a-831c-64e2224131c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be06756-55fb-4dd5-9a5d-38cb62bda6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a5f273-0f29-4fd2-9ccb-e6ee2eaee245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e0f831-1398-47eb-a5d4-6e8eae3f3f63",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d93642-c27f-4a4b-8146-13af49d6c853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cfb1f6-ca8e-427b-9e8f-7d75856b494e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdb4f40-81f0-483c-989f-65d2d6dcbcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "832a7402-5b8e-414e-bf12-a9b0212174dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca4b180-8edb-4b81-a789-497d1baa687e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d113584-ab00-47d1-b50c-b3628f4daea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb1d693-fe51-4e24-b0fc-116d1e3c441c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a7fc71-3fb2-46ab-a772-fe4931bbdf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "760371de-03ee-4c8c-97a9-22605e1113fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0732cd11-302d-4879-9343-fca2154708ea",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e112566-1706-4c28-be3c-efdaee11c134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdab5bd-e5bb-4798-9383-3ad725ebcd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29696482-f2df-40a6-8036-7699507af2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbdf75e-14a2-45af-9645-ade5ea991e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f12055-a09b-4a5e-b74e-2e03370a26b1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6150907f-4514-4355-ba73-b1e5d7977c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15e0dce-9fd9-4d67-914f-de72a86c8363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc22ee0-1e5b-4122-a9f9-4327abe6d60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21eda19b-57ad-4124-b56e-22e7967acfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9239cadb-13e8-49a3-a5d1-e26e1044030a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d3a763-113e-49de-a073-5139f1f9a559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e6f8b8-a24d-4ef2-a7eb-c591edde3c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9f01e1-a2ae-4a52-8e21-d9fcb168a91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e597c08-3ef4-4150-bfea-54ca9e44ab92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4b0702-77fc-46fe-bf38-ac654a073794",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a8d41e-929c-4968-b434-3ac278116c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a80461f-78ce-4444-986f-ecc0011fc788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db7787c-bb21-44a7-8208-7bee222200a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f796218d-9fb9-4511-897c-cc360e9c289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b1de1a-74e3-4638-82c9-7294721517b6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772df69f-5a3a-4293-950e-51148265800d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0df16f0-d201-4f09-bb4c-a7cac78ef82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbeea11-5e66-4689-acb3-2540d80c9dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d49c12f3-dd69-4d69-b002-510220808cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf14969c-58b3-4bd0-b8ea-07623af47a68",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46fcc14-df04-431e-b7dc-c008a43e087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b406ad1-f298-44fa-8886-c4cf134e83a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ef5e29-0e88-4860-a576-e022f1baeee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b76a711c-d194-4e6d-b1ee-aa9d07a91468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07264b0e-1033-4234-8e57-3c5799a4bf45",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6488d4-43b9-4f63-87c2-8dd0abba8c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeb2b7d-453c-4f99-aa10-a787ab262d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4cb64c-5d16-44e9-8095-e15a702edeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3073ca-a0ab-4c29-a027-5982e1411b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917a63aa-74f7-4474-9bc5-e61179bc6264",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9df7cfe-898f-408e-abb6-41fa81fa1a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b010a722-017e-427b-90ea-388e9eb24e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b9200b-c5c5-48ce-a5b5-b3e8c385f0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9077f1-66ea-406a-9026-44df03fb50b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bc9e0b-c7df-41aa-99d8-64be414a564c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b0debb-f42d-4d81-8967-3d00b08b8756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b636ac58-b490-4a88-be5a-b378e5b68f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07acbda4-bd0f-4741-8fa9-ba5e7865fcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a395bff-45fe-4a84-a1de-510b9c5175bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2411a3a4-256c-458a-a4ad-6d6fbf0de4f9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143159f5-f7aa-4db8-97a5-3f31271f2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3d26e6-cd74-456f-8b88-630e02ee871e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bc1494-706b-4bbe-9b75-803411c45fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "860dd634-4dbe-40da-ba07-80b0149f10c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629e48e4-47b7-4c33-95d7-3782e6c62286",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fee46c-70d4-4685-9809-ebbd4eee6150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcc853f-0a86-4363-a9b2-a0c2025a2ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f7998f-b2e7-446e-8583-f62e7cb0b9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af3ba819-4fea-4f84-87b6-4a0ddc0ed3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c25279-92e2-46d2-b06f-23a299f77fbb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b551c9a-2079-4be3-8a60-c695016f6d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bb3c77-0a48-4ec0-af08-de88dd933ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630003cc-55ce-4a14-bc80-42c6e73adcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b65683d1-f394-4734-b03d-e161fd1e9428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c986f7-0299-4051-b7c9-36d0f8b208ee",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ae751-c66f-4a05-bdad-3996e3da9cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36baeab4-cc37-446f-8753-38542175209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455f1a27-e47c-496d-81b6-c336e1a0fcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2cfeab-35d6-4812-b5b2-24bd6fb0022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fe6e35-189e-4806-9547-d51c5bfe38e0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4550b0ee-b9a6-4457-8a76-e2e0872ebd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557b579f-451f-4e68-b147-fc49dd738909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7820f99b-6fa3-4fc9-bd32-1af7cde3e4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e99348-360f-4f7f-b4fa-1bd4005e355b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8cca91-2466-4504-8e42-3d34647f4a74",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bba9a68-61ab-42f8-8ef9-2745d5f99dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec42ba1-3630-4ce8-96d9-0f021f2465a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483c8503-491a-4acb-8025-85d50937b924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae34f96-e67a-45e0-b6b1-a4b1f2ffa848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9757618a-15ef-40f0-b1a0-242c464007d2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fde17c-7a45-4cdd-970b-8573f6c39746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0afe224-b3ac-48e6-8c47-d67947005b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe18e98-8ae0-4490-9681-b6114a4086fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3822d5-a04b-4d37-b24d-eee4553e8bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea6e37b-40f3-4156-813e-a5c412b28f49",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5788370b-459e-4ac3-8036-8e7d49eb4e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1e3eda-4def-4d1d-b527-13d81e93ec8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb56291-96d3-4dee-8db2-3b509421b3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3558009f-c915-4089-894a-051de1040a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f5cde3-5ab2-453f-9007-b4c068e16ebc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45917af-2c9d-4ac4-ba31-954839c0b20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c48ed3-5b3f-408e-b82a-af0852e9f9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c26b3f8-71bc-4cf1-bb19-3475716499d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f9294b-5fb1-4feb-8e51-2e9f542fa930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958c3044-7cd1-4758-b471-0b4fcdac6818",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc89a393-339d-4caa-86c8-078468277743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3ec993-4065-4c7e-96d3-a870ec7e6e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cedf469-1d6f-4c78-9147-4c72240c229f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d634d484-03d1-4480-b66b-ad35d73d40ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46961fcc-cad6-4cce-b470-c8436b5af998",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954c203e-ac66-4a94-bc29-593901827feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07db598-5e37-4e24-b862-2bf144f98c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80d5d3c-6eeb-4210-9601-e1cb94f50232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb84cbb-8a99-4f3c-8e91-fa48acd09357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa49f905-5fa5-4ea4-afff-d856be3894d3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931a28d1-1144-4ec8-bb75-7eb9a6061acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ee6980-3994-4a7f-a4b9-df84ef611055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e04202a-e843-4866-be19-d680eb119e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2da9e8-bc8f-4879-87d5-ffb92a0b8949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374d15f1-4f16-4f4f-98e2-ca2147f12a5e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021c2d7a-d89d-42d9-9e72-3102ccef258f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5d2a18-5a30-476c-b9ea-b951e18cc801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5437f376-5695-43a0-a5d6-8fe6f68419b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa89515-0297-4f6a-ba04-f00aba030be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3be3e6-5745-4c5a-8a70-f4a2f9c084e0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fa3d80-0bd6-4a50-be4c-9e55bba7b13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a782616b-d656-4b93-a1e5-bb275c01ddf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b035c9-3e68-4f89-b8c6-1ac9de727438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb95cc5-3797-4baa-8248-512479e434b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dae7ba9-50d7-477c-bda5-1bc437c6be25",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedcae51-c64b-4206-82df-45003d1d13aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d619489-cb3d-407d-9ebf-21d7c069446c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d4b535-60c2-4091-b116-cf07e4314907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "949541a6-8844-478f-b43c-2a808c379c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d20e16-d815-49cf-8f6c-7db9c10be432",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554413b0-ffed-4fac-aa10-2857903dcc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f99b37a-0960-43ec-a90e-91ce18812a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578ad106-5ceb-4d04-988c-7b2bad620b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0041282c-460f-460b-a67f-f0fbbbc9f0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3089b3-c0b4-4482-b2ca-4b864def18eb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67583caf-28e5-42e7-aedc-abf162915051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a37f0d-c244-42a3-8807-4d3d8bc1a678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55858d6c-3e60-4402-89ad-2b1e570ddaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4597aa4d-d271-4cbd-bc78-b56a20d062ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec60856-601f-4ffc-aa77-04645443ae96",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8bad31-3512-4285-b0cc-de9f7c2c4f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b17e9d3-8e84-4b80-b443-afc728640538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aef646-0646-46b0-9dfc-0a9acc915b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "270d5f70-2e9f-4091-822d-b245efd7c84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417f4c59-5238-405c-8afb-d51aa9c94be5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6315b9-97f9-42b3-ae1a-60a2b2aa4c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdca52a1-fd8f-4881-b0dc-f8372ca492c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e930f45-3ce9-4cbb-affd-f5c8a8ebcc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "520920c0-7d96-4281-9cf7-8d885d0c73a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee03725c-b834-45b2-8842-5bcb2734680d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cff819c-0dd8-4fb5-bad4-1bd5e6415186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb974c80-aef4-404a-9009-f69921aa8e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf070f19-4544-46a6-b955-514feedc98a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e056de5a-5f94-46b1-b886-bb10f875065e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208b1d08-c48e-4425-b562-3c5fad11426c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0a003b-a1fb-44ce-8443-75264b738304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85de4eb-c5b1-4db2-9e94-f6720249a240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257d24c7-a002-48ec-a30b-6eb9784e1c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b884f4d-b1c7-43f9-a48e-12ced0ca701c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ebc229-a217-4ee9-a806-f6ae2b0724dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7801b07b-e210-45d9-8baa-d0a9f2b82e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ba9850-487b-495a-937d-48d582c2baec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fe3a9f-b090-4223-ac98-d5e6ad46187f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e09cae1d-7baa-4b6b-b9c1-ac79c424f8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ffad15-b7c2-40ff-91f6-06d303ed4d0d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcb7917-a0d5-4aa6-84da-1ab1bb9c83ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28aa097e-2958-441f-aa51-9e42656d0233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db51761-ce3c-477b-a416-b3f6583b1a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcf8f8d-d309-47ca-b43f-6dc744e0d31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c166e72-3598-4317-b674-87378c8592a5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb9643-604e-4320-a420-1a402629fa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad46c4e5-40c3-410b-b9d3-6678894d0d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0e99c9-5014-4778-a5f5-f248f0e4f856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d95eac9-0b74-44a3-a5ae-6904b0701771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dfce12-4003-483d-ac59-d25780b45985",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af582ec-5959-44b0-9b89-17600d6fc73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262a8408-ffb2-4db9-bea6-1876d6cc92a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc010e6-8994-4902-9acf-3bd509c28ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa1c64c-9164-4ca0-ad09-01dba98ed7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c4fba4-0a7b-4c4c-a3ac-8a93f7995887",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4fa2ff-2b0b-47af-a52f-6309a8995394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6082b1a2-4bac-4262-b440-02bc1ecacb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5d24d0-91a5-4468-9434-8cbb550f603b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8895ab-b917-412b-9059-51fbdce4cc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78ac1f6-0593-4780-95eb-60bc3bc87748",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68b27ce-ccbd-4c43-abf0-b9d48764ec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08aa0418-cc6a-4dac-8e7a-667cd769f909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e49143-9030-4762-8dff-091956a5271b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b02a307-5f94-4dc7-8785-5d7020db2dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d47c35f-1b7d-4e14-8a27-85504e363a29",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d4fee3-956a-40cc-a3b8-87172ec8a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7e8e66-70f7-4927-a9e3-e747dd32e4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0c768f-71d0-40c1-aa4d-3ecc77e247bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3277206-1580-4082-be15-ed4eff92bafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a617d-6211-43e7-9ccd-4e18724ec5ac",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c10376-91a7-4ac0-8cbd-23f351d2070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c25785b-80dd-4a43-996c-681ae780dd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ef8dbf-5c5f-4998-ae52-8e8bd7e4d5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "63bb361a-0898-4a04-9168-6c7ab2ffd009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9eac43-1507-4312-8084-1e8497d63a13",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe1f95-14c3-4f96-ab1d-544792eb6bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44705f3c-a40c-4ad2-8714-5d61ed6c4929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dfceed-382d-4ade-8da6-03b2a47d613b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1968735a-a7f7-49c8-897d-2eceb3631e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c039aa29-75bc-451a-9b4d-1ecb9d96111a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc293e3e-1522-4c04-a487-deb46badbe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56741c33-58ae-47cf-af36-6e6056a03012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0dfd1b-942e-40e4-8fb9-1cb7b65d0479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bfdd06-14d5-4693-925f-461c35ebcf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f3638d-fae6-4807-99d2-10195f04acb9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc68ccea-d636-4691-acca-f47afd4b0616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de1a82a-5c7a-40ce-af90-b72ab5603d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c14897-81bf-4496-9314-9d4c0efb908b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b54dba-badb-4977-b3f1-fbd4ea3aca31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e919ec7a-b093-4912-b93c-35016e4983fe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19593888-224d-4118-a912-d17149c05dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b4b7c1-c88d-472a-931b-a3e7ca8e897a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22beda3c-48aa-49cb-baa4-259db52509f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bab2ad9-2919-48fa-ade6-9996494e252e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eff598c-7db7-4acb-be57-523e7e5a44b4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4314356a-dbaa-43bf-87cf-1b7fb93f518f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da89420-ad9f-4027-842d-ecf06b4c36dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4d5277-818a-4721-acd0-867458a1d52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e02ee0a0-280c-42ec-aac2-b56966a7b529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d793cb-bc24-4190-b34a-71278af70844",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5fe098-c60d-4a59-a800-7b5def3637c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcd52a2-5a49-4c87-a9d4-e1b1b9f6b70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df5efdd-0bc4-424f-8f30-082c0502bf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd97a87d-ce1a-44cb-9714-2ae53d863c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610e9850-23fb-4713-8041-15bda03c861b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea8cbc0-6faa-4ede-82dd-8b80f4420f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9f880e-1034-461c-a4d6-74302de62cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0ee1a6-e245-423a-9486-48f92b325822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "594e7b27-8cd8-4646-8a46-a6cc0f05bae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28169c26-bcbe-4422-bc7c-c9a439f0ef07",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27b346e-4297-4eab-a486-65ab74b67d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a85a961-8686-45ae-9a0a-aed19c694cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f4914c-5d6a-4cba-91d6-0a4d2b1a5bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "221e5966-1276-4711-a2a6-0b3efdc304c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efda977-d73d-4bcb-ad21-a3687764f67b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b028eeb4-a22a-4262-8772-f9e940aafaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a3f63e-ea00-4a6f-b0b6-47a0147f4902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93232bf3-2720-421f-bb3e-fbe081a64e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "704b99f5-aeca-4505-9647-8a5ea755afee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d43038-bc45-4cea-ab60-54fbcb1b2051",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd92afd-9500-495f-8ff9-5e38a148ba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe772cb-6a16-4276-9e2b-8a8f6136d824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c928a00-7c96-4560-b796-0fb854455ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b81afe14-0706-43da-88d5-54e0a7a30e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21353bc9-bf6f-4e7f-939d-ed2f9e03ea36",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7903da04-26cb-4b6a-8b29-0384abaeb320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de74e13b-f6fb-4c45-8942-0e8bd914c1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1ba274-ee87-4388-9327-31688ca907fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b33332-2f74-41ed-a658-cd632c583007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a88bb2-647b-4b71-9cfa-45efa782223f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14393237-0ee0-4c0e-b48d-43a98682051f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73967011-198d-49ea-864d-b9a5886e9c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8a0434-7368-4674-b130-f3cacadfb5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6acdeca-8e38-4ffb-a58f-5a5211339c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0832e27d-7f42-451f-b1bc-b4c9191270b4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077a4ffb-301c-4220-b159-878bf84562c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d820891-9e5d-4128-ac94-3a6a177915cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ceefb6-808b-4c51-9e36-97177255df0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c00b810-3f0c-49d5-864e-194e6d97ba89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedcdc23-9f34-4454-beff-708c56f8099e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d6b818-cc35-4af7-847e-025330fd3720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f26d80-55f4-4858-81cc-df8ce170d7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4cd5bf-e10c-424a-a4b5-efbc99a097b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86003489-fbba-4916-9ef1-0c05414cbf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e14a98d-fb5e-4854-a4b5-f918023c402c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa9a33e-7227-4cc0-9c32-d12e68c5a93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1f125d-f6a4-40a3-89ab-c5adadacbb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa0d455-12de-422e-87fe-141d7f2b3c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3877fc41-47ff-40fb-ac05-82611896cff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aad3ea-a98c-4e83-8057-da86034c3cce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019733af-77d6-4cc0-9da2-3fa8edcf4458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c67c988-501b-457f-8ca7-1a0fa888a6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f01967-a8a0-4a60-9742-0bd532dc2a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7700ded9-38ea-4f71-9356-8654e6c54664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b60ddeb-190b-4fd2-bdff-f0c07cfd0ced",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da954a8-6b2b-4f14-8897-2cf1d7e5e59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60828ce-a563-4131-939c-2cc6794ccf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96befe5-74d6-443a-a1cf-71aca6aacc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9ae9a4-1bdb-4e1c-8074-d7a43b548ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c830fcd-fc16-41e8-8c07-399a1c5f1d71",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31567845-d618-4d73-8751-294750efbe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184f1e56-7209-4cf4-a191-21c28c536ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e55a3e-a74a-417f-9133-e1d0a193d222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14f44913-7ea6-4b95-bdf5-a76278b1d002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0956ae9a-6e61-494f-ab8c-eca8aa69deda",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceddf0b3-8100-4ada-af56-0de6ea98a658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0472d53c-c5c0-49f5-b67d-e750a3526b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b8662c-5f3d-4a7e-9c3c-e8dbb49688c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "417c1a27-bb13-400e-bc1d-96227d71aa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2212c1d9-07b1-4952-a01a-903216393ab3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3ffe56-9490-46df-bd4b-0b6982a37413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8dbefe6-168d-4da1-89a5-cc8ab84e1a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8140577-b475-498a-b646-2bb4a44f7073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b34c5e-6626-4ab9-a436-f267db172af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bbf97e-2843-4baf-81a9-d7a3adf91b63",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c499fd5c-319a-4913-a36e-96cfe8b0fddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305379e3-ca74-4216-9f2d-1b026bb53f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885fce61-b46e-411b-91d5-24046cdd9723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2114c1c-d841-49cd-9f7f-51b8a590e941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e299ae-e27f-47b6-8f63-35dbe32c3547",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec3c0f-e5d9-4f11-baa2-f5d0e69d74a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef27bf9-8c78-4ef5-8794-f30cfb55e44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddaca58-3b62-4194-80e1-7191f6e94412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be20a99-8b05-4413-82eb-dc21ad4d739c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d363bdf5-5494-41c4-a0a2-67f7b76e474a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09614a53-8b6a-4708-a829-31891c8d6c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667f6716-21a3-4c86-97cc-dbd96c135bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02a2ffa-40c8-4b82-909c-e5d2649ad4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92a5660-b432-4760-acc5-a15c4914698d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ae409d-0b6b-472f-a8f9-51288468baee",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f28919c-ae77-459d-bc76-99c36b90c840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ebacb659-8470-4b63-b729-ae31033fa0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06de7d31-65a9-4beb-b4e2-71e0ef84a8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "53f58c2e-f31e-4790-ab3a-ccfc0e8f2795"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9316d3a0-ccb1-4846-b2a7-930fc80736f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cac3b6b4-6e78-4402-ae7a-51a5e8e45782",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f84cf8e-48cd-4af1-a282-937177e80167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f89a47d-1db7-4f42-8dde-076971bf282b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc87789-ed04-475e-8b49-f270dfe1113f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54604a2e-84f5-41bf-9a3e-45bc5891a12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcb8ecf-4025-4b74-848a-a81c267325fb",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd04722f-275e-4883-bc46-984493f545ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fb4f076-d2ff-44d2-b496-5b3e74e854e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b90d93-9066-4746-b0ed-17a5750dc117",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2288999-8a35-4ad6-bde6-5ee978a83567"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c06386a1-3429-4fac-bd00-62e1c0a02a49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b0f675f-890b-4425-a259-6abb1428b052"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a40cd41-1eb6-40e9-a774-7fc2a39b1a9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af1b5bbc-f371-4a2f-8ffb-a18b87c970c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e595919f-5b76-4f4a-941f-d2f8c7ef8f07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75b71194-614e-4cce-b3f6-8f6ca0408c23"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df295e42-63b7-4dd7-acef-9ac48ba65b27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15510a44-7377-4887-8953-afefb5f84b9c"
                }
              }
            ]
          },
          {
            "id": "b535e161-dee5-41a9-bb41-81bdcb852838",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8e5f073-e56b-437d-af59-854e9b414144",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55f1b9b7-5c17-4a13-b5fd-20c741bbb78e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba0afecf-f0fb-4c77-b8fb-65cfdfa98e28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cd42eb9-20e0-4e04-a843-446f4e43ac44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53936668-29ac-4a89-9f20-03946d3d369d"
                    }
                  }
                ]
              },
              {
                "id": "422847c6-d87a-40dd-ae82-33055ff2792d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ebd6ea0-22f7-46e4-b220-ac811d873f68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae6e5d10-ff5f-434f-9110-7f397d075535"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64e5e86b-b20d-482c-894f-24175fd48c34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b30a74d-1e94-4d90-a22b-eca42ca6ba91"
                    }
                  }
                ]
              },
              {
                "id": "bc4f4d01-6cc7-4db7-9456-438425001e2a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41aea542-d527-4e15-b93f-e13246bd34b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c79c193-b2b9-4196-b898-b54524b9c546"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abc449a3-d0ec-4a6b-b2ab-3b88945aedb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b9ab4b8-9f0e-4efb-9a0c-26ee88ac1543"
                    }
                  }
                ]
              },
              {
                "id": "7ee7cec4-158e-406b-b2b4-2194453b15fc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41b55e7f-e35a-41b6-a781-31dd97ef7b1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c5ba032-4eb2-4fd9-a9b3-e4e66f878c69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c71618cb-4570-42c2-8e7f-7dd49e97c961",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ae3ec215-af3b-4ff0-a19e-1a6d22a4de1a"
                    }
                  }
                ]
              },
              {
                "id": "6612fa48-11ba-41e2-87a6-daf7a6caafdf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "005f73c8-ed40-441b-a1ad-dd9823336ac5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24218746-944d-4d63-985c-ce877cd0ac17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19a482d5-3dc1-49a9-a2b4-f44f67025883",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2e483429-eab5-4ee6-9bac-fe6ef7c37b5a"
                    }
                  }
                ]
              },
              {
                "id": "b1b9f420-9bde-42eb-a3e1-68063a2b0b15",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "232cfb00-a9f3-4037-aa3d-b0511c9888f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfd339d4-a83d-46b6-9f88-416072f151bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8c515c5-1090-4088-bb8f-b1d45ca4668b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca7fdb34-da84-45c4-8ccf-cc951eb5ed11"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40632470-aa7a-4034-b728-57664369062d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f66bc8c-52cd-4d10-a17c-4bee8a1afa5a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6000ab5-84c0-4675-8be5-75541086334d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11821778-5904-4355-b67b-e7916b1c52fe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "badc7623-4e28-4e3b-90c5-86908b3d1782",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "51aa433d-77fa-44c0-810f-0c423ba91d20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec500a34-3f3b-43fa-a30d-8271238c2986",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81a5e1a7-c48a-4076-b0fa-58862c08c4e8"
            }
          }
        ]
      },
      {
        "id": "0ff1a1ea-3fda-4cec-8135-b54dc40211aa",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "921857e4-7aee-498d-94b7-4b95fe30deeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40863952-bf52-44e6-ba7a-28936d8bf968",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5990b85-20e9-40d1-9ba7-ba46530d4c44",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff549e84-040a-4c86-bb54-d662f3126207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff94de51-af3b-4918-9dfa-11b2298ef844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cb487a-a4f3-41a7-b5d0-a8e17bf4c570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "120e8f69-1d99-49d4-b009-56c263681e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4af7184-9894-41ce-ae95-e14269fd6d60",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e447feff-7ea0-48f4-90a1-bd1302298bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9d3c55-8e8a-4566-8bbf-71553a3d8195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414b193a-925d-4e52-ac46-6e045e9731e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3c9e1b-f8c8-43bf-a232-a992a100772c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567f0ce5-98e2-48af-9850-b8545acbd363",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b80714-6dd3-4f47-acd7-47664b6aedb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d9b5eb-47f9-4524-a7a7-fc8a469dad3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba3f3fd-af48-466e-a707-348c1941310f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a25d82a-0a3a-4adf-9a96-6ec1ad1aea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5767f7-f786-44b8-a490-ac1bf4b8267b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90ebb4a-a268-4836-a369-98b7d442ad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1ad6af-e3f4-4f15-ac6e-624f4cfb6b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8efacab-e6c7-4c7d-b4c4-ab245757dc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f3c29a-23f0-426e-96f4-423795446cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da47366b-73ee-482e-abf2-46ab28d5cab7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5662c0-0442-48a5-b67b-2af0e73786e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4735998e-7446-4a58-b08a-3412a218aa7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72732a74-4169-4681-90b5-bece5fc8fc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9987c839-923c-4866-88ea-181d48dacef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e816aa-44fb-4600-b2e0-259eb3d8faba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c479faa6-1271-4a8a-a49e-e039866cd503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb7067c-1fbb-4fba-a951-8e1201aec0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47340b2e-85c2-4882-87b2-bc31ca659081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96d8fcb8-4463-4856-b172-067a7e819aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb970e74-f041-4b63-ada3-49199ef99f7a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80616508-e1e2-441d-b564-f957ef32037a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ae3d9a-2885-4fd0-a281-a2969c1a61f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f31279-2438-4fec-9a27-1f9fe6e711f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79e03be-7702-4184-91f4-9984f0e3ce03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41749a84-85b8-48b1-933c-3f0caa42f397",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fa95ed-5178-494b-aad8-c221b909a6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa8f3ea-ae79-46e7-8125-311ee2ffc234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94d5b28-1195-498d-a57f-94f624c8bc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53d7074-4699-4194-9975-e7f10f2b6ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0ea7fd-0829-4c5f-9e3f-46282564004b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5a2be8-dcd6-4f2d-9124-95c9dbcbdcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c418bfc-55a4-4fc5-8ffc-c0e552d2267f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30117939-afe2-4522-8ee0-d5819b717096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14e09733-7faf-4562-87e2-0c6456550ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded79f03-3a72-405a-b858-f6608790d0dc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00878b71-ab7c-4a72-b741-850df601b469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6851ee-2361-424e-a241-aa16811797b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20e733e-3a77-4c64-aaa3-5fdf0b89af3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "998e9d4c-02b3-4dc4-91c8-a9f1883bac06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83973af2-9370-4093-bdb6-f7a6bec74f8a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a105d4c3-3372-4624-8f30-5edea6ce882c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d57d7c-8d3d-46ed-a05a-542398c37eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed72010c-4445-4201-a32b-2bc361bcbf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22356242-06aa-4570-866e-93c93af8a2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f135ea-b623-4e59-b84c-4d080301e251",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a22aff-6080-4b9a-9160-470a3085f11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd095aee-72ed-47a4-9d33-2981b570d8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee634f8-24b7-48e0-a6ae-4288a1bfc921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a010190-3676-46fb-98f7-e985243134c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a37f14d-12c7-498d-9bb6-4bafe9cb94b3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ea2b39-d887-4a84-b839-ffe1558474c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fe7716-eb17-4287-8bbf-53c02ba6918c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9846a7e3-7e81-4a59-870a-bbc148ca540d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f1599b-4bf0-4d19-bced-936072eb615f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73edb38-ead1-4b12-a3be-60c4ab014d3c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e77926-78e1-419c-9709-d98dd7279e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb8b524-7328-4e24-9b58-6e4f0b43cef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d4437f-35f9-427a-888d-fa1c9c13f1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e83e64-84b7-4a7d-8e0c-0fc0a609687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eab2856-3290-41f5-a954-014f78ac7ce9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137d7f9c-1b1d-448e-9928-e5912d83d739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e672bc-322f-4d2e-9226-348503cd14f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1797db0e-d965-437e-ad36-2d6f9e33c2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8e634d-f519-42e0-87a4-5fc327e23fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443d2ba7-f0b0-464a-8774-45d979a88981",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196e957c-2c22-4eee-8f92-79db800559e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5664fea1-00b5-41dc-be7d-67717fdd12ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdeaf13-9bb1-46a7-b090-58e6e21fae49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "520c3f93-1530-4c76-a152-0c9f7bd13682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0fa15b-8cb1-40a9-80dd-24c497d6a150",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5b8b0a-cb16-48d1-93f0-9b1f327390c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3244afb7-2012-4a78-9ed7-d7f6305ddc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28def1a4-7b42-4059-b221-6acbb80dfc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c69dae4a-cb3d-433a-bfed-8d2f81756e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d95ef4-83e9-4973-bc1c-aca878533255",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173490db-7b20-400b-bc13-bfde5192df0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e347f623-d55a-4cde-9091-2d08dcfa84ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5966022-7e78-402b-abfa-6dafc00bee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0de7bf-cb5c-4294-a8d1-93e61e1e6dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a2db82-b876-4f90-8405-07cd20edea91",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e106c3a3-79a3-4230-9a96-a53ac2434508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddf4f1a-b284-4edf-8831-05de65ceb3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c99fac6-dac8-4302-ae81-9141e75f2f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7393c658-f28c-47f6-ab60-6fda5952c4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082f1037-9c38-426f-9648-4d8b734f3fbf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bdb017-ac6d-4172-9f3b-e64c9d4c189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae03af2-7efe-4fc8-a040-f71e9feafdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e621a8-9f3b-4066-8fcd-dafab7ff1b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d846f6-b557-476f-8c24-f6eeb4fc3d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab556a2-c3d1-42ef-9112-e86d102794ee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d31d9b0-03ee-4235-8dda-c1a1ede172f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f053b068-25d0-420a-9fe1-df2345c88b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b362b0d-4ef2-41d8-a217-ec28f69949a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e03e59-ca88-44e7-96b3-bad0a9fdd867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4921d0d-edd6-47f7-af5b-08ccbbb46033",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8c8255-f2cd-4a48-b6fb-87b6121fc863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a42479-5047-4379-a8cb-a23ae6ab079a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c0c54a-4abc-4ce4-86f1-da4ac9dfddd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7c9b27-25b2-4f7b-b999-f65c0f709891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346eaac1-eb40-4dc3-a0fa-3fdfcfecce35",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4ed25b-6fc0-4b1f-b139-637e2ff01358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3a200d-2d2c-4f3f-9805-4f72d30c7653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f864a07-11f2-4bc0-8f4d-a8fef8e63803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "943066d3-0af4-4dd0-9c81-bc1abb07d4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d2055c-4ae6-4d0b-be7b-7549a931b80e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db99c6cb-b4b7-4795-a943-84dc5166b659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8936a529-9f59-4ab9-97d6-fdf709db91cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c995cc17-0f4e-4b88-ba40-bc6b4a7cb88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d163a2bd-d9d8-4b52-8846-3e26b39a7cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49a4489-f5b8-4a8e-99f1-95306c170c1b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c4d006-ddc8-4d9a-8e76-b1b68c15d438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f6e7f1-8935-49a7-9b8b-21d6c0decbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2a6688-bb3a-4700-9f7d-9cfb3c232aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2c0adf-9f00-4ae3-996c-b4d9109b1618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368ab542-da6b-43d6-af68-c095d5cff904",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6571dd0b-b77c-4ea0-a485-b0e33b72a463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910ef383-0849-490d-a455-3a2ac4b14112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fec8e15-21be-432f-8ca6-c12e3322e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99b9b9a3-241a-4592-b479-70a696aba803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f995ce20-a632-4ea1-92e0-2c726e623cbb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc34c864-748f-4d08-bd9d-2df53f4644f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5a8e89-baeb-479f-9383-21581b26e0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecca6fb-e432-46a8-9846-485cc6e71858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e69b3d1-4064-4987-aff7-a16e3b7d337f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa9f10e-c5a2-4f6c-aeb8-5802055ef0dd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602dc2e0-0022-449c-81a2-ad5e6694269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42dc6d9-38a5-4ac0-8a19-f8dba1b6ea21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00890994-813d-41ef-a668-5eacce45add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ea2e58-eaf5-4c50-b6b8-7958bfddbf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faed3a6f-7982-4b8e-a6dc-4ab3f6789ecd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da477da-0473-4132-8a37-40e8f6176dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce95295-678d-47d8-bffe-761c1e2aa278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9a6ea3-8e24-4ff4-8839-344596ecf110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc384a1-d176-40a9-9e21-0c23d570a0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d67a9ec-76d9-4218-b045-f15d6cc73d36",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d5ff3e-c14a-4fbe-bb8d-61e2eab7f41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcddf325-3732-42f0-9dfd-4434e5db2014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6a6884-dd9e-419b-840f-b47e6decf5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95846e59-8456-4199-bda5-29db1fc09f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b18061-f567-4b2d-9af4-be5d2ff1efec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6bf1fa-44e2-4a90-beb4-a7bf7d094511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfaa7c4-8e54-4083-8464-c0b92508b7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eede5a5-f4e1-4221-8180-a9b7dbeaf10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47e2a35-3091-4c84-a05a-685316d113ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d12881-18fa-44f2-9b52-08d826519fa0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d029908-421f-40cd-8501-c0567ed1e377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d48e879-0e16-4761-afc8-841e68f89196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fd6efb-0bad-4d42-b33d-d578f6b7b2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "386829de-85dc-4408-9560-54c473d4a4b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "879c0f62-2550-443b-afdf-1a551b89ee06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3079eb0f-a044-439c-88e4-4b72f6eb21c7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4aa9b6b-b52a-4ce6-a564-2c628d54def9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "379e0026-2f3f-4486-9b06-92770c2999b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf409e05-36e9-4dfe-9c8a-1959d7df0fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38a9dba0-c547-41ad-9f3c-b0ececf1d5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0016bd-4513-4481-9a25-58689e35b712",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08b8261-99b6-4ee2-b5b5-e32bf0be711f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "24db438e-08c2-4011-9a15-5115377b431c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca656a71-adb9-4ef0-9051-05120886b01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08ffd126-5d49-4e29-9a6b-97c552e090f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78953009-5c64-45b6-bbfb-8cc703dac7f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d00f9b2-6f7d-4e87-b5bb-b545c9af8ebd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa26017f-8d12-4a0e-8ad9-d167edc77c83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "721f2a62-cf94-4bc0-9720-55938bdef5ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5f90ae7-4c49-4081-910d-71ed5433ba3d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "775f1d26-63e9-40cf-8156-7f366f8fcb76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4aeed99c-e07e-4166-a603-b34ac9fcb365",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bce776af-aa35-472c-a0a7-ccb39075d0df"
            }
          }
        ]
      },
      {
        "id": "408c8717-82d4-43e8-b31c-17b2a4ab8922",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6df9cdf9-d539-4504-9b83-396970cb3fbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cee8d9a-06a0-43c7-97e2-c5b1e03d47b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ec48e31-3541-43e3-ba80-9dca12d8f077",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4958acd5-6258-42bc-a258-29eda209c3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8624d561-ac13-4237-9e76-d0bdddf86dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1c08d4-27ac-4f41-b82e-edf2805662ec",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd998f0-545a-447f-80ac-2ba8e1853a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85fc44b-0d7a-43be-96e7-b3e96c267a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b771f3b0-e4b1-47e4-9b86-6980a966b72e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceaba24-ebfc-4662-92f4-43f06af9b4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cba14c-324e-48aa-8a62-a24d05713508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62770c4-5d33-4f39-8193-e506faaec506",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e07dcd-96a7-48e5-a713-cc1b18a4b970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962660f7-06c2-463b-a56d-f666e66e93d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da25ccdc-aea9-4eae-b503-a60be12383a1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe41c82-5789-45cb-ba9b-787bccfab459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3628f559-4878-447e-9372-0b83661b891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23bf05e-de65-47cc-b24a-64f895bb92e9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a673eaf0-1b49-4a40-b2a6-815dd7c24e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b556766f-b212-43eb-995f-2f0fd77e090e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f011b1-6caa-48c2-b6ae-1cdd3d7669b2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9385fa-2a34-4e0f-9238-bc69fb38bd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5dce74-54f7-4fb7-bdd3-894bd5d41d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e546f442-119b-4055-aff8-e9d888a54e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2860b6-2088-470b-a875-53595c755eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115e1d72-6975-4e1d-aeca-82df1ab23bcb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a773786-19b9-468c-85a2-068235a5b19c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ebc723-5ccd-4e55-b87f-7d8af064ef3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba663d9-5564-4a21-8c26-ffa202c8397a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf3c4ac-de07-4726-95ad-da1a8a3334db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c0834f-afbb-4d1b-bd7a-5b53c4ee935b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4b18bd-5b2e-4c3c-8d8b-51f9d889f697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51560df4-2935-48b5-8ded-df236027531b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a992a2d-4221-4c23-b088-28178557f300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787a459d-a7aa-4008-a47d-303c7c4a5219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c9b40a-5db5-41c6-9336-9b62caf8e5be",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce7c916-b634-490a-8e3f-2c3cc4ab279b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb641461-104e-47c1-b706-13e872b41593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a33d081-1ad5-4c6b-a633-4a5da8146280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6d8057-b40e-4abd-842a-56897b8375f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7497825e-aa11-4272-be0f-60018185ad63",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3fdfe4-2d9d-4848-a17e-383e5c72e750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af87c58-ddbc-491b-99ad-809d8f2af8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a6c3d9-83f7-4c5c-b634-954228d825a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd682e24-8994-4143-96ab-94bd6ebed1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d1c77f-4a90-429a-8cc3-6aecfe47b0a0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c7a31a-9ccf-4d78-9e2e-ddb0c815a506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4591058-726e-498f-9351-af913ed2cbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21cb62d-b88b-4ace-92ff-3e7c970c150a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70bdf29-d922-4a32-9e8f-efec7a9b0efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2666ff5b-b2f6-4085-a1b7-1bb8681a7e19",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9784f881-4517-4cd6-a530-a0b54f722309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4aca91-df55-4688-bf75-bab09def96c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ce531a-eedc-4004-a4de-366a5b0d3469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc67cfd-19dc-417a-a667-ef2e0aff0bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1103b3ca-8b4e-4fff-9f51-481158ffd8f7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc2cb78-03b2-4a71-8a7a-88b110a63295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4973bb23-d161-4570-a3a4-23401c1af0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549bbb05-0740-44ff-89f2-876604fe9807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6304bbc3-5c70-4933-92d2-ac99bc50877c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4e4f65-e71e-42da-92e2-d6ec35c2e304",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913bfdad-5336-4698-ad13-51160ed79c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775bd342-5518-4347-8d89-c73e745e57e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1f9ad7-1013-4fb6-9beb-e589ed6bd32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26009fe-ec61-40f7-84d1-bd997968d417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517c35d0-7a9e-4838-a445-1584c82baa33",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9e8eb0-5d6f-4a8b-82b0-381f483cb505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194bf0a1-e080-4ba1-8b8b-94e543e321c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04adec4-33db-48e3-a3c6-0dc27aec2d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2926f8b7-4f81-4360-a1e0-082e5bd991f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cd9a79-0101-44ec-b33e-2d94897b68f6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5f21e6-ba6c-4098-be62-e46c444e8c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de732b7-094b-48e4-a478-807f66608834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848bcc87-31d7-47ff-aa92-007fe05ebf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c49344b-9ba1-4e09-89ea-41f955a7321e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc23667-ff37-4f41-bca4-ceffdf017e4f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfb5e84-a19d-49a1-8a1d-76321363b11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82360d64-2547-40ee-afb0-cbc96c9876d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ba7ee6-55e3-4be6-bc49-1b1a16649dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c93dd2-50ef-4c1e-a9b1-662b9e7a1241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59ed937-fdb0-453c-835d-7b9d644a0ef8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d0e0c1-416e-4536-b879-a8d35e736c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb4fb46-d97c-4473-a15f-90d93e76bfb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dda9b6d-1bc7-4540-87ec-4436792a67b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64df821b-64e0-47d1-8042-ae16a055841e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd37599-fe65-4009-9086-3c5517ca586e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40edd9bf-3ba9-4d61-9966-c6ca5c83d8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf457a0-c79d-47f4-87e0-87c705d3a1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e383e7-8756-47c0-81d2-2877e720a050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a27e940-3df8-472f-8bbc-05608f0a93be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9d816d-a367-4754-97d3-266889468196",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7cd7f0-34f7-40f7-926e-ba3cc6ea4641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076c5fc2-4eab-4613-a9f9-fe9cfb4e89ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ff9c2d-3eb5-4139-b01f-21d598ceec34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeb3338-f9d1-4266-bfd9-538ca8e5e303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f31e422-70eb-42ad-b430-94b88ca1ab75",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42310198-1724-4b72-a081-03a1121d8c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d05739-6545-427f-af31-b28feed54e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5e1686-2f76-43dd-92bf-65fc71385e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb102ad-54e0-4292-bf10-4047f99d788d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929c86fc-872f-453c-952d-9ba121d6ea31",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbdd745-311b-4983-83b4-059b16a88043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b6da76-17d0-40b7-9964-f6b2089414ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c20466-9aa5-4adb-affe-91b9b5f6615d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24135f97-c615-46af-9f65-e7c35ec4282a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b5d94f-8981-4503-963a-7d50e935f82e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fd94c0-57b8-41f9-a3db-ee5b753d9baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41652275-b762-4383-893a-818fff24027d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aa0bc8-c95c-4478-8d2d-473fd1d899f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b5382d-e0d1-4554-b14f-5c4c129aab60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73020edb-2c07-403b-b026-a3f8d949c9ad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1ea321-1c02-4642-9305-7ed8210be443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2abe202-383e-4dcc-864f-2bbd75f36c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed03341-76ba-42dc-98cb-c7845e3c714f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e678ea-74f5-486e-b00a-d8f1468ea14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db122a68-2831-432c-9341-2c507787cbb3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d94e3ba-ebbb-4ac9-8571-9ffd3d25a14f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f018cfb8-55b0-4fce-a1ff-95b2f0d0e8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e9d7b5-2139-4124-b2cb-ff28228c53c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201a55a0-b846-476a-8aaa-eec5a9ccb36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c2aaab-e1b6-4027-ad42-645cd8e647d4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed8fbb5-20a5-4890-b78d-6c0f85764f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514dfdfe-1017-4863-aea5-7bd111fb99fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549353f1-bc36-4926-8e1f-cdf9e566dcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999e6dfe-a7ef-4c38-8fea-bbf689b71838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fe5546-5926-4d7e-94aa-06481a20060c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0442c598-7ad1-40dc-bb82-dde031e8f651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded1d2b6-2d0e-487e-9101-c8714546cffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4180a37f-0415-46c0-bddf-fccb6220eeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f4f641-35c9-4a8e-9318-bdfaf5c8a721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e58e73-c470-47ac-8f9a-453a02d8250f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5a71ce-d433-43bd-adc4-21b7fcb7805b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7023df-f23c-4c8d-806b-9bfca395bce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8506438-8da8-46eb-8a0f-cbb363d5590f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32df4aaa-11ee-48e1-a8d7-b3529af03208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532d9d07-e42d-45c2-b4af-95117786f6e7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0295d38-b88f-4fd0-aca1-d2b52869e676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce16ad0d-e1df-4ee4-867b-fcefa3e2daa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cee77c-aab6-4739-add8-c96a514625ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4fc8d9-598b-4429-b5d3-680ab8d70e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b968bbe0-9c22-44c0-bbc8-e86b54be574c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7ee484-90aa-450e-b4e1-4e5807a2d173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4681ea6-0673-499a-ae16-29308d92a854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f4e424-f8b0-483e-85f0-8c5b1ab47fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056c8061-4ba9-4f74-8c93-7fd3b9ab3429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60c7645-5d9f-4439-b5fd-717b0b913080",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f088c0ee-5279-4034-bcce-94b0be60a202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa99d74-ed39-4028-916c-2b8ffccf3fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed46ba3-fb15-4630-b6c1-2971f41978d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae104dfd-64d0-42c6-af99-8576bd05b935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd2d9aa-e593-455e-ab15-6786ab04e98a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a74a70-b9a0-48f4-b80f-ce5d1d72c526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "340ef16d-a2cd-47e5-8c01-54c56ad4efd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b45d63-4de1-4f9a-a47b-b073759021bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1684bab2-f532-4906-8a67-89d887db2654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291c52f5-4b77-4c60-baff-b83e04e72090",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f6c806-23d5-4052-b6b1-ea03b79e9d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441b336a-3c7d-4c78-af68-f1047e49c45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462fd348-96fd-406d-9dc5-bec019ce1880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9487d49-3805-4503-b453-c2abd0ae3250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6d1304-b55e-4b8b-bde8-0080c651e5fe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d35e08-d03e-4a48-8fd2-df846aeb0abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39c4583-7710-445a-9011-533f148bb725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db6c27d-0b94-4136-bed4-f3c8b78c2ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a1a711-8051-41c9-baff-60c7b2b9a976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ff7984-565d-4865-af9c-5f47e27ba2f6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107f33b1-5707-4285-8187-dc34503155a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646a892e-a0bc-4bd0-935d-67b1dff9b9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48eea2e5-7e4b-4ac9-a9a3-620691fab919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b298297f-4833-42b4-bf0f-073e2b6c235b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a509904-f9ca-47c9-974d-16e3732f8149",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edc7a74-3081-44b2-a990-e2657d67e2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad768d06-f808-45bb-a07c-86ef059d9482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fc18fe-dcf1-4ebf-a03c-92d4d61d6b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86316bc-f60e-4583-9f26-0732e17a32f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90223c9f-5639-4e6e-82ce-acb640b9850a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d01364-bb24-4d3a-ab7a-6db5eacab5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220f1034-37a7-4637-99d8-72f81f7cee53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f09af1d-679e-478a-964d-c5a2f27ab49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b1a615-cb15-4bb0-8609-ed754919d6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79a5fb2-f755-448d-90ef-a78ad7bd34b0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adab1d37-2380-4eaf-9851-763bb923c94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5182b856-4274-405e-ad84-f293fad198e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4317972-dced-4437-9986-6425e0684f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c8b9b1-cfa3-4a08-9ad3-f8872da11e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320fb467-2440-4fd1-8745-69dfc2cfd540",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d19e06-8b5a-41e4-8017-6a788542c309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ff2b17-bd69-4bec-9768-c1b96e4b7bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c348329-4dd0-4987-9ba7-c01703df5161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8330a0a-cc7b-4e30-8a24-563c193abfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bea4baa-561d-4464-b227-ee3bc9aad851",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a62af05-cc18-46b2-b68c-a75933984514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ef9952-c6be-4996-9e8b-3eae6b1e3bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f03b5-9c65-4b93-959c-6ed1813518c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af9ed70-f090-45f8-90d2-90cd74ab539e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb179c80-8573-483c-9ac0-1fe47fb58699",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0104eb2a-4ec9-4226-9c81-c4e7fd0e106b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d3a1b3-2ceb-40ad-9480-256bb2cf0787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c30cc-cd60-4dfb-b8ee-f814fd2ef3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f27ba44-c2f6-4bba-86d7-1beba15e6ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfcc983-1dce-4602-90a6-3c6b68b2bbe8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786b61f9-0a03-4b19-ad01-60ddab956129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cb5afb-0ed6-4612-ac48-7cd8cdb29f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c078518-530f-4d33-900d-a2229e33ad52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3813900-30a4-4218-bee7-721eee0d58d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a84315-6672-4551-8105-0ce8d873a462",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8f1748-5183-42cd-af09-832d8c44be4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7565a56-d123-4258-b5c4-3ee2b54e243c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae123a5d-0e2c-43c1-b322-f2bfbf8953f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0c803e-0dc2-4968-b649-e3ac4212704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b17e55-fb42-4a1e-8394-201364ea8e2d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fc309d-7054-40a1-83b7-ae96894eaa58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe64f95-aa8d-4980-8aab-2bb02fc83585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b317dd84-1a89-4748-ac85-e0ffc223787e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693286b7-a020-4a1e-8436-92e8f7f7ed3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33d70c0-5b1a-4130-812c-68d55d93eb26",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeb6a04-56f4-40eb-8dd6-98fbf33860b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b6aba7-0f84-4828-bd58-e22481de93f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28676977-4b5d-425e-a729-15a647f93eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb506f2-1a6e-4bde-b19c-7f581eb82b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a174480-acd1-43ca-bb31-c0a5be1549ad",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274140a1-7ba9-4692-bf5b-77bfb8cf4b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e130728-8316-4367-a1b8-8c1e1746312a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35454404-2293-4458-bbf1-baed019ff993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e4a81a-bb8c-47b8-98e6-dc1e429b8a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9556999e-e0af-4bee-a4e5-7486bacee72f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cec3b4e-551b-4b3c-891b-574eede88d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22521ef1-2aab-47a0-a65e-5783dbf96056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ccbe91-66c1-4b24-b13d-1234c199cf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5fd372-fbb8-40ea-8907-c37cb0c80a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c86b43e-f821-4627-ab7d-38a5775114a8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fc5846-58b3-44a8-921c-2c5a5ffceb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6a57d6-1573-4f02-8b5e-40f3cf5b3072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77286b42-cf79-4fa0-b388-cafa5352bf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95a2346-1e60-43ca-b124-783f9920561c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cf12a1-f6f3-4c96-9c4a-d01d63ff0ced",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b09389-da08-436b-a0bc-9c51b0bbc5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc87501d-4266-43b0-be94-49533ff0adb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fb5d36-45c0-494a-9317-27a2b24e0f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4fc15f-6e8d-4180-839a-3b3f137f293c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51df040-edf2-4e8e-923a-68675559c6c6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bcf2ac-753b-40a6-9e08-82f06a0695cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e08006f-4a66-40a5-88fd-2e021baa4fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508752a7-1d04-4b5c-aae9-0302ea36b355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccd6a8c-1023-4816-a0c9-0fc36ee1fc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7266567d-711e-4292-9ef3-5069ff9cecf3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61804dc-ad84-49cf-9f86-7c70ce28d758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5895406e-5e83-4ab7-b832-eb26263c4db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a333e3-f5e7-447b-83fb-848f14ce1657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc56106-853e-4bd8-86f9-8afd423e22f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e03024-a217-4758-9f1a-31fe7052a883",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bac2fe-b848-4f1a-8d0b-7bd62b1391f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ddb55b-837f-4a65-b7fc-b6c41bfdf217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8c2089-6832-48be-a10a-877a22c6a777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608eaa54-180f-4631-8e1f-fdfbe80b05f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ce7843-019e-43fe-a501-46f13e5bae14",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1b82f1-9452-49de-8206-8fceccab086f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f04118-8410-4fa5-9c16-93ddea240400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f60c99-fb94-43c7-86df-d36dce96845b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b12476b-21d9-44b9-8466-f5a585cd1c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52766fa-d8f6-4a67-a799-dcac74c3c8ee",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fa5dc4-45ac-498e-b783-6e62ce408f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d92709d-2d24-4d4a-9b7f-d67cd122f5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627ad932-3966-433a-8a67-4c2e21235348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e16b47-f6e8-4301-b5bb-2d2684143ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d305c5-8517-445c-b944-69b9e3d19bbd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b884c9-3c06-4919-8a8e-9dc30f942221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d2f549-8ebc-4571-8e3c-90380ae40390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedbbd50-d558-4287-9a4c-8d4cb25442fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debe225e-1e3e-497a-9d8d-e65d1fe1a8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faab4aaf-f0ab-41ef-b2cd-899f3c267ea1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02dfc80-7731-4625-9119-6781a9c7d0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3658643-4c24-4a68-99c3-7cefa5d51d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f832ed-634b-483b-82a6-3307001912bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbff9e55-dd8f-4771-9c3f-975660f5ffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98baa509-14a2-4bc3-93a6-e7db2662ed78",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b262afa-0cc4-45a7-ad9e-df2d9cbc633d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73f868b-abe5-487c-9062-7e430386b275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30fc136-ead4-4427-b89a-bf7cde3da483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098e75f4-2aae-4250-adf0-dcd252bbd8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a70fd97-92dc-4e27-a6f3-055011ec4dcf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb27f34-aa40-4b93-b3cb-8bc037f3b6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd66d52-3b68-4511-ae31-0de08539897e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c09fbc-3f8f-4c2c-8f0c-7815ec7a88eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b041ce7-cd8e-4dc6-9e58-80cc223bd388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805f67c2-29aa-4ce5-9c4d-7a4d5ccb3170",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74692e4-56cc-49c2-9694-6e2c73504a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d658615-8a8b-4ea4-bb0c-1a8c3509846d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34f92f0-e58a-4325-ba7f-0c8628b2f85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166d7528-1fb1-4090-9dcf-ad8bc20c3065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa51617-5b0e-46ff-9641-fe14f22e51ae",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3021e6-550d-41cc-86b6-cf714e8136f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa70daa3-0fc1-4915-b9fa-7cc359311274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983831a3-5a31-4cbd-86b5-c7555e513d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8f0690-560e-4c95-bec4-2f600507548a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bb700b-baf6-472b-9ad0-62a70f971285",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03962356-c85d-4e75-9f41-8abc3c2b4228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c44be7-9b13-4ae7-bf6f-4a554d8060ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fd350a-7569-4aa1-83ed-64a359e5236e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828a04d1-8357-4ac5-ba7d-1b70a6023c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbc28d6-aa82-4f8b-905f-67c73df8985e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f99afad-9908-46f3-93f5-9977534c794c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c760790-a8bc-4baf-8db2-51baceb5a49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d69de2-851a-4480-8cd5-5d299353516b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27333454-5cc7-41e7-98d0-174000349779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9bb8da-cd57-48ad-a32f-eee50e6ed3c0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603e8d45-8cbc-43c1-bfaa-e13b542fd36e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed36b25-5e41-452e-9a00-2692c151f299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0b0e29-f6ea-4a1a-a08a-72d3183daef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769512a5-c45e-4e33-a581-fbf1d77aa9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2830ab-47f5-4289-a3c6-63288eb3a619",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcce9de-1b23-448d-b01c-c5f1833dac0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5debc00f-10eb-4b17-9681-6159d22920b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc3bc0c-7082-4ac3-bf2e-241c99a6e983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcd247c-44cc-4069-8116-d17026b2db95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3513a21-16b3-43b1-8c06-d250e2db3a88",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad41a56-3471-4775-aeb3-1730c5ca4a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e695f76-8c01-4516-9f6a-b257e1685ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107b759d-cfab-434a-8ec4-88e6637d8dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f1a53e-e668-4f44-8b5b-79299c3d6fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ff5ad0-cacf-41bf-b4c5-c6340fbdf2fb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4100769e-c9f2-48ad-a384-bcf63d421a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170cb5b7-0e10-445d-9c6b-3c071961ab25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dade7fce-f5c8-4bb1-8241-ac3cd8e779ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9a75c4-9be4-4b9a-840a-ec7400349cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1927f0-e9dd-4576-abcf-0602a790ec4d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86ffe85-94e3-410b-81a2-32158b281436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a60b13e6-d7fd-4df7-90ea-1f5230fcc7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7fb5d9-969a-47d4-a8d8-16b224cb057a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f7ea21-c96f-4f57-b3b6-658cfc36c99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272a5261-5d30-4628-96e5-8eb5f596aaa6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a47eb8-fd8b-4305-a370-717e4928f845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09156752-e326-4d27-996f-9d8eb0d99408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8cf4cb-1495-4e07-bfba-1e9093a2571e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39dbfb2-ce3e-4b06-b396-2dbb1b23ac47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5f4850-16b9-4b8e-a53f-1b83eb6b6cce",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829bbcfc-14ee-4877-b8ee-c56dca23ea3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9b1eef-3af6-491f-b4ff-759f556fff15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd014c1-7b40-43e7-9b97-a81ad81803ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66c5dd9-255e-4477-a0cc-3bf01765aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d28bea6-1f6a-49ad-b95c-0b8c41c4aa39",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9645d978-30b1-4dd0-ad95-26160636ff7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b709bff-b694-4216-9484-24d1d7640ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f8591b-791a-4471-bb10-98ef45245356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f3c25a-de6b-48a5-a465-d92a57a4c8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eabdc48-d7d7-4c25-bf9e-a37032ee1331",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede177cc-3d71-4906-82a5-128cf1f98108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec98b1f-b396-4f59-a241-cb20cce9d043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87db7a14-967b-4d40-8cc3-d24064d494c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439d35cc-a0ae-4d88-aa8b-9fa676295bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c818672-4453-4e7b-8cdb-871ee401cffe",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c7cb60-3e9d-4c06-85fc-2526de3540d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48215b04-aaf3-41f2-b074-93cee0fe3712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcac459-e3be-4ce9-916f-6c5a6f8ea72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449523e3-f319-4171-bb3f-6ba86f6e5eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1905644-908c-446b-b925-60143e62f025",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb82b37-1353-4b7c-bcd5-0601cc19ba89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6229cdbe-f2d6-455b-b278-45674803f8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4dc6ac-a2df-4d67-9886-df8824b4f351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e35185-0f4f-4aa7-b049-b473538b701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a3ae23-14b6-4ddb-972c-3eb2b60dc9f2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd3ef2f-b924-4d7a-93b2-ac07f52de6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78571eb4-7782-4f29-9cbb-07cfec37b344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080d8b6c-18e8-4ea8-a603-29c9e0ba654c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4a511b-873e-44d6-a7fd-91cca90495b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6368e6eb-8dd1-4867-b39d-d723b30759ab",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bbdf8d-729c-40aa-bd6e-d7e19e9df4f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a6c9d7-a671-4bff-b2ee-d8bd8651466b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678233e1-9c5a-4d9e-9157-097b203cbe54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21983fe-ec7a-4828-8ffb-0a662318a355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852632eb-5e23-4015-a087-7da16c67a91a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b289992-4017-44d9-aa06-3f0c00375348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de75c4c2-2ab3-48f1-9538-447a35694d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a865329b-c106-4d44-99cd-9caab8543655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e191cd9-bb65-4cec-8811-db267786830f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d576c2c-bbc1-4075-bcd1-ccdf7f4b4133",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee15384-dcf8-4e1d-b2e5-d9c9d9d8c6ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9852a6-6fc1-445e-aba1-7ed46bad24c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424e04b7-a96b-4435-9a06-d6318432c206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f440226c-7f16-4faf-bf6c-af940c03b10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9370d899-99ea-4071-b652-4e0e756947ee",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57f7349-806e-4920-811b-784d0528b086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d6694c-7f8c-4d4c-8c41-fa4934ff1676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb22928-983f-41a0-bfbb-f1073ca59fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bebc72-34d1-4337-861d-d40f98999cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82a3c26-087b-4b4f-8b76-f4b879b6ba94",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bd42d2-4cb7-44d5-bdc9-9347afa782dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233e963b-2d5a-46fb-9cb0-649cd50abed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf232c8a-62bd-4b4d-a01c-137c4ccef2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5783c114-d40a-4e7b-a3e7-35e847f15b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec9f037-6aed-4c4e-a336-7a4101e86333",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d983ec8-3806-4e7b-a7ed-6b7f2cf09866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a6cc09-75a2-4d70-a9ad-0050f83b8f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141c9a1f-6ccc-4881-83b7-d5f0919871ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7722bcc-cc75-4aef-a9b1-7d5d57d2fa0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f07f41-6800-4833-bdba-2d16f169fffd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e30fb0-7df4-4a34-87e3-f3a0d70c49e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83159fe-fec2-4c99-94f9-61cb6772f486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353d261a-80d9-45ef-b34b-a25c78506cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219a6803-6ef1-4335-b90e-546e317f75d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c70568-09f3-493b-ad28-4d566fae9ed8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc35f2d0-6856-46c0-a70d-dbd500ca2aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc0bcc9b-973f-4df6-9d95-f20f282fa0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1710004-979f-466a-b7a8-2a4c16b30097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4ed12d-59a8-4d1e-b053-b448b783b568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc911d1-17fc-41f8-9fc2-d8b939658f7c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0c2d23-22b6-4ea4-9636-d5c5b37b5d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b58928-cecd-4127-a485-84225206fabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2bcf4d-6a9e-4053-9bf8-e4b4f6a56a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0be2bad-3daf-4359-a309-21ec6cd0b0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d9a9ba-b4f8-4e42-9899-86b1778e80c7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7848cc7d-8cbd-4a73-afdd-838d18e06ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f58b4b7-f860-4d09-9544-c4dcec54a2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4837a643-4433-4aca-9c54-3f88e42c15ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddc500a-26e0-4bb7-a9b3-b779b287bf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6975fdb5-835f-471c-ab2a-bc97e1727d46",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce0bc83-6e12-4e18-8bf9-51a8789311c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f9e431-e0ef-452c-9bca-3bf3db8253b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8212790b-98a2-4ae5-8861-db566a020177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b541b2-9296-4680-bf22-e4d0136704a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2731cf9-1422-42bd-83f9-8deffcfd3b69",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b070b0-dd08-49c3-a124-a71003d42487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353b9abc-ad60-4789-a3f8-1ba9e8d21f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a16e176-db4e-4130-b262-1adf3ed93fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94519742-aa99-412d-878a-1c9cb41dcd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11047bb9-5816-4a52-92ce-688da15c180d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d1e4df-5f88-4276-87b9-fbcf35789d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9c3e528-0f74-4c95-af2e-d343e89965af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3eddd76-80e6-41bf-9d61-8ebfd22309c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f577d93-a470-4fea-adba-20e7bdea7e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d501367c-337e-459a-b36f-228bce01eb8e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb46944d-aaa7-404c-826f-9b9173a85e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24d72fb-3c59-4575-afeb-47b9f65e661d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e264f1a6-8619-4c58-8134-855ef6d88a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b09fef4-29ee-41c9-9498-9ff432f649e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4182fc0a-84e3-4733-90a5-e6b5edcca60a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec569ada-52b2-492c-8bee-5df7acb5615c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "819c32f1-54ec-4141-a2e3-d2d654b7c6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1af77b-6cc1-447b-b1fe-c2e2b4155902",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff671d2-bcc2-4018-a3c5-26eff22cc4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b30451-a036-4cac-803d-719fc27cadbc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28535981-88a6-4d50-9f36-083d0012f4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a27da1-c72d-416c-9f90-a5c26712827a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b7aa1e-546c-43ae-997c-60b2f8ac4581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d78102-20af-4d77-8b47-b7c00bf9b36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b76623c-1092-4509-b37b-0368217caa0c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f1fe8e-cc38-4b61-8eea-07ec629314b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecd44eb-00d0-4255-85d4-899114b3db74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235cee6f-1448-4576-a30d-c8afe416114d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ce1032-6654-41ad-8b2c-1dc0fbaae448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b4f852-19e5-4ec9-ad44-0dbb58f9815a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1400bda2-978e-4560-b6ed-243e4d70ec7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f26422f-528e-4809-9518-282294f2fd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25403c0-f2b8-4329-aefd-375ea6d833da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec2fd23-1d54-4451-9660-f9a1ad3345ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d7df3e-40d1-4ded-9c40-43ab96fcc60e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93474ec8-54bf-411b-9e3c-893e1637e168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde3f10b-24df-4f62-81be-708c71e4ff23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a2e573-85ea-449e-b8b4-6c25ca96dfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc5a1e3-0a48-4852-835d-21aa2f786ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abec1cc9-20c7-489c-8b92-91f3d4cb1fda",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4609e3-0d51-40cf-91cf-89e68f1f1b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360b67de-96c4-4bf9-8c26-5ac33ebd72c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f5d8c0-769b-433e-ba5a-709b5957c6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2006cf39-9dfd-4090-8a08-74abbea68476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b440791-b913-4242-826c-370e223c8a86",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7560ffa2-6fe3-4375-a146-1e351f405000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32935dc-4adf-416d-8163-f4413d975531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d4f8f8-7fe8-4da8-bf22-599dbee6013b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708527ce-deaf-4fbb-a558-366ad8552a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157870dd-2bde-4c8e-bf85-0d286ddb7cb1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a0345d-6be4-44ad-9265-89629161d034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "196868fd-0a70-4c82-862f-22d8d2b03dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40ee135-6e1e-462b-957c-1dabf0abf2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645b6620-7a85-4135-9cea-1db6b9a5b5ce"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "130dba29-c7df-4bb5-bb95-5200385e5948",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2f6ec36-c1c0-4427-98d6-cb977d9a795e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9fd5315-ce5c-46dd-a071-9e0163864945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0329167-11df-43f2-b111-58764b4d101c"
                    }
                  }
                ]
              },
              {
                "id": "b017aaaa-37c1-49f9-86ab-44435eb1d1ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0c9f6cf-2e3f-49de-833a-97dc43fbe789",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a5c620-4b9a-4be8-bc88-123ca5dd386f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "56c2e282-ced7-4d69-8d1f-a29516f45890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6e5029-c9ff-4d7b-8b7b-dc32a65c3c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f39589b2-896b-4866-9e9b-6a48892fe2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e90ab40-7cbc-46c5-ba95-9b97dda353a5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e0a633-3b87-4bd8-8a58-a0a13c6ef594",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7929768e-282c-47fe-ae15-4d2472663723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e9bef-8b83-4a95-87a2-ee2b887127eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66712600-86ff-4926-a3dc-47101c319fc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fe19f7d-9e70-4c3f-b8b2-09e954c23389",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8da6c97f-7a6d-4b21-8b6e-33a1b7ad9aa9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c1979eb-c3bc-4501-96f4-52ac86d80141",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f497f17c-8721-4fd1-8b7f-4313ef1a8af4"
                    }
                  }
                ]
              },
              {
                "id": "dc881b85-46f4-4736-89c2-40785cff922d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "28e89a56-e013-47d5-b8c3-a136fd2cc104",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801c79f3-6756-4756-ae99-146e58ea9f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a9eb1b9a-dc0d-447e-9888-9f2c57ab1163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc702779-9f51-4113-b29f-1e1572401b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c173094b-f357-403d-8f3c-1ad5eacace2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b2673e6-b495-4350-ac2b-bb15e9d7cb1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5114b245-dc5e-4444-b413-dd2102ac8c93",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dba01cdc-e2b5-4496-a24e-92c5414e2cf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "632d2b34-62e9-424f-9c78-0e35e1429d26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4134373-ca78-442b-a1aa-9f4494cdc172",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a21ac960-ba9a-4f28-b858-1c51e391b1bf"
                    }
                  }
                ]
              },
              {
                "id": "04d39253-510d-4711-9334-5a9e5416159e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "672dd6ca-1e45-4f77-8da1-ae2a44e260cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c8c506a1-93b0-400b-87fc-f8ef968dd521"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "325b4b66-fa3a-4cbc-9e51-afbca2c902c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9357d9a4-5f53-4679-a75e-9445b26efd41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6f9fb4b-f050-44b0-889c-9c2b1f70deab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "878112d7-7301-469f-b7a4-7ad1d5f3f5c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ca34b62-bf6a-4086-8bcd-8ec4a65f6a0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13903282-3b1e-475e-89a2-677146806187"
            }
          }
        ]
      },
      {
        "id": "61b09f2a-f2b8-441e-87f9-fa62cb00499e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dbdf3c86-b199-44e7-bc98-3a969ea6ab0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7af97b5b-0570-4324-940c-a08869b56e9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9d724dc-4637-45a5-b2dd-702b25258ad5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d15ed5-e1b9-44df-97bc-d322b513d9ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7aefac2b-2481-496c-8366-a1ea1eb1880f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4cf084-5508-4bb3-9967-57fd6bbc709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93296081-bd98-44f0-9ad8-d8cf0ab0e762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735b782a-56bb-4680-b993-bca7f85f72ea",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12a455a-50e8-4738-91c1-431681bda000",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32106f2e-94aa-48ec-8edd-d3b548910305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36d7f5b-3add-4f5b-b1e3-ab4a185e9968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "547bc58c-4d56-47d8-bcb0-c807ba81d732"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6372b3d-a05f-4fa3-8d09-d297bbde4b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "477680fc-a544-47b5-b085-7447548c53ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5431fb4c-70d1-4e37-a8ff-c470d01ed6db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec735c27-b82e-45a0-ad08-dc9dbc250e36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6212536c-1d9a-46cc-b6e7-9fd332c2a3f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a600ae78-8b57-4a4d-bbf2-cbee6391394e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1a5ab71-f1d2-490c-bbec-b5a63d35d170",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60622f59-cbf5-4920-ab2f-3359b8539690"
            }
          }
        ]
      },
      {
        "id": "ad2cfa57-a9f6-4be1-96d5-cac28c8687b7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c69a710e-4c21-44d3-a24d-1811b170148a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9e86787-0985-4018-a747-d172a00341b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d86aba0-5b41-4765-b63a-2ac26c6591ee",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adad6cd-797f-4eb8-8e41-cae6728a235e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34132dcf-d91e-4a90-b42a-f0843a8801be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64410a68-e8ee-4e59-bd86-2efefe0e7be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b17b8989-ece0-4b6d-9d42-9ce996451eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd80a08-abd6-42b4-abed-a30480ec9b53",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08fd213-8839-4755-97a9-b977a79c22bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ecb94b-8e67-4404-8c5d-31461c140aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fb52b0-662e-4900-bf61-966c5e4a0399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fcabf7f-686a-44ed-bfca-ccdac135523c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e39437be-9aa9-47a3-a9bf-85f30922805a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d78efd2-3e10-443e-a889-23430be70da8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "667287bb-e77a-449b-bcbb-ca7a1e7e2275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17b3d6a7-4203-4dee-9a8e-7d7f0d20b1cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d7323b7-206d-45eb-a1e3-6bc82019a043",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d895c00-1201-4ff9-9cbf-54037d4f9f8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86354bdd-55dc-4ff1-a808-3f737988c672",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d027f561-c027-4228-a9b3-6af401307e03"
            }
          }
        ]
      },
      {
        "id": "5a69f4a9-e877-4515-a548-f71a65471d23",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6ec9e8b3-5251-442b-b5c5-c07f79d83f99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "419ea1d6-818a-4cc2-a41a-92bfe0787d5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d83c8b95-6bb1-4c06-b7ba-4b5188c12a11",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce7be48-1323-497b-8c85-170dfde636a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d905d557-f846-43aa-aca1-90f9c77fed3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083cb844-1883-4433-893f-2db4dedea8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9990da1-c2d7-4b57-ae89-966707bc5520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea90d18-be6d-472b-9a60-2e954c8b39ba",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000a95a4-288e-4ef1-81ff-cb07a4fe4d3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "64d7dd2d-300d-4255-8f3b-134048470361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ea1060-099a-4b16-898a-54ade9741761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caa9c1fb-5b27-45d8-b2d7-0afb9de4cc93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99a17f9d-a822-48c6-9bfa-2a86434988a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59a02c63-f386-450b-b3e3-d78bcfa9b725"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d4063bf-c257-4b4b-8b38-3fe6c680302b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfd14ed3-b655-400f-a78c-702229847fe8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3adbbc6b-59b7-4ed3-a4c5-8ad0cd682769",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db26de80-0da1-4ed8-89f0-0937e13c1736"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c6ff7c8-76d3-428d-b232-738ba950c3e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce937312-90a9-4896-a597-4968ff6c7758"
            }
          }
        ]
      },
      {
        "id": "5d19850a-502f-4388-87a0-e37b15e4aee9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ae9e5a9-71ee-4ef6-ab69-871b0a670e7c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a24d8ab-4eb0-4ff4-8c85-23427732c14a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9cc4a6ec-dd15-42b7-8ff3-9c31f27d2256",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3806ce71-d744-4e22-b206-cebc57a8150b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c65e56e-cd39-4b6a-8f59-860c8a1c3fe9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 43.553846153846145,
      "responseMin": 14,
      "responseMax": 599,
      "responseSd": 59.86697581220728,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682296668597,
      "completed": 1682296690792
    },
    "executions": [
      {
        "id": "3724f2c0-35f3-4c30-944c-01d40216990d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9dc9d771-f303-400d-890d-3ad1edeb4c39",
          "httpRequestId": "09be2af0-1a16-432f-b661-8ac4a107594e"
        },
        "item": {
          "id": "3724f2c0-35f3-4c30-944c-01d40216990d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a78338b7-6c95-4aa2-9bfc-0290040de87c",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 0
        }
      },
      {
        "id": "288ff4ee-f35f-41ef-8e62-04533d71e517",
        "cursor": {
          "ref": "04eccaa8-fd2c-4fdc-98b8-dd6846bdc50d",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "63b33266-90d3-4836-acf5-d20ad2147c51"
        },
        "item": {
          "id": "288ff4ee-f35f-41ef-8e62-04533d71e517",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e07b527-2173-4e99-b58a-b5570f96272b",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "1155a116-129f-4273-a8df-982fc9bf1426",
        "cursor": {
          "ref": "a3af2ae6-9591-47b2-8bf0-a9e645b5c31b",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "13d28f12-9809-4068-a29b-d85e6aee4b4e"
        },
        "item": {
          "id": "1155a116-129f-4273-a8df-982fc9bf1426",
          "name": "did_json"
        },
        "response": {
          "id": "dc0ff96f-82ae-400e-9265-bdfa9c80e828",
          "status": "OK",
          "code": 200,
          "responseTime": 158,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3a3e0b-11e2-40c0-a63d-ecdbb90380b6",
        "cursor": {
          "ref": "b472720c-5ff9-4f70-83bd-d2341d1ae1f5",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "54980362-3f20-4984-9794-4acf2d407a26"
        },
        "item": {
          "id": "bc3a3e0b-11e2-40c0-a63d-ecdbb90380b6",
          "name": "did:invalid"
        },
        "response": {
          "id": "d600943d-52ef-4623-8712-c4fdd5ebf02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3a3e0b-11e2-40c0-a63d-ecdbb90380b6",
        "cursor": {
          "ref": "b472720c-5ff9-4f70-83bd-d2341d1ae1f5",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "54980362-3f20-4984-9794-4acf2d407a26"
        },
        "item": {
          "id": "bc3a3e0b-11e2-40c0-a63d-ecdbb90380b6",
          "name": "did:invalid"
        },
        "response": {
          "id": "d600943d-52ef-4623-8712-c4fdd5ebf02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b2de1d-4966-44a7-8b9f-00bbb14a2228",
        "cursor": {
          "ref": "a88232f4-eeca-44c5-8f01-7337ac76e0cd",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ec04a3eb-52e3-4667-b218-70ffe6e843f0"
        },
        "item": {
          "id": "50b2de1d-4966-44a7-8b9f-00bbb14a2228",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ab3b1a40-f16f-4423-87af-95c889d2e728",
          "status": "Not Found",
          "code": 404,
          "responseTime": 136,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a22fd22-ae9e-4dc2-939f-02be3de8c071",
        "cursor": {
          "ref": "54cd317b-8def-4a13-abe4-1333a31aae4b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a7951ddf-5224-4548-ae76-3f3b2c249436"
        },
        "item": {
          "id": "7a22fd22-ae9e-4dc2-939f-02be3de8c071",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "64650a6e-73fe-46e7-841a-1003b93b5e85",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335a5c0c-c28f-4da4-aa21-7089523887e2",
        "cursor": {
          "ref": "f1838e1f-bc71-410c-9afb-4ecbad111c50",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3fa4fcb6-901f-467d-9255-a0fd8e04beb3"
        },
        "item": {
          "id": "335a5c0c-c28f-4da4-aa21-7089523887e2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3803aa4c-1145-4783-853c-ed92797adc18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e194cac-a9eb-4198-9ad0-6b488cde1404",
        "cursor": {
          "ref": "e1dba03b-b053-4403-80a0-f55dd5f24f43",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6d3acbab-7171-4c8a-b556-ff625c8d6ad2"
        },
        "item": {
          "id": "3e194cac-a9eb-4198-9ad0-6b488cde1404",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0f428a62-f268-4032-a646-8c27c25e7357",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e194cac-a9eb-4198-9ad0-6b488cde1404",
        "cursor": {
          "ref": "e1dba03b-b053-4403-80a0-f55dd5f24f43",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6d3acbab-7171-4c8a-b556-ff625c8d6ad2"
        },
        "item": {
          "id": "3e194cac-a9eb-4198-9ad0-6b488cde1404",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0f428a62-f268-4032-a646-8c27c25e7357",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0d3862-dd6a-4900-94bf-1adaf27edf59",
        "cursor": {
          "ref": "91c987fb-1b97-4c20-8f90-994c7de1bc3d",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c45cd54f-9902-4a9c-8093-e4beff132968"
        },
        "item": {
          "id": "6c0d3862-dd6a-4900-94bf-1adaf27edf59",
          "name": "identifiers"
        },
        "response": {
          "id": "82724a94-ac6b-447c-b257-9bf84e875963",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591cc467-5a93-4167-93e5-57fa12c2c117",
        "cursor": {
          "ref": "5c2ac635-8540-47a2-80f3-0b1760ed8758",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3c9cf1a9-2814-4650-8d5d-e61f857ca0f0"
        },
        "item": {
          "id": "591cc467-5a93-4167-93e5-57fa12c2c117",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee789823-d627-4192-bd79-01fa812b9326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591cc467-5a93-4167-93e5-57fa12c2c117",
        "cursor": {
          "ref": "5c2ac635-8540-47a2-80f3-0b1760ed8758",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3c9cf1a9-2814-4650-8d5d-e61f857ca0f0"
        },
        "item": {
          "id": "591cc467-5a93-4167-93e5-57fa12c2c117",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee789823-d627-4192-bd79-01fa812b9326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102d1d47-3b9f-48b1-8762-d508e43788b4",
        "cursor": {
          "ref": "ef45bc0f-63cd-41a4-a6c4-0475f17c3f1a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "653ed1dc-8bf1-4b66-8fea-796fa46acd4e"
        },
        "item": {
          "id": "102d1d47-3b9f-48b1-8762-d508e43788b4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d488490e-2993-48e0-b36d-b5fd3bcc8eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf0699a-1cad-4e54-825e-d2df8a9b44c2",
        "cursor": {
          "ref": "82e48459-ceda-416b-adaa-a51402024d3d",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5838e6e7-fd29-44d1-b4b8-fba6a897fcf7"
        },
        "item": {
          "id": "bdf0699a-1cad-4e54-825e-d2df8a9b44c2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a0e64294-6b7a-4ba9-a6c4-fe22c64c1dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c444078-7145-4a3e-b2c2-99aec2b837fc",
        "cursor": {
          "ref": "f4a27b85-62e6-499c-b5ba-5ebadb1e1953",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "deb2b7fe-cbd4-4865-b206-473f470af0b7"
        },
        "item": {
          "id": "4c444078-7145-4a3e-b2c2-99aec2b837fc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7bd779e7-d119-4831-9c4c-1205ba48917c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f283ec9c-9dff-4cba-82ec-8353d92b8274",
        "cursor": {
          "ref": "498dbba2-8e6f-4e67-8447-151f9529f6c1",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9d50c043-0cec-4e47-8424-e48cec94ac9d"
        },
        "item": {
          "id": "f283ec9c-9dff-4cba-82ec-8353d92b8274",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "50b84e13-fcc4-4cf7-95fb-ae83d494dafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565f58d1-c73b-4545-b810-dbf9b5899cf5",
        "cursor": {
          "ref": "aec8573d-88dc-4c24-ab93-a04579767106",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f68097c0-2ba5-41d3-af30-78a34534670f"
        },
        "item": {
          "id": "565f58d1-c73b-4545-b810-dbf9b5899cf5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a72a9227-5a07-4fe1-84c2-68dee3f9b086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9a89d6-24ad-4795-93fb-d0c6305bb6e5",
        "cursor": {
          "ref": "fc1db926-e81d-4c83-8439-412ad062c78b",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "991dbe26-90b1-42cb-8a46-9b503768e9d9"
        },
        "item": {
          "id": "8f9a89d6-24ad-4795-93fb-d0c6305bb6e5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "af6dbb06-8cc9-4f72-8af6-6cc4e01488c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab187dc-773e-4f04-9bbf-93bcc86efb6d",
        "cursor": {
          "ref": "141ac22e-09e5-46f3-b4b4-018ea57d8e85",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9e0e6295-85b3-41c1-9bbf-38fcea34f275"
        },
        "item": {
          "id": "7ab187dc-773e-4f04-9bbf-93bcc86efb6d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f376a0f5-bbe6-4237-b275-725e8fa9871f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d168ea9-dc62-495f-9cfc-bb4f368453ce",
        "cursor": {
          "ref": "0f2f161f-d3a0-444f-85f0-479853008267",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9fda10a5-8a85-438d-aafa-600fba6a3a4e"
        },
        "item": {
          "id": "0d168ea9-dc62-495f-9cfc-bb4f368453ce",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2f09a421-1851-4a5c-9834-51d717d3479f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4d1d9a-7f52-4600-a3aa-d11a94c848e7",
        "cursor": {
          "ref": "23f8eb63-be57-49a6-88c3-b8fb651ef7df",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2e3cdf08-47d3-45da-85a1-7675f2c499ad"
        },
        "item": {
          "id": "0b4d1d9a-7f52-4600-a3aa-d11a94c848e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d488ed24-c611-4439-841b-83d5e3da98b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da44381-39d3-41dc-b5bc-493322c640bc",
        "cursor": {
          "ref": "02e9a3a2-5523-4a64-95ad-b0e063f3afc8",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "49bbe44a-0d89-4e46-8e43-64f2988b4eab"
        },
        "item": {
          "id": "8da44381-39d3-41dc-b5bc-493322c640bc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ff260c70-ddf9-4e43-8a3c-45e0fc1eaa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed46f6d-761b-4378-a60f-f49e582d5f03",
        "cursor": {
          "ref": "13c20774-cdfe-4de4-8d3a-d4ca7e52a928",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ccc92fb8-4209-4288-86d1-5f429731d754"
        },
        "item": {
          "id": "bed46f6d-761b-4378-a60f-f49e582d5f03",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d62b9c92-10db-4a16-9565-abcf7a796a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be11d8b-5ceb-4c85-b8e8-27f726fe36c7",
        "cursor": {
          "ref": "1d6c8f23-a803-4a9c-8e8d-e3b60405220f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2932a55f-4933-43ba-8eae-2730686fde23"
        },
        "item": {
          "id": "2be11d8b-5ceb-4c85-b8e8-27f726fe36c7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b156ec16-0317-48fa-9624-520c22cfb391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b117a13b-8b2e-4c4e-841b-c9e339c98b9b",
        "cursor": {
          "ref": "6a93431b-61b2-4c70-9c44-9bec57409e8d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "723cbbd0-277c-4845-b115-b538021f9198"
        },
        "item": {
          "id": "b117a13b-8b2e-4c4e-841b-c9e339c98b9b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "990929c2-0265-4eec-b3bc-35de61388f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02796ba2-38db-4e63-a9f7-32a39e3b7775",
        "cursor": {
          "ref": "2593efe1-81d0-49aa-a7b6-6382ce722193",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d7f9766b-b6b3-49d0-8354-92150a7e7b1c"
        },
        "item": {
          "id": "02796ba2-38db-4e63-a9f7-32a39e3b7775",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0632e318-3b53-47a6-ab02-32aabb482f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4618dab7-fa75-45c3-8f4c-6c17fd333791",
        "cursor": {
          "ref": "1eab7b0d-2833-4cb2-beb9-011a7214a826",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40cd4181-34d9-4791-887c-e9ca61c4b780"
        },
        "item": {
          "id": "4618dab7-fa75-45c3-8f4c-6c17fd333791",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cc7e006a-70ca-41a7-b8e5-d4b3d29827eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02831efb-e6f0-46e9-a16c-281d546c5dc2",
        "cursor": {
          "ref": "5c4a136e-fd5c-4bdb-8845-0a61553491ee",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8be39075-4fde-4e0c-a1cf-62d7ef285afe"
        },
        "item": {
          "id": "02831efb-e6f0-46e9-a16c-281d546c5dc2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e63dcab-067e-4fa2-b296-6cf62fa14a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b31a8b-b7fb-47ce-b0ab-587db9ba0da9",
        "cursor": {
          "ref": "793fe87c-48cf-4df2-b2fc-322f3967d554",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9155306c-3da9-4c4a-8f25-aeca5e7bc903"
        },
        "item": {
          "id": "24b31a8b-b7fb-47ce-b0ab-587db9ba0da9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "248e9680-6e28-4340-9201-91d48787402e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e763ad8a-0551-4ba4-b80b-dea70b9601d2",
        "cursor": {
          "ref": "0626f6cd-8cd5-4c5a-9e0e-e84344a06181",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c77e546a-5bf2-4540-97d2-9ae57a87818e"
        },
        "item": {
          "id": "e763ad8a-0551-4ba4-b80b-dea70b9601d2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b1afffc7-4960-47c4-8950-016b8560c678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4162c0-e4f7-4778-8aaf-14188dedfdb3",
        "cursor": {
          "ref": "782e46f7-6cdb-45b2-a7dd-0dc9eb2f330f",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c368a406-9a3a-42eb-b35d-20881f1b7aa0"
        },
        "item": {
          "id": "ae4162c0-e4f7-4778-8aaf-14188dedfdb3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8499fe1e-90c2-406c-aee5-1bd43e7c41c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d82b897-4636-4089-8c56-b5b6e61c3826",
        "cursor": {
          "ref": "64736c7d-ed95-4ef6-a34d-bbb7a016486a",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6cea23b7-b9f0-45b7-8438-1c0e27de7435"
        },
        "item": {
          "id": "4d82b897-4636-4089-8c56-b5b6e61c3826",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5b39dc4e-691b-4e9d-bd0b-4d60ddc3835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a0110f-99aa-48cf-befe-79ded0c3bb90",
        "cursor": {
          "ref": "3e5b66c7-5f16-44db-8326-9ebea6ad345f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9823715b-568f-4d7e-992f-f148f76905af"
        },
        "item": {
          "id": "55a0110f-99aa-48cf-befe-79ded0c3bb90",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6b68565f-e6d4-491c-9c19-3aff0150ac85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc07657a-ad5e-41df-90ee-fdd4c6f5fdd0",
        "cursor": {
          "ref": "b05ae793-7637-4464-8d90-0fbd339cecd2",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cd980de0-f889-458e-bdb7-3b861b3d2d7a"
        },
        "item": {
          "id": "fc07657a-ad5e-41df-90ee-fdd4c6f5fdd0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b9dab310-8c94-49e8-a920-6c32e67a85ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb78cac-032a-4839-87ed-18a1653476ce",
        "cursor": {
          "ref": "11838ac1-ed71-4b46-a971-76124399f00a",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2511310e-3bb8-4202-bbbe-7a424fab02c8"
        },
        "item": {
          "id": "7bb78cac-032a-4839-87ed-18a1653476ce",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "158e3420-b411-44be-8e2b-c16253dcaa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49fa510-52f0-4cc3-b53e-d467bdee45e1",
        "cursor": {
          "ref": "91773be0-e68b-46ad-9bab-8a90a98517e9",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08b680da-62e0-49d8-a379-3049333a6034"
        },
        "item": {
          "id": "c49fa510-52f0-4cc3-b53e-d467bdee45e1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "df43f2e8-e7db-406d-9c68-b18a44218d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f98aef6-fe64-4b3d-a35c-0af7ebe176c7",
        "cursor": {
          "ref": "498b942c-1af8-4b7b-b663-157509c36031",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2cfd28e7-8923-4791-9d1e-85cf6dd09dc6"
        },
        "item": {
          "id": "1f98aef6-fe64-4b3d-a35c-0af7ebe176c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f79bb080-eaed-44c9-9801-212976a4c5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5e3f1b-7cc1-49e3-a8af-8296025b8d1a",
        "cursor": {
          "ref": "ed283fd5-e748-425a-84da-428ecc4b98eb",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9605f43f-23bb-4ebd-980c-a28815c1b0f2"
        },
        "item": {
          "id": "1e5e3f1b-7cc1-49e3-a8af-8296025b8d1a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "350ee31a-7015-40e9-a9c0-9ed1e26c1b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649b7dd9-dd2e-4c74-87cd-35113ad77918",
        "cursor": {
          "ref": "5fddaeed-2bc8-442b-a33d-e76809f09a8e",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7500589e-dea6-49fa-b46b-3b06d990ee76"
        },
        "item": {
          "id": "649b7dd9-dd2e-4c74-87cd-35113ad77918",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c2735208-3997-4b88-a6f8-e5effed08772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e0f831-1398-47eb-a5d4-6e8eae3f3f63",
        "cursor": {
          "ref": "c34ff13f-f83c-4e0e-ba53-e40bd116b867",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "83f03054-6eee-42f0-b85a-a3da6d15ec36"
        },
        "item": {
          "id": "e6e0f831-1398-47eb-a5d4-6e8eae3f3f63",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1d3a1093-8a98-4f55-9e78-3de1052ff6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca4b180-8edb-4b81-a789-497d1baa687e",
        "cursor": {
          "ref": "34ed3f90-344d-462d-9fe2-acaa8e0b0365",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bc55bc7d-1860-4b31-a689-82301460b96e"
        },
        "item": {
          "id": "0ca4b180-8edb-4b81-a789-497d1baa687e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "af1a45e7-2ca5-4621-8789-a86d55e846d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0732cd11-302d-4879-9343-fca2154708ea",
        "cursor": {
          "ref": "6840b7be-f7f2-44ed-88f9-7bc9d511a381",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3e71ed4f-7b05-4fa1-bcdf-32abe920bd62"
        },
        "item": {
          "id": "0732cd11-302d-4879-9343-fca2154708ea",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "64e182ab-a35d-43ee-9f25-209251397099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f12055-a09b-4a5e-b74e-2e03370a26b1",
        "cursor": {
          "ref": "5e99ea99-129f-4374-9910-f0c334001196",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "677b9c43-48a0-4fa0-bce1-391836910d54"
        },
        "item": {
          "id": "e5f12055-a09b-4a5e-b74e-2e03370a26b1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf81e64a-46df-43da-afb9-517a87faca06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9239cadb-13e8-49a3-a5d1-e26e1044030a",
        "cursor": {
          "ref": "85e2c5c9-e19d-4963-b913-3dfc09486a53",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c80375d4-5e55-4d61-99cb-27f9bf15ef2f"
        },
        "item": {
          "id": "9239cadb-13e8-49a3-a5d1-e26e1044030a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bb7988ba-1f6f-4077-9fe2-b9ea87d8c121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4b0702-77fc-46fe-bf38-ac654a073794",
        "cursor": {
          "ref": "151be72d-2028-4f65-9941-f8351c321a6c",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "489426ca-e777-41ef-a15d-480d186d8981"
        },
        "item": {
          "id": "1b4b0702-77fc-46fe-bf38-ac654a073794",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5ac12677-452c-480e-b074-56a3d5d711f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b1de1a-74e3-4638-82c9-7294721517b6",
        "cursor": {
          "ref": "13c17c78-ce0e-4f41-b7e1-d47be93016c9",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4ddb3553-b73f-4061-88a1-ef828280b791"
        },
        "item": {
          "id": "97b1de1a-74e3-4638-82c9-7294721517b6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "68569835-3302-46bf-b829-864a1d0ea2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf14969c-58b3-4bd0-b8ea-07623af47a68",
        "cursor": {
          "ref": "e991a592-6b26-4cb0-8b4d-560e54ac2f32",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7085bc26-14e7-48f7-bfc2-99b233eabc18"
        },
        "item": {
          "id": "bf14969c-58b3-4bd0-b8ea-07623af47a68",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "39397ae9-a5cd-45ab-8d60-d38f93059f40",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07264b0e-1033-4234-8e57-3c5799a4bf45",
        "cursor": {
          "ref": "07db903f-3890-47af-92fb-24f253115fda",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e6dd2c8d-678c-4db3-a070-7bc32f678744"
        },
        "item": {
          "id": "07264b0e-1033-4234-8e57-3c5799a4bf45",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9db1e074-ca76-48ab-a565-a838480f6633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917a63aa-74f7-4474-9bc5-e61179bc6264",
        "cursor": {
          "ref": "e36275be-dc31-4be2-b2e4-57900617ca17",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "342ab9b9-f854-4753-be38-6a60a91dda74"
        },
        "item": {
          "id": "917a63aa-74f7-4474-9bc5-e61179bc6264",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "686cfdb1-ff30-4973-a3db-2d3e2fea43e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bc9e0b-c7df-41aa-99d8-64be414a564c",
        "cursor": {
          "ref": "34e51c69-402c-4f89-8c00-540a517534b7",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d19d48e3-4ce1-4dfb-9350-390532048275"
        },
        "item": {
          "id": "f1bc9e0b-c7df-41aa-99d8-64be414a564c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2b86f86d-0149-4c4c-9a54-8b3bedb6d80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2411a3a4-256c-458a-a4ad-6d6fbf0de4f9",
        "cursor": {
          "ref": "edee2282-3345-43be-a144-30380f5d6776",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cfcec354-7aa8-440c-9d57-a740be6b0774"
        },
        "item": {
          "id": "2411a3a4-256c-458a-a4ad-6d6fbf0de4f9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "44e9a6a3-eeb0-4761-b9fe-969ae8b5416b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629e48e4-47b7-4c33-95d7-3782e6c62286",
        "cursor": {
          "ref": "cd5f0a1a-bb4f-47ed-94f8-900339870ee0",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "31a7fbb4-2105-4a1d-a8ea-d3b921604417"
        },
        "item": {
          "id": "629e48e4-47b7-4c33-95d7-3782e6c62286",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1575e8fa-27e7-4412-9a6a-4ca837d07112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c25279-92e2-46d2-b06f-23a299f77fbb",
        "cursor": {
          "ref": "26bd357a-bf02-47df-8143-819bdc33ff63",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "05b04c7a-37ae-41c3-b5f4-fe98ecce5579"
        },
        "item": {
          "id": "93c25279-92e2-46d2-b06f-23a299f77fbb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b1aeccce-c74c-4a6c-8047-abb5be76da2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c986f7-0299-4051-b7c9-36d0f8b208ee",
        "cursor": {
          "ref": "0ea34d88-8896-4961-8d63-7921c2cc5dc5",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "471a23bb-6bf1-4d4b-8315-ea573618732e"
        },
        "item": {
          "id": "a5c986f7-0299-4051-b7c9-36d0f8b208ee",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5edd1397-fe86-4acc-a804-0b4d20826120",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fe6e35-189e-4806-9547-d51c5bfe38e0",
        "cursor": {
          "ref": "bc4fa3d7-d1c1-4b5e-b49e-b0f331f88a44",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5048b12f-8a58-402c-ad55-2dae510ae561"
        },
        "item": {
          "id": "13fe6e35-189e-4806-9547-d51c5bfe38e0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "284ff554-ee11-403d-9715-e0f84e107af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8cca91-2466-4504-8e42-3d34647f4a74",
        "cursor": {
          "ref": "8df55729-50fc-4b7c-860e-e77eefe12a9a",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "53942f88-35ba-404b-b6f7-c0600bbe6051"
        },
        "item": {
          "id": "1b8cca91-2466-4504-8e42-3d34647f4a74",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "48a36d94-2e47-48f1-8b9c-c7ad2d7d0938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9757618a-15ef-40f0-b1a0-242c464007d2",
        "cursor": {
          "ref": "1a695e8b-d867-4ded-aefe-34e12d24e154",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a3461088-2386-47fd-aff5-28ae245fefa9"
        },
        "item": {
          "id": "9757618a-15ef-40f0-b1a0-242c464007d2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b1be8ebb-7217-4d1a-a43d-1061fc695bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea6e37b-40f3-4156-813e-a5c412b28f49",
        "cursor": {
          "ref": "e34e0beb-0969-4890-94e1-172659ba4315",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "067131da-300b-441b-80a1-9cab43238c0c"
        },
        "item": {
          "id": "4ea6e37b-40f3-4156-813e-a5c412b28f49",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5e362837-9433-4991-abf8-7953a4219d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f5cde3-5ab2-453f-9007-b4c068e16ebc",
        "cursor": {
          "ref": "746762e7-b749-4ca6-8a11-945d2b91aacf",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6fc4cfef-808f-4dbf-b22d-2ab45fdfe968"
        },
        "item": {
          "id": "69f5cde3-5ab2-453f-9007-b4c068e16ebc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "49ffc1df-839a-46cc-877e-563eb4d525ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958c3044-7cd1-4758-b471-0b4fcdac6818",
        "cursor": {
          "ref": "6bddb53b-0764-4fe0-ad0e-d194591b6613",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3febc1d1-b55e-4fde-8804-f273d1082afe"
        },
        "item": {
          "id": "958c3044-7cd1-4758-b471-0b4fcdac6818",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "23f72e2a-1c6f-466a-bd7f-d1fca505f906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46961fcc-cad6-4cce-b470-c8436b5af998",
        "cursor": {
          "ref": "b3f3428f-6699-4bf5-89c4-f9f82836d38b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c270f533-4677-4ea6-9f09-ad7e2531647d"
        },
        "item": {
          "id": "46961fcc-cad6-4cce-b470-c8436b5af998",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ef686fa4-aeb1-4984-8534-671306af1f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa49f905-5fa5-4ea4-afff-d856be3894d3",
        "cursor": {
          "ref": "cc046c10-805c-45a9-a99a-c290ac77ebc5",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4cb84743-dfc7-452c-a889-8d1f9d4d5d2a"
        },
        "item": {
          "id": "fa49f905-5fa5-4ea4-afff-d856be3894d3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "73e9a5d4-2410-42b0-b955-158faf65fa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374d15f1-4f16-4f4f-98e2-ca2147f12a5e",
        "cursor": {
          "ref": "07dfc0d4-209e-4aa9-a966-88cf8693fee6",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e457ab1e-16bb-4e39-bda8-25d5a577767e"
        },
        "item": {
          "id": "374d15f1-4f16-4f4f-98e2-ca2147f12a5e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "850b72c1-cce3-4356-aa16-f348a000ca48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3be3e6-5745-4c5a-8a70-f4a2f9c084e0",
        "cursor": {
          "ref": "db0291fa-00a7-4274-b002-ac4bd487d6cb",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "35759ab9-805c-433e-915e-6fa6bc7ddc4e"
        },
        "item": {
          "id": "5f3be3e6-5745-4c5a-8a70-f4a2f9c084e0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c38e8c21-89c5-4379-9a01-1df0d4165f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dae7ba9-50d7-477c-bda5-1bc437c6be25",
        "cursor": {
          "ref": "e737362f-281d-469c-ba99-d3b2ba5b9c16",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "80ba2ee6-852a-46c5-954e-522a6ff8e79d"
        },
        "item": {
          "id": "2dae7ba9-50d7-477c-bda5-1bc437c6be25",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a1a70291-3941-4855-8aca-3b6e39880fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d20e16-d815-49cf-8f6c-7db9c10be432",
        "cursor": {
          "ref": "d55ac8d6-4121-4d52-b6ef-b3dd61ad8813",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4e777e8d-90ca-4045-abb0-7f94746307f2"
        },
        "item": {
          "id": "43d20e16-d815-49cf-8f6c-7db9c10be432",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e3a036a2-6049-42c4-b21c-bf68806b1a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3089b3-c0b4-4482-b2ca-4b864def18eb",
        "cursor": {
          "ref": "6ffcf524-6a82-47c8-8c79-8715d11f4ad6",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a788b1bf-6bae-445d-aefa-b2117c833b58"
        },
        "item": {
          "id": "fd3089b3-c0b4-4482-b2ca-4b864def18eb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b968102e-95ff-4a7b-8e7b-4de26bceaf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec60856-601f-4ffc-aa77-04645443ae96",
        "cursor": {
          "ref": "60ef81ca-b66d-4349-96b7-d4480606b25d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8a0ff367-793f-4a67-9c5a-87db9c6e538a"
        },
        "item": {
          "id": "eec60856-601f-4ffc-aa77-04645443ae96",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4d2fe375-36d2-40d5-88a8-7bd03a9c9fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417f4c59-5238-405c-8afb-d51aa9c94be5",
        "cursor": {
          "ref": "6624cb66-8d87-44dc-9858-e39b3df95dce",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "29f59965-e13b-434c-8ce2-7ff94a44a2e4"
        },
        "item": {
          "id": "417f4c59-5238-405c-8afb-d51aa9c94be5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6db2aed7-03fe-4fb5-87c7-4b8f0ff66acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee03725c-b834-45b2-8842-5bcb2734680d",
        "cursor": {
          "ref": "25f3942e-7c21-44e8-aafb-cdf289ce0f1f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0cd6e9d8-a69a-4fce-a496-408cb7578e8c"
        },
        "item": {
          "id": "ee03725c-b834-45b2-8842-5bcb2734680d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "50234fb0-f6e4-4c92-8bc7-994b47bce493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208b1d08-c48e-4425-b562-3c5fad11426c",
        "cursor": {
          "ref": "3e421b69-3175-4e51-a887-f5a91ddae58c",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8575f570-d56a-4a2f-b512-2fcd2772a49d"
        },
        "item": {
          "id": "208b1d08-c48e-4425-b562-3c5fad11426c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d27f5176-6986-405d-bc5c-0db0344a93e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ebc229-a217-4ee9-a806-f6ae2b0724dc",
        "cursor": {
          "ref": "f68b4e97-02ef-4548-b837-5100659e3fa2",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "160a245b-7163-4e7f-9459-453868dd3797"
        },
        "item": {
          "id": "17ebc229-a217-4ee9-a806-f6ae2b0724dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3d05fd35-e6d3-44f4-a308-e57c42141e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ffad15-b7c2-40ff-91f6-06d303ed4d0d",
        "cursor": {
          "ref": "4626a420-6894-4fc6-9851-6881e7e42bbe",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2fbfeee8-b619-4522-8d8d-a91c642573ed"
        },
        "item": {
          "id": "c9ffad15-b7c2-40ff-91f6-06d303ed4d0d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f8df6070-efd0-4778-be87-6e768f026bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c166e72-3598-4317-b674-87378c8592a5",
        "cursor": {
          "ref": "38372877-6a81-40cd-ac47-c1aacb5c948a",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d8fc771e-bdfc-4654-866a-56f743455c45"
        },
        "item": {
          "id": "3c166e72-3598-4317-b674-87378c8592a5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c7cd1e08-dba2-4031-b255-c760cbb12e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dfce12-4003-483d-ac59-d25780b45985",
        "cursor": {
          "ref": "13f3ca7e-7e1e-4968-bb12-3381ebeb3e58",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "03538d87-c361-4f11-8ce8-86b298e64a4c"
        },
        "item": {
          "id": "65dfce12-4003-483d-ac59-d25780b45985",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "520e7d23-dd0e-4a4c-a4ca-cc71e1cc035e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c4fba4-0a7b-4c4c-a3ac-8a93f7995887",
        "cursor": {
          "ref": "2b0566b0-77f7-432c-acf9-f3a3a415ad28",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "100ad8db-fe7a-4a8d-a994-93d9023ea6c3"
        },
        "item": {
          "id": "48c4fba4-0a7b-4c4c-a3ac-8a93f7995887",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eef98cac-7596-4cf6-84b6-3fc126b52a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78ac1f6-0593-4780-95eb-60bc3bc87748",
        "cursor": {
          "ref": "e46dc0db-d39b-4ae0-8987-9ab04bc1a377",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c08cf5a1-decb-4ca2-a263-d888031cf9d5"
        },
        "item": {
          "id": "b78ac1f6-0593-4780-95eb-60bc3bc87748",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "44cd756c-2991-4b89-8b9c-9a5da37cd565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d47c35f-1b7d-4e14-8a27-85504e363a29",
        "cursor": {
          "ref": "6c7d3d9e-93bc-4a5b-8929-2d8552f74ade",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d8a8fe9f-ced5-4075-b753-c1a23f5bacf4"
        },
        "item": {
          "id": "1d47c35f-1b7d-4e14-8a27-85504e363a29",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dd3131c5-7862-4898-b3b5-8319feb90d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a617d-6211-43e7-9ccd-4e18724ec5ac",
        "cursor": {
          "ref": "5ddf23d9-6eab-459b-8fbb-192d5bfb2140",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "be18cbb5-31b0-4c87-8488-616d1f66e345"
        },
        "item": {
          "id": "910a617d-6211-43e7-9ccd-4e18724ec5ac",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1afc31f2-e4db-4410-87d9-62e71090bb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9eac43-1507-4312-8084-1e8497d63a13",
        "cursor": {
          "ref": "4e5297eb-319f-46a7-b3a4-109201cb89a2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "021858d1-427a-4035-af8b-a14be349d74e"
        },
        "item": {
          "id": "0d9eac43-1507-4312-8084-1e8497d63a13",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cba2c874-90d0-4034-9afd-f0f410837099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c039aa29-75bc-451a-9b4d-1ecb9d96111a",
        "cursor": {
          "ref": "03946b31-be28-4d17-aa87-c9bcec4207c4",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f96d41bd-e567-49ca-99a2-32f1fb2998bb"
        },
        "item": {
          "id": "c039aa29-75bc-451a-9b4d-1ecb9d96111a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2f3d309d-eada-458b-8d50-39de1e166390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f3638d-fae6-4807-99d2-10195f04acb9",
        "cursor": {
          "ref": "2ed45825-95af-4869-8fac-ac8f700fcdea",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "eb5a8860-ea5f-48c8-a34e-e3de456f2c2c"
        },
        "item": {
          "id": "22f3638d-fae6-4807-99d2-10195f04acb9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e694ee5c-c3f4-4797-958c-9f4b3e99216e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e919ec7a-b093-4912-b93c-35016e4983fe",
        "cursor": {
          "ref": "9909f821-6cfa-4ac4-bb57-f6af1dd26810",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "eedf24e4-67cc-4642-bd66-9a4cc247e086"
        },
        "item": {
          "id": "e919ec7a-b093-4912-b93c-35016e4983fe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e9b5a13c-2297-4d33-ac50-b7efa0f9d7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eff598c-7db7-4acb-be57-523e7e5a44b4",
        "cursor": {
          "ref": "809617de-a923-4298-ba6a-287f55ffc9aa",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "48abd836-5f1f-488d-9ef3-6428e9a1b037"
        },
        "item": {
          "id": "7eff598c-7db7-4acb-be57-523e7e5a44b4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e7462f67-b542-4697-8b96-2618714249cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d793cb-bc24-4190-b34a-71278af70844",
        "cursor": {
          "ref": "0ef85b21-7ab9-46a4-98a8-72686a0b8146",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2fecc5ac-f350-448b-bdc1-00ba9a851af1"
        },
        "item": {
          "id": "a0d793cb-bc24-4190-b34a-71278af70844",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "613a4abf-e400-4ce5-8a3d-5ea550748847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610e9850-23fb-4713-8041-15bda03c861b",
        "cursor": {
          "ref": "533b0979-f8c0-4bcb-ab41-5897c0fa1291",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "afd0c2a0-c6e9-41d5-8546-2ac7018236a0"
        },
        "item": {
          "id": "610e9850-23fb-4713-8041-15bda03c861b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2a643a7c-7097-4584-ba93-351a8e8ef254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28169c26-bcbe-4422-bc7c-c9a439f0ef07",
        "cursor": {
          "ref": "216b8b47-52a9-4ad7-9e93-6733808da3c9",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "74112788-b814-4e3a-850a-e62e4f60216e"
        },
        "item": {
          "id": "28169c26-bcbe-4422-bc7c-c9a439f0ef07",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ae5753d5-6c0b-4227-8bda-360ede98b3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efda977-d73d-4bcb-ad21-a3687764f67b",
        "cursor": {
          "ref": "8ac6be53-81f8-4717-b301-83fbb29ab050",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "de6c231d-2785-428c-8c22-2a6fd244ff5c"
        },
        "item": {
          "id": "4efda977-d73d-4bcb-ad21-a3687764f67b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a22c68cb-3210-42ca-8a99-2fcc01323b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d43038-bc45-4cea-ab60-54fbcb1b2051",
        "cursor": {
          "ref": "8b21bb32-1508-45c7-a5d3-2786b94d8b69",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ad14596d-f73f-41ca-bbe9-8dcae9eecf13"
        },
        "item": {
          "id": "57d43038-bc45-4cea-ab60-54fbcb1b2051",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a75a17e9-cc02-4873-9487-2dd1271f0896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21353bc9-bf6f-4e7f-939d-ed2f9e03ea36",
        "cursor": {
          "ref": "65e15b75-d26d-499c-a386-f4845c6f972e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f8bb6ad0-f8e6-4a38-ba81-063529d5bf76"
        },
        "item": {
          "id": "21353bc9-bf6f-4e7f-939d-ed2f9e03ea36",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ff752a1f-3d41-4823-94e5-7c01497a0724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a88bb2-647b-4b71-9cfa-45efa782223f",
        "cursor": {
          "ref": "813c4f75-e5c6-41e1-9a81-c286816e5610",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0a6bdf0f-8dac-43dd-be63-5e004e7555b4"
        },
        "item": {
          "id": "92a88bb2-647b-4b71-9cfa-45efa782223f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "aa0d130f-774a-41b0-8986-105f32550aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0832e27d-7f42-451f-b1bc-b4c9191270b4",
        "cursor": {
          "ref": "5d27ba08-198d-4d02-a476-2624dc957bc3",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c2adaea1-d2f9-40f5-b9c8-d07df01ef064"
        },
        "item": {
          "id": "0832e27d-7f42-451f-b1bc-b4c9191270b4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "12f623c1-1dbe-461a-8fde-7deb1eb3658f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedcdc23-9f34-4454-beff-708c56f8099e",
        "cursor": {
          "ref": "5e60f7e5-dbc3-4342-90e6-3082e0158a04",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fd5246b2-aadf-4f86-9752-cebccf9fc73a"
        },
        "item": {
          "id": "bedcdc23-9f34-4454-beff-708c56f8099e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a155ffe5-9aca-4f55-ba20-bdd459e1be9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e14a98d-fb5e-4854-a4b5-f918023c402c",
        "cursor": {
          "ref": "af097306-b259-4f62-85b9-5c49255a9352",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6be312e9-5d9f-42c2-9b84-21cc94579304"
        },
        "item": {
          "id": "4e14a98d-fb5e-4854-a4b5-f918023c402c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c4f9e528-d20c-4b32-9c3d-583d669de80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aad3ea-a98c-4e83-8057-da86034c3cce",
        "cursor": {
          "ref": "021125ce-f7ae-4a1c-8faf-96ea42ad084d",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3992b6da-e07d-46a4-ac79-e0f44d85bdfe"
        },
        "item": {
          "id": "52aad3ea-a98c-4e83-8057-da86034c3cce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "23c519f2-42d9-4241-b069-db97f500df8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b60ddeb-190b-4fd2-bdff-f0c07cfd0ced",
        "cursor": {
          "ref": "626be640-1629-4944-afd0-8a6b62fffffb",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "48d61ef2-9f36-4e6e-95b5-bf66fb8104b4"
        },
        "item": {
          "id": "6b60ddeb-190b-4fd2-bdff-f0c07cfd0ced",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d1f4cd2f-360b-46ca-a1a9-0ce26166d607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c830fcd-fc16-41e8-8c07-399a1c5f1d71",
        "cursor": {
          "ref": "22f7a34e-a43d-4986-8c3c-a8d7e1360389",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bbda8cc4-4f1b-4741-a2a8-e348f9c9a9d3"
        },
        "item": {
          "id": "0c830fcd-fc16-41e8-8c07-399a1c5f1d71",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "56de46a5-141c-44ab-90d6-93c1738c51a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0956ae9a-6e61-494f-ab8c-eca8aa69deda",
        "cursor": {
          "ref": "37d72dbb-fc0f-4a39-aebd-6e81cee32655",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ffb50983-0456-44a2-a9b4-b913a4557029"
        },
        "item": {
          "id": "0956ae9a-6e61-494f-ab8c-eca8aa69deda",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b3afb98d-1573-4870-bf27-2887c04351f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2212c1d9-07b1-4952-a01a-903216393ab3",
        "cursor": {
          "ref": "bcc61b15-8eec-422c-a41f-eec904391e6c",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aeeaa930-4942-475b-9e79-fc8fcc797996"
        },
        "item": {
          "id": "2212c1d9-07b1-4952-a01a-903216393ab3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e85b2d87-b2e6-44ed-ac95-34b58d8a1fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bbf97e-2843-4baf-81a9-d7a3adf91b63",
        "cursor": {
          "ref": "93d74d74-e768-4bdc-95df-b555d55c92e6",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3caf86e6-8483-498c-a1d2-0563ea60fabf"
        },
        "item": {
          "id": "b6bbf97e-2843-4baf-81a9-d7a3adf91b63",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ff92be06-1efe-4b7b-b964-75273915ddec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e299ae-e27f-47b6-8f63-35dbe32c3547",
        "cursor": {
          "ref": "f18bf805-062a-4f9a-87ab-540a6d716c94",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "51d1cb4a-ed9b-446b-b604-6af9d582ab8b"
        },
        "item": {
          "id": "29e299ae-e27f-47b6-8f63-35dbe32c3547",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6c3e97a7-c3b8-4256-b77d-4daedbb2956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d363bdf5-5494-41c4-a0a2-67f7b76e474a",
        "cursor": {
          "ref": "e7d6efd3-d12b-4b66-bf58-35df2a177e9d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6b307825-76c7-489a-ad75-f1a0144accb3"
        },
        "item": {
          "id": "d363bdf5-5494-41c4-a0a2-67f7b76e474a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "084ac37e-edc9-49eb-967a-85399f925f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ae409d-0b6b-472f-a8f9-51288468baee",
        "cursor": {
          "ref": "b2d6753f-923e-4d2b-9bbb-d3a3a44e72a7",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9f0dbd0c-bc34-4c9a-aa4d-a3d55b1a16dd"
        },
        "item": {
          "id": "12ae409d-0b6b-472f-a8f9-51288468baee",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ee7e9548-3ca3-4270-a435-01d51d5c0e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac3b6b4-6e78-4402-ae7a-51a5e8e45782",
        "cursor": {
          "ref": "3fbc6030-5c2c-432a-9d39-f4e9a7605df6",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d4f7058d-e11b-4358-a3bb-4c8faf48a8bb"
        },
        "item": {
          "id": "cac3b6b4-6e78-4402-ae7a-51a5e8e45782",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "53a4bcaa-f928-44a8-ba1c-22f0ff5069e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcb8ecf-4025-4b74-848a-a81c267325fb",
        "cursor": {
          "ref": "0ec6cc3c-9009-4a44-a96e-d0802c300c39",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8a28d71b-5800-4664-9c9e-36809976850e"
        },
        "item": {
          "id": "5fcb8ecf-4025-4b74-848a-a81c267325fb",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "962f9a64-7302-4c5c-95ef-f891431ea370",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 145,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e5f073-e56b-437d-af59-854e9b414144",
        "cursor": {
          "ref": "a6ab2efc-1ba4-4a58-a7ab-6866c2590de5",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "16bb80bb-0d73-4b38-b76b-d138ffa318ad"
        },
        "item": {
          "id": "b8e5f073-e56b-437d-af59-854e9b414144",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df52f66f-5d4d-4822-91bc-87c23f9dd316",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "422847c6-d87a-40dd-ae82-33055ff2792d",
        "cursor": {
          "ref": "2b790cda-88f1-4f1b-a78a-48e50b8e5533",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8ec37686-3e08-4cef-bb32-c2a73ed8708e"
        },
        "item": {
          "id": "422847c6-d87a-40dd-ae82-33055ff2792d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dfbed59c-3b69-45ef-9a6d-3f96f6462894",
          "status": "Created",
          "code": 201,
          "responseTime": 112,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4f4d01-6cc7-4db7-9456-438425001e2a",
        "cursor": {
          "ref": "5080100f-0a2c-41e2-8a1e-e5c4050ede89",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "79d12f46-be11-4f91-8fb3-cc781d8d01a9"
        },
        "item": {
          "id": "bc4f4d01-6cc7-4db7-9456-438425001e2a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9f601de5-ae54-4c7a-8709-cfee93be69ee",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee7cec4-158e-406b-b2b4-2194453b15fc",
        "cursor": {
          "ref": "e109cdc0-516c-4bc6-901c-6a689f352a2c",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "eed51d95-59bb-4e46-86cc-9f93205fd82b"
        },
        "item": {
          "id": "7ee7cec4-158e-406b-b2b4-2194453b15fc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "76c6534f-8210-4296-afd1-bb1bf4b1bd82",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6612fa48-11ba-41e2-87a6-daf7a6caafdf",
        "cursor": {
          "ref": "e3fbad6b-e243-4b33-bb4a-dc35d6f0db6b",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b4d4aad5-c488-4d1b-81ba-8604a81d5578"
        },
        "item": {
          "id": "6612fa48-11ba-41e2-87a6-daf7a6caafdf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cc2b0a5a-a7ed-4ee9-8ddf-4d5dd65e08af",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b9f420-9bde-42eb-a3e1-68063a2b0b15",
        "cursor": {
          "ref": "73a7281b-c1fd-4091-9fac-0ef9cb78201b",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4fb98896-ddbb-45f3-b8ec-93a9a57a5111"
        },
        "item": {
          "id": "b1b9f420-9bde-42eb-a3e1-68063a2b0b15",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "847c1e8e-8f8c-431d-bb72-34e5aeb0c130",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5990b85-20e9-40d1-9ba7-ba46530d4c44",
        "cursor": {
          "ref": "26915301-246b-4ddd-8662-26c6698aecac",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "561ca182-3541-4f32-b2d2-cf7555e95190"
        },
        "item": {
          "id": "d5990b85-20e9-40d1-9ba7-ba46530d4c44",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8d925b79-1890-4e09-abc6-8a961ea62463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5990b85-20e9-40d1-9ba7-ba46530d4c44",
        "cursor": {
          "ref": "26915301-246b-4ddd-8662-26c6698aecac",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "561ca182-3541-4f32-b2d2-cf7555e95190"
        },
        "item": {
          "id": "d5990b85-20e9-40d1-9ba7-ba46530d4c44",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8d925b79-1890-4e09-abc6-8a961ea62463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4af7184-9894-41ce-ae95-e14269fd6d60",
        "cursor": {
          "ref": "c9b5100f-8a0b-4649-89f2-ff43de0e5923",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "46926752-05bc-4766-bb63-e8df81256939"
        },
        "item": {
          "id": "f4af7184-9894-41ce-ae95-e14269fd6d60",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b3c2d8a-ae12-4fc8-9934-f8eb66dd1252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567f0ce5-98e2-48af-9850-b8545acbd363",
        "cursor": {
          "ref": "c7308acf-754d-4a1f-9b74-55a3d8395c83",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8767b5e8-43b8-4f6c-9b5b-9a8328dd5320"
        },
        "item": {
          "id": "567f0ce5-98e2-48af-9850-b8545acbd363",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5421ecc0-4398-445c-adc1-f8a102474364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5767f7-f786-44b8-a490-ac1bf4b8267b",
        "cursor": {
          "ref": "e80729d4-0736-4b80-894b-c046c21dd913",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "52665b23-dd64-4d32-b086-ee612ebd9027"
        },
        "item": {
          "id": "9c5767f7-f786-44b8-a490-ac1bf4b8267b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9391177b-cbe4-4215-a7f0-e8b12708a141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da47366b-73ee-482e-abf2-46ab28d5cab7",
        "cursor": {
          "ref": "92243ade-ec84-4f51-8148-a652e6b2758a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eb155295-ffbf-416e-b942-c8459cbc959d"
        },
        "item": {
          "id": "da47366b-73ee-482e-abf2-46ab28d5cab7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f3685900-f6e9-4dbd-b99c-bed43ee11b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e816aa-44fb-4600-b2e0-259eb3d8faba",
        "cursor": {
          "ref": "946ca8a4-a297-4fb5-a636-c24217b800e6",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "47f0ac1a-d0ae-4b92-8d3c-7d3c46e8e6f4"
        },
        "item": {
          "id": "19e816aa-44fb-4600-b2e0-259eb3d8faba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f07c4020-7095-4642-9340-7b9287faf641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb970e74-f041-4b63-ada3-49199ef99f7a",
        "cursor": {
          "ref": "a4da32da-2219-4cb2-a496-ec2dc9b67d6f",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4d46d80b-ae23-488a-9763-5526e3a61987"
        },
        "item": {
          "id": "bb970e74-f041-4b63-ada3-49199ef99f7a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5529cac1-32f4-4480-a468-9cd019799543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41749a84-85b8-48b1-933c-3f0caa42f397",
        "cursor": {
          "ref": "dca9aeee-80cb-4de9-813a-044e83a92aae",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5363f604-9bf9-4606-845d-a51457b1b323"
        },
        "item": {
          "id": "41749a84-85b8-48b1-933c-3f0caa42f397",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c7395558-3961-41dc-a30a-0a7a81ef758a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0ea7fd-0829-4c5f-9e3f-46282564004b",
        "cursor": {
          "ref": "8cdfa666-5d3c-479d-9d61-2af950b29a42",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5c2acde6-1d14-44d6-bf99-118e04178e7c"
        },
        "item": {
          "id": "4d0ea7fd-0829-4c5f-9e3f-46282564004b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "90fcc2e8-0fad-47a3-a906-1cf36e81095b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded79f03-3a72-405a-b858-f6608790d0dc",
        "cursor": {
          "ref": "6b3d0071-5815-4553-839f-b251a2a98b5e",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "15cde0cb-6359-4121-927f-d78a5380ec8b"
        },
        "item": {
          "id": "ded79f03-3a72-405a-b858-f6608790d0dc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0795c898-7a5d-41fc-88e8-8b149428e841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83973af2-9370-4093-bdb6-f7a6bec74f8a",
        "cursor": {
          "ref": "cbc0997a-07ae-40f1-98e5-80bcc13264cc",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "114169c8-b80a-4592-9873-2dcf66c2330a"
        },
        "item": {
          "id": "83973af2-9370-4093-bdb6-f7a6bec74f8a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9820e2e5-1a88-40fe-bcbd-24ed16a6158b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f135ea-b623-4e59-b84c-4d080301e251",
        "cursor": {
          "ref": "1b025b00-cece-4ee4-9a38-2a9f9f4daa96",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ef012dcd-0dc5-4b0b-bdec-318eb09ff369"
        },
        "item": {
          "id": "f0f135ea-b623-4e59-b84c-4d080301e251",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1199ab7f-82fe-42d3-bfcb-0e16d8fad755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a37f14d-12c7-498d-9bb6-4bafe9cb94b3",
        "cursor": {
          "ref": "2d9f05e3-7cb8-46d4-bb48-566f1df228a4",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "43d215b5-2085-4099-bc36-0501919addf5"
        },
        "item": {
          "id": "3a37f14d-12c7-498d-9bb6-4bafe9cb94b3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e11422cf-dd13-4d96-a669-3809d4e06e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73edb38-ead1-4b12-a3be-60c4ab014d3c",
        "cursor": {
          "ref": "7c1312c0-9113-45a6-8244-2acb3e5f406a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "579756a5-e8bf-4156-ab42-67e5fc7bd58d"
        },
        "item": {
          "id": "b73edb38-ead1-4b12-a3be-60c4ab014d3c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea95dc1f-fef3-4637-8a64-57aca7ededc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eab2856-3290-41f5-a954-014f78ac7ce9",
        "cursor": {
          "ref": "ffa2b1ad-d3dd-4e11-8a79-d397741886cc",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "73cd1115-7508-4f89-aff3-5d5ac4fb975b"
        },
        "item": {
          "id": "2eab2856-3290-41f5-a954-014f78ac7ce9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "84182d43-506c-432b-94b9-1a07f842c423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443d2ba7-f0b0-464a-8774-45d979a88981",
        "cursor": {
          "ref": "9a793954-73da-432c-bae1-dd88b6d28cb3",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f4c86407-daee-43b8-a46f-7dbeea4b984b"
        },
        "item": {
          "id": "443d2ba7-f0b0-464a-8774-45d979a88981",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c8e819f9-ab6c-4533-953e-359fd1865e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0fa15b-8cb1-40a9-80dd-24c497d6a150",
        "cursor": {
          "ref": "f3a4b6f8-fc65-428a-8002-441b4654fd56",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c738f81a-d1d4-43f2-b607-363e1f1e657d"
        },
        "item": {
          "id": "8a0fa15b-8cb1-40a9-80dd-24c497d6a150",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "efba113d-d03e-47a1-b252-e959e44473d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d95ef4-83e9-4973-bc1c-aca878533255",
        "cursor": {
          "ref": "322ed3ea-0caf-4cdf-aed6-1e638e44a483",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "03a7ac1a-fc0e-47d7-a309-bab858f5bf88"
        },
        "item": {
          "id": "47d95ef4-83e9-4973-bc1c-aca878533255",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "09da2347-740f-4ae4-af7f-3df387759d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a2db82-b876-4f90-8405-07cd20edea91",
        "cursor": {
          "ref": "453f732a-b511-4c1a-92a7-34bab6e4a77e",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e29b40b-c5a2-4990-8be4-b4edcbb39a3e"
        },
        "item": {
          "id": "98a2db82-b876-4f90-8405-07cd20edea91",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8d4dc0b-f1d9-45ee-9719-1df26dbcb5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082f1037-9c38-426f-9648-4d8b734f3fbf",
        "cursor": {
          "ref": "2e19753a-a3d6-451e-9da1-b37dbfc07515",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bd6369b4-1e34-4e3a-99fe-ad8f258ad315"
        },
        "item": {
          "id": "082f1037-9c38-426f-9648-4d8b734f3fbf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1b0a3570-65a7-4cd8-b89f-06569a8987fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab556a2-c3d1-42ef-9112-e86d102794ee",
        "cursor": {
          "ref": "004adf4e-744d-4f32-b4ba-2878830282ab",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "403627fd-c509-496c-a2d5-bcc56d14703b"
        },
        "item": {
          "id": "5ab556a2-c3d1-42ef-9112-e86d102794ee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5fe841ab-095c-4faa-8f61-2d1d5e66ca93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4921d0d-edd6-47f7-af5b-08ccbbb46033",
        "cursor": {
          "ref": "38d50fbe-39d6-4057-be59-910f0ae406e4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e3a1107d-c70a-4d65-a997-3860a37acd55"
        },
        "item": {
          "id": "d4921d0d-edd6-47f7-af5b-08ccbbb46033",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "68ff1a03-88d0-4ba5-ac22-fbb0b137b8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346eaac1-eb40-4dc3-a0fa-3fdfcfecce35",
        "cursor": {
          "ref": "81d42784-ee80-4a3a-b1a1-803085fd3561",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5869c390-f5af-464c-bff8-41c9f3bcb806"
        },
        "item": {
          "id": "346eaac1-eb40-4dc3-a0fa-3fdfcfecce35",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b2cf4559-ef45-499c-b425-c3b10dda8295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d2055c-4ae6-4d0b-be7b-7549a931b80e",
        "cursor": {
          "ref": "ff7cb67e-3f8c-4ed9-9270-0b398a039126",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cdae36fa-196c-47ee-8042-d61b841b078a"
        },
        "item": {
          "id": "e0d2055c-4ae6-4d0b-be7b-7549a931b80e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6d77f67-6eaf-4b32-8024-831345d42672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49a4489-f5b8-4a8e-99f1-95306c170c1b",
        "cursor": {
          "ref": "56325d80-3a81-428b-9bb5-0f3e628b0252",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a3cc6069-2509-42a8-937a-bf2321e0e3f5"
        },
        "item": {
          "id": "f49a4489-f5b8-4a8e-99f1-95306c170c1b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1eb79654-682b-497d-b251-232060e76c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368ab542-da6b-43d6-af68-c095d5cff904",
        "cursor": {
          "ref": "a99cead3-8ac9-4c7a-a7b4-2f52ff169a26",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c59b47c9-5f87-4c05-8ba4-45eac12d0b6c"
        },
        "item": {
          "id": "368ab542-da6b-43d6-af68-c095d5cff904",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6b964eec-da44-4d3b-859c-4b092a493a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f995ce20-a632-4ea1-92e0-2c726e623cbb",
        "cursor": {
          "ref": "3edb0975-d4a7-472e-9bee-c986ce8a8ea7",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "90431808-ba3d-4a01-af04-a6bb125d0820"
        },
        "item": {
          "id": "f995ce20-a632-4ea1-92e0-2c726e623cbb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1a2b7585-08a7-4583-b69a-181d99c6f7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa9f10e-c5a2-4f6c-aeb8-5802055ef0dd",
        "cursor": {
          "ref": "f0008c27-ed16-47f8-8859-81407f696058",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "04ddb017-8236-4558-b2b8-166707647abb"
        },
        "item": {
          "id": "baa9f10e-c5a2-4f6c-aeb8-5802055ef0dd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "acb33c96-519a-46f9-aecb-43cbec027a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faed3a6f-7982-4b8e-a6dc-4ab3f6789ecd",
        "cursor": {
          "ref": "fd4f5af0-a462-4816-9b6f-8b7620252f13",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "82f75348-fdce-468f-9a1b-a3bd0a5f8180"
        },
        "item": {
          "id": "faed3a6f-7982-4b8e-a6dc-4ab3f6789ecd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "66e26f50-8099-4d98-8d4e-0aeb7ac1c0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d67a9ec-76d9-4218-b045-f15d6cc73d36",
        "cursor": {
          "ref": "67d999e0-14fb-47ac-aec3-9ccb09bad037",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a77dc6db-10c4-4e65-bcd8-4c77e9ac824b"
        },
        "item": {
          "id": "1d67a9ec-76d9-4218-b045-f15d6cc73d36",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d7f21ff2-cac7-4407-aa57-82a867d8128b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b18061-f567-4b2d-9af4-be5d2ff1efec",
        "cursor": {
          "ref": "0a0c4e6d-c3ab-49fb-b859-23609d39480f",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5126b291-d382-4077-98b9-f43717ea3bcb"
        },
        "item": {
          "id": "55b18061-f567-4b2d-9af4-be5d2ff1efec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "df1fa833-f23e-40b0-bd59-c8eaf8a85186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d12881-18fa-44f2-9b52-08d826519fa0",
        "cursor": {
          "ref": "b19d04a7-74fc-4b55-89ab-0e4683440b16",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f4881c27-c8fc-4017-a54d-5c38f796859e"
        },
        "item": {
          "id": "a6d12881-18fa-44f2-9b52-08d826519fa0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "29306d40-2dbb-418b-b086-1ac398667fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3079eb0f-a044-439c-88e4-4b72f6eb21c7",
        "cursor": {
          "ref": "24690502-7421-4d89-b638-88e3582d4b9f",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2c6297a4-65c3-4529-a83b-e11bffd6c5a5"
        },
        "item": {
          "id": "3079eb0f-a044-439c-88e4-4b72f6eb21c7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6e3752cd-8898-4e1d-9a6c-7f1584489f35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0016bd-4513-4481-9a25-58689e35b712",
        "cursor": {
          "ref": "7300dffc-cac1-461d-a293-9cc3d447429b",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9efc0b1c-a281-47b2-85fd-28c08c512991"
        },
        "item": {
          "id": "cf0016bd-4513-4481-9a25-58689e35b712",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d1af048a-f328-4b0b-bf6e-aa8073905c61",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec48e31-3541-43e3-ba80-9dca12d8f077",
        "cursor": {
          "ref": "cdd2aef4-e258-4a16-a0e4-39bb23a7c1fd",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "250aa173-e7e9-4d07-a113-9d405d5daa2d"
        },
        "item": {
          "id": "5ec48e31-3541-43e3-ba80-9dca12d8f077",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d60ede6d-63d5-4583-b66b-58ccac07e876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec48e31-3541-43e3-ba80-9dca12d8f077",
        "cursor": {
          "ref": "cdd2aef4-e258-4a16-a0e4-39bb23a7c1fd",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "250aa173-e7e9-4d07-a113-9d405d5daa2d"
        },
        "item": {
          "id": "5ec48e31-3541-43e3-ba80-9dca12d8f077",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d60ede6d-63d5-4583-b66b-58ccac07e876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1c08d4-27ac-4f41-b82e-edf2805662ec",
        "cursor": {
          "ref": "7d50de3b-fe96-4f88-be0b-7c97ee3357eb",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fc5a2fa8-320a-4c99-ae5e-d69b7418df8b"
        },
        "item": {
          "id": "3b1c08d4-27ac-4f41-b82e-edf2805662ec",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0b2b1488-6841-4d89-ba91-7e7e405b185a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b771f3b0-e4b1-47e4-9b86-6980a966b72e",
        "cursor": {
          "ref": "ad87332f-e03e-4bea-a776-edcf35c2bbe4",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "39003962-e488-484b-b55e-d2e1c863bf4b"
        },
        "item": {
          "id": "b771f3b0-e4b1-47e4-9b86-6980a966b72e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4e7e17a4-8242-40ae-8eb5-e9276b55d177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62770c4-5d33-4f39-8193-e506faaec506",
        "cursor": {
          "ref": "57fd2be4-80d0-44ba-8e10-26b3cd6590e4",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1b4b8e44-02f4-4aba-aaf3-bbfdfcd144c4"
        },
        "item": {
          "id": "e62770c4-5d33-4f39-8193-e506faaec506",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3f8c182a-f5e8-4b94-811f-b9eec64864e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da25ccdc-aea9-4eae-b503-a60be12383a1",
        "cursor": {
          "ref": "9dd7d195-a435-4804-b515-9c1211c4fa8a",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "167b2b55-b1f2-457c-a683-12e699431a32"
        },
        "item": {
          "id": "da25ccdc-aea9-4eae-b503-a60be12383a1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fcc9481f-2459-4677-93fa-09c1a1c88603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23bf05e-de65-47cc-b24a-64f895bb92e9",
        "cursor": {
          "ref": "eeb89d33-a085-4865-bccf-3a6d4841e499",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "35ce3f4b-1ed9-4efc-8970-fadbbfa04598"
        },
        "item": {
          "id": "f23bf05e-de65-47cc-b24a-64f895bb92e9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7d665d51-ab6b-4e78-8ff2-010280671095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f011b1-6caa-48c2-b6ae-1cdd3d7669b2",
        "cursor": {
          "ref": "fb06c724-990e-4db2-8de7-a53a682154d7",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a95db0c1-42c8-4e79-85d3-2eed55afdbaf"
        },
        "item": {
          "id": "d7f011b1-6caa-48c2-b6ae-1cdd3d7669b2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b6ebbe05-7c7b-4b89-bda7-131c63201482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115e1d72-6975-4e1d-aeca-82df1ab23bcb",
        "cursor": {
          "ref": "93aba820-09e6-4528-bb47-497a0ec72eba",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ff756ff3-8559-4061-a282-ace58056fa19"
        },
        "item": {
          "id": "115e1d72-6975-4e1d-aeca-82df1ab23bcb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8161104f-0354-476c-9098-956b2f1852af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c0834f-afbb-4d1b-bd7a-5b53c4ee935b",
        "cursor": {
          "ref": "aa5cb93b-569b-48a7-903a-e59a22ecbf9f",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fd0923ec-e228-4835-acf8-1c0e47feb1ac"
        },
        "item": {
          "id": "d0c0834f-afbb-4d1b-bd7a-5b53c4ee935b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2a1f0885-8c30-42db-aad6-9144a46d0ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c9b40a-5db5-41c6-9336-9b62caf8e5be",
        "cursor": {
          "ref": "5287634f-3600-408c-98a3-8990c13cd993",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bd714cf9-a2c3-4374-a756-0e9da280caa1"
        },
        "item": {
          "id": "c1c9b40a-5db5-41c6-9336-9b62caf8e5be",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "775eeeb7-3154-4707-9fed-b9c014065b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7497825e-aa11-4272-be0f-60018185ad63",
        "cursor": {
          "ref": "8c6b98b6-60fa-4b92-b4cb-f2690ecb0803",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3bd06c2a-089c-4629-8a3e-2324e3c81eaf"
        },
        "item": {
          "id": "7497825e-aa11-4272-be0f-60018185ad63",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6bbe04b6-12d8-4121-908b-103981504e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d1c77f-4a90-429a-8cc3-6aecfe47b0a0",
        "cursor": {
          "ref": "4476284f-cfb3-468d-9c51-b93e869fc86e",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "83973f67-ccf7-4e92-b69c-ae54d72be058"
        },
        "item": {
          "id": "e1d1c77f-4a90-429a-8cc3-6aecfe47b0a0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "911a9d97-6b18-4396-82d6-564eb7384f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2666ff5b-b2f6-4085-a1b7-1bb8681a7e19",
        "cursor": {
          "ref": "fe0f0cf0-896d-48ee-a388-72693b234f2c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dfc8db22-d15a-4499-bff0-ba75faf34848"
        },
        "item": {
          "id": "2666ff5b-b2f6-4085-a1b7-1bb8681a7e19",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0afc648d-712a-4ba7-9ba8-b036363091dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1103b3ca-8b4e-4fff-9f51-481158ffd8f7",
        "cursor": {
          "ref": "d5a77158-41c2-4b45-a419-21cd3d466bec",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "14f5aa5f-456b-47cb-8f37-1c7663c7e942"
        },
        "item": {
          "id": "1103b3ca-8b4e-4fff-9f51-481158ffd8f7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7e38f7be-b3fe-4955-825c-9d2585f2a6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4e4f65-e71e-42da-92e2-d6ec35c2e304",
        "cursor": {
          "ref": "59df512f-3949-42b2-bb90-fe5b2bf3379c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c5c6685e-1b27-4802-be94-97afacd34ce5"
        },
        "item": {
          "id": "7b4e4f65-e71e-42da-92e2-d6ec35c2e304",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1431ec82-b619-41dd-af0d-677ef77a0f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517c35d0-7a9e-4838-a445-1584c82baa33",
        "cursor": {
          "ref": "da6714d1-495d-4caa-854f-5f76c0595c2c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "75a27cf1-351e-4c45-a834-a52862169930"
        },
        "item": {
          "id": "517c35d0-7a9e-4838-a445-1584c82baa33",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0b856029-b51a-425e-83d4-a4dc75e19945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cd9a79-0101-44ec-b33e-2d94897b68f6",
        "cursor": {
          "ref": "321c958b-2df4-45db-93a1-501c1fc87a16",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ca7902bf-283f-4624-8347-d5ca2a6be06e"
        },
        "item": {
          "id": "28cd9a79-0101-44ec-b33e-2d94897b68f6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "50cf0c85-6e9d-4d18-a302-5b75fabdd52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc23667-ff37-4f41-bca4-ceffdf017e4f",
        "cursor": {
          "ref": "96e1a186-aa32-48c4-b6c9-f13d77341e65",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f6ce80ce-a4d6-4ac7-a8c6-7511e144e12c"
        },
        "item": {
          "id": "3cc23667-ff37-4f41-bca4-ceffdf017e4f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e02c3700-687d-4ecc-87d2-7f6392ad97eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59ed937-fdb0-453c-835d-7b9d644a0ef8",
        "cursor": {
          "ref": "45844d19-1c43-4736-ba93-e2420e89d806",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9141eea0-f109-4b71-a9e7-e3558834b5fb"
        },
        "item": {
          "id": "a59ed937-fdb0-453c-835d-7b9d644a0ef8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fec3c3ff-9029-4bda-9799-4327c6b62a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd37599-fe65-4009-9086-3c5517ca586e",
        "cursor": {
          "ref": "414eee25-8bad-4c7d-9105-2d7e022d312d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "26cd794d-6936-4411-b4b1-be7b9834d00a"
        },
        "item": {
          "id": "8bd37599-fe65-4009-9086-3c5517ca586e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b82b7c78-fcb3-4bbc-9903-5151f9e4ed17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9d816d-a367-4754-97d3-266889468196",
        "cursor": {
          "ref": "ec3c17e0-1fb8-453a-88af-f1871444dbe4",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9463d3fc-2224-45c8-9549-92293f673f72"
        },
        "item": {
          "id": "ba9d816d-a367-4754-97d3-266889468196",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "18e46222-c0a8-4d2e-b6f8-0709138d5f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f31e422-70eb-42ad-b430-94b88ca1ab75",
        "cursor": {
          "ref": "fe1546a8-c160-4967-abcd-92ca7e0260cd",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7c77842f-aba1-4726-be53-1f844330b6e6"
        },
        "item": {
          "id": "9f31e422-70eb-42ad-b430-94b88ca1ab75",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "75b4e2f7-cf02-4669-8847-2ec2670620af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929c86fc-872f-453c-952d-9ba121d6ea31",
        "cursor": {
          "ref": "331de289-9040-4e8c-8e7b-ccaa6d207493",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8bdadc04-7bbd-466a-8b3a-ee793cce838b"
        },
        "item": {
          "id": "929c86fc-872f-453c-952d-9ba121d6ea31",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "690380b5-4ecb-4f4b-997b-cf9a4b2c741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b5d94f-8981-4503-963a-7d50e935f82e",
        "cursor": {
          "ref": "1fb81e14-8a41-4414-a925-79404379d572",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0dd600bc-c3a6-45fa-9d4a-f72001238506"
        },
        "item": {
          "id": "30b5d94f-8981-4503-963a-7d50e935f82e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3fe2ec20-d429-4267-a423-4c36087da42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73020edb-2c07-403b-b026-a3f8d949c9ad",
        "cursor": {
          "ref": "9431f2f7-97d3-411b-8a42-20a93fd04414",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d80d4a33-5057-41c0-8e3c-60eab59a5030"
        },
        "item": {
          "id": "73020edb-2c07-403b-b026-a3f8d949c9ad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a95b4970-0ca5-49c9-8563-3eda8dca2f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db122a68-2831-432c-9341-2c507787cbb3",
        "cursor": {
          "ref": "4184e682-e0a6-4ccc-916a-7f7557ac7f56",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0f5387cd-e446-49fb-b013-34f53639d617"
        },
        "item": {
          "id": "db122a68-2831-432c-9341-2c507787cbb3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f14dfcb8-1f01-46a4-94fe-354a80990143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c2aaab-e1b6-4027-ad42-645cd8e647d4",
        "cursor": {
          "ref": "6b899bb0-b750-45f8-a2b1-8f56acd66d02",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9bafafd8-ffce-4252-85fc-4d286aef73c7"
        },
        "item": {
          "id": "b0c2aaab-e1b6-4027-ad42-645cd8e647d4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "655be259-c38c-4ccd-9554-035c985fb2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fe5546-5926-4d7e-94aa-06481a20060c",
        "cursor": {
          "ref": "196c514f-4b03-470d-a15b-c397f5fdf311",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a2ce050b-ed31-4c45-886e-d301f6ea4a5b"
        },
        "item": {
          "id": "d2fe5546-5926-4d7e-94aa-06481a20060c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "451a479e-c38b-4cf3-9175-350c7536a36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e58e73-c470-47ac-8f9a-453a02d8250f",
        "cursor": {
          "ref": "643d6897-4d12-41a9-a435-8df9cd3563aa",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "831444e9-41be-4f42-8b4c-c1c1acca2126"
        },
        "item": {
          "id": "a1e58e73-c470-47ac-8f9a-453a02d8250f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "814294e1-1f31-4ed9-8746-a0836df6ac29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532d9d07-e42d-45c2-b4af-95117786f6e7",
        "cursor": {
          "ref": "d50e540a-0fbb-42f4-84f3-7fc6d7f4e99e",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c46b82b0-5c7c-4873-8eed-8f740f6a6b50"
        },
        "item": {
          "id": "532d9d07-e42d-45c2-b4af-95117786f6e7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7d6ebb48-ecad-41e8-aa48-9e2358ae5c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b968bbe0-9c22-44c0-bbc8-e86b54be574c",
        "cursor": {
          "ref": "192afa04-89b5-4f0b-b647-6e996b611b0a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7aadecd3-d94f-41ef-a9fb-1fb69fe983cb"
        },
        "item": {
          "id": "b968bbe0-9c22-44c0-bbc8-e86b54be574c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a6fccf97-ca0f-40e2-9226-d98c2ae329c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60c7645-5d9f-4439-b5fd-717b0b913080",
        "cursor": {
          "ref": "005da508-810a-42c9-8f6d-0d6bf17d1080",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cee266a1-722f-46e5-a798-393e101f8891"
        },
        "item": {
          "id": "c60c7645-5d9f-4439-b5fd-717b0b913080",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5824c491-1e7b-4558-aec9-25242bc0e2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd2d9aa-e593-455e-ab15-6786ab04e98a",
        "cursor": {
          "ref": "872420f6-94b8-4840-8c4b-a21530e49541",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6801cd9b-e1d4-4b9c-be9b-47a060eb6b9c"
        },
        "item": {
          "id": "7cd2d9aa-e593-455e-ab15-6786ab04e98a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "da3481ac-9c73-4b1f-bc17-a2053433c7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291c52f5-4b77-4c60-baff-b83e04e72090",
        "cursor": {
          "ref": "046094ad-3856-47cb-9c40-d133ec809576",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8cdf2ba1-fac9-4571-84d2-d93f62759dfd"
        },
        "item": {
          "id": "291c52f5-4b77-4c60-baff-b83e04e72090",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6fd72988-434c-461a-82dd-deae57a75ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6d1304-b55e-4b8b-bde8-0080c651e5fe",
        "cursor": {
          "ref": "5d41e358-902b-45a8-9488-cba58d286e15",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5ea720a5-b660-425e-a17d-7cbd20009251"
        },
        "item": {
          "id": "5e6d1304-b55e-4b8b-bde8-0080c651e5fe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "47c32141-3337-41ca-87ca-32340e3f6079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ff7984-565d-4865-af9c-5f47e27ba2f6",
        "cursor": {
          "ref": "d740fa1e-c6c8-4ffd-9b61-41b3755702a2",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9369879e-7bd9-49ee-945f-8b102d3353a0"
        },
        "item": {
          "id": "33ff7984-565d-4865-af9c-5f47e27ba2f6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f97d36c5-17e1-4a7d-a28c-91ed7f670b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a509904-f9ca-47c9-974d-16e3732f8149",
        "cursor": {
          "ref": "df24c62e-ce63-4b72-8581-023816684717",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "05361ef3-3d3f-4794-92c1-ba3ef84f4622"
        },
        "item": {
          "id": "9a509904-f9ca-47c9-974d-16e3732f8149",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "27972405-46b0-496d-a21a-6950603f1fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90223c9f-5639-4e6e-82ce-acb640b9850a",
        "cursor": {
          "ref": "44d11335-22e8-4653-bb58-333c4e5f90a4",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6a7366a3-0a73-4083-a9af-065a1515f323"
        },
        "item": {
          "id": "90223c9f-5639-4e6e-82ce-acb640b9850a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "18737d54-e68c-4464-9d0a-aba963ddec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79a5fb2-f755-448d-90ef-a78ad7bd34b0",
        "cursor": {
          "ref": "fd88798a-2c11-410d-92bd-d862368baa2a",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c5c5318a-674e-4ace-86f0-0b165e49ae6a"
        },
        "item": {
          "id": "a79a5fb2-f755-448d-90ef-a78ad7bd34b0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "32fc5275-2b1b-409d-a7e9-86897e73dd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320fb467-2440-4fd1-8745-69dfc2cfd540",
        "cursor": {
          "ref": "491451bb-09f5-4188-bec3-87bcfa71e332",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c189fab4-7b25-4414-b6de-9f837d8dd38e"
        },
        "item": {
          "id": "320fb467-2440-4fd1-8745-69dfc2cfd540",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3c17867b-4863-4717-9e14-4a87cce46b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bea4baa-561d-4464-b227-ee3bc9aad851",
        "cursor": {
          "ref": "d4b3f1c4-8616-4425-9264-05b0e2cf6acc",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3939dff2-82f3-4d40-8b16-b206efc4f2a8"
        },
        "item": {
          "id": "4bea4baa-561d-4464-b227-ee3bc9aad851",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0c97da63-c840-486d-9dd1-57f2917d276a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb179c80-8573-483c-9ac0-1fe47fb58699",
        "cursor": {
          "ref": "33c5919d-ca0d-4190-ab6a-744f650853f9",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c7d97835-9296-4aa7-aa94-d3ef2f05e0e9"
        },
        "item": {
          "id": "cb179c80-8573-483c-9ac0-1fe47fb58699",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0fef1bd0-4cf2-43a1-8695-d1eaf84c57e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfcc983-1dce-4602-90a6-3c6b68b2bbe8",
        "cursor": {
          "ref": "8586ebd4-891a-4248-9202-dfd8d95ad872",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ce6f1c61-c4b4-4565-8da0-48bcc98ecfcd"
        },
        "item": {
          "id": "0bfcc983-1dce-4602-90a6-3c6b68b2bbe8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f1964f20-5263-4b50-addf-3f328747a98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a84315-6672-4551-8105-0ce8d873a462",
        "cursor": {
          "ref": "e04d294e-ec76-48b5-9525-fa48a79e681c",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c8c0718c-6e93-47fb-a93b-950b6a4d60cc"
        },
        "item": {
          "id": "25a84315-6672-4551-8105-0ce8d873a462",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c2a7e0e2-3a83-4b7b-8617-3f40fb496f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b17e55-fb42-4a1e-8394-201364ea8e2d",
        "cursor": {
          "ref": "444911d0-3da8-4910-9130-c9faed6a72a3",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eaf9d237-e50c-43ad-8266-3bd584cc4e61"
        },
        "item": {
          "id": "e7b17e55-fb42-4a1e-8394-201364ea8e2d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3857347b-02f6-41b0-8406-cad38885cca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33d70c0-5b1a-4130-812c-68d55d93eb26",
        "cursor": {
          "ref": "3d3383c3-ea76-44c8-8648-4ac955302ae2",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e4ebe828-efe9-4e73-807d-c872aefe96c9"
        },
        "item": {
          "id": "a33d70c0-5b1a-4130-812c-68d55d93eb26",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "586bc2ea-8228-49fd-a25b-5848b7b09f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a174480-acd1-43ca-bb31-c0a5be1549ad",
        "cursor": {
          "ref": "be04fdbb-5f5c-4c6c-9ada-62bdaab199b5",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1a0660ab-b196-4678-8c86-4146c2eabfb0"
        },
        "item": {
          "id": "1a174480-acd1-43ca-bb31-c0a5be1549ad",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3de308e6-6239-4aae-a720-554740b77b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9556999e-e0af-4bee-a4e5-7486bacee72f",
        "cursor": {
          "ref": "bcd1d1ce-ae57-47ab-83eb-0fd80668cf8b",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9e24de8c-b7c3-44ab-b2d8-8e220717960b"
        },
        "item": {
          "id": "9556999e-e0af-4bee-a4e5-7486bacee72f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "55090080-8349-4961-be78-0a901eeda998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c86b43e-f821-4627-ab7d-38a5775114a8",
        "cursor": {
          "ref": "9015804b-8506-498a-9a9e-2eda46ad4a17",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0cf112cb-ad30-4ec0-a6c1-95a0fb71b738"
        },
        "item": {
          "id": "0c86b43e-f821-4627-ab7d-38a5775114a8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5dc8c63e-cc04-45b1-ae90-fcc7600a95c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf12a1-f6f3-4c96-9c4a-d01d63ff0ced",
        "cursor": {
          "ref": "42ed13cc-1e7d-4bc8-9d0e-f5480263dcfd",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c64f0c51-e312-4bed-b5c2-cecee46a2c82"
        },
        "item": {
          "id": "90cf12a1-f6f3-4c96-9c4a-d01d63ff0ced",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "41ecbfe7-ecfc-41ae-852c-44ecd7e507c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51df040-edf2-4e8e-923a-68675559c6c6",
        "cursor": {
          "ref": "06299c35-c0e4-4772-b016-c51886783fea",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5141201f-827a-427c-a9c8-6449b26b48bb"
        },
        "item": {
          "id": "f51df040-edf2-4e8e-923a-68675559c6c6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9525786e-11e2-43fb-a880-d47f5f12f2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7266567d-711e-4292-9ef3-5069ff9cecf3",
        "cursor": {
          "ref": "6d0506d4-fd66-4d4e-ae4e-fd5821ed44de",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "83edc590-0714-4f9d-b799-5adc23e7346f"
        },
        "item": {
          "id": "7266567d-711e-4292-9ef3-5069ff9cecf3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6a8ac621-00b8-47f7-ae40-c07742bb666b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e03024-a217-4758-9f1a-31fe7052a883",
        "cursor": {
          "ref": "4c3c472e-bfe1-483b-9ee2-8eda40406e07",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2877aed5-e609-418c-b436-222779c7972c"
        },
        "item": {
          "id": "96e03024-a217-4758-9f1a-31fe7052a883",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "28812814-9778-492e-97bc-1962d26f3aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ce7843-019e-43fe-a501-46f13e5bae14",
        "cursor": {
          "ref": "4c065c2a-f46f-4bac-a07a-3ef82e2b6478",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c93065e3-8ff5-494b-9fb8-1596fac40ad1"
        },
        "item": {
          "id": "88ce7843-019e-43fe-a501-46f13e5bae14",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1329a87f-4895-4c6a-8576-6080d6ed3748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52766fa-d8f6-4a67-a799-dcac74c3c8ee",
        "cursor": {
          "ref": "efd684dd-6afc-4906-90b4-9fdd90258ae7",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7488c69c-4675-4c51-9ddb-37c23c3bc2ad"
        },
        "item": {
          "id": "f52766fa-d8f6-4a67-a799-dcac74c3c8ee",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e41c077d-6679-41dc-9db2-c226bd958c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d305c5-8517-445c-b944-69b9e3d19bbd",
        "cursor": {
          "ref": "1dcf57c5-6fc4-4293-a4bc-fe4412e39fe0",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "eca24ec7-a33d-4eff-a69e-29916b9a71a6"
        },
        "item": {
          "id": "26d305c5-8517-445c-b944-69b9e3d19bbd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e83f502a-7755-4a92-82b6-f74809a562ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faab4aaf-f0ab-41ef-b2cd-899f3c267ea1",
        "cursor": {
          "ref": "1b01f871-33ac-4e90-8a49-e65e27b1331b",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "08d871c0-376f-43a7-9386-501c32555fc1"
        },
        "item": {
          "id": "faab4aaf-f0ab-41ef-b2cd-899f3c267ea1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7c1a904b-cfe1-4f6b-83e2-f7a64577097a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98baa509-14a2-4bc3-93a6-e7db2662ed78",
        "cursor": {
          "ref": "be7d3842-2b6c-4ff1-ad11-a8b72741c707",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9939da93-5e9c-44c6-acce-ba71d3fd42a1"
        },
        "item": {
          "id": "98baa509-14a2-4bc3-93a6-e7db2662ed78",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "df5bcccf-a3a0-4868-acd6-62085d1836da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a70fd97-92dc-4e27-a6f3-055011ec4dcf",
        "cursor": {
          "ref": "805e2dc5-591e-475d-a8f8-5edd4ad2df74",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c15b1fd1-bd40-48eb-a619-99b725b5a143"
        },
        "item": {
          "id": "9a70fd97-92dc-4e27-a6f3-055011ec4dcf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c25bd63e-ce26-4e66-889d-2014db7b17d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805f67c2-29aa-4ce5-9c4d-7a4d5ccb3170",
        "cursor": {
          "ref": "2ff6445f-62a8-4198-89e9-ef01a2b5c97a",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "96ac38e0-0a16-4318-872f-92451c2dbe21"
        },
        "item": {
          "id": "805f67c2-29aa-4ce5-9c4d-7a4d5ccb3170",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9f9576c5-489f-42a1-bbcc-bd96ce7f2b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa51617-5b0e-46ff-9641-fe14f22e51ae",
        "cursor": {
          "ref": "c5f20802-34cc-453b-958a-358d879660aa",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fc35679e-4e54-4ee9-bb31-65db0cacbeba"
        },
        "item": {
          "id": "3aa51617-5b0e-46ff-9641-fe14f22e51ae",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "15113d44-9ca0-43ab-9e55-3f233023e6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bb700b-baf6-472b-9ad0-62a70f971285",
        "cursor": {
          "ref": "7a6c2749-4087-4281-afe7-3b5962c2c768",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "773a54ff-a15b-4844-ae9a-18496b92904d"
        },
        "item": {
          "id": "e8bb700b-baf6-472b-9ad0-62a70f971285",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b2d38275-c5e7-4f5e-be50-8ba49df52f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbc28d6-aa82-4f8b-905f-67c73df8985e",
        "cursor": {
          "ref": "73790096-2622-4c78-9503-b81c34004a72",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4839f8fb-4d22-4649-b50b-1341d5f831a1"
        },
        "item": {
          "id": "bcbc28d6-aa82-4f8b-905f-67c73df8985e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2689fd6c-1800-4c30-8d36-3c09af2e7fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9bb8da-cd57-48ad-a32f-eee50e6ed3c0",
        "cursor": {
          "ref": "3b8c5b00-87d8-4228-9cbf-ed29753d0f9a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "80d31de2-c757-4562-a4af-8b2c7220d51f"
        },
        "item": {
          "id": "ee9bb8da-cd57-48ad-a32f-eee50e6ed3c0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "85b2dacf-fe50-4a89-8f50-01f73a8b6421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2830ab-47f5-4289-a3c6-63288eb3a619",
        "cursor": {
          "ref": "2f105d1d-9037-4a48-919c-7cfaaca942e1",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bb619c2b-bdf7-4a36-ae2f-c9e9664b89a8"
        },
        "item": {
          "id": "5e2830ab-47f5-4289-a3c6-63288eb3a619",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1ac1dbe2-eb72-4052-9cf3-8981dc6608a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3513a21-16b3-43b1-8c06-d250e2db3a88",
        "cursor": {
          "ref": "eb797a5b-fdad-460d-a775-b66c28c3bd6e",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bb1efdf2-8b58-4faa-9685-609b7b246818"
        },
        "item": {
          "id": "f3513a21-16b3-43b1-8c06-d250e2db3a88",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "501bee4b-3177-4731-bd37-d6b7d2213418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ff5ad0-cacf-41bf-b4c5-c6340fbdf2fb",
        "cursor": {
          "ref": "63cec64d-6ef4-4820-8a70-0a48a3696653",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "df37bedd-5dbb-43fa-892b-28f01cf6ca0f"
        },
        "item": {
          "id": "49ff5ad0-cacf-41bf-b4c5-c6340fbdf2fb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2dd277a1-9944-46cd-a03b-5a146edec12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1927f0-e9dd-4576-abcf-0602a790ec4d",
        "cursor": {
          "ref": "600aec56-7885-4c81-9149-9890a0734cce",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "41200997-531b-4b1f-99ba-0efcedcf74ea"
        },
        "item": {
          "id": "ab1927f0-e9dd-4576-abcf-0602a790ec4d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "29e65506-6abc-4839-96ea-031fc6502aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272a5261-5d30-4628-96e5-8eb5f596aaa6",
        "cursor": {
          "ref": "74747fa8-2754-40cb-9c6c-bef0ecc01207",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "af8776f6-6219-43c4-ba04-9eba5d784dba"
        },
        "item": {
          "id": "272a5261-5d30-4628-96e5-8eb5f596aaa6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5b5398b0-9e1a-4fe5-b80a-0ae4d500de0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5f4850-16b9-4b8e-a53f-1b83eb6b6cce",
        "cursor": {
          "ref": "e5466d51-b353-48fe-8523-97af89b377a0",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9e2828a6-a5a1-4da0-b76f-fb39ea502f32"
        },
        "item": {
          "id": "9c5f4850-16b9-4b8e-a53f-1b83eb6b6cce",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9303ef73-f070-40de-99a0-440b2adbfae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d28bea6-1f6a-49ad-b95c-0b8c41c4aa39",
        "cursor": {
          "ref": "575155d8-73ac-4833-8918-aad9f72b9e54",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "975cc82b-dfa1-43a7-81c1-6bc62bd9e57a"
        },
        "item": {
          "id": "2d28bea6-1f6a-49ad-b95c-0b8c41c4aa39",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f9d96193-1208-42c0-b2b5-ea3556661a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eabdc48-d7d7-4c25-bf9e-a37032ee1331",
        "cursor": {
          "ref": "834082ef-72af-49fa-ad91-d9d9d8ca7de2",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "668bc4c2-c1cc-4817-a6c0-dafc1a4388ca"
        },
        "item": {
          "id": "8eabdc48-d7d7-4c25-bf9e-a37032ee1331",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0b6da7e5-edd0-4064-9626-d99216a055d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c818672-4453-4e7b-8cdb-871ee401cffe",
        "cursor": {
          "ref": "58a60c89-1f76-4bac-80e8-4dd5e73728f7",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "85c6b06b-8a91-4fad-8af7-41576707038e"
        },
        "item": {
          "id": "8c818672-4453-4e7b-8cdb-871ee401cffe",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50d72622-a289-47b9-a0ec-88ceea293dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1905644-908c-446b-b925-60143e62f025",
        "cursor": {
          "ref": "a3442e6b-b58e-447c-9e15-12f125911fb1",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "73bdae11-e843-49d6-ba42-3605189ca8dd"
        },
        "item": {
          "id": "b1905644-908c-446b-b925-60143e62f025",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b7060a9c-a25d-4d52-87ea-eecbf3f68739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a3ae23-14b6-4ddb-972c-3eb2b60dc9f2",
        "cursor": {
          "ref": "78f9f256-4ed9-43e6-a0c9-d2f5b67ad9d3",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7a009d47-db98-4178-9cec-4050322d0df9"
        },
        "item": {
          "id": "c1a3ae23-14b6-4ddb-972c-3eb2b60dc9f2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "13ecced6-40c9-4655-a16e-19a525f7d1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6368e6eb-8dd1-4867-b39d-d723b30759ab",
        "cursor": {
          "ref": "95a2dc95-74b8-495d-ae9e-facf09873638",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dfa83dca-b8bb-4ee6-a7a9-efe5dcd071b5"
        },
        "item": {
          "id": "6368e6eb-8dd1-4867-b39d-d723b30759ab",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6feeba82-0663-487e-a2ae-3e5d6aa92f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852632eb-5e23-4015-a087-7da16c67a91a",
        "cursor": {
          "ref": "1113a6d4-b78a-4e52-9ef9-1ba658f2a1ff",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bbf5b80f-40fb-413a-89ce-a0a8c5f6969c"
        },
        "item": {
          "id": "852632eb-5e23-4015-a087-7da16c67a91a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ac5f5417-e2d3-48ca-a2b5-1f3be16fc8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d576c2c-bbc1-4075-bcd1-ccdf7f4b4133",
        "cursor": {
          "ref": "4e1ca7e4-590e-41fd-a19a-eca5f5bf21cf",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e860583b-a07f-46d5-8321-24ca99273365"
        },
        "item": {
          "id": "9d576c2c-bbc1-4075-bcd1-ccdf7f4b4133",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9844a625-9a0a-4270-b066-95df3cd96c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9370d899-99ea-4071-b652-4e0e756947ee",
        "cursor": {
          "ref": "983c5d1f-96ba-45ff-b1b2-a776f52bb3b3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "67c232c2-ec6c-4c34-86db-4ab6e22c268f"
        },
        "item": {
          "id": "9370d899-99ea-4071-b652-4e0e756947ee",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ba20dd38-f1b8-4fbe-b088-b83297a5202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82a3c26-087b-4b4f-8b76-f4b879b6ba94",
        "cursor": {
          "ref": "9a40c9c0-db33-499e-9547-07c2ba01ba4f",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "40a4cb45-f7df-42e2-af01-b672a61c9bfd"
        },
        "item": {
          "id": "b82a3c26-087b-4b4f-8b76-f4b879b6ba94",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c9842f2f-d778-4407-85b9-901cbe5355bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec9f037-6aed-4c4e-a336-7a4101e86333",
        "cursor": {
          "ref": "4fad85d3-8bfd-4682-9143-03d17c9fbfe6",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "157d56e5-a0a6-435a-98ad-bc6a6f570375"
        },
        "item": {
          "id": "0ec9f037-6aed-4c4e-a336-7a4101e86333",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9e0c4105-e49b-4cff-a56d-900fc5605326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f07f41-6800-4833-bdba-2d16f169fffd",
        "cursor": {
          "ref": "68c7e3d8-9a89-48b1-a285-0221e662531e",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b1aa4eb7-f672-4b85-b143-5c826e35250b"
        },
        "item": {
          "id": "11f07f41-6800-4833-bdba-2d16f169fffd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a3099dfa-5fe2-4269-9e67-5011031e63e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c70568-09f3-493b-ad28-4d566fae9ed8",
        "cursor": {
          "ref": "73664e77-c666-4fca-87f8-2bea39c381d6",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "298816ab-1953-433b-a1a2-36125497f0f8"
        },
        "item": {
          "id": "a0c70568-09f3-493b-ad28-4d566fae9ed8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a4d1f7fa-d2b8-4b8a-9878-a6a9879eed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc911d1-17fc-41f8-9fc2-d8b939658f7c",
        "cursor": {
          "ref": "6f12b8a7-8dee-43fc-a268-58b46795e809",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c1fbad04-95ac-4ec0-b94d-ae24afd0f34c"
        },
        "item": {
          "id": "5bc911d1-17fc-41f8-9fc2-d8b939658f7c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b0879b07-a8bd-47ab-810a-a4be8db23956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d9a9ba-b4f8-4e42-9899-86b1778e80c7",
        "cursor": {
          "ref": "045cce3d-ff65-40b7-8483-08ebf1bfe3cc",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "509f2c4b-2e4b-4a17-bf3b-9fd4490d51f8"
        },
        "item": {
          "id": "78d9a9ba-b4f8-4e42-9899-86b1778e80c7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dbf607d9-aad2-4760-98c2-c670cafd2bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6975fdb5-835f-471c-ab2a-bc97e1727d46",
        "cursor": {
          "ref": "ff89fe31-e01b-44ad-bacc-2daf8fd2e687",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "be1547e4-f638-4210-b839-bacbae13ef47"
        },
        "item": {
          "id": "6975fdb5-835f-471c-ab2a-bc97e1727d46",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5ffdb326-579e-4359-aa9d-1a7e38739d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2731cf9-1422-42bd-83f9-8deffcfd3b69",
        "cursor": {
          "ref": "4f0d727c-d526-450d-8975-1248d1d7db73",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "25836437-3c1c-46c5-be6c-353d81dc2d71"
        },
        "item": {
          "id": "e2731cf9-1422-42bd-83f9-8deffcfd3b69",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "adeebdcf-36a5-44de-91d4-cffecff59dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11047bb9-5816-4a52-92ce-688da15c180d",
        "cursor": {
          "ref": "0538c911-3b87-4ba5-8f01-33a1c10ab224",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "99a2b4a8-a0d4-4777-95c1-a51589cacc81"
        },
        "item": {
          "id": "11047bb9-5816-4a52-92ce-688da15c180d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "71e807cb-2e96-46bf-95a1-0cb9a6c0e2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d501367c-337e-459a-b36f-228bce01eb8e",
        "cursor": {
          "ref": "340b7313-892e-4984-9218-2da64f20eccd",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8bb16fa9-674d-4ce7-b82c-0df2d7beecec"
        },
        "item": {
          "id": "d501367c-337e-459a-b36f-228bce01eb8e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3332aec7-d877-4245-93fa-69c3be7ec41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4182fc0a-84e3-4733-90a5-e6b5edcca60a",
        "cursor": {
          "ref": "254cdca9-adf5-4511-9083-7cc3c34f56c0",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "94afa2f8-c357-45c4-9292-897bdabf842b"
        },
        "item": {
          "id": "4182fc0a-84e3-4733-90a5-e6b5edcca60a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "101841d2-f8ec-4829-ba6f-14c7fa4d7aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b30451-a036-4cac-803d-719fc27cadbc",
        "cursor": {
          "ref": "827a4e59-947d-4aa7-976c-c3b12dac5d96",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "10d08142-a84f-4749-9ff3-4b1ff0382034"
        },
        "item": {
          "id": "08b30451-a036-4cac-803d-719fc27cadbc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "582bc46b-6321-4e3f-8c5e-897210f3d715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b76623c-1092-4509-b37b-0368217caa0c",
        "cursor": {
          "ref": "898cceb9-7329-4d1e-a9e5-164b14ddf3d4",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7bdf4576-9dbc-46da-82e0-976259752fdb"
        },
        "item": {
          "id": "5b76623c-1092-4509-b37b-0368217caa0c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b2d4f7f5-ce69-4ecc-91c5-d21b432c06a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b4f852-19e5-4ec9-ad44-0dbb58f9815a",
        "cursor": {
          "ref": "a5408c96-980d-43b4-aea5-bac322be6159",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b0015aea-6824-4670-b39d-c11c08a772f7"
        },
        "item": {
          "id": "e0b4f852-19e5-4ec9-ad44-0dbb58f9815a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9a2bc14f-4d45-4db7-9b7f-17a402eec2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d7df3e-40d1-4ded-9c40-43ab96fcc60e",
        "cursor": {
          "ref": "a0ad7300-f04b-42be-8c50-2229aa4b8894",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5d370eeb-f8ee-4317-8f26-ce6421587365"
        },
        "item": {
          "id": "89d7df3e-40d1-4ded-9c40-43ab96fcc60e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8e2ae7db-8f86-492b-bb02-aa9dfaeb627f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abec1cc9-20c7-489c-8b92-91f3d4cb1fda",
        "cursor": {
          "ref": "fc3774b0-9ef6-47fb-9e69-6fa29769d82a",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4a362af7-bb07-4337-9b48-0dcf89f5e7b1"
        },
        "item": {
          "id": "abec1cc9-20c7-489c-8b92-91f3d4cb1fda",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "312db870-8983-4b31-81d8-b691f71bb2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b440791-b913-4242-826c-370e223c8a86",
        "cursor": {
          "ref": "6dedea42-c7c2-4fc1-a480-eebcd6ade37d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cc7ba52e-6347-453a-9ab4-36905e1a8008"
        },
        "item": {
          "id": "7b440791-b913-4242-826c-370e223c8a86",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ed791aee-283b-4774-9475-177765b23f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157870dd-2bde-4c8e-bf85-0d286ddb7cb1",
        "cursor": {
          "ref": "7e6630b7-c202-4a82-8f6b-b4c094bd73af",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2e63dff5-dbe3-4d83-bdf4-529685f2a23e"
        },
        "item": {
          "id": "157870dd-2bde-4c8e-bf85-0d286ddb7cb1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "22f07eaa-1084-48c5-ba24-186984d396d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c9f6cf-2e3f-49de-833a-97dc43fbe789",
        "cursor": {
          "ref": "5523e6c4-d00c-492c-a0c5-15185b1d1cec",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d0883632-ae0f-49c5-adb8-f63734dae99b"
        },
        "item": {
          "id": "c0c9f6cf-2e3f-49de-833a-97dc43fbe789",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fad04cf6-7008-4f4f-a08d-d3989486f964",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e90ab40-7cbc-46c5-ba95-9b97dda353a5",
        "cursor": {
          "ref": "c3198ee9-70c5-45b1-bd8b-fa91fc78fed6",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f1f69fa8-513e-4c0c-a446-2bd1838ce25d"
        },
        "item": {
          "id": "4e90ab40-7cbc-46c5-ba95-9b97dda353a5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f06af11e-bf3b-45d6-bf7b-edaadfef0fbb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e89a56-e013-47d5-b8c3-a136fd2cc104",
        "cursor": {
          "ref": "b412e65b-d9ca-44ab-9fa6-7c443aff3eff",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dc1c037d-a8d0-4a39-b8a4-8f7d33d47268"
        },
        "item": {
          "id": "28e89a56-e013-47d5-b8c3-a136fd2cc104",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1e30465d-3baf-47a9-b32e-1c745c3fb609",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5114b245-dc5e-4444-b413-dd2102ac8c93",
        "cursor": {
          "ref": "0a955b20-fbba-4c15-96b1-7e6b07f8605f",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b6f256c5-a723-4c91-beef-b9c56aa90cb5"
        },
        "item": {
          "id": "5114b245-dc5e-4444-b413-dd2102ac8c93",
          "name": "credentials_verify"
        },
        "response": {
          "id": "eba53c9f-1041-49f1-99f0-c1e7e3ed15a5",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d39253-510d-4711-9334-5a9e5416159e",
        "cursor": {
          "ref": "49932dba-ba7b-4281-b450-8d3f7f8e89ce",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "909ee7e6-f2f6-4713-ab57-4906ab03d6d8"
        },
        "item": {
          "id": "04d39253-510d-4711-9334-5a9e5416159e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b33a8fdf-d0d3-4bb2-9751-a6890019006c",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d724dc-4637-45a5-b2dd-702b25258ad5",
        "cursor": {
          "ref": "91632415-5419-49fb-b9c8-de3025710a78",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "627d21cc-e43d-46f2-81ca-c4284612cb77"
        },
        "item": {
          "id": "a9d724dc-4637-45a5-b2dd-702b25258ad5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75cf25cd-1049-4a27-8c3e-2662760068bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d724dc-4637-45a5-b2dd-702b25258ad5",
        "cursor": {
          "ref": "91632415-5419-49fb-b9c8-de3025710a78",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "627d21cc-e43d-46f2-81ca-c4284612cb77"
        },
        "item": {
          "id": "a9d724dc-4637-45a5-b2dd-702b25258ad5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75cf25cd-1049-4a27-8c3e-2662760068bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d724dc-4637-45a5-b2dd-702b25258ad5",
        "cursor": {
          "ref": "91632415-5419-49fb-b9c8-de3025710a78",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "627d21cc-e43d-46f2-81ca-c4284612cb77"
        },
        "item": {
          "id": "a9d724dc-4637-45a5-b2dd-702b25258ad5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75cf25cd-1049-4a27-8c3e-2662760068bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735b782a-56bb-4680-b993-bca7f85f72ea",
        "cursor": {
          "ref": "2f2cbb20-bd90-4838-9fb9-151e4ff0f300",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f5681629-04f0-482b-9dcb-bac72d1d0710"
        },
        "item": {
          "id": "735b782a-56bb-4680-b993-bca7f85f72ea",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "425a4c14-0c93-427c-92df-a020577792be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d86aba0-5b41-4765-b63a-2ac26c6591ee",
        "cursor": {
          "ref": "dca8e7c0-c840-4aff-88ca-af78a71eaff6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1a9b68a6-c1f2-4088-9f63-a877688ac99a"
        },
        "item": {
          "id": "8d86aba0-5b41-4765-b63a-2ac26c6591ee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f992523-571a-4495-b683-09ecd3be791e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d86aba0-5b41-4765-b63a-2ac26c6591ee",
        "cursor": {
          "ref": "dca8e7c0-c840-4aff-88ca-af78a71eaff6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1a9b68a6-c1f2-4088-9f63-a877688ac99a"
        },
        "item": {
          "id": "8d86aba0-5b41-4765-b63a-2ac26c6591ee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f992523-571a-4495-b683-09ecd3be791e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd80a08-abd6-42b4-abed-a30480ec9b53",
        "cursor": {
          "ref": "38152724-f009-4c22-91a1-3eb4dca22a3c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d72b216e-c001-462b-9330-03211cd14260"
        },
        "item": {
          "id": "9cd80a08-abd6-42b4-abed-a30480ec9b53",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "08e1cefb-a532-45bc-aa53-b0dbd68c51d6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83c8b95-6bb1-4c06-b7ba-4b5188c12a11",
        "cursor": {
          "ref": "12be5c09-58b9-4ea7-b2b5-0d85f72648cb",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4020951-c190-4578-8921-60f9c16deb10"
        },
        "item": {
          "id": "d83c8b95-6bb1-4c06-b7ba-4b5188c12a11",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f28f252f-d849-4e2c-ba35-e192e96d45b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83c8b95-6bb1-4c06-b7ba-4b5188c12a11",
        "cursor": {
          "ref": "12be5c09-58b9-4ea7-b2b5-0d85f72648cb",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4020951-c190-4578-8921-60f9c16deb10"
        },
        "item": {
          "id": "d83c8b95-6bb1-4c06-b7ba-4b5188c12a11",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f28f252f-d849-4e2c-ba35-e192e96d45b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea90d18-be6d-472b-9a60-2e954c8b39ba",
        "cursor": {
          "ref": "f3ada68b-ee4e-4e52-9fec-43af01243238",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "43d0ab9d-c325-42e2-b823-301f303aaba7"
        },
        "item": {
          "id": "1ea90d18-be6d-472b-9a60-2e954c8b39ba",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "fdf194a5-00a9-4a0a-8304-fec6fd11f9d7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}