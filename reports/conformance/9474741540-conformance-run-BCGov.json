{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a6442411-c143-4e35-9117-c5355f83df55",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f6e98448-0be1-43aa-9d89-047df7ce8a26",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b53af3b4-23d2-4724-9485-354dc5be840c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "421665a8-b1e3-4589-a49a-f9b46c5e3f87"
                }
              }
            ]
          },
          {
            "id": "0334afbc-58a1-4364-a8bc-e2a2f44e726d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db341b8f-585d-41b6-9958-efb1dbc355cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1c7a48be-2d94-4db1-8286-9f60cb66dc7b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "deca2f66-a12d-49a3-8294-796a7aea70ad",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e353e8df-f26d-4c1b-9c71-fa4848e14d92",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9abf4eb2-0f2f-4595-82c7-8d997b53e8ff",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6c76ce3-72a7-44f1-a23a-15d14c0e58cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb15f8bf-d8b0-475b-80f8-87e9f0469707"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6010a50-2a0a-4cba-9eaa-486355fdabf9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "096fcc9f-0180-4d72-a258-98728a125963"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "449798c2-9089-4386-ad7c-d7a951d1d169",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73233d21-cd5a-4168-a5a3-adede5bbd892"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f5718a3-5714-46a1-af25-8b7a59297ea3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "db3d61b0-08db-4f3c-9daf-75d62d666f94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ed99370-6c9e-4a44-995b-26406fa540f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f72fec8-8251-4bc5-a495-0d64e58d8fa0"
            }
          }
        ]
      },
      {
        "id": "e09e1578-ce69-49f5-bfa0-e4d6fc8ecc51",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0368305d-5003-4d45-9a7c-7d59bfac91f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bd41045-43ca-4214-b4a4-cb8e97c3a7b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ecd249a-8892-4cb6-a2dd-d8f6f1cc2dca",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861c58bd-b9ba-400e-b273-f55c0f1e2746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f4adcef-44c8-4ca9-a77e-3666d6478225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5798bdf5-cd60-4a1f-8f02-b8189f5b902a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4d14d7-0ec6-4f2b-89a4-e462543d0157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39ac0ec2-bbce-4861-8c1c-cc6958f982c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ddcb3a-9d26-40b9-ada3-2df2a82e931c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d971b315-6e49-4d18-a3ea-18234adfa5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "842d39a0-330b-491d-aa6e-4b01c92c3587"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35cca387-9313-4a96-8ec2-ce53e8b55364",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "931ad4dc-fc59-4f36-8dd2-ff6ac2a7def5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149f4831-94e6-445b-857f-91b41695100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06479cdf-a4b4-4e19-9b80-5016143fcb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5203b757-8275-40b8-a35b-0c63b87b9478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0251dccf-98da-480f-a353-3d7ba8e3d104"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42c2c05b-e319-4477-94f0-27847f4d4777",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87cb016d-64b2-4e38-892d-016aa5da9d51",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0059b2af-897f-425d-92a6-3c1ce1aad387",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5dc451b3-dd68-44e1-9674-afa3704fd3db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e376a8e0-3b0d-4eb0-bffa-968fb780db3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "36893e72-54f2-4f7f-92cf-04c23ac1a916"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31efc388-e581-45e4-8163-4c6f55ec4c2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20690837-a6c2-4503-8e80-f789a9e82d30"
            }
          }
        ]
      },
      {
        "id": "aac3fee3-8132-4ffa-8c1b-5a6be90978c6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "314d2260-040b-4623-aeee-f42b8ed10bc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b45f698c-e464-4184-b42a-ec8a7c8ac2b4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f476b194-fbf9-4abb-a320-b841ffb73a6a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eb0712-e0df-4a9c-ad9d-1004f0a048a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0d6d6d-7130-4251-915c-fd7d6dd316c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c84f3b-45cb-4288-b112-67a71f33ca6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff16267f-dcae-4103-974a-caa81ba3ea91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f431f1f7-1fbf-497b-bc00-8067066e4cce",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7886686e-a353-4751-85e5-45c4a61d37cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36b7003-3d32-46d2-b5cf-1bb4c1941d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aeca50f-590d-4b46-8af5-6fff5b0df658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "068deffa-8377-4f34-9418-0cfdacf3ac71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e935bd-f992-41af-8c6a-98afe4d91c61",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e92c8cd-3648-4b1d-9e33-4eb0d1f3673e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e064812-6508-4d52-957f-ece28da68050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea35ce0-a385-4a2e-a61c-5cb5b5ca3be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "899c4a29-ba64-49f6-9609-88c8dcc7290b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d410cf00-16fc-435a-bd40-17cc78c0aef6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c699dd-9e64-4b81-a724-047ff4a8e729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee8c79f-f929-42b2-857e-b89abafc4004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bc1567-9152-4cf1-910f-d7fa61abe521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd155892-a2e3-4960-99e2-820dd055613b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d83a81-a689-49a4-b1c7-00e14aaa7485",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7c443b-acc6-4501-bce4-f9ac5f7b38ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6925fd14-5641-41a1-b13b-8d61995993c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63733337-5df7-4673-8447-a3491025d73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b223773-8104-45fd-a1a1-04f907040b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d440b06-04ea-4e22-9e51-e221be649499",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcf2023-3729-4dee-a280-339660989441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32767af4-559e-4a69-851b-e20890a7e856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea901b42-d4a2-4c72-ab8f-1a99b8bfd910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83dd3ba2-c32c-4185-9e7d-7eee58c8169c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5925340b-8bbc-4acb-9c04-4adf1f493334",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8aba852-7d8d-4434-a319-24d8eb393971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c784c459-8ff6-44b4-98b1-0fcca43cef45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24c2318-6a24-4106-b295-862073a6d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20528731-f780-47a2-ac4b-9e86aa746e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aae8cf-89c0-47a7-85ed-4fd32f3da51b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d083cb0-2e56-440d-a3b6-80a0c6a30ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c4db6c-fd27-4222-805e-e835b69c6614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf36b99-cb41-471a-997a-d17735c70e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ffe6dd8-6b26-4e2b-8083-319b907dd4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fddb37-4487-402b-af2c-deaae8c88c95",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a54417-fa87-4411-ba6a-f3670ff5a922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9cbd4d-6383-4c29-8b60-a2a56bc6dcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fc98f9-6e73-4f05-a75f-14541461ebe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77a0d524-eb13-4f1e-84bf-d7d2076e2e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dd466b-2626-4793-83a3-50aceaa2532b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83663692-09b4-4835-b43c-475bb3e7e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27eb12c9-5809-4496-8b2c-a0b071e0f085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1467839e-80cc-4493-816a-108f75cedbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa49b098-6041-4bb9-a23c-02cf5df6d462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b184c5-a979-4980-b36e-65f569ccf8ea",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be512b2-e0c7-4502-8a85-a5fca05ff2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11da5672-ec0c-40dd-8328-0c44b62b82e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c707d5bb-94be-4faf-b650-0b9f58e6a7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cec2492-d518-471c-8cac-f19258a4f675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04a3134-43ea-4905-8a9b-b507a27dbe50",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a881460b-fdec-435f-9d1b-731872db4553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96512ede-7519-426b-a196-d17d67ec20c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85abebd-fef9-4d48-ae82-25dd857348fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f604157-bef3-456b-95a6-3743fd0437f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e54988-ce5d-407d-8452-48e23ec60176",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42d4421-303f-4b12-83cc-d24c47f94657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c52890-c2e5-4ee6-8c71-817d73048393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f397271-6ced-48b5-92b0-88ef0cdff715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c55d0403-a20f-489e-a7e9-897464e922fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b384a43-c517-4918-a5bf-ac28fd3530ca",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27744ad-7263-41e8-9261-69b218a10ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53ffbdd-2ca4-4d0b-86c2-4ee9d41540b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe3fdf4-a054-4c05-942a-d412dc7ad091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8310b51-e83e-4b94-9482-4cc2a436b426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50148681-a573-4e8f-a53f-1b7dfa698e71",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ca235f-93a0-428f-984b-0afbba7f4e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba82178e-e7f6-4c47-9d99-431d9afc10e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e818853-fb17-400b-9bf5-13df847efad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf34b620-9676-41c9-8d95-8f46331587a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c920656c-04c8-42be-a710-0c5110d3cdf3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2066698-44f0-43a4-b559-fac88d715a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666e23e8-578b-43f9-b27c-bb29546968c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca897137-72d5-4f70-846a-e97d5e749576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "403d4115-5cba-4b21-bb98-2d9fc50ce605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5609b5d-06a5-4694-8d3d-59bc2faa8c0d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbc13d4-2cfd-475c-a35a-c695f229e238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3997c649-1da2-41a7-b535-16840853cd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27073b2-f3cd-431f-a74a-8c28c8e8f167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "577c2700-48ff-45ea-9573-1a14c3d78bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9754f332-fec1-4553-afa8-8293766861bd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a425bac-25a6-416d-8a4c-cb6c83cc9765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a871b0-0af7-4552-9467-28971135ed3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77afebc0-8542-4f5a-bcb6-188333f2e510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ef63e5-5b82-40f3-b5fa-cbb858272a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934f4c33-32ec-4790-9329-bb8c1211439b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c12367-744e-47ad-b2a6-dd39dfb12f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb1e6d7-d500-4f54-8fc4-5426bd77915e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aeb83d-3107-40dd-8b70-bf6fb728d687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d79eda-a0af-4a61-846e-f22b612c49a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267eafb9-5a02-43ec-b26d-de5fda57f2a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c16d43-670b-4ad7-bb19-d8260f19cf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6030111c-f29c-4075-9662-09c4926ce861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e365096-322e-4180-bf46-b4d9a96aa655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a6fdcd-741d-49e6-a651-40e056e8ab54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537faf5c-9591-4108-a7ec-794b3bb64f17",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76882c2-351d-4495-a711-21d1ad73bd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf35c79-a3a2-4c15-afda-86e3bd7c153c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783a8ef5-38bb-4998-9067-0d704ba9c64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9340b655-78c6-43e8-917d-2722f8eb0b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc42250-fc47-49eb-9869-e4499769a961",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2496ac4f-fa95-4829-9077-e663186befaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281a39a0-8655-4c24-b3b9-85d8bf106578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e8a424-03bb-4110-a10b-4a3beff957cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23231638-df68-46dc-a2e9-3f71afa666ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b624df68-4925-405e-bcfb-84b338447494",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953902d8-1a1b-460f-aae0-d6e0d82b6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ac278a-ef93-4b99-9802-9cb37f72e034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c7b513-98bc-4d15-a1a5-16d63b6af5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e059947f-7b01-4531-8232-9e4c8fd7e5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8ed27a-2646-4eee-bbe0-2f3768c8eb56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a357052-fc45-4c62-8d90-047fa5d5b951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d65b261-276d-44d7-abce-00be4d6ec019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba1aa15-e1a7-47da-9934-f54d5c08e0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "87460420-ab79-4c87-a214-9c5fe7d85922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd729f7-67c8-4318-af86-7b719fc98686",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d45bfb4-d345-4cca-a878-a34857eeb31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a880d7-927f-4420-b549-ec4be0354482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2801bd-0b94-46a1-9dd8-fb0dcfa7c03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce3f713-58b4-4fc7-a950-62d74084ba6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f5196a-4084-4e3c-884e-8c999da1329a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf335b82-ba74-455a-8c92-a9cd99510a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797ed0da-f68e-4ba6-a641-f9e69761e27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4003e293-77fd-4cf1-a072-f36bc12f09c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3563f7-040e-464a-aa55-276a104f74b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf86e501-3bbc-4add-a2f5-3c6d562df617",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6b465e-ca84-4e42-a9cb-593e7b84cad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef39008c-b9cd-4893-9eab-2129b4ba9a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e009f57-2dca-4c51-aeaf-42ecf38ffcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f686a0cd-ce7b-43cc-b91f-8c35373b4577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ead579-1804-43ff-8348-6bc059f8b8e6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca25eb3-bee5-4703-8d03-50ed20b47d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726802af-5735-4af0-b5ad-467d10464a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c019fc-507b-4e26-ac28-81188ce3eec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b1f919-4e4e-460b-8cc7-e52f067621a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ed9b4f-94fd-48b0-90cc-d10ef481f3cb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628109fc-2301-46bb-adce-affa3c649f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102e8aa4-c8ff-47c8-af32-4fcaaa1012c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fdce96-9975-4ff2-a6fd-c54b22df8e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f842ce-f910-4e30-906d-e8ae148b4f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fbeece-7c13-4efa-b6ba-955440537a4d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca96c6c5-cf9c-4048-8fc5-c51768dc8835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a646b86f-9794-45ae-b945-8d65a2e4a6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc6e11c-7072-4673-ad1b-ad40739dc031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb13d2c-931b-4e38-bf37-69b14c87cb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ab75b5-d228-455c-a328-dc18787ab6e8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483ec718-de32-45a8-9d34-5ddc628a4531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4654a64-8a14-4e98-8b1e-72627e23a9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a020790e-53b7-4974-9b0d-7dab38f4f83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96fb678-fa78-4bd9-8ed6-1a4b35322a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9a5304-8d5e-4f30-836c-3427e409fed1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835b8541-20f4-4256-ae83-e31b6f21a664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83e2b6a-0c32-4cf6-9ba5-9ef137b76476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcefd61-70f7-4941-85c3-a2f99f08abbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "862233e6-91fa-45a0-b9c2-11cef49477ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fc398c-f457-4435-852f-1a1d6a35078b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67fbc19-ea1e-4509-bb4a-65111fae9910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ef8d00-9218-46cf-bc8a-64e47c90d634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6f781c-df85-468c-8f97-6dec5a9beac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f79214c-7c89-49fc-9357-cb63daea0fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e61eff8-9905-48e8-ba2a-914da9937e31",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bee8fa1-664c-4f31-b96c-80bad6adebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696bbd7c-da7d-460a-928c-e30a0f76ba0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b43b25-3b6e-49c1-8b9e-2e1b321aafb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2619f8-d0fa-4982-a51c-62713e610534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f93c30-33ce-4078-aaca-3515cd104808",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28583b3e-529c-4535-a1ad-eddc999a040f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb6c79b-b044-4f0f-9627-43b3a86163cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8841ec-9d1a-4edc-861d-e1e5ab9fe387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a8294229-472a-4fac-965a-9e4c03a8fd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c7d4cc-12c2-42f1-8ca3-b9dcc16dc012",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d512631-3b0b-4f21-a8ef-a83b2c847315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64473e1c-9aad-4bf4-8cb4-86652e30efc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbe1c59-cf38-421e-b03a-333067baa775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75a85950-9cbe-4759-b414-8d52da90b954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76471c3e-bba7-4a62-bf7c-ddabfb19a00f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d9febc-4139-4ca1-9693-41ea17f1593d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98569b4e-793e-44a9-97cd-996fc3ed3a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35eb082-a576-4bc8-b824-230981b4c688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac700514-1360-449c-958f-e0968768c394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c925ac8-372a-4ed4-9059-e6b565b1b4d0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6af25e-0280-416e-97c4-ec5d00386aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95c4974-d21d-4c8a-9957-d01af8d91a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f4f3af-b577-4bac-b779-6da56fad9c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68e76906-53db-4262-85fb-6bcec1988b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dacbff-8c52-43cb-8e6a-d7451e6b4f71",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0e641e-e571-4930-97b6-4f294ab85b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6ed50f-8c87-4eea-80f7-4a0983fb7de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15af218-6581-4c53-8054-91f570c6c5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2c636d-a219-480b-bee5-82bef309a285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033a5707-8d91-4bf8-b1da-e5436eca3309",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f513092-6ee5-487a-9baf-f6d5b9db51d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd3595f-f044-440a-8b91-ee77db70be93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e1c42d-4b8f-4800-8402-f61e2455e5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb25d4b-b70a-446a-845d-f0d3c6c140fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8521586-2e39-40a9-80ec-7f95e1d03a90",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ac1b7f-e435-4d79-badb-31310d6c0f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc4e398-ca26-4f2c-aff1-030f4bb0be9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c2624e-9e35-48a4-a2f5-f4ca755a767c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b346e90-08d2-45d0-9a5b-ede5678de922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930cc0e4-7451-4e57-ab91-f7268c37ffb0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5968d011-0584-4314-9f50-90c605522b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bc3bb3-355b-4f4a-b81e-c5056daaa449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1886fe78-3271-4884-b5b2-06fd74aaa2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "419f320b-f79d-47f4-ab26-9671dd63326c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75811f59-9c8a-48d3-a094-4a0cfc2ab4a6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ea2ef7-9c13-4b91-a35c-cb1ce2a44a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36d9b04-4781-449b-ba82-57958bb7b331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92199d1-b741-4471-ab05-b38a700300fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37a468e0-63a8-40a8-866e-35996eae4d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da76158f-8d79-4042-862c-3f2311748150",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230b4f47-f17b-4094-9bf8-72cd81858d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bbc018-a9d3-458d-bfbe-d659d0644c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2269e3e5-1674-4633-8c57-f7f289fc1f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e679e354-f634-4a8a-b092-4cc25900197b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826deb33-323b-4675-a142-f1302f6f6122",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f00c62-9432-4ed7-ae9f-edf3d5fc4016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372f5d2a-0d9f-4df0-899d-e4668fed2d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6df607-04f6-4bee-9629-1f19bf8a8b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b849c1-7e25-4984-8e2e-f49cda4fbe2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4b9ded-fc50-452d-9409-c7b3cc976934",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6abc32-1289-4d31-8532-47e7c583a841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97ed625-d374-4cbc-99e1-e7e35ffb7180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b79f9f-9aae-4244-9498-4f0ec6b8a7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f37f847-d0e6-4eea-a704-ddaee4381f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f32292-98b5-47e0-993c-03ae790fb0d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6939c0e-a62d-4dcd-9737-64c6773b30cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aec7275-8c03-471d-a025-759591d49792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5580424-9567-47b1-ac39-b8f23403d6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd04b663-08f3-40aa-a8b1-fe2de477193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4f7224-c1f1-4033-ab8f-bc11d4c1be3b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf55b9ec-d22a-40b1-882a-156ccd41caa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d1ac38-6e21-4303-9374-c71ec235a1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1118de-ffa7-4260-b0c0-7b4c64fb2b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d063627-36dc-4a14-80d3-696a21dfd1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ccb49c-fc7e-4481-a66c-daafdb3f6de6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55059c6-b998-4f2d-b276-8077f690110f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afe20de-c65b-44ab-9f22-3575663ad9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141c9b39-6bdd-4987-b4ef-dba79cfa098f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a871437-12ad-4a4a-9570-5d1110adaf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4056f361-9868-4b67-b0ef-05a63a2b800f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05f8124-5371-44c3-bbac-3ca4e9928d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c9ad49-4d4e-44ec-aeab-028742af45bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a008dea3-19f7-48d2-a4e5-c5e95125cb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d37c7b-2aee-40ff-a3ce-65392b10f383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb25b11-0fcc-4dd0-bd6e-09b95bbbe80e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1b4272-ec68-4f5b-8fd5-27dd17478ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835cfcd1-34b6-402d-9e7c-70421518bebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7bdb9a-0827-40bd-be8e-2e8d3cc06a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2ef32f-54df-49f8-9f7f-b793b4b8eab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7552fb23-4a2a-4f1b-abd0-f3cb5ba82f9b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e29ed5-e965-464e-8898-995d7c345ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf01de2-8fd8-4ae9-8137-47c4537873ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da33eff-ebd7-44df-ad96-7c31a4f90073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ebfa5e-7ae5-41ba-b859-61e82a815e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3331fc5a-0042-43e0-92e3-90575ca98120",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b9b1f5-8834-4b9a-adf5-8e8f0004fc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2535fbbc-285a-42c9-a289-743181df5b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e748ecc-b2e5-4c3c-863f-6eefd23952b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c48f6dd-d073-4382-b340-c405d818f5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5acbadb-0d8c-4d44-a671-382164832645",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a6c244-f8de-4f5e-9e46-ba61d49a31c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69bc3f0-11b5-4064-b113-749fec3e5b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42beae41-7bf1-4f3e-bdd2-2d61ed940e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97bace17-107c-4034-97ba-6dac12d05552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af86b3ce-7611-4b94-843e-b5ee11bb9ccf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00330787-8fb4-4109-b8ef-6848f2269030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58961ec-16a5-459f-81b5-ebcb310d311f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bc2346-63bc-4a37-92cc-cc755228995b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c508cc8f-ab8c-4724-89b1-08c5a68f614e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301f7f7b-c6fa-4500-8ecf-e4ac41b92a09",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32ca42a-bb88-4083-97ad-70abbca9ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac20e09-303e-4ac7-8c31-e34b4032e4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847045a3-6e49-44c5-a423-60e8b5140e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "207e8928-b3e0-4408-9275-74288a1d6580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ddc7eb-9a53-4066-a325-9d432ddb9d40",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f3fb2a-e744-41ab-80a5-778e09b84c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ddd26b-43a3-48c9-beec-371ecc36a617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e47302-ab92-4987-8b23-d600f036471e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52a717f1-bd68-412a-89c9-eb71d40e986a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a812b9-02b5-474a-85a7-bd048ac94ee1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ec1541-aee0-46c8-a5cb-aa02b5625cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15554dfa-6414-4ca8-8ada-0a77a1e3c8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b20e158-2640-4d96-8fd3-bdf23f43261a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dab38d0b-33b6-4807-98f4-50464161069e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4770435-7b37-4984-a2a5-94347a3a4471",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b317823-077f-4948-89b5-34d99f46241a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10739f41-c855-424c-b7ff-427fd60752e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02d2a96-fff8-4e14-bfe1-c7f2517be1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1696364-b416-4b43-b2ec-2ffb60abb5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cf55af-0ec3-4bf9-9b85-a4be35998d0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa1623e-847a-4ee4-bfd3-ad2d7337d7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153a9eea-0193-4eca-82c5-deb893843a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9e33c0-ed46-462b-bc1a-6994e3c04f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c11eb2-b200-42d7-85b6-2babd1905a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcdf080-96ca-40aa-8472-f943829ddd50",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c1c8cf-87b6-4504-9785-8509ebc95f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b69b27c-73f3-4118-b2e5-112da64c9a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3629fd27-06c5-4fc9-82a7-3b112fb0cc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b552d516-eca5-4c69-9fd4-1a71cd68163a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bb6c04-fcbd-4aac-bc8f-a33b530bbc92",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab98f30e-bf0c-4b8b-942a-ff82c685387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9eabf1b-657c-4f5b-ade8-a1e2791ef7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496a8930-87bf-408a-a291-1bf84ccae804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffeefedd-f8ad-4d2e-96f8-b504b9324fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16812f6-4cc9-47ce-9884-c866bfa0084a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d43e1d-0049-4250-b716-c53c87cd2dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ae8e7b-c65a-440c-8ada-2a4403475296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b33a85b-56d9-4059-a0f2-2ff8cf7ec8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "365df4ad-63d3-448d-9979-0a70d75d3aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcc4a35-f2b7-47e6-acc1-8659cd86b729",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ac21cf-3747-4bea-8eaf-983ee1d2a3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7781ec8-e27f-4d98-b135-170c200e7f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da408f67-3951-442d-877f-dd577bb95cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9721c7-5f4b-40b2-a1ff-0d1c4ea991c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e38fb19-eda2-4f2d-aaca-c9e6b43f28c9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41abaf2-0d4b-4a9c-8a05-9e705896f172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2fe0d0-c22d-4642-ac51-ffa717a8c0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad919e27-f8e8-4fab-87b7-128d522992f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55cc2915-b90b-4b7c-8580-c22a4fd75d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ea0f3d-156b-4f86-ae3a-108fc31178d8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f8ea96-3d27-4d8d-b26e-40239ba3c9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9e40ac-a98e-4acc-a724-d2a07cca131d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7f6d1d-174d-43c4-9c88-c9a86448e6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adbe83e7-b9d4-4b26-8c17-f6545b3d84b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d304988-1038-46d4-8051-73383cd3a253",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a90203-a8c9-4596-80da-c119a0a2e08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d038e6fb-8581-4228-ba0e-906f639da8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe2d234-7efe-43b0-b38e-ab6af833233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f85a3c7-6223-46ab-b18d-489a77159576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c66c6b9-3edc-45b3-8d41-cce5aa8f57c1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f9aa90-b778-4b22-b2bf-7fba9eb7cf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac8d3a2-25b6-4c16-9bae-eee17235f9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0d1360-f651-4551-be0c-8a1eb53acaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c528bc55-1ee1-47bd-9459-772f06af2da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9190ad0c-2d66-4a36-9255-ae3a29f54da7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68782ac-0d63-4687-b024-ac325274c537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db107b7-d9e7-4598-86ea-8a1c4a6f2ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a27014-8b20-4e79-a6ad-9e0ca008237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ed1277-78ca-41ca-b84a-bd397a857e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949e86a6-76f4-4548-84d4-e71635ce80b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa69fae8-4c0f-485d-b145-042305663e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0115a9d7-9fa9-43ca-92d4-72d7988c6a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d98dad-3f2a-4c20-9074-01a8129c5353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc24bcb-24f9-4afa-b36c-cad947d8ced2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20d4c37-f61e-4965-8721-0b429a7c8299",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd15359d-12a3-4a60-a7b2-5df5c3fd8ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fd3b64-5f65-4760-9a3d-29ca20841b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38078d59-b29a-491d-8c46-1d23b4ded26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d55687-d408-4abc-909a-fb2c69c0c7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4a0c50-25a8-4b21-b3ea-090bab9a1f4a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e5de32-456f-440d-af22-8f9729cf36c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553d3968-2df2-45d5-abb8-2b70963c2238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee77980-d2f1-4a0b-8013-4da8fd18c482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d09c599-f0dd-49ce-9250-02f1f7bbb5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256b0633-88ee-432c-96d4-0080d74035ab",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e2bda9-def9-4a00-aa1e-a62d3c7c4332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caffea6-6a5b-483d-a98d-ac4bcc58d193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9494f39-d466-471f-9a11-85ed1124b32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12ef9139-d15c-4d03-89a0-333df9d27909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e8cf37-049f-4a59-9c6a-5b8cf7ceb148",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c69e08b-5d4a-46f1-baf7-b7c52b238566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b97d9a-211e-4c6d-b226-8402808f5e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964aaaee-ca17-481e-a4de-5aab2e29ee9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a314dca3-46ac-43fa-968d-e7bc004b536d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccfcf13-8bf4-4423-872b-fa7e224ec652",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d127b29-1ce8-4407-a1e8-a9ce995a6005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca821a0-91a3-4083-87ff-f0a6e5ef090b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d48ddf6-308f-48f6-90a0-dfa13995be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a763bc-6ee1-429d-8dec-5ed7e7af1c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910ecfae-74b4-46fd-a3f6-88639064a6fb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d422b39a-c62f-4a7a-acd3-4d5d4163da10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dacc02-2249-4f7d-b453-8c3e4de918da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada96b04-5130-41f8-b5f2-de5027ec7572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b7b452-63d8-45da-ae8a-9379a5d352fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60859913-32b5-47dc-a2cc-3a65dc48e249",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3237e7d-4b6f-4675-8121-08ccabd469a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41f2cc6-e998-46db-bffb-7dc89ff13a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfb7a85-4819-45f2-a5fc-5a001fdad110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b15241ac-3e6a-4e5a-833d-0f27db8ac810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774d1753-0523-4bbe-989d-55be67dab7e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff76c5-b220-4b92-86ed-886694cdd244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36045f6c-c3c4-4083-963c-5b0606ea698f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c419092f-52d6-458e-9e97-9aeb55d253ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6715dc-8936-4318-9ff2-39bd587cff43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637a6324-a788-482e-9bec-3b42406dbea0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cf8079-c305-407a-808b-ae3bfa4ca81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ca7684-9bc9-4603-aed2-087a8b81301e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24385a8-73a7-4bf1-afc8-73550765ba0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e533f8e9-4225-4453-8129-368a9be996be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4132388e-9b93-4998-9a7c-dc5be35faa98",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6925d470-e495-436e-9291-f8f088abdf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07825573-1129-46fc-8851-44658f118c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e058ac-2bbc-4e13-b7f7-09aa9443928e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba290023-9e24-4543-9dd9-a09650818dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80d4969-6797-4718-9cce-671b237551be",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f5251c-9721-48a3-8cf7-0b09ffde2c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138fd17b-3713-4223-916a-c8dc05f16343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807b7b39-e526-4317-9107-05e278f01f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f43456a-0aa7-43ee-b5ca-8700bab9b394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bca6fe2-5ace-4952-a4c6-1a2298e98672",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcce84c3-eb65-4114-95bb-c2541b0846c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ed5cd6-d46d-411c-8877-e225f164a358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58768d2-8a84-46bd-98de-b54dc8e393bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d440cae-46ee-4963-9106-228699b88663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b68455-c2fa-4d8c-9818-5159c435395d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44448c20-2107-4bc5-9bb3-fefcf5bde457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f27cd-36ae-4dc2-b362-0923ca6ce6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99564bd-7f31-478c-bad3-6b8656e8d21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b92f85-09bc-4cd5-8564-d9bdbb5ce256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1260668-c058-4439-8e93-9d8936a86234",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d1a92a-f6e2-49b1-99e2-a27775d0f797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f97e8a3-a18a-437d-bd14-8e56414ffe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2c9bd9-0cd9-4a93-a522-fa5ba0d76639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c187891b-ff40-4388-8b2b-55233a63a6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b252e7-c5bd-49dc-a24f-8b9bac0bc0ce",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a28c55-308e-4742-ade7-82a0d0792080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77cd097b-74d4-46a8-9d1d-b68d3724ec56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156b8ca3-1230-44fc-971f-cbb2e6d40026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0a3cb0-f26a-4feb-afeb-447cb82b0220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01194dd7-3ba8-419b-a176-01c6876bc868",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb324a11-20c6-4be4-bfd0-f3082b964c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd519d5d-1a96-4ca1-8060-1fc1c62e4813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718c0eab-e41a-4236-a9d5-bf3f9ab99017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "207053ee-a307-4b14-b0aa-daf9a3d1e5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeb1878-91ce-4257-b6d5-82540eba9d8a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb52683d-92b8-47ad-b378-643350180f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa5cc52-f263-4980-bc45-db32fa0f0986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd33a38-6f4b-4b78-a271-46e597e4e642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "071ebe54-8c09-43ce-b143-8184a47ff8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2671ad5e-2480-4ac2-b7cd-050f8016aa7f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1df71f5-0ae0-438f-8f10-767e5df18ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385fe482-47fd-4576-8a9e-c74e0351fb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c63ee20-542f-4be6-9c2b-2850238d4167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e56bfe7-d155-4da8-aa19-929338486da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eb605b-f0b5-4c95-b047-34cae551f103",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7ea514-39ae-4560-bac9-1a0bd176c211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b4a48e-7ed2-4e13-b869-2222fbbcde90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbaabae-8606-48fc-be73-b4419a8bb201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "503ef02e-56f5-4c55-82c2-d4362e165e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2aa38e-9875-4f06-9314-9f01dbdf55c7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6039300-7dd9-4945-a88f-2d7553530a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9be979d-934d-46f4-9c22-b1b0edb3e4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504110e5-29e0-4069-83fa-2d96a8a36385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb1d781-aea3-4e21-84cb-371c4eaf62d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165375c1-739f-4fc2-8225-88a4dd69fef3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca749ca-3630-4493-8c68-e78b373694a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b049b43d-1c91-414c-aa0c-5df827bdaeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20cdf8a-a7cc-4a4d-8214-1d32a5f8a33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fec52f2a-4317-45c0-b35a-548c93134aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd70b88d-41a5-4422-86f7-8d3bfa6497ee",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afc1056-a42e-4ae8-9b6c-5573d1e4331a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "73b1bca0-5cab-43c2-8ad0-76b654105681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1385abcc-d8e2-4cdf-9f4f-35568f4913df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "689aa9d2-39c6-4ad1-a9d8-ecb93476ee90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a630d8ee-fde1-421b-99e8-383d77e220af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13d5aeeb-6db5-46ce-b73f-e55e2c6936e2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f074b6-e461-4c52-a20c-208fc3169c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2afcd2e-c179-4739-8010-d6ca1f68329b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d697f6a0-bd33-4207-b2d5-d5801a5a38d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7028e396-de69-45c6-858a-ee616369b824"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6f8adf7-4928-444d-b645-979421f22ade",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7b3b81c-c344-4419-8535-5059eafa8d74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7646e73e-0ab9-4e55-a7b1-5a098246aa8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a186e017-668a-4bfa-bc11-44e9c19f434b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6643ace7-adbc-4463-8546-966aca770f16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9106280-4b60-4da0-bb5f-ef4cf0816671"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "954a3cad-b9cb-4431-b560-dee2bc0b3c69",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44bf7550-7d34-45ba-a79f-3c9000c4e7b2"
                }
              }
            ]
          },
          {
            "id": "1dbe4915-db37-4834-a494-0aed84699ec4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b82f1964-8648-4ea1-a8de-607af630f55e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6050636d-c494-4bee-9282-feebe2ddcc18",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e278eb5c-dd89-4a4a-abcb-669757b42b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f5903072-9613-48c5-a22b-2eccc9f8e7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4611a7e0-4ebf-485b-a4cf-6bac2613ae35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58109fb1-f4c1-479f-a3bc-4c44c0f025dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67cff583-468a-45dc-9cb7-11c2e676fce0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b9f94be-969b-4b9d-9841-707defdfd0a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33699819-395e-4160-b8ed-095152fc2ea0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "626e51c4-0254-4f7a-a536-9376460fdc09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "560c5f78-e4e1-4ee8-a7fa-586665cff97c"
                    }
                  }
                ]
              },
              {
                "id": "95f2abe8-c231-47ea-b8be-60009f172044",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4f33eef-3437-4de5-9fc1-ab88b972c649",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb45ab9e-aa05-4167-81be-0446a91046ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40bf1b5b-c9c7-44d7-8f9c-0fa2b6213dab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fcc880be-b4b9-4a48-ac4a-0b84c91e3ce1"
                    }
                  }
                ]
              },
              {
                "id": "3bbb09fd-f1ac-4ad7-9ae6-37298ed5c766",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e580dd43-09ef-470c-b2c2-00681cb20292",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d44eaf1-b94b-4d19-80bf-90af488e2ecd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a02f518-8adc-4fc9-9efc-66bf8d4b4cdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89d88095-1a83-4eea-b212-6730f8f132ce"
                    }
                  }
                ]
              },
              {
                "id": "633099c2-9bdd-48b7-afeb-66a1c627d599",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3caba91b-098d-4815-aa0b-0bcb0a86be51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9008770-717a-4ac7-bc74-eab7b819c5d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e5ca905-effe-4d78-99c9-4fc0d31ee53c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4720758e-b4e0-4065-9470-eaff47eb56f2"
                    }
                  }
                ]
              },
              {
                "id": "ac3e441e-615c-49a2-b5a5-5cb62d4950a5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "963ae5b0-11fa-40ce-9ded-497a20b2b169",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de1d0e48-f52e-47b1-bad0-42653a9be5b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1db1aa5-af1c-452b-af6b-1ac53dcfde1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e5f7a84e-237a-4b37-918a-77ce2b69b6da"
                    }
                  }
                ]
              },
              {
                "id": "3c4672f2-8777-418d-b9b6-53262bdf1330",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c7e95e5-e63b-4b88-b417-22493cb3884c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "944c1896-d650-4d12-8923-cc6773137ffc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20e6b2b3-533c-41a8-bd14-75ae577250d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c8e014c-ec2a-4250-afbb-cb6fac2c2940"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d519053-c8d5-4f47-898f-3145dc41c638",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58c1c7af-0c49-4a9c-8579-07f1428216d9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ee3c547-4717-4def-ba93-2728256e90a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0a61cfb-c040-49b8-9801-2d986d2d95cf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c554fd1-a7ca-40e1-ba51-44420fe6915c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "57707790-86ab-4ee0-bb51-266cffab4d71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64a7857a-90ea-404a-aca9-cf1297332c7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6ae3480-a7f2-48d8-8da5-2f7f0477a426"
            }
          }
        ]
      },
      {
        "id": "b7eb0443-7afa-420e-8ce5-43a583ad5e0b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "776265bd-f62a-4a57-a31b-9eb565f62871",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e6fd21a-204a-4398-a2bd-922290ff557e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10284724-2c07-4e92-90f7-5f10c2b4e815",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968f1b44-9bc6-4feb-aa21-9d7ebae6ac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a53e245-5962-49df-90c3-edca8dba94bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8533a6ea-5ab0-490a-81fc-1e258e570aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8af69496-7159-46f4-a2c0-895f2859622d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d52ea1-82c6-475b-ba72-ccbd36847d56",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23b1378-eaa1-445b-aa47-5c001aec5894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe85bf31-cf50-4447-978c-bdc58fe51591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028593f8-0e62-4b98-9bc6-8d5761c0d82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b18afd-4314-4b67-994c-bee2fa666d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4eb75f-2464-4670-9124-3d7cac76c5e0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e28f42-5ae4-4734-b481-893c9c563ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33539636-5f48-48a4-88bd-59167e31abd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d626a54b-ccfe-4be0-b9ab-23b46b6e90a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e4b353-e044-4c7b-b78f-bcd25206c453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bca4f7-8033-44ac-92e1-470d4ed6bbab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9212cbd7-1a1a-4b01-8134-c1c616ac2368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b64b61c-021d-40ca-af4b-f4c6440eefee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bbedd5-7d6f-4eea-b870-74a4ebc2c4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18df731d-ec1a-4985-9276-4f76b2c213ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80476f10-0502-4233-860b-b78d5e3e5f98",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4be5ba-d1c7-46af-a444-dee757a1cc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f03f015-d15b-4d5f-af11-67b1bc8d0327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fecb179-7d5f-4e8e-8455-cf842bc20820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b124c1d9-d7e4-4a70-ad01-805c02b5edc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b7d451-8d25-4267-afca-bd0b9431fd05",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c7b103-c3a7-4e4d-bf24-5f1e2af197a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8dc482-6e0b-411a-8748-8c383956fd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a5a753-39a9-4c40-b878-7731ed3ed998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a63efe7-deba-4085-8342-3e7824e324b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b3cd79-8688-4da1-9d38-f3dd82595a05",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde96524-05ef-4352-99f3-ad331ce934ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3601e9-ed51-4c5c-8ee8-0112270b1bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c33a4d-d54a-45d5-8c09-daf8d7ab9116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa1270a-0772-4bb8-abb1-1078ec2177c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dd71db-8bc8-41d1-8648-7eb5c17e029e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3383f9-6e82-471d-9116-a0002c92cba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5c1699-5512-42a2-8374-79bd34f24c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44363e1-e40d-4cde-92c7-25c4d1129079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a91c08e-9ba7-48e4-93eb-cfc9ddfbc788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25175c46-508f-40b3-a3d8-d033afea4043",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2716e6b-0021-48b4-99c9-2589df0573ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d9b2e7-e696-4b83-a293-ceda6038d9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c55ddc4-461f-4e9b-a512-17e060540c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba9ffde-b2ea-4a97-9063-cc25cafa2f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f742f9-525a-4229-aaf7-b99c3da3443f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b8dc73-7912-4fea-b4c6-7c36dbb80fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05852f0-3aea-4f4d-a7e6-4e1bd5b425dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9cad11-77b9-4978-a4c3-de5e4dde8f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "979e4991-ae2e-4e5e-b9f0-eb573e0f680d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57608415-2b36-4d26-be6e-4e622e195c2b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444786c0-bc4d-46a5-9f43-d62ee54cbac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c792d2-f6c5-4c9d-b57a-e63538e8e9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f24bd2-60f0-446d-a1a3-88f53aff2e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "843469dd-e381-43cb-8515-246dee084b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19710084-b7a3-4633-90ab-56a223749e64",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d252544e-19ce-4f18-96b0-df0ba553a335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7bd815-2253-42da-bd80-f124e39764ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cab034a-db7a-469e-acdd-b745e142e03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4cca2a-b9ce-41cc-a77b-dbc23bb3a982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d553954e-41a4-4c35-a835-f4a40f6241eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746c8299-b0cf-43cd-b062-9652d4b6e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d041678e-10b3-4cff-96fb-f1fb9513a346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd4778b-713d-4a54-8fbe-3733da871a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe71b76a-2aa8-469f-8550-6487bfae8b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cab6c21-cc25-4a18-b4dc-5eef2c405bf7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c29c0f1-f69d-4007-9754-204b9dc39e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a687befe-eac4-4145-89e7-a9e5b03b4f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f647e4-b0ec-4e30-8c78-c18809e09a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c6a128-9701-419b-b8b8-ea5f27621ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195f2769-5264-498b-a20e-29dfa94398fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c8d5ff-88a5-4ac6-9a6b-e0429b6a2ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8bf706-7987-4450-93c8-ac7f94a127f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65db3b00-0bfe-4869-9d1b-baa8f90b8f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "827170a9-4bd8-4812-ba01-a04b8f3d94cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da20bcda-d796-42a0-a3d8-372a2db42cc3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e46da69-22f1-4503-95cd-9906d9c20570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2684a5a-4d4a-44cc-8d72-dbdd1510e9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e042aec5-fe88-495f-80bc-2c7b93a65d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3600384c-2d3c-4a67-9e93-961ee5a896a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e4d714-421a-43cb-88c5-4b04cf27fb8f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a12a04-55cb-48ed-a813-44897df9e705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14944162-010a-4cac-946a-d0f02a38fd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c4d09b-baf2-4aaa-a070-06dfbf9982bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5257c00c-929d-4f43-b2f2-d77206fb3fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d282ab6-cc12-4820-8567-442815885a58",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e6823b-ed11-42b7-9cee-e43ab936de18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415ea101-ca7a-4951-b242-4c90385a55b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1674e95-ace0-4f0e-9101-9e9783e7219d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae52095-7095-49ca-a22a-04ae503842e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1021c56-cf74-4b56-940b-6ba412d93b82",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5694116c-8e1d-40ad-b7aa-9812b9403bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc9a10e-e178-4942-9920-f755209cc7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b549be-596b-4206-a2ee-2415d4a4d7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc30519-0a3f-4bac-8a87-475d92ee4ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d45272-f767-4384-aac8-a53f49055bc2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d3f7e1-4550-4e5f-b911-59ecf677bf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5441f401-3286-4e1b-9bf3-318f5375a20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f8563d-805d-46c4-9b7b-846b4a43dc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b912293-12d6-4ae9-82e8-1faa1fa05871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0ec45b-3f30-440f-83b2-33089f10b32a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da12838f-d081-4a61-bdb4-f1be1f1dd7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b82875-898f-45a5-a981-3e922958b387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13ac934-a1c9-44aa-883f-7a5bb80a4ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "095bb559-815c-4cca-8a37-4e6bea19a752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0dcccc-50c6-4d96-8738-f2ba56216f63",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bf5d37-765a-44da-bec0-55419d09fa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ff137f-d462-41df-8e8d-7514cbd81239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffe3402-3f1d-4cad-a7ca-fd7851874f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1eaff66-366b-4c40-b50d-d0476f727235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b63998a-ad39-4963-98db-7621e370859b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d57169f-cfe5-4818-bdd0-13d40047c654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c0fe19-c0f6-44f2-9c70-435be8b276ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7295c4-415d-4ecf-8033-eb9e3c098d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb84149c-57a9-4670-a251-e49a2e0cd2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b7dca8-6e50-4583-8d4e-33bf8e12c655",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fee221-7d58-4c3d-a501-85d6021b415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62949f4-ba52-4456-842e-f1fa17126ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0641b970-10f0-4153-a4b6-d17282f94653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5277a2-5dcf-4e23-b102-2bc49ba0a91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e1598c-2411-4fd7-998e-4385f8843918",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f46641-7189-4618-bac8-db320432a8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2587a05e-8875-440c-9a0c-f071f0ef05eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026ae390-0f00-4a73-947a-8214e7ee9a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0d0b4c-57c3-4cbf-bb0d-750268d4f746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fd65c2-e452-4491-82fa-35ad5a4e0f55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff9aca1-058a-4f6c-a951-50c8a6f4a652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fff116d-6613-48ac-986c-ea1a7ec02f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16594c64-90b1-4855-a410-7bb64c5ac092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "363f37d9-4f2b-47bd-98dc-6e85b1bf4ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159a687b-1f1d-4c21-8e6e-5af37725b3c1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51f7683-577b-4694-a552-46846f255868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15072e1-ee81-431c-9f11-b0c22ff7e38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4257bbd4-fe99-45a4-920d-78ec217f50bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a56d5da-b6f1-4bda-86ee-284ed6c31ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed81158f-5f89-4fd2-8a97-a0c2c3cc8982",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b260261-c2f6-4045-817f-16814c75f2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ef8537-1704-4c7d-b457-d239d8dbb8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709c57a6-55bc-42ac-b5f3-804eb5a91366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c33eaf-39e4-40b0-8703-0663ca64e832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa29dab3-9bc0-42c0-8b13-a692bb836ed2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb14bb4c-c74b-4b1f-a38f-b0ae9ef234c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2665029-cfa6-4435-9f06-8ecba4de9e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4789e5dc-26cd-4302-be5b-c2466a107470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fabe7746-3eb9-4f9e-a990-e86f3b630fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1150146-a991-427d-b718-c190e3122bdf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6744224c-c573-4ec6-975a-052c133e701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afe6a6f-92e4-4f43-bbd3-809f17d97129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bdd553-b272-49ca-b616-4cdf915f0e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7630579-5b9c-49bc-ab36-2aff6c039b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3bb3e5-9ddd-4292-b88a-76d6b35fe62e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bb1a61-feab-42a8-b747-0bc0502b085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6334f770-146a-4e0e-b87e-19fbfb29c843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042b7a20-78f4-4675-9ea9-feb556ebdb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7d49b0-fe56-459e-8d30-8e01704c41e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4d869c-1c86-4562-a0f2-13167b66fab2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94760b15-b937-4faa-bc65-7b7a06fca3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80d69c3-e8b2-4c31-aaec-d33c092ad0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09350ab0-5db0-45b1-87c8-ca982ef69a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8fd389-750b-4074-8e5e-eb895531cde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4cd1ea-4b9f-4d9e-b607-71a57b34da28",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7635d46d-268e-43b4-ad70-ca224f86a48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5885272b-fffa-49c4-9693-8469f5cfd923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c0a6b1-f591-4f26-8c95-c31c556daee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4f763d-e8ab-4ab3-ab26-d4d51da47388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2f815d-25f2-43e3-b7ea-d3a525c5c21a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b62e68-e210-4044-9321-d1c87339886b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fe39f1-148d-4310-9549-7aa8d0682530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70130dcc-5ea5-4dfd-9dd3-bcedfc823465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "064e9c49-2486-49d5-a5ad-3f4f35d631d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f080c31-a701-4c92-8c72-763dc41f0228",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c36ae9c-de55-4493-aa21-c18fa5351740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524fd1f5-0b4e-4f2a-96cf-b38c869d9bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae610d69-d1bd-4707-a103-e5b018ee1376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d218cf5-f5b8-4274-a0c2-193465747117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf05f2ba-b0d8-43a0-be2c-1ab9719b8c5d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401e6dcc-b999-4d3b-84b8-ca30ce290689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce973e0-2745-4d88-bf71-8541f6f2100f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc0ac86-4d10-4231-9aef-82589ced21b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de17d18c-ad80-4994-8a22-20cb03314c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f5d094-54eb-4e12-ae8b-ddf1b5570105",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c573d0a7-a8ed-4907-b7c8-cfa17d98473a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e8551f-127c-4444-bc3f-deefe2bd6b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb147bcd-b7ae-485c-b0f3-c103797ea77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1501a6a6-c98a-4c8e-b328-33166bda6680"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a75a5d09-9ddc-451d-8d27-14f9face7c4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb84df1f-010f-400a-b3af-4d91c4205503",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c41dd0-8494-4e19-b4a7-daabde52c9d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "73dd3fe2-71d3-4661-b476-cf1501a9c36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057a6628-603d-4ac9-88bc-173761a53f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebbecb71-e637-4d97-b042-cfe5be0ca25d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bef310d-d081-4002-bd3d-c502cd08b9d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea1287ae-f58d-4bc8-9e96-998e064f7898"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2eaf5c7-cc56-4e1f-b0af-c6c134921357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25f209dc-402d-4b8b-a7d8-b2d88dbe7bce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3964f8f1-021c-46f5-8d71-54d529f96ac9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28c51314-4fa0-4f2a-ae0f-4762b34dddb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79c0a4e9-b472-48f4-a44b-070873a82a11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "723f16e3-7a13-4735-be11-42bee9ad16ba"
            }
          }
        ]
      },
      {
        "id": "7721704d-d0d3-4f9d-86cd-94eb56b79922",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ad5d3cb6-6ef3-47f4-b4e0-aa278ff85857",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d508bd59-63ef-4643-8be0-2bebd590a574",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a963248f-e66f-44ff-8db6-cd4671e90ef8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd4f287-5010-4142-9141-6a4c6ac44f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7386ba6-424c-4f95-91b5-b7b8936be7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bf7c68-326a-427d-8abb-a3f9997c986e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b62d280-e019-48b6-8ea4-1a6ab55cdfbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166b154f-7a7b-4890-b992-ff34e749c2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5529c1ae-6e11-41fb-ae43-b8cbbb330b24",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01521d38-fe98-43dd-8bd9-57e853a26dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97187ff8-cd7b-447c-9b12-bfcac1db5245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64299d21-32c2-430b-bcb4-42fcd956fe7f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1800a5-7e96-43eb-840f-a92b5c174037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b189ab-6a25-4900-b929-5578d33cac6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2622359-80f9-4e19-bf10-afd6670a04b5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f6b37b-e7f7-4966-a0e1-0185faf086a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b4a9d7-4de8-44f2-afe3-abf16f4b7a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be984959-accf-4236-a9fc-488a3d5ae27d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a055f3-a7ed-4e8d-96d6-9737c15f660a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c566632-d761-482f-a1b2-85a5afbd4e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d26750-b5ea-4e3d-87c9-f0bdade9322b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da1aff0-7b44-44b1-b163-de869390628e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a16cba6-9af6-4d98-8ced-f8fba98cc260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e23abf0-3a1c-4905-81ab-e09ce250c675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c047fdbd-0e29-4090-9975-bab8cc0af377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e909f78f-0f86-4eee-94d5-da77e3a1e83b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b236155e-5b8e-4c83-bccb-001297acf1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998d1f05-2eda-4faf-b384-026d3429df02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2598c3e8-70f1-4312-8885-4eed17566bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368b6906-78cc-42f8-bda3-31a09e58083b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cea5d27-b49b-474c-a4b8-a8fdfd23a856",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65ffca4-b4bd-4a23-b369-ba07e62dbe4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1feee1b0-0740-40b5-801b-cdee1ed07a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e736431-6780-4b88-b664-87cf9618f2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e798f3fe-dd46-46a0-abb9-1ae9bbd29e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d9a47e-b612-4d30-83cf-8b398d695b67",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab5e9b7-dae2-4b76-8594-90869846581a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f69ba5e-9db6-4398-b143-280cd9060c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e548bc3-65f7-4c8c-b318-260ab7a4f41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff02e992-f79f-4c7d-ad1c-3249611afcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb64d17b-87be-41f9-878f-ed82ba8df4cc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d3e7c5-f780-44e0-ba3f-5ca66fb099fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889d8a4e-ad64-4d16-bef2-296501d3a98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d191b08b-49c1-4ade-bdef-63f54669c920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414d1c92-56cc-44eb-ad68-73410ff769be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23a3d09-5f03-4b9e-a894-f432c3586deb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e2459f-1de2-4062-a277-e62b3ee0a2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a8d5cd-6069-4577-87c2-21f1039f9f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceabeb8-1655-41b4-909f-a150e3e4759a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67532e0-0ad8-4d25-a074-4091173e59ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814d517f-7adf-4e03-b9ac-074c70770ec7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d3e523-280e-46bb-b6c5-fa4ff81cf925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95e3998-0364-451a-8b84-3896ddf58478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940f59ae-fe10-46a2-b225-99f241bb63a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2edc893-acfd-48cc-ba95-d8938256d588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71145a06-c194-4849-80e7-3ffff723b90e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb7b354-2507-44f8-bb3d-56c7274e6fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14bc1dc6-41e3-4880-b194-b6809099ab84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9644f962-62b4-4fe2-b508-c60eac8dd889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266042f8-c7bc-41d9-848c-e5ecd18f34a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86adfbc-36d5-4ab8-af8e-c97fc412e04b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539176a7-4b0d-4b38-af22-af67217ad02e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fa38e8-17bc-4aec-8c73-da26c1662911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bf111e-ee5e-4c00-98a9-3c283b64f31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fb6bf6-1ddf-409b-991a-5401e40f9aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b933e6-599e-4874-8535-dc1cf75e9c86",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dc76e6-fc25-4f0d-bd64-4024b7a54158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3aadb71-a886-45c2-9e23-230c8dd93526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4750c4c8-91dc-4247-a83b-8ed38cc0014c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a53087-9e5e-4d33-81a4-d8143faba6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fab901-5c9b-4964-b7da-556f7ea6b095",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd701980-55ae-4695-9c94-06842aef872e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8682488e-84e9-4286-acfe-feeb66e03aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7e6135-53ff-447b-af9d-e6075d39d6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca35585-d858-49ab-9628-c9cf3839879c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9946b246-666b-4dbe-8dbf-bfeb83fb1750",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1823315a-a3ab-4237-bddc-446c0f7cfb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e8e3e4-bd5e-4b46-be05-9bf371c5cc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9419b55-6c55-4cd0-b08d-504b34f8b166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba20f69-701c-4a91-8549-477ae63322e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a132e0d-8d4b-42ed-98b9-16a095f711f5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a920aca7-b359-44d4-98f3-dc214c2e11a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b831ea92-06d2-4125-ada3-1d3ebd80211e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410c2ebe-5f0e-4bce-a86d-788bc533e6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9506ba78-4fba-4077-903f-302b77ae1260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd900c8-7227-4939-8f3b-92dfa2521eca",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2366389-bbd7-478f-a58e-ae9f11a90640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76b6e76-ce1c-4101-99e8-c15d12095157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e835eaf-e28e-4263-88a0-86fb88515266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5249e0b-8787-4880-a837-e14a157cadb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ef8a23-019b-44f3-b162-1604141ebbb6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4605f1-738d-43c5-9c91-d0bafbfb7c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122ccd7f-d97a-4106-878c-d9822c072e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cb055c-ee93-4ba5-9ed5-ab8dc92579f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02043d17-bc18-4514-b111-fa554e9b3113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1452cc-c8e4-4510-a0ec-7bd6f0e1cf05",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f657ef55-718f-43dc-823c-e5933ec857d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0522a34-29ea-48c4-8a8e-7fcce391fdcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f439a21-4ef7-43ee-85ce-04e186768a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e60889e-49ec-48b3-81dd-8d8f7d3122cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ac93f-2d9b-40c6-9707-b35f3ed330a3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63f2a71-4707-4b9d-a3e6-e088d0b8641b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53981d8f-9994-424f-a428-19b456f858f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad081d17-36ab-47cf-b422-18e85677b5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e240774-348d-45b0-bd7a-2e36f483526c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9fc002-e2a8-413c-9aa7-bd0b0cba6dc8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb479e1-9300-42d8-a948-3d30a993aa76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb6c11a-f4d8-43ca-8f70-ea0c24b14cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbf08bf-d511-40b7-9e08-7e5dcdbdabe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75656ced-85ce-4a7b-ad80-dcfc71d9a7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c4be60-ad39-47fc-9c12-87c95f1f862f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463ca938-a828-420e-a551-634e34ca8da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d040829-f45a-43d6-a2b7-609beb536aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8339a028-4beb-4cf9-bbb3-10e3db46fcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d016b260-5554-4220-8978-38cec499f21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec79d21-a8ab-4074-81a2-a55fc45a01c0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e92e59e-21b9-402f-b1a1-d962c328c07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555bb01a-e73b-46d3-ae22-c2594d9c0c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1123cc-6dad-4a4d-8f54-1f6d0f2386cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bbc5c4-7223-4ee1-b511-cad34ccc0f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b124696-9abf-4d75-8308-48935115cfac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca4bb31-ab52-42fd-930b-ee13632670ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6191fdd8-32a1-431e-80a9-f774d7b07e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b61555-2d34-4f88-9d8d-f8c6f1b17caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af7d6c5-47fb-4965-94b9-5e027347abc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa36037-f75a-4cd1-b4af-59f0970223ca",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb6f40-0583-4036-b4a9-28b893e1b0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5622f23-0127-48ae-ae51-70845bf968c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d04248-a58f-48b7-81be-4149b0946f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9576480-214a-4937-8e37-8d1c245ff5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb48abde-5a8e-4981-bd89-f2f005aecbc2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1516aca0-e564-4ae7-9c73-334960fc5f36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8aabb76-b546-4a6a-8a38-68324ec61834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6eefdd-a8ff-4ca9-9d1b-aacea54bf244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ded518d-8afc-4358-94a7-870986e7c210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8bf5ec-1dca-4e49-8392-69b2e1d4bfcf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00645a6c-156f-4b2f-be4c-b23122db2175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe5610a-74ae-480a-bd8a-c97e823e3184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1477641b-e28f-464e-ac4d-a9a9de328a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef222a24-cce6-4833-9a0b-fe6c5a265dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0507f0-dc71-4a8c-a54f-eedde4aa482f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbc56f0-385f-469c-ab34-f30f4ef4d540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f77da96-e11b-490c-a46a-77a200b5ed70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d1a3f1-8902-4728-b2f3-5d9f1d2c5681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee8c5b5-0716-4111-95e1-f70b9597a837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb63e44-4208-4bf1-8e9c-1abec4f6056a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b33900e-c428-455e-aa46-9068eec80ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192cb8cd-1c63-4270-9118-70770cac5ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcca3e40-06e2-49e0-a493-a0bf1adca395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f39f4f8-6529-4115-9959-40c3434013df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95e8ada-8f35-498b-b49f-08d0e13fe8a4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96abc7dd-da62-42c9-b3b4-2126a229f301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a433216c-9b92-4d89-8c0d-0a62867f7b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbe29c4-bbe9-4870-8ddd-c024cae8a681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a116e882-d4ee-45f0-a0a8-8649ff51b121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d775d9-90a4-480f-8052-381c2c66dc54",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559d78cd-02d5-40e7-99f7-5d2c2a2b1a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895081fe-449d-4033-8414-376f4101532b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50abcf16-8f7d-4c03-95ed-407ebc5d28e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ba00a1-1c55-4170-8d31-c67d531453b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6815ae3a-13df-446c-86a0-03b2081db37e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9869b85-0b89-44e3-98a0-bee312c97613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d50b8e8-7184-4bbd-8b53-09d0cac660a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c5f33b-3573-488c-b29f-fe18286ccfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fbb772-7d0e-47dd-b413-3311b332e3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7652242-3999-4e8e-bd58-4442c2cf0cf6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe572756-dbde-4634-ae0a-111e4b14cee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16df1ac9-64d5-48dd-b1b6-5ceb347c77a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98426d40-93d3-4822-8f10-5a09eb733eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb0a980-a6d7-4aef-a384-5bbd0f09abbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b0f561-8d70-4bc5-a347-bf48356659ac",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6a6fe4-6cc4-4a54-9f0c-6f5768705d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8e7c56-db49-4f7a-bd51-dd231631cef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a51a63-c997-4f43-8ec1-7eca575ed56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba94703e-3223-4df1-9b3a-05d894feb19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e08cd2d-e1cd-486d-9c60-253d77398ef4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472b91f1-2fb8-40ab-b9b0-a00d7b471723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c579e898-1bd5-4b9c-9f7e-1f7038363934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f659d79-b834-48a2-a737-66317425b184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e1bcb2-f3fc-4b9f-b938-4af6020129ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efce1e9-efa1-4216-9163-8bb6f64b595e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c8465d-e0c8-46bf-a310-88c883435786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13aa24a-ed87-40a2-9600-3da3f26897b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49657b93-d632-41bd-91c8-56adc39d8ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7ea927-bce1-44d0-8500-57003491b9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd5d8c6-560a-4fea-a762-bbe600b2dbe3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abf7c47-c572-4f2b-a521-56e37d51c85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78e006d-2db4-4805-a2af-de09959a076b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef334cb-4b38-4cea-a634-405b01857645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6f2cad-44d0-4247-9a60-8c44eb19b8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a188ef84-1225-413c-a326-3527792ed114",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d237a2f-01b0-41d5-a3b9-cb0c9a89b180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df18c362-b97b-4377-8883-5351d388fcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c072bf3e-f3ea-45ce-ab6a-06df6b69303a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dc3ac4-af06-49fd-8625-45349fcd77d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff19c736-6481-47bd-9edd-662a214d1716",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43901d22-8eec-4cbb-a6bc-4729d0c494ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee8a33b-76ee-4d97-9188-759dcf98e0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "defa10c3-e397-4a41-9917-2d09f3ac7523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988fc047-e1d7-4f8e-ad12-62369e9c46f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbc5c5c-ac16-43a6-890b-14ed6bb58d1d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cadebe-829e-47d5-82ae-13fe999d02e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5263752b-04c7-43bc-9480-181735447d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11abe7e6-a7f8-464b-a4b6-18b0bfb4acba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4637bc9b-2d26-4342-a2e2-90cddb533e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9417e446-8850-4769-8031-02ab4a501ca8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad2980-15c8-43d7-a955-1b925355b86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401a5149-3051-4bae-bf98-15d32cbd767a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a22689-847d-46b5-8663-8c7ced85f9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58356c25-f442-49c2-9071-0da2a9c40a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb3abe3-037b-49ec-9191-f7f5201cb5f2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50d4064-287c-4633-a8fd-916ab177a30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efdfc44-c25a-4dc2-b4c3-c14aa52dcebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c109242e-3caa-4569-898f-c1c060db1ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8321acbf-40bd-421b-9c82-822596cf96a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7e7dc5-a760-48eb-9e09-de61df885093",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ddd63a-71e4-45a0-908a-538b93e6edeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c8263d-b309-4824-b571-07369d4d879f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e01a4d-0643-4129-afda-2d286886b343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4f3cc6-6afb-4b8d-a451-3c32555d6d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a295075d-8d4d-4500-9afc-81aa2ecd16c1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6ed1ca-4a13-4f2f-8eb8-0e8688d6f4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77340a76-c3fc-474a-95a6-e8391f919eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb067ad8-c811-49f3-9de4-4f644f269837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea210668-474e-4065-9c1e-568ee6d3884e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63a6b96-c29b-4c3d-806b-19313cc7250c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d568baea-375b-46cd-a5e4-0b63954a225c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd42028a-5816-459e-b86f-dd11ebc601e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a11825-9ecd-42ef-aeed-052673e2fc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4519c716-6986-4246-bed2-0e281e0aad9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa645f9-866b-4860-b8eb-46a56e1d0588",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49257175-2757-426d-97af-28965bdc31ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4633b052-327b-41d2-a919-17e2e2fd9e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0349f-82dc-4fd3-a472-cf155a8561b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daf6e07-fe0e-41c8-96a2-3a82f23f92f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb45c1e-f99b-4b80-86c6-c4e61284e262",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc42732-0187-4980-8dc7-0507b3f627af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fbcaf5-a08a-4974-af72-226c34a210ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d613679-80fe-4d06-ac24-4fe4b329af0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4d5b9a-4159-4524-af7c-f5bc32063d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aad5744-c514-47bd-bb92-e07c508ecd7c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ec3a65-b368-4043-9e6c-c3966113f077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50326f5e-ec66-4566-822b-a433d12c6227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244ccfeb-5b7d-400d-bdb0-4e904f1d055e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75af8a9f-0554-4817-aca0-b9cffd41e6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92fde83-32c3-401c-9d83-ebcb772cd564",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d63e5bd-7806-443d-896c-697812727bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ee1c9d-5d44-44b1-adb3-381179687d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ce911b-1a11-4c31-9a4f-78495d6aa04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44e8522-5af9-45d3-ba5a-cad3d4b308c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aa38a7-46cb-4ed5-b14d-45c174121042",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6bb70b-d603-4ecc-bbee-f900e3d4d750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317197f6-706c-4d71-a94c-9bd7e3aa0ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e16928-6cb1-49c4-b53c-bf9ccd0d8a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6948316-2ce4-4182-b4d5-2365046bccf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963f0525-a4cf-43ca-8aaf-7721589b3ea3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84436791-ba17-4016-be77-448d1e69f8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b16053-5055-401c-9cda-e523e68cdccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76957e9a-f220-439d-b5ba-9b9c513a31db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dab22ed-1b88-49ab-82e8-116b1bdcf800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02469ff-1a73-4f4e-a246-e9e1f0572480",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcd152a-a939-4b1a-8475-89564cdccacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a399a24-7f14-40b4-9ba5-5635ae5a69d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe384ee-b943-4c0b-a893-bb8124d55d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c1de23-afc7-4b6f-8e25-c374c91472e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb5a12a-bb93-46b2-ab8c-208e76646143",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b43f3cd-87d3-4ee9-9fec-ee80a250bba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e456151-7b10-474f-b221-dba2a04b1fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507a75a4-4b1c-45c5-93e9-8d6ad9d4656f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507c9e28-fe33-431e-9ec7-85104ecdc04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79577b4-04f4-414f-89ad-944f665a0478",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884dbac5-af33-43a7-ba49-192837f18e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723c00f2-9b82-446e-b5d0-df7fd68e7688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904a10a3-e832-40b0-b7d1-07abefd63f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6312a5a7-243b-49b3-afdd-208184c45eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab86ef-dc4c-4133-8421-71f8e9bfa703",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08778b4-a27f-4ce7-97c7-bf7addb93188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263889fe-6bc0-4175-9f32-24750a5e7443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0b3766-89aa-49bc-8326-880cdce84b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da23b3ba-f80f-45aa-bdbc-e8c92c56ea29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75da73e6-e440-404e-a3e1-d93c59ceec92",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df84a01-9b25-4318-9d39-12903e653f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b92d20-6b30-4f54-b60f-c009eb9107d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5922176-4311-4425-b65a-b95b8296c83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c213c8a-f421-4b01-b061-fbed03393856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bd5868-9bd6-422e-8486-689bc71908fa",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a465c13-2573-4bc0-8f18-d223edb75277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9687aa1-d7d8-449e-ab3a-844c9cef2499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0ed4d6-ec0c-488d-b289-1fb7dc3947f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fe44a3-8d4f-4c3a-970f-654fd8f14e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13bd219-ecf4-4257-9e90-307f03db914d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093eb428-615b-4b4f-a9be-00162644b8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afcc6a3-eaba-4b01-9707-5026a26d8278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6696a3a-dadc-4b07-b71d-46e224e72620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835352b2-0ec7-4872-bc9b-58fe94170bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db59ce2-e51f-4196-8fe1-8fd70f6b15ba",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39364e0-ad5a-4e7b-a8b0-ad893f9a3227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f97bb0-3aca-4587-b1df-13f5f9308375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e50fdf8-a690-499a-98a1-185dd74b885a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483a320d-e97a-49d8-a298-9abeba5cef81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26886c5-a42c-4771-9263-2cff5d72a18c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c524c9-b0d6-4926-ab7c-6f51a6839cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70697e99-1ab0-4378-b391-3746965e7702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a967982b-e855-4806-a561-9a6ef3040cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9feb05ba-c297-4fa5-8030-71b543289e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e965f4-ff6f-4679-a344-599450d16e15",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199ab884-f84e-462f-bcf6-d84a4289f88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb7b7c9-27ce-4a15-b5fa-ea99b325d6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17ab4ae-0060-4821-ab43-950a57eaf370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf03367-0d45-40c0-8678-f7121a2b8e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167308c1-e66e-496f-989b-56b97090c98a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdfc0c6-f521-44df-8056-dee0a82b4c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f856e582-f0d6-456c-85c8-76fd87fdf9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c08fa97-7fdb-4fda-b356-1649313f4567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bf629c-1475-4177-b8bf-e526c08f2cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab42086d-6c43-42f1-93a4-0d504c48ce73",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7106bb1c-40a8-412c-96aa-19a9cb198750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d1b334-e6b9-42fa-b240-b4f096aa8ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1413f6-bef3-41f0-aa95-578fbb91225d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f9939b-e09d-4596-8bcc-df96788ac89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8a7af8-d6dc-408c-8d15-4d0cb81b1c50",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac890570-8195-4228-96ff-9e0266794123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f719ccf-8550-40e7-a867-c6daa6894f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a63fd75-3838-465a-abeb-4937db1f99c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a07279-b7a3-40d6-953f-e69c2b2c374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0eefadf-9341-478d-be3f-6f39f372caa4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e01c2c-ae8f-45b1-8081-6249a6f88e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f6db8d-2a7b-43c6-b0c3-574686f0a0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53835d7b-c0b8-4c7d-94f8-89a3f8266e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ca752a-1b81-4a0c-a5a1-b337bb10c1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b24eae-c51d-4171-9077-8aaece3a79b7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f587e9-0a52-498c-8fb4-e1d7d908d14b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873c79f1-d2e0-4757-ba72-47846b8333c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1125067e-9859-47e4-b9b7-cb7e989deec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dccc711-9421-4a76-b7f8-2ad56b4227d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc45fff-6a83-4c01-8d18-d1cfe9094151",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d5c129-06ab-425d-81f6-5b4e8402c157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf712f5-5c08-49f9-a5f0-0ac4a3a3742c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb4a540-544d-4d29-8c81-ea688173faa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7b763f-890e-431c-b91d-a7812448c380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de00bc11-b636-4270-8a80-4673c929638a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd980116-f154-46b5-a27b-d6856f2e4f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288e3c2a-fefd-4f44-ac55-f1a69364d116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2376dc77-9987-4f81-9d52-a0ac180958a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51141858-b717-4af6-8dd4-e04b0cbf7089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bd2c7c-05a6-46af-a5db-7bf7d8a4d952",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5ab708-7f17-4c5a-a526-f9707b0463c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c4205b-24fa-4312-afe4-61692bf2cece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd96a6ce-72af-4872-a1d9-915a359845ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2840b6de-cb4f-4d6d-a73b-f5229a626736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d65f5fb-a98e-4a82-af74-2638d3e9a0af",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9442e179-dc25-4458-ac64-75199e37b57a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913d47ff-2b82-4000-87e4-ed0701fa10da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2708192e-1e45-4b48-a7ef-d9f661622462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf3d517-aef6-4932-9dfe-1f0d223ede43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef35f21-62f0-4168-8875-358e40d2f4e4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20301abe-736c-44e0-b011-817a292c989a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1b8fd2-83b3-4e98-936a-48bdd751bd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468a3093-5b8e-47a0-a473-c5d079d3db22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b86b9fe-ba8c-467d-8bc3-9bddcc7cbfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4501ae-2de4-43cc-8794-100aa20807bc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4177c39-2d2f-4223-af64-ef9dafaebef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7f9b615-98de-4898-875d-d38aee9947ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10fd444-8706-48b2-b1b4-d57b2caee949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fc9ddd-3a6c-4cc5-bfb6-8b7d4736f11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854f14b6-9cca-4bd3-88d4-22a82f607035",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4768abc5-b72e-4a4b-a771-5d6abfd5955d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdfd8b78-ef91-4424-bc81-df64a46eb191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b679c0-1f39-402e-953c-17374d77258a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c8e172-da4e-4b29-acd4-b1b4f4309748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d5f626-4284-4dd1-8792-c2fa15cb6d13",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccd34e8-04da-40ef-9a6b-16b7c96fa9fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8a89ca-39a0-4548-99fa-da56d154f64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81503080-e4fc-48c9-831e-bc7b56b23fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1e87d3-fb9f-463e-8f85-e3da12cceb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a110a981-9d6f-4136-9d56-48262398794d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377bbff1-a006-46b1-819c-0d5de9dfd14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb0b095-1743-4573-900a-f92bf80a0903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57a8858-0847-4b4f-937d-8464cdee2b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7453c889-3080-494a-895c-a5f586dfa18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6e1f2f-e9d2-4135-8d0f-c3c116c59130",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475997b2-9f26-4f15-b7f5-20f497251a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea961aa-9fa6-41dd-af3d-d0b189197104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e27b9b9-c200-4335-9a70-3ac1bb72ec46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7480d7-f5f8-4ec9-ad50-18be8339c9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06d0fc3-05d1-4c1c-abb9-caa353bb507d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474c3d60-49d4-4037-942f-08b55bf18df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b6af0c6-369e-497a-a91f-e24607c6b951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd9c78d-edec-42af-ac36-74589ea00610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df827ae0-73d0-4cc4-9b01-2107f84d597f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5eca468-7668-406d-8c07-c95d1e91530b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc4e0b6-03ce-4db5-a707-077d8a63d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc5484b3-8223-47b9-9978-caea6b59202b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78a5a9b-c35f-418d-a37b-55961516f393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdbb433-6c0c-448a-8e2e-cc5490b1e729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa36f129-d162-4eeb-b437-547f72aecafc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3641f6b5-fdc5-466d-9803-5ea26c70e36a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebc50a7-0b39-4978-8b2d-c355e45e97a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097e19ee-8546-4354-b643-378d08593e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045e2944-d74f-4b2f-ba76-951787cf467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1482ce-0466-418d-b165-c710837f665c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8dcc43-5fb4-4789-968e-b7b184b89412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973f3bb6-d635-4add-8825-52a166c62b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8366bc0f-d982-49f5-a3c9-74f12ca879a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e23cd8e-53b9-4e92-99a8-18181ffd9f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0bee78-828b-4939-9f49-d13b2021b3aa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d3521b-0558-4d22-9dc0-de153b997e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e8eb76b-57f8-45cd-ac6d-97febad9dc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bd8e4f-3f33-42dd-9db6-39d27f917352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77468cfa-fdd8-459f-9494-04d502586a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0012217-fb4f-4185-8953-d36accb917b6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e67dcd-737d-4c51-b48b-5b0814d119a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037aa00b-11ef-426e-8136-d954ac27a1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb2a164-fafd-4874-a3c9-d91b4acc5ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e056cca2-b5ac-4c57-bbae-e46288ad32e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbaaf82-fa3b-475d-80f7-c35aeb21638d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7e1132-99d3-4fdf-9d4a-6e7a247cd39e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "693ce3c9-6b9f-4192-a83d-97acb9faee83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad2ae64-417a-4889-b2ae-85669953dd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463566fc-ef85-4465-80ff-b2a3392500b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a726f96-da70-4607-8aae-426767c650c0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e8469e-984e-4253-8203-8f0e59dcd880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a5118f-3430-42d1-8719-a4ca4367400b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf99a15-e549-44fd-bed3-017700c5c1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805d4e1d-072a-4f32-85b1-15e790fc5f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ae73f0-f3e6-45af-b83d-928c3501a8e6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b118723f-e3b5-4354-b708-a2e1a3ba2f21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9861c9ce-21f2-4047-986b-b9380cf744d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34484536-8a8d-43ba-8c77-2a012d0d4707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de919956-19a0-45cf-a19d-609306438595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76126ee-adce-49c5-a72d-dd7c049572d2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86599058-3672-4fbc-ac16-64dab839dded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6a6eab1-dc68-4589-befe-0448fd2038fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efde353b-b2b4-4419-a1c0-f9c3b3fa988e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0fd50a-ca9c-40b5-aab1-2c0f1215f535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b360f6f8-b75c-4d95-bf63-9ca58581b63d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6854e7-7802-4714-a1e7-0e9da2fd39d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98636a94-0a64-4abc-b810-62d9a5bf3078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a1d510-e045-4ef1-b314-c8f970b2c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c308bc35-de6d-4bd5-a373-92a5650f3bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42348162-be62-42fa-9ac6-73e62bccb9ee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3831221d-cdbd-4b79-85de-eef2a6b122a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1676f30f-1ee4-4ef3-9d6a-46dfa9b42708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29152cbc-b81b-45fb-ab78-337a4f16aade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d14a66-369f-428b-aac5-0c500e1d79fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc345f7-182d-4a42-95e5-68fb09fe3412",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54397a23-aae6-44d5-b125-af6c20d99feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4703460-f826-49e4-a25b-a94ff6d2a869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e30f58b-b09b-4c40-9dbb-408fc069a905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e93c08-bc8a-4f2d-ba00-3d1433aa8457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c26989a-1dbd-4e15-b03b-a32491311ebc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a7d8f1-ab05-4566-a8d6-4bfb3777d136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b39a73-55b9-4bc3-ad36-8ac4cfd6698c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72f5c6c-44ee-4a6c-90cf-18997e3679a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fe45aa-951d-4716-9796-3f429f53682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723ab4e9-0c4b-4720-8f8f-b085c71ac24a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ae61d4-12ee-42c1-9938-060404ba64a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8e7168-9a13-4d32-80eb-e7c32a4da9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad5b1af-aae0-4f02-a4cd-c6e6d402ba30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c380e41-c58a-4eb9-bb29-f0b1e1fba56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c981e7-d93a-4786-9f27-e5acde937e73",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c37b29-9129-4353-b70c-450638426300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6f799c6-f394-4aa0-8e8f-8625cc597559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41986019-f50f-466d-bf02-701422e04f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3d8455-0580-4e33-8047-628712f133bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062e5749-4d2d-4dde-a6d7-9114d1e2f161",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45227aef-5da5-48ca-ab59-e76f71408a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f016cb2-6832-4432-9b70-b4db41b826b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edf41cf-f844-44b5-a5d3-3f0db9366c3e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3400b1a5-86ec-4908-ad0c-669c486396c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33b2a65-214e-4019-97d7-c14ab8aecd75",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0df5433-979f-4f3a-9836-32de684e6056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3fd7578-fa79-4876-9b29-11627d3f3a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79b6c46-b6cb-4a26-842c-784838f44f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b98446-85ec-4535-a99e-126db421c2bf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cefa86bb-f0c9-427f-b6fc-d2bc3fe1bafc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30e9e300-eb62-448d-a651-9dd0ac5150f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37a503b6-2fb1-46be-a566-e81975ea775f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b126c74a-aa83-4322-8e4a-5199cd2a25a5"
                    }
                  }
                ]
              },
              {
                "id": "bc87f0f2-c068-4e3a-a56c-d4d536820824",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74016dae-0d54-4625-96f1-7b5ab9e0237f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9892acc-04a3-4c9c-b66b-77222730bf55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "59efc2be-2602-4d6a-b404-f9118fc3cfcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b4d38d-6973-4a8f-b825-cf498aee0c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6aa10422-de37-4cbf-8258-f3d72ee00dd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ed0b70b-6b4a-4b63-974b-553b8888bb74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "948695bd-68d0-49fc-987d-2f6cff5f5153"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c49481ff-66a8-41da-a832-b50c5442ffcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c45e521f-56ac-4e1f-a2da-826306e2f4d1"
                    }
                  }
                ]
              },
              {
                "id": "9e9fd5c8-7162-479f-ac15-680c36f35985",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "603c6015-c8dc-4b69-8028-938d6869450f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a1a386-33d4-452d-9b0a-22c1eeae35f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bc9b25fb-04e9-4d82-b3df-f4e73dabd89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d95c1cb-ba41-4a43-b775-a31326ef93ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5037c2-8d5a-46c2-8c1e-a8cf5c3ac4b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f70a9c31-4a00-42ae-8764-d8353d548234",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4c2d9cac-904e-40fb-8d21-3c46e9ae26d5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb63312d-a373-4bfd-a322-0442d918759a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5878edc1-4404-4902-943a-6a824412ca6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c2d2287-bfd6-40ca-8a64-8016829a2e54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c51d1303-212f-4598-844c-e4b129203378"
                    }
                  }
                ]
              },
              {
                "id": "da7cd6b5-3641-4ed2-b586-eaca77c5cff9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1794a227-efad-42e6-a40e-84d407845489",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "53f3eb41-e7af-46c5-9284-bcbf47263e26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8856f4c-335b-45e5-9b22-ad8ed27e431b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76e7e9a1-02e1-477d-bc47-e1107167f497"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b19a9d3-0f2f-41f8-8943-e3f2d1abaf96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "24b1a8e8-0a40-4c82-89f8-44be919ae2c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72eaf0c1-527b-4322-a078-449e96e6e501",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e875e2b-066d-4aeb-9191-3b294a00689b"
            }
          }
        ]
      },
      {
        "id": "1ebefc78-2147-4b60-bb91-87d6f772205f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b95c41ab-a9d3-4d0d-a7ba-8eb55c87d7e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "276bf69b-f7ef-4040-97b1-1aae41790dad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22dbb9ad-d443-4eed-9c35-dcd88383bcc7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12dfd48-ffa4-4625-8cf0-d887e6ab115e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "44c7e186-c43e-45f0-9444-afb7ed9b5da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0639c5e4-f585-483e-8a2a-4a82766081ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "627f3ddc-d400-4d3a-b0ec-ab2ca1a2997c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddbc1f4a-e589-4aa4-a584-bede672c7071",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "528b2c00-627d-4a12-be81-6bf0856865d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97b1088a-186b-41cc-922d-b595107e7cc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95561c32-bd42-4e2b-a984-c2d42f036856"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aba9c131-c50a-432c-894c-af47cfe94377",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a1cd705e-49b9-4814-9c28-9fc5ef213f10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7ec8d5b-d564-414b-b4a3-d0255992d257",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02726e99-c895-4889-9e77-45a9fbf6e288"
            }
          }
        ]
      },
      {
        "id": "f3c0849a-bb44-4152-ab33-34fb77d70e99",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c800cc43-d86f-41b8-a158-0840832d0b1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f942cb3b-fff4-449e-9447-68d8853c1632",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77210691-0fc9-4605-b0a1-6aa043ed5325",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd26eb16-1656-427c-a990-d96094d81b7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73a33bc6-b65d-4b77-8bcf-5ff8a3e2e8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772fbc7a-df32-43c9-9d0f-7bf5e5771917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0b3e0bf-806d-4494-ae08-42fe272fe86a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f24827c-3ede-40d7-a69f-e365e489db81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "688c3bb7-f103-4789-a860-b4bf8ffe7fe1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e050ddb1-0747-4090-98d4-32835f357be8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "258754cb-13df-43de-99e3-36b9922d9973"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c3246e-62f5-4116-b208-156f11c607fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6c28b82-1ab0-4428-92fd-df9ad1b06d43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52a14c13-6b00-40ef-95c5-868ec2d27114",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b72619c9-1714-427b-983e-0e5684ab9585"
            }
          }
        ]
      },
      {
        "id": "330e7b1f-9bb3-4d5b-bea7-d564457d1149",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "74973052-0e26-461e-8fbd-ac205afd41dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62da38d9-d7a4-4ec9-b846-632020c4b054",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce435750-7ff5-4f88-955e-b655ef93f212",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252e6eb5-c50d-4bd1-8eef-47c4ebfd7598",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "197cdbe5-36e5-4071-a32b-8cfff6650370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61a58ab-e0e4-4082-b2fd-489e4704d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c37d979-a1b9-4a55-b36e-c26910459908"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db0c8676-def4-4801-a35d-4afeb08b787e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fe9ec22-6ede-43b6-b0eb-13d2dbbfb461"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba06a862-2c25-4585-8204-facad3390d4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eadf157-7af2-4140-ae2b-aaf230d77722"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89d65bbc-c4ed-42f8-ac54-945da0716da4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f95d894-0cc8-4e66-8917-53678ce5f3b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2bc57ff-68bb-47b6-92e7-ab2d58951d3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43e2a96c-74c1-4e60-b71b-14507f51d98c"
            }
          }
        ]
      },
      {
        "id": "d3f8ba9d-c71a-4870-ba76-84aed5253adf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9d8fb79-94de-4b42-b376-5ece75e5a7c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85fd2192-7b2a-41b2-bbaa-b5a69dafd6e8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9aa882cb-818c-4239-acc9-4469c1754996",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba66f7ab-0ab0-480c-8596-54376c1b191e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b627907-4155-4928-a427-e71dabab6ced",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 268.39285714285705,
      "responseMin": 21,
      "responseMax": 7043,
      "responseSd": 1043.914006423002,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718152705790,
      "completed": 1718152781999
    },
    "executions": [
      {
        "id": "f6e98448-0be1-43aa-9d89-047df7ce8a26",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b34eac7c-d99c-428c-a2ea-80742f01da33",
          "httpRequestId": "189b2523-13a4-4677-9669-5db4c53e0a3c"
        },
        "item": {
          "id": "f6e98448-0be1-43aa-9d89-047df7ce8a26",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f2ac0bc0-41fb-47ce-8892-dea3a4d91282",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "0334afbc-58a1-4364-a8bc-e2a2f44e726d",
        "cursor": {
          "ref": "1788edd2-5e07-4573-9d68-50585592f121",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "673bb63c-1b40-42bc-b5b3-3eb78000d697"
        },
        "item": {
          "id": "0334afbc-58a1-4364-a8bc-e2a2f44e726d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6318a67f-d520-411f-9f97-1b41c161861b",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "9abf4eb2-0f2f-4595-82c7-8d997b53e8ff",
        "cursor": {
          "ref": "0d71e3ca-0c29-4083-a31b-d0b600d481f1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b697537a-f614-4c1c-8b1b-8c3e6528f24e"
        },
        "item": {
          "id": "9abf4eb2-0f2f-4595-82c7-8d997b53e8ff",
          "name": "did_json"
        },
        "response": {
          "id": "01833239-bd13-4190-9a09-2ee690a9f715",
          "status": "OK",
          "code": 200,
          "responseTime": 269,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecd249a-8892-4cb6-a2dd-d8f6f1cc2dca",
        "cursor": {
          "ref": "f4d09484-d644-4f52-91ad-5c64c3f42619",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "053e98da-a81f-4cdf-9b3e-be0c9dc2ddc3"
        },
        "item": {
          "id": "8ecd249a-8892-4cb6-a2dd-d8f6f1cc2dca",
          "name": "did:invalid"
        },
        "response": {
          "id": "b419fb63-2051-4e01-9b3b-e7bfb3e92fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2255,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecd249a-8892-4cb6-a2dd-d8f6f1cc2dca",
        "cursor": {
          "ref": "f4d09484-d644-4f52-91ad-5c64c3f42619",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "053e98da-a81f-4cdf-9b3e-be0c9dc2ddc3"
        },
        "item": {
          "id": "8ecd249a-8892-4cb6-a2dd-d8f6f1cc2dca",
          "name": "did:invalid"
        },
        "response": {
          "id": "b419fb63-2051-4e01-9b3b-e7bfb3e92fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2255,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5798bdf5-cd60-4a1f-8f02-b8189f5b902a",
        "cursor": {
          "ref": "32823d9f-59a5-4655-8ce2-38b422ad90f3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3928f1d6-1177-485a-861b-03166398af17"
        },
        "item": {
          "id": "5798bdf5-cd60-4a1f-8f02-b8189f5b902a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "74679d21-a4c6-43af-aab2-51eb52798c81",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2594,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ddcb3a-9d26-40b9-ada3-2df2a82e931c",
        "cursor": {
          "ref": "bc45abfc-6f07-4c07-a85e-c5073c27b6d5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a13b27ab-4a45-4790-a514-8f48ae99b0eb"
        },
        "item": {
          "id": "32ddcb3a-9d26-40b9-ada3-2df2a82e931c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "593a062b-5b24-42d1-96fc-1ceddabf9a96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1954,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931ad4dc-fc59-4f36-8dd2-ff6ac2a7def5",
        "cursor": {
          "ref": "ce13e8a7-449a-450a-894f-4046d03c5e29",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "27bf6d37-6983-4825-90bb-6c85db8a3ec1"
        },
        "item": {
          "id": "931ad4dc-fc59-4f36-8dd2-ff6ac2a7def5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c1827d85-cc01-46bf-982f-d3a37a7ae949",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cb016d-64b2-4e38-892d-016aa5da9d51",
        "cursor": {
          "ref": "da0aaa54-c09a-4c74-a67c-d1f6c3c65783",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dcc60aab-5279-40ef-a9d2-70ea8eab27b1"
        },
        "item": {
          "id": "87cb016d-64b2-4e38-892d-016aa5da9d51",
          "name": "identifiers"
        },
        "response": {
          "id": "7d548e9d-96ff-4841-8d06-564d90050315",
          "status": "OK",
          "code": 200,
          "responseTime": 2461,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f476b194-fbf9-4abb-a320-b841ffb73a6a",
        "cursor": {
          "ref": "fcd68a27-864a-49c9-a519-bc16290b6ed1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "41d77339-67a1-44b4-92e4-26f087996ca8"
        },
        "item": {
          "id": "f476b194-fbf9-4abb-a320-b841ffb73a6a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d1ef1b66-eedd-4e55-ad2e-12938003a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f431f1f7-1fbf-497b-bc00-8067066e4cce",
        "cursor": {
          "ref": "b28bfe53-ac7f-439c-a11a-919e44b54e66",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fabe85f8-973d-48ce-868f-73a73ebbbbea"
        },
        "item": {
          "id": "f431f1f7-1fbf-497b-bc00-8067066e4cce",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8864eca3-a9c3-4a68-8a39-ecd726f298f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e935bd-f992-41af-8c6a-98afe4d91c61",
        "cursor": {
          "ref": "c8141cfe-4a31-4acc-810b-f5cc94868fd7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1abf82e5-897c-4fa9-b987-5ee4ade2af81"
        },
        "item": {
          "id": "05e935bd-f992-41af-8c6a-98afe4d91c61",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e7e48a1a-48ff-481e-8332-8839366f3a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d410cf00-16fc-435a-bd40-17cc78c0aef6",
        "cursor": {
          "ref": "07ee6918-449f-438c-a187-76894a811d6c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a560a26b-bd18-48d1-bc4a-555e27f7cb1f"
        },
        "item": {
          "id": "d410cf00-16fc-435a-bd40-17cc78c0aef6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dab79bd1-f9fa-4eb5-aaf7-68ab6d1831a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d83a81-a689-49a4-b1c7-00e14aaa7485",
        "cursor": {
          "ref": "942a3a77-bccf-455a-afb8-18606b30dafb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "66c5f4bd-1de9-49b6-9dbb-001a47ce8805"
        },
        "item": {
          "id": "63d83a81-a689-49a4-b1c7-00e14aaa7485",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bd7b09e2-ae55-4b90-a4c6-bc6fcc13fd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d440b06-04ea-4e22-9e51-e221be649499",
        "cursor": {
          "ref": "52e412b1-4c0b-4b2b-b8da-0b594d599873",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b0e81435-ca8b-4b1b-9c58-2de17248fd71"
        },
        "item": {
          "id": "9d440b06-04ea-4e22-9e51-e221be649499",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "befa2b25-f50a-477e-97b6-acd9655597de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5925340b-8bbc-4acb-9c04-4adf1f493334",
        "cursor": {
          "ref": "55b8fcef-1b7b-4c95-bc49-6d32039bd52f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fd98abb5-e2e0-4e07-a8d8-42b0118e8024"
        },
        "item": {
          "id": "5925340b-8bbc-4acb-9c04-4adf1f493334",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f642b323-7744-46e2-ae02-dbeb83bb2815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aae8cf-89c0-47a7-85ed-4fd32f3da51b",
        "cursor": {
          "ref": "f43f8fc2-31be-420f-a107-4a645c932394",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f0086ad3-5e20-4500-be57-aa707e64887c"
        },
        "item": {
          "id": "f0aae8cf-89c0-47a7-85ed-4fd32f3da51b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cbb5fe01-85fc-4a25-b132-2b221cead1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fddb37-4487-402b-af2c-deaae8c88c95",
        "cursor": {
          "ref": "109bab1c-e5db-4f53-b1be-f8bd8853f2d8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cabf07b8-1837-46c9-b9e3-8023f6cc0c0f"
        },
        "item": {
          "id": "34fddb37-4487-402b-af2c-deaae8c88c95",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2a6f1aee-06ec-488e-9899-c53f0b7cacf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dd466b-2626-4793-83a3-50aceaa2532b",
        "cursor": {
          "ref": "75e56f9b-ffe3-4423-afe3-46e3a7037a67",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b91250e6-3b4b-48ac-b36a-acf042fb14a9"
        },
        "item": {
          "id": "45dd466b-2626-4793-83a3-50aceaa2532b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "263bcc2a-c69b-4787-b556-50080c210e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b184c5-a979-4980-b36e-65f569ccf8ea",
        "cursor": {
          "ref": "586992d4-3fb1-4020-a8b5-bf88f64dbd01",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1ce51e81-67b2-48c7-98b2-205475251893"
        },
        "item": {
          "id": "99b184c5-a979-4980-b36e-65f569ccf8ea",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2438bf72-9bc0-4eea-9dbb-a9e848ce1a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04a3134-43ea-4905-8a9b-b507a27dbe50",
        "cursor": {
          "ref": "f18ce381-915a-4f2b-801c-eb619675b6b8",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "185cf9e5-b736-4b8e-aa1e-ab8348567e42"
        },
        "item": {
          "id": "c04a3134-43ea-4905-8a9b-b507a27dbe50",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6f2f6522-5686-487c-9482-e9f89bdd4f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e54988-ce5d-407d-8452-48e23ec60176",
        "cursor": {
          "ref": "784d890e-546d-4db5-b1cd-82e82b38ce25",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4c7a47d6-4a42-4567-b5cc-5543a46895c1"
        },
        "item": {
          "id": "03e54988-ce5d-407d-8452-48e23ec60176",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bc525e09-54c9-4054-b23d-98bec9fb3c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b384a43-c517-4918-a5bf-ac28fd3530ca",
        "cursor": {
          "ref": "ce0efca7-5a29-4648-8e33-63735d9bc54d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1914e75a-7f85-4a64-ba09-fac60c59de50"
        },
        "item": {
          "id": "2b384a43-c517-4918-a5bf-ac28fd3530ca",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "57589d01-8652-41fb-840d-5079cf161df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50148681-a573-4e8f-a53f-1b7dfa698e71",
        "cursor": {
          "ref": "fc8236de-bea4-4eda-a136-519b910acc4e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "93f76e68-e825-41c3-8c4b-735221fe6c63"
        },
        "item": {
          "id": "50148681-a573-4e8f-a53f-1b7dfa698e71",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "96a0c859-f586-4940-95d7-db6da80b82c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c920656c-04c8-42be-a710-0c5110d3cdf3",
        "cursor": {
          "ref": "818dd612-5a4f-4523-9858-a3c50e306d36",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f88189b7-bdf4-4a11-af2e-05bb26be82b8"
        },
        "item": {
          "id": "c920656c-04c8-42be-a710-0c5110d3cdf3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cce3e0b2-4c70-46a7-9e93-7495a36da1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5609b5d-06a5-4694-8d3d-59bc2faa8c0d",
        "cursor": {
          "ref": "f9823a5e-b4ec-42b2-808c-9ee1aa9259f1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "28363ced-4d0c-4f6c-8ad9-eb2ee4df5f72"
        },
        "item": {
          "id": "a5609b5d-06a5-4694-8d3d-59bc2faa8c0d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7b4165e3-6912-4916-ad0f-d0bfb2978a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9754f332-fec1-4553-afa8-8293766861bd",
        "cursor": {
          "ref": "d234f157-6172-4017-af5e-24d394c5f8d3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "50c72a7a-16c1-4961-b2be-3717113ba12a"
        },
        "item": {
          "id": "9754f332-fec1-4553-afa8-8293766861bd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "02cab5e1-45da-4b51-b596-03c3677eaaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934f4c33-32ec-4790-9329-bb8c1211439b",
        "cursor": {
          "ref": "7630a0fe-ff8e-4fdf-b6a7-e0ff911b9792",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c0804961-747a-4b8e-b30c-d71277b9f00b"
        },
        "item": {
          "id": "934f4c33-32ec-4790-9329-bb8c1211439b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5a95cac1-8ebe-490d-9dd6-9f576c2371c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267eafb9-5a02-43ec-b26d-de5fda57f2a7",
        "cursor": {
          "ref": "a470aa0d-ef33-4a5a-8c1b-7ad571975c69",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66171e76-77a2-4a9f-9800-8c2620858e22"
        },
        "item": {
          "id": "267eafb9-5a02-43ec-b26d-de5fda57f2a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "83d18796-2220-4edb-acea-c80ec2609b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537faf5c-9591-4108-a7ec-794b3bb64f17",
        "cursor": {
          "ref": "b8245246-7663-4b39-8a81-6704017af7ab",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6c645b97-1ad1-4ad6-b6f1-a628bd190d6e"
        },
        "item": {
          "id": "537faf5c-9591-4108-a7ec-794b3bb64f17",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a0a6cae3-0701-405f-96ef-3a6a4eda507f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc42250-fc47-49eb-9869-e4499769a961",
        "cursor": {
          "ref": "9689d8da-a6ef-48f8-8cad-ab546cb45a20",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "acf727e7-fcf3-4177-829a-37a302cacbf4"
        },
        "item": {
          "id": "afc42250-fc47-49eb-9869-e4499769a961",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4ebdb5f6-1b9d-43c6-aaf3-98f30b3d2ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b624df68-4925-405e-bcfb-84b338447494",
        "cursor": {
          "ref": "32a56136-24e4-41be-95f4-fbc8fcc5fdd8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "78247117-9530-4a0c-b967-eaee25729749"
        },
        "item": {
          "id": "b624df68-4925-405e-bcfb-84b338447494",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6854a71e-7e3d-401d-bbf5-4316cd61ff1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8ed27a-2646-4eee-bbe0-2f3768c8eb56",
        "cursor": {
          "ref": "15196da4-be0b-40bd-bb1b-6dcb5c3c9947",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6aedc8d1-ddda-40d3-bc96-abc8bf7ea4c6"
        },
        "item": {
          "id": "ca8ed27a-2646-4eee-bbe0-2f3768c8eb56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "47da33c2-54d5-4a3f-ba76-cbbeee9302af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd729f7-67c8-4318-af86-7b719fc98686",
        "cursor": {
          "ref": "73f8b57c-5a27-4237-9957-9a0178576dd6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1217ac68-ba67-4fa4-bc14-6240bacdf389"
        },
        "item": {
          "id": "6bd729f7-67c8-4318-af86-7b719fc98686",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "30ef2f67-6b61-449b-ba34-0b7c5129f2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f5196a-4084-4e3c-884e-8c999da1329a",
        "cursor": {
          "ref": "097aeafe-368a-45d9-be95-399d78d512fb",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f6176a8b-1cda-4614-a2fb-fd3f8eb36eb9"
        },
        "item": {
          "id": "09f5196a-4084-4e3c-884e-8c999da1329a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ba00ec2f-39bf-494c-bef5-924c1dc6b93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf86e501-3bbc-4add-a2f5-3c6d562df617",
        "cursor": {
          "ref": "16febe07-02ee-4cc3-92db-b9e7bf1e07c8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "85791378-7421-4685-906a-f39ac55f1e08"
        },
        "item": {
          "id": "bf86e501-3bbc-4add-a2f5-3c6d562df617",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d4b4723e-0893-490c-9ada-c91ba3c489d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ead579-1804-43ff-8348-6bc059f8b8e6",
        "cursor": {
          "ref": "dc04e108-c6e3-49c1-b969-c34413fda81c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d4e4c060-ba1b-41bf-98ff-76ac2eba72f3"
        },
        "item": {
          "id": "a4ead579-1804-43ff-8348-6bc059f8b8e6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "18bc5239-36da-4d9a-9ebf-61bcd3310c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ed9b4f-94fd-48b0-90cc-d10ef481f3cb",
        "cursor": {
          "ref": "26afb66a-488e-42cc-be54-3cb0c8c61ff8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "233b0466-f1d3-4d43-9001-54ecdf8d3ab6"
        },
        "item": {
          "id": "f4ed9b4f-94fd-48b0-90cc-d10ef481f3cb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "65cacd56-ca39-414b-bfcc-dbe2e20a11a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fbeece-7c13-4efa-b6ba-955440537a4d",
        "cursor": {
          "ref": "45bfd7ee-f74c-4306-b8ef-d285538849a5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "11dbb144-0e52-42e1-9670-6a82c4d7ddc8"
        },
        "item": {
          "id": "35fbeece-7c13-4efa-b6ba-955440537a4d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a93f2b43-446c-43bf-bc1a-6068072a32f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ab75b5-d228-455c-a328-dc18787ab6e8",
        "cursor": {
          "ref": "781be725-7d20-4f32-93e4-1b05fb32b911",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "74126f47-9a54-4350-b521-ada65974c367"
        },
        "item": {
          "id": "36ab75b5-d228-455c-a328-dc18787ab6e8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bf87e1ec-7dff-4055-8476-d8f1e9de5226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9a5304-8d5e-4f30-836c-3427e409fed1",
        "cursor": {
          "ref": "3ef16896-112d-48a3-aecc-cd3cc096dcbb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dcd5f548-31de-4937-a7e6-9f6b8d182e82"
        },
        "item": {
          "id": "6c9a5304-8d5e-4f30-836c-3427e409fed1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "09f044ca-3b28-46ed-b2af-e3f8915df572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fc398c-f457-4435-852f-1a1d6a35078b",
        "cursor": {
          "ref": "c7cd6b14-83c7-46b0-a4e3-7b69797e87ec",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "76344788-3d45-4293-979b-8458fd4058dc"
        },
        "item": {
          "id": "e2fc398c-f457-4435-852f-1a1d6a35078b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9496a9f5-1060-4eeb-9215-3aa510830000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e61eff8-9905-48e8-ba2a-914da9937e31",
        "cursor": {
          "ref": "7af12b8e-4a8d-46b4-9008-e61922ab39ad",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fd20a29d-d2c2-4930-89c5-4ff6dd318b06"
        },
        "item": {
          "id": "9e61eff8-9905-48e8-ba2a-914da9937e31",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0517319e-fd11-42dd-ad90-b8f7e1b51fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f93c30-33ce-4078-aaca-3515cd104808",
        "cursor": {
          "ref": "a6f0d063-3793-420c-9c58-9b359b80cbbd",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0e74c3ed-9ba1-40de-a874-a8179093cfce"
        },
        "item": {
          "id": "16f93c30-33ce-4078-aaca-3515cd104808",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3852af16-3dbe-47b6-b828-58499bdac4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c7d4cc-12c2-42f1-8ca3-b9dcc16dc012",
        "cursor": {
          "ref": "6fcf852f-2091-4f99-9456-27b06b68e883",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1d7a4a3c-7fcf-47a3-a0ef-e4cfe092aa80"
        },
        "item": {
          "id": "f6c7d4cc-12c2-42f1-8ca3-b9dcc16dc012",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f5d4891b-c27c-4a7f-b6dd-207353b2a98c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76471c3e-bba7-4a62-bf7c-ddabfb19a00f",
        "cursor": {
          "ref": "669ed402-afa2-41bf-b2f3-3bdd6bcf8959",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "576e4c44-a313-47eb-a903-3cbc9c5cfa56"
        },
        "item": {
          "id": "76471c3e-bba7-4a62-bf7c-ddabfb19a00f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b3a0efb3-3e1b-4b4d-a331-f1e5fa6fd047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c925ac8-372a-4ed4-9059-e6b565b1b4d0",
        "cursor": {
          "ref": "88c6e916-5460-4750-9609-8d0e67302084",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "39981524-86cb-4854-aeec-95ceaaa2aa44"
        },
        "item": {
          "id": "9c925ac8-372a-4ed4-9059-e6b565b1b4d0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c393763c-d3db-4537-8e5a-bb7fa4bb7004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dacbff-8c52-43cb-8e6a-d7451e6b4f71",
        "cursor": {
          "ref": "50f97573-5664-40fb-8352-18fc4879020c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "da84614c-a92e-4382-a34b-a90fb3c63abf"
        },
        "item": {
          "id": "b0dacbff-8c52-43cb-8e6a-d7451e6b4f71",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "00fe56c6-d69a-404b-96a5-4eeac679c26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033a5707-8d91-4bf8-b1da-e5436eca3309",
        "cursor": {
          "ref": "36155aff-d2d8-41c3-90dd-5b95001a7c4f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3ed14bb1-2b6d-401d-bdf4-1bfd04807569"
        },
        "item": {
          "id": "033a5707-8d91-4bf8-b1da-e5436eca3309",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "658ff9b0-7004-4730-b7ec-397ab348086f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8521586-2e39-40a9-80ec-7f95e1d03a90",
        "cursor": {
          "ref": "e995494e-ac38-43a0-88a8-802dd98d51f0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "48204c23-0063-4281-b1d9-8af64b69d3cf"
        },
        "item": {
          "id": "b8521586-2e39-40a9-80ec-7f95e1d03a90",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4f1b3157-0ac0-42da-8f53-9e6383a378c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930cc0e4-7451-4e57-ab91-f7268c37ffb0",
        "cursor": {
          "ref": "19c87922-d859-4eb0-9bfe-368a98761421",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "65e50305-e1b0-4cf2-b69f-5a1000b8542d"
        },
        "item": {
          "id": "930cc0e4-7451-4e57-ab91-f7268c37ffb0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "083e8f40-1453-4562-af0b-09e45cd0e472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75811f59-9c8a-48d3-a094-4a0cfc2ab4a6",
        "cursor": {
          "ref": "5c83dd45-3833-4606-b127-8bf174ebcc4a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9ccaa401-7599-44d3-bf2d-b2d5021b673a"
        },
        "item": {
          "id": "75811f59-9c8a-48d3-a094-4a0cfc2ab4a6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c7cd2a57-1633-456b-a64f-ebc489a61c48",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da76158f-8d79-4042-862c-3f2311748150",
        "cursor": {
          "ref": "727a7422-6a1e-4a8c-95d8-c943a850d293",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eb106147-efb1-4193-b49f-9b52cdcb3f49"
        },
        "item": {
          "id": "da76158f-8d79-4042-862c-3f2311748150",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f1d346c0-7c33-4b8c-95d5-ef5fec960e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826deb33-323b-4675-a142-f1302f6f6122",
        "cursor": {
          "ref": "f83e259c-74a1-43b1-bd1f-d13cc7783366",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "510148d8-58f8-4822-8d46-f020bfdee36a"
        },
        "item": {
          "id": "826deb33-323b-4675-a142-f1302f6f6122",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e6d1db77-a2d6-4667-af76-2f3e853f4d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4b9ded-fc50-452d-9409-c7b3cc976934",
        "cursor": {
          "ref": "d1d496c6-813d-42de-800a-8e05c296a88f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7a8d244-e538-4fcd-85fb-8fd6f0163eb1"
        },
        "item": {
          "id": "de4b9ded-fc50-452d-9409-c7b3cc976934",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a6638f62-1097-4d23-aa6c-0610b4a09a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f32292-98b5-47e0-993c-03ae790fb0d3",
        "cursor": {
          "ref": "dbe1b727-b93a-492d-aa19-908b10c06d0c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "06c6701a-466f-4e5d-ba25-07ddc81f0647"
        },
        "item": {
          "id": "f2f32292-98b5-47e0-993c-03ae790fb0d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "61d42580-c808-4976-9860-7037edc84d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4f7224-c1f1-4033-ab8f-bc11d4c1be3b",
        "cursor": {
          "ref": "d1c9dc33-0428-4d86-a01e-e928998ab13b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "58be9d06-621a-4949-930f-0c7ba5aaad03"
        },
        "item": {
          "id": "9d4f7224-c1f1-4033-ab8f-bc11d4c1be3b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d4979304-46fa-47f1-91f4-7f03c6903e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ccb49c-fc7e-4481-a66c-daafdb3f6de6",
        "cursor": {
          "ref": "33d35513-e529-46d8-9272-8976f68d0166",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d46a9312-06ce-41c1-9019-ee2996452efa"
        },
        "item": {
          "id": "d2ccb49c-fc7e-4481-a66c-daafdb3f6de6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed667034-f1a4-46f6-be0e-a9976fbcc75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4056f361-9868-4b67-b0ef-05a63a2b800f",
        "cursor": {
          "ref": "289b8849-e8a3-4571-a757-abadeaf13c16",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "26d1f5ae-8270-460d-81f0-88d162ea8477"
        },
        "item": {
          "id": "4056f361-9868-4b67-b0ef-05a63a2b800f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d97fb367-6665-47c6-a98d-ec5d2f882b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb25b11-0fcc-4dd0-bd6e-09b95bbbe80e",
        "cursor": {
          "ref": "f76eda56-cab3-435b-be93-5955674b374c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d61a6fdc-0fc0-4df8-9461-6bcaf9845be1"
        },
        "item": {
          "id": "bdb25b11-0fcc-4dd0-bd6e-09b95bbbe80e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3e380808-2e68-4d05-80f7-bff6c9fb5d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7552fb23-4a2a-4f1b-abd0-f3cb5ba82f9b",
        "cursor": {
          "ref": "b9445145-ed69-40de-9c70-f1e0106e11ef",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f9ebabb1-a660-428a-a9cf-44cc52e0f81f"
        },
        "item": {
          "id": "7552fb23-4a2a-4f1b-abd0-f3cb5ba82f9b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "77926e1b-a090-40cc-8c64-6eb62450f83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3331fc5a-0042-43e0-92e3-90575ca98120",
        "cursor": {
          "ref": "4f5905eb-6ced-4f64-8aa2-3622876e5284",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f2d4ba8a-3705-4884-8f70-62ac604e7da4"
        },
        "item": {
          "id": "3331fc5a-0042-43e0-92e3-90575ca98120",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "542ab949-caf8-45bd-a6cb-90c8f181bc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5acbadb-0d8c-4d44-a671-382164832645",
        "cursor": {
          "ref": "24a954e3-7e9e-4ced-b3f6-1aad6238716a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d867293e-b037-4d0c-8a4b-6746aa16fe86"
        },
        "item": {
          "id": "c5acbadb-0d8c-4d44-a671-382164832645",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d1dfcdf0-6c7a-4bf4-aa79-a75fa0633921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af86b3ce-7611-4b94-843e-b5ee11bb9ccf",
        "cursor": {
          "ref": "1ea2eda4-1e0d-462f-91f1-e873bdca5cf3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "69ab38f3-c4b1-45e2-8fae-86b8899fb6ae"
        },
        "item": {
          "id": "af86b3ce-7611-4b94-843e-b5ee11bb9ccf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eb8fbf8e-97e6-4277-87ff-ff9f72ca92ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301f7f7b-c6fa-4500-8ecf-e4ac41b92a09",
        "cursor": {
          "ref": "b8b0c267-7901-4815-8865-93e2df3e9fd9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "58089ecc-766f-4db1-9eaa-75ed3413a376"
        },
        "item": {
          "id": "301f7f7b-c6fa-4500-8ecf-e4ac41b92a09",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ecc4b25e-cfdb-42af-a47c-aae77ee7b909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ddc7eb-9a53-4066-a325-9d432ddb9d40",
        "cursor": {
          "ref": "fafa0b50-d72a-405d-9d69-9f75ff5d83e0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4a381a3c-66c1-4c88-b258-d03f1ad3bbdf"
        },
        "item": {
          "id": "c5ddc7eb-9a53-4066-a325-9d432ddb9d40",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "022a9ab3-818e-462d-b636-ee4e79e0366b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a812b9-02b5-474a-85a7-bd048ac94ee1",
        "cursor": {
          "ref": "fbc2ff6c-ffe2-467f-820e-7e9a6b17900a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9bf0928c-e539-43f9-8504-1db8b9795e80"
        },
        "item": {
          "id": "b0a812b9-02b5-474a-85a7-bd048ac94ee1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f94efe21-2da0-4406-ac34-b946c32d802e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4770435-7b37-4984-a2a5-94347a3a4471",
        "cursor": {
          "ref": "8097850f-5436-4b6d-8a84-151685671569",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bba2d656-91e8-499c-b304-e6a28a61bdc6"
        },
        "item": {
          "id": "c4770435-7b37-4984-a2a5-94347a3a4471",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "32f88dc7-b55c-4a7f-9ede-7fc164f9d065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cf55af-0ec3-4bf9-9b85-a4be35998d0e",
        "cursor": {
          "ref": "8a8549de-b253-4494-b56d-8d56740eecf5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c88fe2e5-093d-4b3f-99a7-f946289e28b1"
        },
        "item": {
          "id": "a2cf55af-0ec3-4bf9-9b85-a4be35998d0e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c108dd5c-7e7c-4acc-9057-03b0b9c44f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcdf080-96ca-40aa-8472-f943829ddd50",
        "cursor": {
          "ref": "04862d73-5abe-43d0-8b11-8c9729834870",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "165676e0-5186-4b01-a459-91a49f057c3a"
        },
        "item": {
          "id": "edcdf080-96ca-40aa-8472-f943829ddd50",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f6283bbe-54cc-4775-85ae-a9d7ed525039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bb6c04-fcbd-4aac-bc8f-a33b530bbc92",
        "cursor": {
          "ref": "668c8f93-5fa6-488f-9b49-ab0403acf1cb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "09104c50-c34a-4d3b-a662-df2410ae0dde"
        },
        "item": {
          "id": "95bb6c04-fcbd-4aac-bc8f-a33b530bbc92",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "977e159e-3d0c-4ce8-97f2-4270d77c62d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16812f6-4cc9-47ce-9884-c866bfa0084a",
        "cursor": {
          "ref": "5f9e9c48-6e04-4eb8-9046-9bc570e3c816",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b99687f7-2b01-40a5-962a-6683eb25b408"
        },
        "item": {
          "id": "a16812f6-4cc9-47ce-9884-c866bfa0084a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "33acdaa2-6897-4577-8a1c-b843b4a65f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcc4a35-f2b7-47e6-acc1-8659cd86b729",
        "cursor": {
          "ref": "9c5b5e59-11d1-42fe-9ead-a6ade5f676a6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0c795f6f-d462-4990-a678-26b17d43a169"
        },
        "item": {
          "id": "9fcc4a35-f2b7-47e6-acc1-8659cd86b729",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c669a30b-11be-4d11-9eb1-7f79444b207c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e38fb19-eda2-4f2d-aaca-c9e6b43f28c9",
        "cursor": {
          "ref": "f50cb066-a2f0-4415-8093-a940c64322ca",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e43e4713-9bc2-4ec3-9ea7-c32046c9895d"
        },
        "item": {
          "id": "6e38fb19-eda2-4f2d-aaca-c9e6b43f28c9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "427790ae-c55c-4223-9341-b13508beb900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ea0f3d-156b-4f86-ae3a-108fc31178d8",
        "cursor": {
          "ref": "9f4b04f3-f512-45e1-ac37-ee82c6712d9c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cd11f362-42df-44b6-b3dd-c41e8fc8abea"
        },
        "item": {
          "id": "f9ea0f3d-156b-4f86-ae3a-108fc31178d8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4d5f1fd5-2ea5-44f3-ad2c-90d3befe7878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d304988-1038-46d4-8051-73383cd3a253",
        "cursor": {
          "ref": "9dda25f6-562e-4d8d-aa42-85b5ca5169b1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7d2da6fb-651a-45c9-8ef3-3eca2a0ced37"
        },
        "item": {
          "id": "4d304988-1038-46d4-8051-73383cd3a253",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a61cc264-b328-4370-9066-ec0c88694a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c66c6b9-3edc-45b3-8d41-cce5aa8f57c1",
        "cursor": {
          "ref": "1275f243-f089-4aa2-b9b2-c45cfefa3c84",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "91b39cc7-b9a6-41c0-862a-48d3adab1e7c"
        },
        "item": {
          "id": "9c66c6b9-3edc-45b3-8d41-cce5aa8f57c1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ac123f47-a4db-490e-b516-e6f374382b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9190ad0c-2d66-4a36-9255-ae3a29f54da7",
        "cursor": {
          "ref": "7ff3f2d1-c26c-4a59-a439-5504df424950",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "84574f48-2927-465d-890d-3b32b06db9c8"
        },
        "item": {
          "id": "9190ad0c-2d66-4a36-9255-ae3a29f54da7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "da4b4247-5093-44e3-a429-15a370d4a03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949e86a6-76f4-4548-84d4-e71635ce80b9",
        "cursor": {
          "ref": "a4c6dc43-9ed2-47a1-9661-c1ad8bc3e310",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3b6e17b9-fe34-409b-9042-68762419512b"
        },
        "item": {
          "id": "949e86a6-76f4-4548-84d4-e71635ce80b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "da2ca910-5e83-4013-8720-03eebc352ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20d4c37-f61e-4965-8721-0b429a7c8299",
        "cursor": {
          "ref": "0e2e1558-9f89-46d7-9543-9f0e4e3d85af",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f97ba9f9-03d5-4910-a2fb-eef01e00c838"
        },
        "item": {
          "id": "b20d4c37-f61e-4965-8721-0b429a7c8299",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d2914d3d-9ea1-4b27-b7a1-036d4d9143e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4a0c50-25a8-4b21-b3ea-090bab9a1f4a",
        "cursor": {
          "ref": "9386784e-2900-4141-886e-c2b8ee8f2b6c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "06ec36bb-5de2-46c2-a5e1-67b614717976"
        },
        "item": {
          "id": "fc4a0c50-25a8-4b21-b3ea-090bab9a1f4a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8b93fbb9-6210-48bc-9be7-fd454f1e6122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256b0633-88ee-432c-96d4-0080d74035ab",
        "cursor": {
          "ref": "ff600319-2342-4cac-842b-39060e94c072",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "79621a54-b467-4aea-a985-ae1b6c707d39"
        },
        "item": {
          "id": "256b0633-88ee-432c-96d4-0080d74035ab",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4cda987b-32d6-49ab-a8bc-ca9c51fd09ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e8cf37-049f-4a59-9c6a-5b8cf7ceb148",
        "cursor": {
          "ref": "3a5d3251-5eff-449b-b1ac-f0a1da43e765",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a3dec1d4-1c50-408d-aa28-9a64f35f890f"
        },
        "item": {
          "id": "09e8cf37-049f-4a59-9c6a-5b8cf7ceb148",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "81c6d1fd-0951-498c-84bd-2470b63b593b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccfcf13-8bf4-4423-872b-fa7e224ec652",
        "cursor": {
          "ref": "3741a9a9-fed3-4076-8186-02d8b9ae5190",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "804b1c16-9f07-4b48-94e2-b8fb1dfd5ddc"
        },
        "item": {
          "id": "0ccfcf13-8bf4-4423-872b-fa7e224ec652",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "11dea824-986e-4113-bb2f-763c81411edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910ecfae-74b4-46fd-a3f6-88639064a6fb",
        "cursor": {
          "ref": "737b8dc7-5459-4c2d-8640-1d9ee735680b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6136c0b3-93ec-4760-bd87-77008406bffa"
        },
        "item": {
          "id": "910ecfae-74b4-46fd-a3f6-88639064a6fb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e96b00ad-8ed2-438a-9acc-055a70550767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60859913-32b5-47dc-a2cc-3a65dc48e249",
        "cursor": {
          "ref": "bf60b737-5499-4b5e-ae9a-6f2256635706",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d37650a9-fa57-421b-b971-750f95f1e382"
        },
        "item": {
          "id": "60859913-32b5-47dc-a2cc-3a65dc48e249",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "66dccac2-c8d6-4d3e-9b13-1542675d1db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774d1753-0523-4bbe-989d-55be67dab7e1",
        "cursor": {
          "ref": "66743951-a63c-4c0c-ab44-328167b60b17",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f07ca299-5eb0-4cbb-b01a-d3521b191885"
        },
        "item": {
          "id": "774d1753-0523-4bbe-989d-55be67dab7e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "56bdc21c-e9cc-406c-afca-9880ed583903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637a6324-a788-482e-9bec-3b42406dbea0",
        "cursor": {
          "ref": "34266673-85cb-433a-8f39-21bb9264c86d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1332e141-711d-406d-b7f9-b39ca9dca6d5"
        },
        "item": {
          "id": "637a6324-a788-482e-9bec-3b42406dbea0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c1ab5016-423d-4a75-82ff-4b643713886f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4132388e-9b93-4998-9a7c-dc5be35faa98",
        "cursor": {
          "ref": "8f99242f-160d-420b-954a-e92e2047d915",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "56e84e51-2530-4c2d-b44e-a646e835fdeb"
        },
        "item": {
          "id": "4132388e-9b93-4998-9a7c-dc5be35faa98",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "64e5b8d9-d5f5-4724-aa06-280e75d07930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80d4969-6797-4718-9cce-671b237551be",
        "cursor": {
          "ref": "11cd1344-c576-412f-9143-bc4d2f8778a0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "32d71eb1-b97a-4a31-a5d6-470f8ab07ce0"
        },
        "item": {
          "id": "b80d4969-6797-4718-9cce-671b237551be",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d50d865a-2d6a-48c3-b9e8-bdd9f419c168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bca6fe2-5ace-4952-a4c6-1a2298e98672",
        "cursor": {
          "ref": "a8b777e8-ca46-43ab-b2d0-df4877aea2c0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "919966b7-befe-4432-8d27-68c5dff63777"
        },
        "item": {
          "id": "0bca6fe2-5ace-4952-a4c6-1a2298e98672",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a371ed42-31c3-4ac3-9f9e-64a4812097c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b68455-c2fa-4d8c-9818-5159c435395d",
        "cursor": {
          "ref": "176e4744-f135-4ed9-af55-94928b8ac1a4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5aeaa941-6753-4dfc-83cd-0ca00915df04"
        },
        "item": {
          "id": "43b68455-c2fa-4d8c-9818-5159c435395d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f8391a8d-8609-486e-be2f-d7c2790553b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1260668-c058-4439-8e93-9d8936a86234",
        "cursor": {
          "ref": "e88454d6-2980-4287-bb28-14640a9e563f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e53d326a-8684-4f22-ab25-c4012f73c7f3"
        },
        "item": {
          "id": "f1260668-c058-4439-8e93-9d8936a86234",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "20820321-70dc-44db-a67e-3b9298655eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b252e7-c5bd-49dc-a24f-8b9bac0bc0ce",
        "cursor": {
          "ref": "a770fdac-9721-4baa-beab-cc1052d139a5",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "eed808fc-20a9-472f-a446-9c29a4217095"
        },
        "item": {
          "id": "25b252e7-c5bd-49dc-a24f-8b9bac0bc0ce",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4bedf953-4911-4160-85ab-3faa2199da85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01194dd7-3ba8-419b-a176-01c6876bc868",
        "cursor": {
          "ref": "143ee7de-6dd5-4e48-8b01-f24c5a14e13d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "74e0bccc-6fa1-4fc9-808c-a0b97fba8b9d"
        },
        "item": {
          "id": "01194dd7-3ba8-419b-a176-01c6876bc868",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b857a8b4-333f-44c4-a4c0-e424c47b3b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeb1878-91ce-4257-b6d5-82540eba9d8a",
        "cursor": {
          "ref": "4837c903-9863-4036-93b8-2eddd3f9232c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "42d824bc-1167-4dc5-a202-9783b81936c3"
        },
        "item": {
          "id": "5aeb1878-91ce-4257-b6d5-82540eba9d8a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "525042f2-1285-4876-81dc-1f5cd2e40e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2671ad5e-2480-4ac2-b7cd-050f8016aa7f",
        "cursor": {
          "ref": "4e872efa-f608-421a-93a7-a689a15d21d9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3bb68a60-b635-4cf2-a839-87c3c0ca41bf"
        },
        "item": {
          "id": "2671ad5e-2480-4ac2-b7cd-050f8016aa7f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eec60e6b-938e-4883-848a-b2209d0557bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eb605b-f0b5-4c95-b047-34cae551f103",
        "cursor": {
          "ref": "6e85acc9-b4da-4756-951c-7c03f22d9145",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e1a89cf5-3412-4008-9934-81ec21767d79"
        },
        "item": {
          "id": "17eb605b-f0b5-4c95-b047-34cae551f103",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d224f0a0-d4ba-410e-9066-dce246779dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2aa38e-9875-4f06-9314-9f01dbdf55c7",
        "cursor": {
          "ref": "e5cb4442-eb56-45d0-a97f-8f45e1a865e9",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c067f207-3b78-4838-b52b-af1a85781539"
        },
        "item": {
          "id": "bb2aa38e-9875-4f06-9314-9f01dbdf55c7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9935a57d-437b-4766-8d83-03044a578798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165375c1-739f-4fc2-8225-88a4dd69fef3",
        "cursor": {
          "ref": "36d3202f-f3b4-4656-9b67-f63fb4ffa72d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "72427c19-a748-4b71-9577-97384af6c99a"
        },
        "item": {
          "id": "165375c1-739f-4fc2-8225-88a4dd69fef3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1c37ba52-5114-4733-b770-684e3e20a8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd70b88d-41a5-4422-86f7-8d3bfa6497ee",
        "cursor": {
          "ref": "686284e5-dfd3-4b5c-a4f7-66c909a32e83",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5ff8db3c-f91f-4010-ab13-87724c384f5a"
        },
        "item": {
          "id": "fd70b88d-41a5-4422-86f7-8d3bfa6497ee",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "deb03369-99ac-4ffd-9a37-c92e552c8964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d5aeeb-6db5-46ce-b73f-e55e2c6936e2",
        "cursor": {
          "ref": "1a100475-3c90-4267-8495-e44ffb926695",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "10ee80b3-a392-44cf-8a01-1039bc757c02"
        },
        "item": {
          "id": "13d5aeeb-6db5-46ce-b73f-e55e2c6936e2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d00efa21-95ab-4158-90a4-abfe47f9c664",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6050636d-c494-4bee-9282-feebe2ddcc18",
        "cursor": {
          "ref": "1e755e12-1466-4474-98ba-e4129273cbd2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fbbb0b88-3195-4ee1-ab5d-9f82487bdb5a"
        },
        "item": {
          "id": "6050636d-c494-4bee-9282-feebe2ddcc18",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4f50310b-6307-47df-b708-2b186c038d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "67cff583-468a-45dc-9cb7-11c2e676fce0",
        "cursor": {
          "ref": "13a2bcae-55ec-417e-9652-0927c495c5e2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "26e1a957-ec13-42bc-ad0f-b61e638b476e"
        },
        "item": {
          "id": "67cff583-468a-45dc-9cb7-11c2e676fce0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "289fa709-6bde-47d6-b118-f287c67bc253",
          "status": "Created",
          "code": 201,
          "responseTime": 7043,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f2abe8-c231-47ea-b8be-60009f172044",
        "cursor": {
          "ref": "724be328-bb33-4a49-821e-5a7caa503c8a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3a136dfa-a159-4230-bb92-64317e0827df"
        },
        "item": {
          "id": "95f2abe8-c231-47ea-b8be-60009f172044",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "601e745a-77aa-4ac4-b3cc-b430d696eccf",
          "status": "Created",
          "code": 201,
          "responseTime": 6247,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbb09fd-f1ac-4ad7-9ae6-37298ed5c766",
        "cursor": {
          "ref": "7732eb49-0fa5-4814-bd84-235ed0e03321",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3329415-18ec-4673-968c-d4893137fd58"
        },
        "item": {
          "id": "3bbb09fd-f1ac-4ad7-9ae6-37298ed5c766",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f92de1fc-c4f8-46f7-957d-64b4e7d1df12",
          "status": "Created",
          "code": 201,
          "responseTime": 6347,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "633099c2-9bdd-48b7-afeb-66a1c627d599",
        "cursor": {
          "ref": "d7bc0c30-0f9b-4cb5-bfbf-636cd49b4dfb",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "efa4d9a4-92b2-45e0-95fd-02d25537bf56"
        },
        "item": {
          "id": "633099c2-9bdd-48b7-afeb-66a1c627d599",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "46967e28-88cb-4185-9391-8e3568badf3a",
          "status": "Created",
          "code": 201,
          "responseTime": 6405,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3e441e-615c-49a2-b5a5-5cb62d4950a5",
        "cursor": {
          "ref": "03bf2982-c2cd-4409-a948-fb6a4c97f561",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2e529b53-ba33-45c6-b540-f37c399f072d"
        },
        "item": {
          "id": "ac3e441e-615c-49a2-b5a5-5cb62d4950a5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d564cf78-6c3c-4d09-a856-6b6b8cad9c9c",
          "status": "Created",
          "code": 201,
          "responseTime": 6206,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-12T00:39:16Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-12T00:39:16Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3c4672f2-8777-418d-b9b6-53262bdf1330",
        "cursor": {
          "ref": "831addd3-5f02-450b-b3c0-c409d623b71a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d18ef3e0-f490-4366-b215-6dc2281141fa"
        },
        "item": {
          "id": "3c4672f2-8777-418d-b9b6-53262bdf1330",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2c5150d9-a0b2-4b75-bc0f-2d23f5067dd5",
          "status": "Created",
          "code": 201,
          "responseTime": 6487,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10284724-2c07-4e92-90f7-5f10c2b4e815",
        "cursor": {
          "ref": "c50d5497-1bb1-4995-8f28-9cb2db639a56",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d95b6342-7c58-4f06-9d13-0bb59c525535"
        },
        "item": {
          "id": "10284724-2c07-4e92-90f7-5f10c2b4e815",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2d72cb62-d082-48ed-855c-fb1400943f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d52ea1-82c6-475b-ba72-ccbd36847d56",
        "cursor": {
          "ref": "2ec6fcd0-59cd-440a-b6e7-4d600b3380a7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a785bdb9-bc9a-4244-9268-99d6dcc34ebb"
        },
        "item": {
          "id": "a8d52ea1-82c6-475b-ba72-ccbd36847d56",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68fd90e9-d4c4-4648-92ca-06d768e15027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4eb75f-2464-4670-9124-3d7cac76c5e0",
        "cursor": {
          "ref": "3991127c-8e9e-48b7-bc87-1a8134090341",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "27011622-41a3-46c2-b905-71324dad79b3"
        },
        "item": {
          "id": "3d4eb75f-2464-4670-9124-3d7cac76c5e0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1d1dda99-4740-46b4-911d-e81dc0723765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bca4f7-8033-44ac-92e1-470d4ed6bbab",
        "cursor": {
          "ref": "c239c285-213f-4310-a679-7750202e8ad2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "732e09c9-3cb8-425f-bfd0-8053449d59d6"
        },
        "item": {
          "id": "f3bca4f7-8033-44ac-92e1-470d4ed6bbab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6cdc4a09-2eff-46d3-8d92-a92c705875ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80476f10-0502-4233-860b-b78d5e3e5f98",
        "cursor": {
          "ref": "0f57e122-e336-49ec-b078-047edb64237a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9616ddfc-5a75-45d2-b7f1-dd196709a727"
        },
        "item": {
          "id": "80476f10-0502-4233-860b-b78d5e3e5f98",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f052216d-754d-439b-a347-55bd3f4d2243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b7d451-8d25-4267-afca-bd0b9431fd05",
        "cursor": {
          "ref": "708fd58f-1d10-41b6-8b91-d0f7054da667",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "41861420-9155-4eea-93c2-bd216a53cc36"
        },
        "item": {
          "id": "c7b7d451-8d25-4267-afca-bd0b9431fd05",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3fbc0028-75ca-4a4c-932d-28401b2030c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b3cd79-8688-4da1-9d38-f3dd82595a05",
        "cursor": {
          "ref": "dc686929-b6cd-4d3f-833f-dee61b1f2b8e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e06dc938-0ef6-42ac-bfa3-7abc3586f181"
        },
        "item": {
          "id": "42b3cd79-8688-4da1-9d38-f3dd82595a05",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1c7f8fc1-cccb-4029-a665-f641a38e9447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dd71db-8bc8-41d1-8648-7eb5c17e029e",
        "cursor": {
          "ref": "759613d4-c2d7-4380-8298-7706dbdc481b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5f3c111e-7886-4fc3-9f6d-78f09c094f77"
        },
        "item": {
          "id": "f6dd71db-8bc8-41d1-8648-7eb5c17e029e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e1710559-68b5-4a81-bcab-9d882eda88c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25175c46-508f-40b3-a3d8-d033afea4043",
        "cursor": {
          "ref": "80896550-ee9e-4654-acd7-1706e0704673",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "14221cde-39a1-45d8-a481-02dff520c9ee"
        },
        "item": {
          "id": "25175c46-508f-40b3-a3d8-d033afea4043",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b2e2db16-1a6e-4d20-9b4a-a5367022332e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f742f9-525a-4229-aaf7-b99c3da3443f",
        "cursor": {
          "ref": "adf7b328-d6bb-4d62-b674-79d79efe7bc3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ffaed381-0541-4e83-9bbd-cce08ba98034"
        },
        "item": {
          "id": "26f742f9-525a-4229-aaf7-b99c3da3443f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dd97a069-2392-496f-9a96-43afa5b9fa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57608415-2b36-4d26-be6e-4e622e195c2b",
        "cursor": {
          "ref": "57a5c803-72d5-4a9b-b928-56921b596826",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "31fb58fd-3e5d-4ee0-b595-ca9f60ce100f"
        },
        "item": {
          "id": "57608415-2b36-4d26-be6e-4e622e195c2b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1d3346d7-8f92-42c5-a9d1-e931f85a6352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19710084-b7a3-4633-90ab-56a223749e64",
        "cursor": {
          "ref": "0ff7d586-7288-4699-8444-43e891575873",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "20a70291-990a-493a-89c1-afe5ffb9dd10"
        },
        "item": {
          "id": "19710084-b7a3-4633-90ab-56a223749e64",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ca1d86f8-2b09-4d94-b7bd-b2abf72d2c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d553954e-41a4-4c35-a835-f4a40f6241eb",
        "cursor": {
          "ref": "d0008e0f-9a1c-4f09-a29a-41d551aa9cfe",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "423d83be-1bef-41cf-a14a-606c1f1c1426"
        },
        "item": {
          "id": "d553954e-41a4-4c35-a835-f4a40f6241eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5e4323a4-e647-45ca-9b7e-0d9c525205fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cab6c21-cc25-4a18-b4dc-5eef2c405bf7",
        "cursor": {
          "ref": "1a11bcbf-8553-435f-b4f2-71911ad2edfb",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "05cd4e07-b99a-4d1f-ac1d-41aa312f8a36"
        },
        "item": {
          "id": "8cab6c21-cc25-4a18-b4dc-5eef2c405bf7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dd0d33c5-5ef9-46e4-940c-0326847f05c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195f2769-5264-498b-a20e-29dfa94398fb",
        "cursor": {
          "ref": "ad8e2234-fa7e-47d0-a13f-8f08f25479dc",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dd42ac67-c151-416e-a8d4-9f94224ee0d9"
        },
        "item": {
          "id": "195f2769-5264-498b-a20e-29dfa94398fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dbe07db2-38e0-43b8-b09a-c23451a30cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da20bcda-d796-42a0-a3d8-372a2db42cc3",
        "cursor": {
          "ref": "ba3b05f5-4aa2-4ad6-b727-052efa4c3934",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2dec2056-0c39-46c7-8100-fca5c4783a3a"
        },
        "item": {
          "id": "da20bcda-d796-42a0-a3d8-372a2db42cc3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4dff36ac-a310-429a-b246-0d246fd6e1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e4d714-421a-43cb-88c5-4b04cf27fb8f",
        "cursor": {
          "ref": "f94edd6b-3943-4075-b0d1-267f797d1d40",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8d05e3e6-959d-439e-931f-02c685586ce5"
        },
        "item": {
          "id": "65e4d714-421a-43cb-88c5-4b04cf27fb8f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "03a2cd5c-a312-4a64-8e21-07a9a62f43cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d282ab6-cc12-4820-8567-442815885a58",
        "cursor": {
          "ref": "ebd68f20-116a-4662-9f02-80f2a354c323",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "836cf4df-e2fb-4fef-8039-506dd0efd521"
        },
        "item": {
          "id": "9d282ab6-cc12-4820-8567-442815885a58",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e64b9ef8-4d13-4ffa-8fe3-74e0b20cedab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1021c56-cf74-4b56-940b-6ba412d93b82",
        "cursor": {
          "ref": "06bcf782-1c3c-4b67-9adc-936186c9bb1d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "76d3848e-6327-4567-923f-62a355d28a85"
        },
        "item": {
          "id": "c1021c56-cf74-4b56-940b-6ba412d93b82",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "279a4491-a9ff-4bac-baa0-65f4ed1253af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d45272-f767-4384-aac8-a53f49055bc2",
        "cursor": {
          "ref": "a53f0212-4b13-4d0a-be6a-6f0f9e4ce9a7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5dbd46de-f04b-420f-b82d-a86cc2135c7a"
        },
        "item": {
          "id": "53d45272-f767-4384-aac8-a53f49055bc2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c7391ef3-9dfd-4147-9fcd-dbbea38f401c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ec45b-3f30-440f-83b2-33089f10b32a",
        "cursor": {
          "ref": "0643bc99-ea50-41ee-a100-5dbf8b427654",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "54032329-cf44-45fe-9348-049b9d6b4f21"
        },
        "item": {
          "id": "3d0ec45b-3f30-440f-83b2-33089f10b32a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0080277c-2878-442b-a575-322911083c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0dcccc-50c6-4d96-8738-f2ba56216f63",
        "cursor": {
          "ref": "2396542c-2fb9-4af6-b347-3cbaca5c956e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e3817547-cc5f-48d2-b5c5-fb8798fb9bab"
        },
        "item": {
          "id": "dd0dcccc-50c6-4d96-8738-f2ba56216f63",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2ccd4763-9d4d-4a3c-a958-111a80bd23b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b63998a-ad39-4963-98db-7621e370859b",
        "cursor": {
          "ref": "ce86d4ef-3a16-4f34-8f8d-0165fa8eab04",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8e45a3fb-946b-49e9-b79f-73621c333e2a"
        },
        "item": {
          "id": "4b63998a-ad39-4963-98db-7621e370859b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "82e036a7-94bd-44bb-b5c9-d289c11cb983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b7dca8-6e50-4583-8d4e-33bf8e12c655",
        "cursor": {
          "ref": "0d59a93e-52a8-415d-8344-88b4be91e258",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "da2944e6-dc3c-4784-af10-6d7bf7b958ff"
        },
        "item": {
          "id": "b6b7dca8-6e50-4583-8d4e-33bf8e12c655",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7fa419d6-9133-44db-90e6-a1bc839e05e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e1598c-2411-4fd7-998e-4385f8843918",
        "cursor": {
          "ref": "b86e1e19-d7df-4dd5-b6a1-8f16c7e09520",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "91a78e5b-5c3f-40a3-a685-3e2b9df7a061"
        },
        "item": {
          "id": "25e1598c-2411-4fd7-998e-4385f8843918",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7e9e743d-ad1d-4063-8e7b-062b9b5e74b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fd65c2-e452-4491-82fa-35ad5a4e0f55",
        "cursor": {
          "ref": "66b35c76-d639-45be-afe0-1032a53c0da0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e4379408-7b5f-44f0-8c11-8430d1e52d28"
        },
        "item": {
          "id": "36fd65c2-e452-4491-82fa-35ad5a4e0f55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9a1ad64d-d4c9-48dc-a0b9-7f6ee0f643f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159a687b-1f1d-4c21-8e6e-5af37725b3c1",
        "cursor": {
          "ref": "044f1307-0b67-4641-abe6-5f04707999be",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3e342434-f6b0-4cc5-9e2c-6e92964ea373"
        },
        "item": {
          "id": "159a687b-1f1d-4c21-8e6e-5af37725b3c1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ab5e9754-a560-4453-a412-23bce854f5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed81158f-5f89-4fd2-8a97-a0c2c3cc8982",
        "cursor": {
          "ref": "b97ec6ad-e779-42f9-82bf-354e9563911f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "24159290-f935-4686-91f3-86000474e1a9"
        },
        "item": {
          "id": "ed81158f-5f89-4fd2-8a97-a0c2c3cc8982",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b1469d74-f257-4747-bb04-64498b66b24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa29dab3-9bc0-42c0-8b13-a692bb836ed2",
        "cursor": {
          "ref": "b94a5689-ea94-4ee2-8a2a-25324433eec3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e5e7b90c-b5e6-4529-8cc8-bc05dc64330c"
        },
        "item": {
          "id": "aa29dab3-9bc0-42c0-8b13-a692bb836ed2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "52c19305-7179-4e66-a83c-d84a6b8daff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1150146-a991-427d-b718-c190e3122bdf",
        "cursor": {
          "ref": "edebddd5-a92b-4160-9c74-147ccd47168a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "92d67b30-201c-49a3-bb9d-63ed5ab33f65"
        },
        "item": {
          "id": "a1150146-a991-427d-b718-c190e3122bdf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3f07ddc7-d04b-4393-b960-14ac538e7886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3bb3e5-9ddd-4292-b88a-76d6b35fe62e",
        "cursor": {
          "ref": "e44bdd33-01a1-491f-9333-83e2521e6434",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0a3e96fe-e5c1-4229-a2d4-5c4fc2b68b9a"
        },
        "item": {
          "id": "dc3bb3e5-9ddd-4292-b88a-76d6b35fe62e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "04c70bbf-9fa3-4700-9c4f-20b89f5e6ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4d869c-1c86-4562-a0f2-13167b66fab2",
        "cursor": {
          "ref": "a369248d-2fab-40b8-96f7-c6e5c1d7e44d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a7b8fff3-2128-4ffc-9879-ae63661793a2"
        },
        "item": {
          "id": "5a4d869c-1c86-4562-a0f2-13167b66fab2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1c0ee142-417b-4c17-a80d-3ea71f97060b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4cd1ea-4b9f-4d9e-b607-71a57b34da28",
        "cursor": {
          "ref": "70d9bf44-be9e-456f-b529-09bf64893bc4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9b6ea992-6384-403c-b030-30a2b4296ce8"
        },
        "item": {
          "id": "5d4cd1ea-4b9f-4d9e-b607-71a57b34da28",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fec52953-28f0-4398-8c45-87189002df92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2f815d-25f2-43e3-b7ea-d3a525c5c21a",
        "cursor": {
          "ref": "d563395d-a222-4251-b395-13125ceff636",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "40458ba3-163a-434a-bede-40e686969d1e"
        },
        "item": {
          "id": "ea2f815d-25f2-43e3-b7ea-d3a525c5c21a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6b232e85-adbf-4f6a-8d84-eb9abfd76a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f080c31-a701-4c92-8c72-763dc41f0228",
        "cursor": {
          "ref": "77ab6520-3bce-4bc5-8771-26f5affbe589",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d0fd3b2a-9638-4be5-9c8e-edc3cd25ec38"
        },
        "item": {
          "id": "6f080c31-a701-4c92-8c72-763dc41f0228",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f03e1cf2-e5aa-4024-8696-68776c44d644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf05f2ba-b0d8-43a0-be2c-1ab9719b8c5d",
        "cursor": {
          "ref": "41d287c5-2c97-4020-a91b-64cfa025e909",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6232158b-3934-4d3e-869e-a2b6285ca8fd"
        },
        "item": {
          "id": "cf05f2ba-b0d8-43a0-be2c-1ab9719b8c5d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "112f8f6c-6418-4d0e-9b38-e165d1c4259b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f5d094-54eb-4e12-ae8b-ddf1b5570105",
        "cursor": {
          "ref": "c35e9683-e241-474e-92e7-e86fd5a303cc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2d4776e2-56a1-4e3b-9b38-dc39b5314252"
        },
        "item": {
          "id": "c9f5d094-54eb-4e12-ae8b-ddf1b5570105",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f93f3c58-6384-498c-93f3-386f0162c7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb84df1f-010f-400a-b3af-4d91c4205503",
        "cursor": {
          "ref": "68850d49-c1ff-47d0-84e6-52dc6c5c4294",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5ccef17c-740c-4a94-90b6-bc5546873507"
        },
        "item": {
          "id": "fb84df1f-010f-400a-b3af-4d91c4205503",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0d2a5427-882d-40a2-85b8-e448931cbe23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a963248f-e66f-44ff-8db6-cd4671e90ef8",
        "cursor": {
          "ref": "8316cef2-cd0f-498f-ae17-7d46226e202b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e808fd76-8b8b-48d5-a194-459080764935"
        },
        "item": {
          "id": "a963248f-e66f-44ff-8db6-cd4671e90ef8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7b62671-ab87-4268-ac18-3c1174e8d44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bf7c68-326a-427d-8abb-a3f9997c986e",
        "cursor": {
          "ref": "e38354e3-9827-4a08-bc4b-61fc3b1b7a0a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b744eee0-78a1-440d-b7ed-d031681310f8"
        },
        "item": {
          "id": "b5bf7c68-326a-427d-8abb-a3f9997c986e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2877ee54-a130-414a-b92e-0bafc44fcc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5529c1ae-6e11-41fb-ae43-b8cbbb330b24",
        "cursor": {
          "ref": "2920f0d6-e3b2-46e8-a096-fa72d931ea42",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ba585195-a792-4e31-a70b-e81c69e417c5"
        },
        "item": {
          "id": "5529c1ae-6e11-41fb-ae43-b8cbbb330b24",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d2cac939-f75b-4a79-8967-06208d398648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64299d21-32c2-430b-bcb4-42fcd956fe7f",
        "cursor": {
          "ref": "8129ec8d-b6bd-4f04-b72a-7653056621a1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3405a491-a593-45d5-abe6-ae9b71138376"
        },
        "item": {
          "id": "64299d21-32c2-430b-bcb4-42fcd956fe7f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "20736fbe-bccc-4868-a2fa-16748e559a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2622359-80f9-4e19-bf10-afd6670a04b5",
        "cursor": {
          "ref": "6d56eb0c-01dc-459a-9d00-e6e9a9236bc9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "00df12e9-e032-4fce-beff-31cc08a24014"
        },
        "item": {
          "id": "c2622359-80f9-4e19-bf10-afd6670a04b5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4463b117-7182-4bbf-a654-82688284c654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be984959-accf-4236-a9fc-488a3d5ae27d",
        "cursor": {
          "ref": "5cf7227f-d0b3-4e8b-b0a6-745a7ba85afc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aeca0585-3960-4347-b813-141292bf5aa7"
        },
        "item": {
          "id": "be984959-accf-4236-a9fc-488a3d5ae27d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7b36ec90-09c5-4e21-9b56-e097f4363b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d26750-b5ea-4e3d-87c9-f0bdade9322b",
        "cursor": {
          "ref": "e4afd6c6-06a5-4290-bac4-6f3e7586715c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ba7be24b-8fdf-4dea-ab67-81fad5719b1c"
        },
        "item": {
          "id": "e3d26750-b5ea-4e3d-87c9-f0bdade9322b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dcf05005-4b52-4630-b557-d578dc8d8fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e909f78f-0f86-4eee-94d5-da77e3a1e83b",
        "cursor": {
          "ref": "29f6c9d4-baf9-4d50-b2fc-5c2b15f6c92d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "39304e02-8805-42da-9894-77f42eb86534"
        },
        "item": {
          "id": "e909f78f-0f86-4eee-94d5-da77e3a1e83b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6896f047-a92a-4d96-99c3-e2fb7dc54a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cea5d27-b49b-474c-a4b8-a8fdfd23a856",
        "cursor": {
          "ref": "a08014d6-7e84-41be-99a1-08860abf7615",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5dc46ee-d2a7-4632-b876-fbff744d3386"
        },
        "item": {
          "id": "2cea5d27-b49b-474c-a4b8-a8fdfd23a856",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a2a4de90-3c58-49a9-a4d4-c6a8f8ecb4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d9a47e-b612-4d30-83cf-8b398d695b67",
        "cursor": {
          "ref": "5662356b-2b54-45c7-b5e7-7d18fd1e4381",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "20655a46-8bc5-446f-9696-cbb373525932"
        },
        "item": {
          "id": "70d9a47e-b612-4d30-83cf-8b398d695b67",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5779e4c1-7c8f-42ab-85fc-0f3578d72874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb64d17b-87be-41f9-878f-ed82ba8df4cc",
        "cursor": {
          "ref": "bfeefb29-4983-4529-9fad-658e44bb22f6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0ce84749-e74a-46d2-9437-17adba1b76a5"
        },
        "item": {
          "id": "bb64d17b-87be-41f9-878f-ed82ba8df4cc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d3501fa8-8f8a-4197-ad0d-2af376192177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23a3d09-5f03-4b9e-a894-f432c3586deb",
        "cursor": {
          "ref": "4eec3456-f67a-447b-a38b-f9ef322470f4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f8035d81-fa12-4f67-8ea0-bd53fe11ccc3"
        },
        "item": {
          "id": "f23a3d09-5f03-4b9e-a894-f432c3586deb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "69b4e004-fb48-4793-9031-37a69d5f6e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814d517f-7adf-4e03-b9ac-074c70770ec7",
        "cursor": {
          "ref": "1ff86e9d-c2b5-4576-8a49-4d92cc1ae84d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "259afdb1-64ee-4913-bacd-d6c5370b92ea"
        },
        "item": {
          "id": "814d517f-7adf-4e03-b9ac-074c70770ec7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eed883d2-22d5-4789-9765-d2d215399a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71145a06-c194-4849-80e7-3ffff723b90e",
        "cursor": {
          "ref": "f5f25dba-da05-4a70-a09c-bded17d2658a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3df583ad-b0f2-4ead-aa0e-ac0b1762a8ac"
        },
        "item": {
          "id": "71145a06-c194-4849-80e7-3ffff723b90e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2a67f3e5-aac6-435e-bb58-e2baddb916ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86adfbc-36d5-4ab8-af8e-c97fc412e04b",
        "cursor": {
          "ref": "eceeadb6-1ac4-4aa6-811f-a2de3dfc6238",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "699788b9-bcce-409e-898e-1c85a25a09a3"
        },
        "item": {
          "id": "f86adfbc-36d5-4ab8-af8e-c97fc412e04b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dde76e0c-14a1-4ef4-a701-cf1034c49847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b933e6-599e-4874-8535-dc1cf75e9c86",
        "cursor": {
          "ref": "b74bde94-ef7b-479b-a28d-9d8f5074f9dd",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "92ce2413-92af-4886-9352-1e8e26eb05da"
        },
        "item": {
          "id": "20b933e6-599e-4874-8535-dc1cf75e9c86",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b62cbfa8-a9e4-4b3b-8e14-4b5c558f74c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fab901-5c9b-4964-b7da-556f7ea6b095",
        "cursor": {
          "ref": "f237be9d-df4d-4da9-9f84-039da4acee25",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "35f0d50d-9eef-4d8f-aa6f-548c9a257d82"
        },
        "item": {
          "id": "c7fab901-5c9b-4964-b7da-556f7ea6b095",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "18bc4f2f-6a9c-4545-a88f-ec9f0e1fda24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9946b246-666b-4dbe-8dbf-bfeb83fb1750",
        "cursor": {
          "ref": "920a4f12-9fa2-43b4-be5b-c1f778b70fb7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d315f1cb-1e45-40af-8add-ff6a8b209513"
        },
        "item": {
          "id": "9946b246-666b-4dbe-8dbf-bfeb83fb1750",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "82a61497-ca5b-49eb-a424-7d1de35361a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a132e0d-8d4b-42ed-98b9-16a095f711f5",
        "cursor": {
          "ref": "4691d812-423f-406e-a8a3-4b59bd8d949f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7bcf0d54-6e6f-484b-9013-f9a42d1b2ed9"
        },
        "item": {
          "id": "6a132e0d-8d4b-42ed-98b9-16a095f711f5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5a55bb70-5e8f-469b-affa-4f364470677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd900c8-7227-4939-8f3b-92dfa2521eca",
        "cursor": {
          "ref": "aaa4ca05-9956-4b56-85ff-f05a0f6e2e55",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bf97235a-3216-4305-b219-26dae73f9eda"
        },
        "item": {
          "id": "8fd900c8-7227-4939-8f3b-92dfa2521eca",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "653dc303-b6c7-49a8-b7aa-9a4e288b2e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ef8a23-019b-44f3-b162-1604141ebbb6",
        "cursor": {
          "ref": "24c762a8-c6cb-4ac4-9404-bc2ebb681a20",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "23544fe2-59dc-4662-8efb-e48f5e3a5e10"
        },
        "item": {
          "id": "33ef8a23-019b-44f3-b162-1604141ebbb6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7d5fc90a-db9f-4bf7-b299-df053f2a3214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1452cc-c8e4-4510-a0ec-7bd6f0e1cf05",
        "cursor": {
          "ref": "f8386491-1619-4aff-833c-59b8c38ef0e5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2341fddc-bb85-4406-8700-70444e8ae6d6"
        },
        "item": {
          "id": "dd1452cc-c8e4-4510-a0ec-7bd6f0e1cf05",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6972ac6b-2b96-4300-b0b3-2f5ec3614fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ac93f-2d9b-40c6-9707-b35f3ed330a3",
        "cursor": {
          "ref": "b44c9495-f1cc-46ad-bbda-dbd295428d55",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b0630523-877a-42dd-bb84-be8240e7d2e9"
        },
        "item": {
          "id": "482ac93f-2d9b-40c6-9707-b35f3ed330a3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "51826676-054e-4348-9388-6283c94cb2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9fc002-e2a8-413c-9aa7-bd0b0cba6dc8",
        "cursor": {
          "ref": "af39fe7a-f646-44cc-b64b-3b7ca789d9ce",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9d96b1e0-eb88-46f8-897c-39851b9d1527"
        },
        "item": {
          "id": "6a9fc002-e2a8-413c-9aa7-bd0b0cba6dc8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "79121356-86d5-4716-99c2-2e7172dd6adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c4be60-ad39-47fc-9c12-87c95f1f862f",
        "cursor": {
          "ref": "39a9a67b-823c-4bef-b935-69651cf86131",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "777431ac-daf6-49ae-8c9c-421dd23a905b"
        },
        "item": {
          "id": "78c4be60-ad39-47fc-9c12-87c95f1f862f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "61efc250-2d94-4046-95dc-256d7d658294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec79d21-a8ab-4074-81a2-a55fc45a01c0",
        "cursor": {
          "ref": "df3239fe-aff7-4a23-a555-59e5019249fc",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2b3f7595-26c8-4a96-a427-07864ef7d8b8"
        },
        "item": {
          "id": "fec79d21-a8ab-4074-81a2-a55fc45a01c0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f5de5166-4c93-4dd5-8d33-6febdd7f8fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b124696-9abf-4d75-8308-48935115cfac",
        "cursor": {
          "ref": "0a3c19bb-57a0-4c70-8960-a6515d7bbbd8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "29cc3184-4e3a-4dc6-b464-89c754d27b58"
        },
        "item": {
          "id": "2b124696-9abf-4d75-8308-48935115cfac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "defb90a2-c39f-4303-8886-179dede650f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa36037-f75a-4cd1-b4af-59f0970223ca",
        "cursor": {
          "ref": "3d237c55-3ca6-4ccb-a3a9-efe558c1e0d2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2f65ba66-f3bf-4d59-be6d-ed62425ae6bb"
        },
        "item": {
          "id": "8fa36037-f75a-4cd1-b4af-59f0970223ca",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "91678122-2510-420c-8480-b087bee95571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb48abde-5a8e-4981-bd89-f2f005aecbc2",
        "cursor": {
          "ref": "9f8043a1-643a-41eb-a123-25270bcc9d17",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2e0e4f37-1003-48e9-879d-3b954a3fac29"
        },
        "item": {
          "id": "bb48abde-5a8e-4981-bd89-f2f005aecbc2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d4071f59-74ac-479e-a7f2-2c4da029f46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8bf5ec-1dca-4e49-8392-69b2e1d4bfcf",
        "cursor": {
          "ref": "90b0aac2-79a0-4fdc-a044-64bf8a888ba4",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "27273067-566c-4336-8c58-ea7dc1d986fa"
        },
        "item": {
          "id": "fc8bf5ec-1dca-4e49-8392-69b2e1d4bfcf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b3219606-6054-4ba7-8dcb-0ccc2323a4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0507f0-dc71-4a8c-a54f-eedde4aa482f",
        "cursor": {
          "ref": "67ada8d0-8aa8-4bbf-99b5-b05802473e1e",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "128aa768-2eb5-474b-a252-8e8569ba3e9a"
        },
        "item": {
          "id": "bf0507f0-dc71-4a8c-a54f-eedde4aa482f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "62a60215-ddd0-4dd4-8538-6f93cd7433f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb63e44-4208-4bf1-8e9c-1abec4f6056a",
        "cursor": {
          "ref": "01c3758b-998c-4462-ab1a-a0fe2c548b86",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0588a476-1d6e-4e15-a262-d2abc4e2d3a7"
        },
        "item": {
          "id": "2cb63e44-4208-4bf1-8e9c-1abec4f6056a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a0058eea-199d-4b9f-bf6e-2472133045d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95e8ada-8f35-498b-b49f-08d0e13fe8a4",
        "cursor": {
          "ref": "7d330848-f4f3-46fb-b08d-ec860480e3ce",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0609b036-3775-4203-990b-648106267483"
        },
        "item": {
          "id": "d95e8ada-8f35-498b-b49f-08d0e13fe8a4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0862846e-981b-4019-9562-4b9039c262e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d775d9-90a4-480f-8052-381c2c66dc54",
        "cursor": {
          "ref": "9d874948-dfcc-4d49-bd67-1272ffe799b1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1e0de0f3-07a7-42ee-9ca3-63ec3f1ecd52"
        },
        "item": {
          "id": "b3d775d9-90a4-480f-8052-381c2c66dc54",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "440b29c9-078a-4067-92be-a5ee09746276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6815ae3a-13df-446c-86a0-03b2081db37e",
        "cursor": {
          "ref": "b41a33ca-60d3-4c7b-9ac6-2d4f8410a39d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d2952a9d-822b-43ee-b2fb-89ed58a0b021"
        },
        "item": {
          "id": "6815ae3a-13df-446c-86a0-03b2081db37e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "28809366-70cd-4fac-8272-161ac6642218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7652242-3999-4e8e-bd58-4442c2cf0cf6",
        "cursor": {
          "ref": "051d5db1-e20e-4123-82d3-c0db0dc3072c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "22f7bcd5-b1c9-475d-814a-34213baedf9b"
        },
        "item": {
          "id": "f7652242-3999-4e8e-bd58-4442c2cf0cf6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "43f29749-4bc4-48d5-8149-04bca04c452d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b0f561-8d70-4bc5-a347-bf48356659ac",
        "cursor": {
          "ref": "eb102b51-0fac-41c2-9120-693d5a515f8b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d122aaa9-02b3-4210-869a-829a6b18050a"
        },
        "item": {
          "id": "a7b0f561-8d70-4bc5-a347-bf48356659ac",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "504fc796-e177-4aad-99f7-629024327168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e08cd2d-e1cd-486d-9c60-253d77398ef4",
        "cursor": {
          "ref": "1eac74a4-54bd-46b8-99ba-b45be9f87719",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0a8a8229-d064-404d-b984-0063a8a68d88"
        },
        "item": {
          "id": "7e08cd2d-e1cd-486d-9c60-253d77398ef4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d8839ec3-7bea-492c-98cb-09bad21138c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efce1e9-efa1-4216-9163-8bb6f64b595e",
        "cursor": {
          "ref": "6d826993-64d0-41e3-befb-3de79357d386",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e2f878b4-5890-4d4b-b43b-29cec8dc2424"
        },
        "item": {
          "id": "2efce1e9-efa1-4216-9163-8bb6f64b595e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7f365bb4-37f3-4263-ae3f-1737761dbadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd5d8c6-560a-4fea-a762-bbe600b2dbe3",
        "cursor": {
          "ref": "4afdbff1-a05e-490c-a360-c6d883c38ca2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a9be7141-12be-4442-a045-c9853bfb9e43"
        },
        "item": {
          "id": "cdd5d8c6-560a-4fea-a762-bbe600b2dbe3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4a74a849-0b68-459d-8ea7-b73e4327b55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a188ef84-1225-413c-a326-3527792ed114",
        "cursor": {
          "ref": "e4657a88-2a3d-4f1d-86ef-6f10131cd6a3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c8b3f69a-1848-4167-801b-6da82632a4e2"
        },
        "item": {
          "id": "a188ef84-1225-413c-a326-3527792ed114",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c3850ead-686b-450b-8fb8-6481d4dee7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff19c736-6481-47bd-9edd-662a214d1716",
        "cursor": {
          "ref": "e2612120-f909-405f-a3af-168a96180ca3",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e29d3d45-5604-4474-8d3f-582cc8aca57e"
        },
        "item": {
          "id": "ff19c736-6481-47bd-9edd-662a214d1716",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ab0210b6-d55c-4a56-b18d-c08d7b38f4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbc5c5c-ac16-43a6-890b-14ed6bb58d1d",
        "cursor": {
          "ref": "85c2e803-04fa-4ca9-a642-0aaaa068c5c3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "be24a9f9-6387-4507-a7ee-d2fd574ebc5f"
        },
        "item": {
          "id": "5fbc5c5c-ac16-43a6-890b-14ed6bb58d1d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4edf8850-8682-4222-bdb6-3bc8d5f36440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9417e446-8850-4769-8031-02ab4a501ca8",
        "cursor": {
          "ref": "c7b34405-57a6-4df1-811a-7952df428b0d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ee9c2ec7-8f9c-447d-aef6-3255cf7271ad"
        },
        "item": {
          "id": "9417e446-8850-4769-8031-02ab4a501ca8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "55c6b0fc-8ee8-4384-aaa0-30f7f18fa847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb3abe3-037b-49ec-9191-f7f5201cb5f2",
        "cursor": {
          "ref": "3730efe7-7ba4-49fe-ad18-17cc532435f0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "06d2efed-d935-4b8c-859a-f0f0ef3ba3fb"
        },
        "item": {
          "id": "cbb3abe3-037b-49ec-9191-f7f5201cb5f2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "45c7bd96-fc6b-4b92-b633-602b58df3c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7e7dc5-a760-48eb-9e09-de61df885093",
        "cursor": {
          "ref": "863d65af-2205-4b6b-ab13-fb67d9230be9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5259f5f9-42f0-4dee-8fea-386a976717ef"
        },
        "item": {
          "id": "6d7e7dc5-a760-48eb-9e09-de61df885093",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "67bf0686-8265-48c1-98f0-c258973e3d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a295075d-8d4d-4500-9afc-81aa2ecd16c1",
        "cursor": {
          "ref": "9a1703d4-713c-4dda-b8ec-2439c0c4ce5e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "81d85907-b4ed-433a-b22e-2986e9345744"
        },
        "item": {
          "id": "a295075d-8d4d-4500-9afc-81aa2ecd16c1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5f535be1-013b-46df-832b-bb01f6a1cbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63a6b96-c29b-4c3d-806b-19313cc7250c",
        "cursor": {
          "ref": "bcfff1b7-7797-4d69-80e0-0d2ffcaca6f7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1859a16c-72f9-4d1e-a4ba-40048712e0d4"
        },
        "item": {
          "id": "c63a6b96-c29b-4c3d-806b-19313cc7250c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "feda199d-135e-4f96-8ea3-8bd125d3e29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa645f9-866b-4860-b8eb-46a56e1d0588",
        "cursor": {
          "ref": "30393686-f9da-4e39-8591-353e3d726459",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ce5b33d9-d090-4252-8c5a-4f06edb77dfd"
        },
        "item": {
          "id": "efa645f9-866b-4860-b8eb-46a56e1d0588",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "939d0cc1-0672-4160-af4c-74aef0db7a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb45c1e-f99b-4b80-86c6-c4e61284e262",
        "cursor": {
          "ref": "733349dd-0786-46c5-9eeb-6e1ed7a4c1a0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "afc24af6-7bd3-479f-bf6c-f2336a74ee05"
        },
        "item": {
          "id": "0bb45c1e-f99b-4b80-86c6-c4e61284e262",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b2f5ea79-af88-4bf9-a825-c0c3258da86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aad5744-c514-47bd-bb92-e07c508ecd7c",
        "cursor": {
          "ref": "447b00b2-7feb-4911-88d1-bfb6b0adac2a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0dcaaff1-1347-44dd-bb42-b73b04ca2c94"
        },
        "item": {
          "id": "4aad5744-c514-47bd-bb92-e07c508ecd7c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d4341fe7-80dd-4f81-b7aa-113aa0f7a144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92fde83-32c3-401c-9d83-ebcb772cd564",
        "cursor": {
          "ref": "1c9f9620-9ea1-4863-b949-cc136011ee6f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f1c70b75-87e7-4867-8644-507a080f496f"
        },
        "item": {
          "id": "a92fde83-32c3-401c-9d83-ebcb772cd564",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ddb88cdb-1570-4561-88d5-1bea49744f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aa38a7-46cb-4ed5-b14d-45c174121042",
        "cursor": {
          "ref": "88c3dd54-e8db-4876-88c4-50ea3c123cb1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "19b2feff-f5db-4dc9-bc24-86f17ae18887"
        },
        "item": {
          "id": "d3aa38a7-46cb-4ed5-b14d-45c174121042",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "67169f9c-7677-4518-87fd-f02ed2eb9e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963f0525-a4cf-43ca-8aaf-7721589b3ea3",
        "cursor": {
          "ref": "fda9f862-eed1-4aea-b5ff-0f5093a733ca",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "636c2d1d-79c8-476b-8685-f6f84c4f3e55"
        },
        "item": {
          "id": "963f0525-a4cf-43ca-8aaf-7721589b3ea3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4787df82-8e46-4d69-b982-c0fb1af1c0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02469ff-1a73-4f4e-a246-e9e1f0572480",
        "cursor": {
          "ref": "e7825a67-5d01-40a1-b53f-f8e81d25d1dc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fc2efd6d-0eeb-4fb6-9b02-af1b5ae098b1"
        },
        "item": {
          "id": "c02469ff-1a73-4f4e-a246-e9e1f0572480",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b6236db7-3b36-433c-a7f9-39cfef0c853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb5a12a-bb93-46b2-ab8c-208e76646143",
        "cursor": {
          "ref": "680f45bf-4ac8-48bf-8a09-7773e16f4372",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "52873757-7aa0-4f14-89b7-52bf5643df9c"
        },
        "item": {
          "id": "bdb5a12a-bb93-46b2-ab8c-208e76646143",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f6d61b5f-7bde-4d89-843a-8946f5224698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79577b4-04f4-414f-89ad-944f665a0478",
        "cursor": {
          "ref": "4929d517-113e-4b9a-a000-7fffa1a43bd3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "82856f2c-be51-4863-88e3-6a05490eb204"
        },
        "item": {
          "id": "a79577b4-04f4-414f-89ad-944f665a0478",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "93afdad9-f939-4f58-aa24-ceb15c703dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab86ef-dc4c-4133-8421-71f8e9bfa703",
        "cursor": {
          "ref": "e0f0e0a6-1795-457d-95ef-6eede3b924a9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d6f22a7d-5bc6-419e-b3ab-3631db030e8a"
        },
        "item": {
          "id": "e6ab86ef-dc4c-4133-8421-71f8e9bfa703",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "89ad6281-f6f7-40b4-ab88-1b7b63a64335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75da73e6-e440-404e-a3e1-d93c59ceec92",
        "cursor": {
          "ref": "263e97d5-35bc-4d8d-aa77-3d5d2ee50542",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4f8328f6-67de-45de-9bf7-0912da50a644"
        },
        "item": {
          "id": "75da73e6-e440-404e-a3e1-d93c59ceec92",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "95151c7c-cf1e-467b-bc53-dec0d82021f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bd5868-9bd6-422e-8486-689bc71908fa",
        "cursor": {
          "ref": "0238a44c-173e-4a3e-890f-d5fc0b9284a9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "36d80b1a-cd6b-4733-8257-b20e125584d8"
        },
        "item": {
          "id": "35bd5868-9bd6-422e-8486-689bc71908fa",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1010d52e-f64c-4054-89aa-1c55f9ceac1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13bd219-ecf4-4257-9e90-307f03db914d",
        "cursor": {
          "ref": "daafce32-2c0b-43b7-97a6-c28489b73d8e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "76497464-9143-4a13-97e7-f666b2eaa5bf"
        },
        "item": {
          "id": "c13bd219-ecf4-4257-9e90-307f03db914d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6bf585cb-126b-47df-afcc-30f775162446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db59ce2-e51f-4196-8fe1-8fd70f6b15ba",
        "cursor": {
          "ref": "c63d8b04-677f-449e-bacb-2db362513dfa",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9aee4491-1c19-4c18-8d28-771caf58da90"
        },
        "item": {
          "id": "7db59ce2-e51f-4196-8fe1-8fd70f6b15ba",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8027878-6380-436a-aff3-259f3a5e62c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26886c5-a42c-4771-9263-2cff5d72a18c",
        "cursor": {
          "ref": "8072dbd5-4fb8-4e1d-909f-4896fa9bf44b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "542fdbc7-0dee-400f-b5ae-b4bcf74142af"
        },
        "item": {
          "id": "f26886c5-a42c-4771-9263-2cff5d72a18c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2310de5d-43b2-4036-929b-757785f03231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e965f4-ff6f-4679-a344-599450d16e15",
        "cursor": {
          "ref": "78b5fe70-b89a-44e5-8131-0ccd6e252d61",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6f39e1c9-0ab7-4596-90b5-5d6d89a319e6"
        },
        "item": {
          "id": "f7e965f4-ff6f-4679-a344-599450d16e15",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8cefe1a2-94f0-4e98-80c9-0a4972c1d4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167308c1-e66e-496f-989b-56b97090c98a",
        "cursor": {
          "ref": "821bb693-d37f-4a37-a77c-6f6e87bc3a5b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "12c770e5-fe15-4a48-b698-1036ff68adc9"
        },
        "item": {
          "id": "167308c1-e66e-496f-989b-56b97090c98a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "72085c51-1dd6-4415-832b-a863042d19c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab42086d-6c43-42f1-93a4-0d504c48ce73",
        "cursor": {
          "ref": "b1d1c31a-dbd1-4955-98a0-49a9aa43d0e4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7cced67d-a2aa-4c79-93c5-713d5b723cb4"
        },
        "item": {
          "id": "ab42086d-6c43-42f1-93a4-0d504c48ce73",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "42c7053f-7192-45fc-91c3-ee4b540ac87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8a7af8-d6dc-408c-8d15-4d0cb81b1c50",
        "cursor": {
          "ref": "077dce0d-7c7a-4943-baac-9cd3f37e6db4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f6f22ac4-c916-4988-a030-a114c28e2214"
        },
        "item": {
          "id": "bc8a7af8-d6dc-408c-8d15-4d0cb81b1c50",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8967eed7-69ea-4fce-9cd0-513bc4302fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0eefadf-9341-478d-be3f-6f39f372caa4",
        "cursor": {
          "ref": "e1443666-7867-4620-93f8-4631fe844ab1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3ee7577c-6950-4dfb-a021-263052aed0c9"
        },
        "item": {
          "id": "e0eefadf-9341-478d-be3f-6f39f372caa4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ddf567f0-2330-4d16-83e6-c0deed359856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b24eae-c51d-4171-9077-8aaece3a79b7",
        "cursor": {
          "ref": "c888b1b9-7bb0-4837-8006-6b67c8788ae3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "28f8cb87-4a2d-4e8f-ba5d-bb012390c466"
        },
        "item": {
          "id": "90b24eae-c51d-4171-9077-8aaece3a79b7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f8d53dca-3f07-4a00-b3ea-f3e8a806021d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc45fff-6a83-4c01-8d18-d1cfe9094151",
        "cursor": {
          "ref": "3a5410bb-e875-4ae9-88ca-cfe99a5fc7d4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cc92177b-bbaa-471b-982a-ca550594c96f"
        },
        "item": {
          "id": "6fc45fff-6a83-4c01-8d18-d1cfe9094151",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b0698bae-5b3d-47e5-a4a8-97ad8d068420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de00bc11-b636-4270-8a80-4673c929638a",
        "cursor": {
          "ref": "a1af4a7f-a4cd-4221-abb1-5a0738a5fde4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3c589589-e9e4-49a5-a533-6a4b9cb869ef"
        },
        "item": {
          "id": "de00bc11-b636-4270-8a80-4673c929638a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4038abf0-adfb-4a5c-8bf8-de661d530050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bd2c7c-05a6-46af-a5db-7bf7d8a4d952",
        "cursor": {
          "ref": "bbee4bdd-1c0a-4f11-a579-9e7130303ecf",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "218c26af-3608-45ec-885a-8f3c3d33014f"
        },
        "item": {
          "id": "69bd2c7c-05a6-46af-a5db-7bf7d8a4d952",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b1c237fa-0378-468e-bf68-8444c5056b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d65f5fb-a98e-4a82-af74-2638d3e9a0af",
        "cursor": {
          "ref": "b6158ddc-53bc-4bbf-a32f-005fb9541f0e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a83ccb4d-5c52-440a-9d1f-2c58010bfe06"
        },
        "item": {
          "id": "3d65f5fb-a98e-4a82-af74-2638d3e9a0af",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ef41cf32-7a00-4efc-92d1-643ccecd547b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef35f21-62f0-4168-8875-358e40d2f4e4",
        "cursor": {
          "ref": "01e778e6-4763-4c2c-9405-b66a4c44a247",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4cad4be3-caa2-4361-a348-978d38d09708"
        },
        "item": {
          "id": "7ef35f21-62f0-4168-8875-358e40d2f4e4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1e5898b4-26a1-4e14-bb39-78a9ce2a2d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4501ae-2de4-43cc-8794-100aa20807bc",
        "cursor": {
          "ref": "ed96b88f-8e6a-44a1-93b7-baea2da95c59",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5e7759d9-dbb3-41ab-b07e-dfa68942e3f8"
        },
        "item": {
          "id": "ba4501ae-2de4-43cc-8794-100aa20807bc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "235270ee-1239-49ad-8211-96ae3b4b9db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854f14b6-9cca-4bd3-88d4-22a82f607035",
        "cursor": {
          "ref": "1af24e75-1871-4580-af18-fe5fce0d6303",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f27aca28-bd5e-447e-8549-7701d49020fd"
        },
        "item": {
          "id": "854f14b6-9cca-4bd3-88d4-22a82f607035",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9273474c-951b-4cf6-a478-d53e2463f214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d5f626-4284-4dd1-8792-c2fa15cb6d13",
        "cursor": {
          "ref": "aa7e8283-6d3b-435f-bc41-c80044a9fa39",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a1834a69-a253-46f5-ab47-cced49cdc780"
        },
        "item": {
          "id": "33d5f626-4284-4dd1-8792-c2fa15cb6d13",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1b43810d-28ec-4632-bd93-31e097ba6927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a110a981-9d6f-4136-9d56-48262398794d",
        "cursor": {
          "ref": "fd7b814c-c857-4425-af7c-864a12432c22",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bfb012f0-781b-45c0-8f6c-2a521cca871e"
        },
        "item": {
          "id": "a110a981-9d6f-4136-9d56-48262398794d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bd71ce69-1e05-4340-8074-87c6ca27346c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6e1f2f-e9d2-4135-8d0f-c3c116c59130",
        "cursor": {
          "ref": "3b600376-fa41-473f-bcb3-c54a73647a8e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d0911ccb-a0b4-4be8-b630-41d05e88a7cd"
        },
        "item": {
          "id": "2a6e1f2f-e9d2-4135-8d0f-c3c116c59130",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "db22026b-5658-424e-b277-e0d974cc3145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06d0fc3-05d1-4c1c-abb9-caa353bb507d",
        "cursor": {
          "ref": "1343f497-39d1-4548-97e4-51749fc01481",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "36d4a634-8f5f-4027-8142-cc363b8d87e8"
        },
        "item": {
          "id": "c06d0fc3-05d1-4c1c-abb9-caa353bb507d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8d248607-79d8-46a1-8c9a-fa0eb8035ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5eca468-7668-406d-8c07-c95d1e91530b",
        "cursor": {
          "ref": "e0697c11-b422-4dd2-ae32-3cc388ed204e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "12ad94f8-1688-40ed-bfb3-2b412ed068df"
        },
        "item": {
          "id": "f5eca468-7668-406d-8c07-c95d1e91530b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "839bc7a6-5f01-4f18-abb0-2d6c53932c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa36f129-d162-4eeb-b437-547f72aecafc",
        "cursor": {
          "ref": "1f0ea26c-bb49-48cb-9e5d-44731c9bfbb4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3f4db385-e6a0-411a-92ec-c63e25a2d311"
        },
        "item": {
          "id": "fa36f129-d162-4eeb-b437-547f72aecafc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aae10ac4-86e9-4144-bee5-ad46f3fb1d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1482ce-0466-418d-b165-c710837f665c",
        "cursor": {
          "ref": "2e6f5fc6-d301-4301-a265-e0323e1a3e4e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dd0ed829-3e18-4ea8-9605-de6bf75387c6"
        },
        "item": {
          "id": "5c1482ce-0466-418d-b165-c710837f665c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "07097364-ef76-486e-9030-97902bcc17ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0bee78-828b-4939-9f49-d13b2021b3aa",
        "cursor": {
          "ref": "a5367b62-67b1-4606-9221-7268dede7cac",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "99acf0d8-acab-4466-a8f7-eaef3e74a013"
        },
        "item": {
          "id": "0d0bee78-828b-4939-9f49-d13b2021b3aa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e8258776-8701-4df2-9e2c-de97ab377070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0012217-fb4f-4185-8953-d36accb917b6",
        "cursor": {
          "ref": "d815f38d-e907-4578-9df5-699186b7e012",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ec8c11d7-0f86-4769-966e-097d0fc49c46"
        },
        "item": {
          "id": "e0012217-fb4f-4185-8953-d36accb917b6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b75341ad-e141-4b7c-84bc-fe48e0abb6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbaaf82-fa3b-475d-80f7-c35aeb21638d",
        "cursor": {
          "ref": "55b80596-bdd3-4340-a3f3-cc7494c617eb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ff11fdd7-06d7-4921-900b-fa229db3ad58"
        },
        "item": {
          "id": "9fbaaf82-fa3b-475d-80f7-c35aeb21638d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a386113b-02eb-4305-89f3-94e6b7d7176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a726f96-da70-4607-8aae-426767c650c0",
        "cursor": {
          "ref": "daa2ac8c-9414-4d4b-941a-0c031cc3f36b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d8d495ed-8461-44ac-86b5-96af9eff3ab5"
        },
        "item": {
          "id": "8a726f96-da70-4607-8aae-426767c650c0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ead1d5db-c116-4ddf-a43e-370b695eb9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ae73f0-f3e6-45af-b83d-928c3501a8e6",
        "cursor": {
          "ref": "32985c21-c495-45a1-baf6-f707a23eca54",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "81c18db1-7450-4571-8af0-b3f3d49ce043"
        },
        "item": {
          "id": "50ae73f0-f3e6-45af-b83d-928c3501a8e6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "de2a65fe-5e0d-4b12-92ff-f87d4af8aea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76126ee-adce-49c5-a72d-dd7c049572d2",
        "cursor": {
          "ref": "f58cd96b-561d-4ba1-b8d5-c2ff0ebfbf61",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d99b5004-55d1-4b82-99e8-1c7d6d5f0ed9"
        },
        "item": {
          "id": "e76126ee-adce-49c5-a72d-dd7c049572d2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f413a416-5481-4ada-b804-d91963a074da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b360f6f8-b75c-4d95-bf63-9ca58581b63d",
        "cursor": {
          "ref": "a556946f-1aac-47ce-bf9d-c022fe96d260",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "317d4ba1-873e-48b8-8a5e-208be687cab5"
        },
        "item": {
          "id": "b360f6f8-b75c-4d95-bf63-9ca58581b63d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e54eb3ef-b35a-44cd-bb11-fd3c6c22db4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42348162-be62-42fa-9ac6-73e62bccb9ee",
        "cursor": {
          "ref": "6df4a2dd-c255-4ea6-835a-3e683c8584a3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b0e9617f-00a1-4794-bab2-91c4ae68d668"
        },
        "item": {
          "id": "42348162-be62-42fa-9ac6-73e62bccb9ee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2ae05f4b-147a-4082-a784-0e9a6eec64c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc345f7-182d-4a42-95e5-68fb09fe3412",
        "cursor": {
          "ref": "13528e55-d4c7-4203-beb6-029a0c48f3d5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0729cd8c-d673-4dc2-8858-7a408c314130"
        },
        "item": {
          "id": "6dc345f7-182d-4a42-95e5-68fb09fe3412",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e7ffe92f-3cd2-4deb-82fd-ec11334d8431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c26989a-1dbd-4e15-b03b-a32491311ebc",
        "cursor": {
          "ref": "93949548-00cf-403c-8bd1-1ca8b77fad45",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "81f629fc-ad93-4178-beae-b49a8a7ef82d"
        },
        "item": {
          "id": "1c26989a-1dbd-4e15-b03b-a32491311ebc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "605b1f70-e9e0-4806-9690-cb5c52794400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723ab4e9-0c4b-4720-8f8f-b085c71ac24a",
        "cursor": {
          "ref": "a0b41f81-5af6-4f82-8bdb-5129ed550848",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "721f63fc-7dfe-404b-87df-6d81a7d1022d"
        },
        "item": {
          "id": "723ab4e9-0c4b-4720-8f8f-b085c71ac24a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ffcb7b17-7892-421a-b205-bd52c31c271c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c981e7-d93a-4786-9f27-e5acde937e73",
        "cursor": {
          "ref": "dd2dbb0f-8e28-4b02-b5bc-521c57da0018",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b87586b5-c97a-4965-b34a-173fd5ced0b5"
        },
        "item": {
          "id": "d2c981e7-d93a-4786-9f27-e5acde937e73",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2c147293-63b1-41d2-95a6-b1846627935b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062e5749-4d2d-4dde-a6d7-9114d1e2f161",
        "cursor": {
          "ref": "0dc35734-bf7c-4790-a958-9ae901b68e63",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c95060c2-d2ba-476f-ad3e-4a4509621f00"
        },
        "item": {
          "id": "062e5749-4d2d-4dde-a6d7-9114d1e2f161",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "453d54ca-f25f-47a3-99c8-71704ad90b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33b2a65-214e-4019-97d7-c14ab8aecd75",
        "cursor": {
          "ref": "c0d53ba3-2002-4cdd-ad07-052d5e0cc935",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "13221d12-88ee-4a8b-aab6-fc76b94539ea"
        },
        "item": {
          "id": "c33b2a65-214e-4019-97d7-c14ab8aecd75",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ac3a93db-697e-492b-8351-a541011530e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74016dae-0d54-4625-96f1-7b5ab9e0237f",
        "cursor": {
          "ref": "f230f280-39bf-41e1-bb4d-666dcfd8d82d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "093640a0-4910-4ed2-a67d-f78217f4dd74"
        },
        "item": {
          "id": "74016dae-0d54-4625-96f1-7b5ab9e0237f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d39f9b76-9793-49d9-b6e6-232675854f69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c6015-c8dc-4b69-8028-938d6869450f",
        "cursor": {
          "ref": "6ee75970-cd72-45c8-a373-ec5281882a38",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d7d0e0de-1f8d-4dc9-a1ea-30b48ecb6599"
        },
        "item": {
          "id": "603c6015-c8dc-4b69-8028-938d6869450f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a376b9e-b94f-4e7a-9018-f826973a76a3",
          "status": "OK",
          "code": 200,
          "responseTime": 2059,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2d9cac-904e-40fb-8d21-3c46e9ae26d5",
        "cursor": {
          "ref": "5a43a55e-72a1-4be3-b7e1-2f156ed083a3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "06a749eb-3bf2-43e5-8906-038833b29099"
        },
        "item": {
          "id": "4c2d9cac-904e-40fb-8d21-3c46e9ae26d5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8272004a-8b61-4e40-9258-c17c865f2a43",
          "status": "OK",
          "code": 200,
          "responseTime": 2949,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7cd6b5-3641-4ed2-b586-eaca77c5cff9",
        "cursor": {
          "ref": "fe460d5f-c8c7-484e-a1de-db7f7cf540f3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "72326b98-d03f-46e8-b1f0-d2316eb2dca6"
        },
        "item": {
          "id": "da7cd6b5-3641-4ed2-b586-eaca77c5cff9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "85b5ff92-76b6-4b2b-a127-e8413a4f9ee6",
          "status": "OK",
          "code": 200,
          "responseTime": 2633,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dbb9ad-d443-4eed-9c35-dcd88383bcc7",
        "cursor": {
          "ref": "80519844-d5d4-49cd-ba47-3e940bbb8656",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "83757f49-29e6-4c9d-b56c-6eb0394f8db9"
        },
        "item": {
          "id": "22dbb9ad-d443-4eed-9c35-dcd88383bcc7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ee7657c-255c-4024-8649-fc512e610984",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dbb9ad-d443-4eed-9c35-dcd88383bcc7",
        "cursor": {
          "ref": "80519844-d5d4-49cd-ba47-3e940bbb8656",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "83757f49-29e6-4c9d-b56c-6eb0394f8db9"
        },
        "item": {
          "id": "22dbb9ad-d443-4eed-9c35-dcd88383bcc7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ee7657c-255c-4024-8649-fc512e610984",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77210691-0fc9-4605-b0a1-6aa043ed5325",
        "cursor": {
          "ref": "74ba67b3-2c19-4475-8ece-14f289404098",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3a2f3f7d-ecb5-49a6-965e-30dcbf19a9ba"
        },
        "item": {
          "id": "77210691-0fc9-4605-b0a1-6aa043ed5325",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ae442c8b-5983-4533-a946-be6eada4abe9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce435750-7ff5-4f88-955e-b655ef93f212",
        "cursor": {
          "ref": "0719d12a-477a-41f1-ad81-cb221244cde3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "de23fa4b-adc5-4a4f-94db-51998ad03150"
        },
        "item": {
          "id": "ce435750-7ff5-4f88-955e-b655ef93f212",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9f54a527-3952-400f-9e87-f88de44e87b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}