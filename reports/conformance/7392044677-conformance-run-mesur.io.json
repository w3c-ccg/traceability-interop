{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "12d7a092-c174-45b1-84c8-606aa433a145",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a73e96e1-b3d4-420a-9e82-e1d72b85552a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3002a1a3-7ce7-4b44-aec4-26eb85dc82a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84cac12f-b30d-4bd5-a626-da8814e710bc"
                }
              }
            ]
          },
          {
            "id": "4aee48c9-574d-49b9-b8d9-f116e5ba957d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf2082bd-3ade-46ce-8fb2-2bd3d723d7d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a200a71-e086-4810-aa5f-18a020eb32f0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a84ec49a-e20b-422a-83cb-5d9ed449cd8b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6bab4fe1-8383-49e5-b75a-393831e38a0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e3d2e108-941d-4fe8-99b9-1daeff382080",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72a5db56-f3f1-4a85-b206-f2cf894050d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "524c6f44-ae14-4c15-a092-0128f0285412"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9986ce3-5fdf-4ee7-9445-d985646e7058",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67c7365b-2bd3-479a-8ddc-5097d4df5dd6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a075995-4bef-4858-9404-ee2a90e38489",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94b2f1f5-2856-4f3a-8667-587e43374bf2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0daf0e6a-5fb9-4276-b384-f31ec54d4376",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "13fb876b-6646-4968-983e-120201873e59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "846abe0d-f460-49f4-9b0e-90d5194ee68b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5121bfa7-7837-42dc-aa84-5abfe71dc59b"
            }
          }
        ]
      },
      {
        "id": "c36c665a-71de-40be-90c8-7d225c691f7f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3a590735-4dc8-4b68-9d54-181ddb5457d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf3cd835-789d-4690-a003-fe884f687644",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ea32bbb-eea3-4b41-af1f-9b3190f98899",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28df4181-a0c3-4b43-8bec-f7b0f127f8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "843b6a87-6223-4277-aa36-a7d52b3ed554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d88538-98b6-4ac2-a81a-f367fb3b520d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f64988-c58e-4952-885a-f18a7095fb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77a71973-49bf-44c4-8113-bee6882b1c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e3ea9b-2e8a-4580-ab07-7b2dba92b2ba",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0373c6aa-f632-4ca7-abba-9699184f7b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13a15166-a7da-4116-b7b7-09405820960b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "298a264f-9c55-484c-8486-3fa22b2ee37a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c110572d-59c3-4a42-96b0-138d3a058f4c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5181a69-6094-4a14-aaeb-5daa1fe686d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75efe125-cfd9-4ea6-8f56-e906f8976096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbfd461-b6e1-4029-8b39-bfa1344a7092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450214de-9481-434b-8770-f271cc6dd58d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc70fe86-53b6-4624-8659-ecaebdc863d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52c4c77c-8af0-4293-939b-5fc041cf72e7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb426710-347d-48c5-8057-029a07e2d3c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "63ee17fd-450d-45ea-a6b4-8804c9e04ce4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fce1e06-63b6-4bd5-b4e8-88b7536df944",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5732142e-916d-467c-8d3a-c9ea2e30455b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65468a62-8e58-4ea1-ab0d-ecd924572f45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a34fb4c-2255-481a-997a-9ea831e9ab0c"
            }
          }
        ]
      },
      {
        "id": "b6d511dc-be07-4968-a43e-44277f8d038b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a868b04f-8e7c-414a-8b49-b37c407aab64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b33c7e9f-6bee-4207-ac38-d4a772e044c5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5bcc6278-fb8b-4ae8-ac92-0df17445dfc5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee801b3-d21e-41fb-8c42-387cc6e4e0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23af962-0cdf-4771-b7db-127c29101688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0991062-8973-4f3a-a4e7-0d0df927dc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb23ef8f-3c8b-4dd0-9617-996fdcf564d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f35ac3e-da1b-4e5f-8eca-e5be4c524a3e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654ba5aa-a0e8-4992-bdea-e07930a64ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46250f75-e75d-4418-b365-2719b4d4f3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc590c5-4b18-4f66-a422-7320329dda88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e453377-163f-40c2-99e4-eb1da98bd06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589ec6f2-b51a-45fa-b16c-7cdd1cfc12fc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbaa012-ecbf-4a16-9f40-eac571d6c5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd991b2e-83ef-40fa-b3a6-dcfdd5c6a81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7397e533-5041-46ee-815d-d344b390175a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ad8ee7a-f388-4346-b9ae-dd36fe7f5566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9249f644-0098-45c7-a27d-07ed21a3e13a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cb7971-f28d-4b8a-a850-280973b2ca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbf34aa-a843-4144-9f36-8ebd08fee749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7befaa6-72c8-4b6f-9183-e70d0561c044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60dbc7b8-bf5a-448c-a812-d12d0afdafe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d2975d-5efa-4561-9e79-8b247da5ccf5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5276bf-93dc-464f-bd93-802d67e9c583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c1a572-4595-4ca2-b28c-e535984825cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa17c65e-9e99-4915-ae93-7314117ad1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79b25613-718f-428c-a71f-7c4a5dea066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce556ae0-08ba-4b88-adf6-7b869cc9f13c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05db3f00-4160-4ed8-a497-b37628851751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea41cb5-119b-4add-8a51-d92dbfac9486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0362743e-54e6-4dd2-9744-915c543209f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4ca8d13-33db-4d5b-8842-2391dcdcba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c43b28-5319-4776-8b4d-6282dc07c9e4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec68bb4-fbee-4347-8515-fb2b943e9278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fdae5b-7ee1-44d7-ac41-ef6ad7036c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec897a5-a148-4dab-80dc-3069e98cb876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d3b5296-0326-4981-b21b-d8fb3ded3a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d547d36b-b638-446f-b5ea-dc3b6d2e367a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139f4816-5b21-42e0-bd49-2fd69b0293bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cda086-aa85-4595-ad3d-4c2e62aeb468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd08618-320a-4d5c-94bc-928087a63de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cecbf07-5f50-4491-b70b-764dda189ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2c2452-57f1-4137-b36d-2ad793916233",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f303e165-024e-4a29-a9b5-fc5cba9aaa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79c376b-3a9c-4aef-8727-4240e74eb8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f69c566-8f3b-4a3f-a90c-38665f213a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8391fede-f8d0-4675-9f4b-1f88426cf00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17e8785-e649-4ab2-bb33-fe00bd6277c2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac9ff65-e128-4253-b38b-d6eda51da578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d57c494-6226-4967-9140-46784701c151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ccbd3f-9c1c-429c-b977-bbcdc3a4230c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ea9a905-c0ac-4fdb-838a-3d91382988d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327330d1-6b63-48f6-b6b2-cd737ee61596",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ff7094-73ce-4e90-b5bb-b94589399e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f27914-bb05-4fef-8171-459debdc9327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714cf913-a767-4867-903a-97bcc39cfcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a60b5999-46d0-4fa7-a606-74d3a8a02793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfece617-affa-432f-9ebc-6c890a043c83",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd39367-e89e-4a52-a598-2de24c13fd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfce4d81-4ceb-4b3f-972d-49a13d2cb4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775b8918-b62e-4e9b-9d30-e4174c5bbc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b2b6b34-f336-4a6a-b683-7b1fc95f7151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31445b7d-9490-4587-8612-33309ec8bd01",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caee3add-da82-4b2a-a8d0-9ab341b291b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fef1ab4-7d6a-40a5-95f6-b8104a830c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240ae121-73bf-464f-9b56-688774efd3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e53061e-a7c3-4ac1-bb2b-00fa216903a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0634e6-cb77-4e75-8b0f-368125ad5380",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53464f9a-fa74-4e12-9e4e-faa58e90107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d6eb25-62d8-4d59-b240-5b67f17fe149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc17395-09f5-4c6f-b2de-752f7496c1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6042cb2b-acea-4b9e-95d7-bb2b1093f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b9e320-8a77-4323-818a-16d843b688c8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8b7115-0409-46a4-99fb-eff04084d2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3754880-fa99-4574-9e32-7c873cc54729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924ea48c-adb0-4b4b-b8df-e396ed1f0a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87be314c-21f7-477e-9079-acdf214f602d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81392cb-b17f-4229-ae21-8fb27bf22d4e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40a25a8-9ca6-49be-85a2-3ebbe1c4b3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3115f3a8-4184-4024-8804-4d43a71be250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff1f714-2517-47e6-ac50-a58b2d90dbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2662d386-d7dd-4df7-95ae-8c95aed57aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37eb7c63-807a-4790-ac7d-452a6a4bb621",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5602279-29e8-4722-9568-92a1de755c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c76c1e-edcb-4e07-b8a3-0072d40f2474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f88795-2b7e-4a0e-adf5-086ba5bc9061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "388234bc-f361-4ae8-ba13-21ab439e32b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f0f5b1-a8ab-4ef4-bbf9-c6c43971dd63",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb31bb7-59ab-4fdd-b91e-4c2b07004f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04db2ab7-b8b3-4258-8efa-e334b3e3360b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5383f8fc-8745-4917-ba91-68c481f27e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ef5d24-0a27-4c42-b1c2-633e5ed80f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57fcc16-03b9-4d28-9b18-7088656d0789",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42cc98e-f6c2-45a3-bbe4-42c1e7dd39d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5190785a-6e24-4fc5-945c-1dce231f97ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c697ba4-5400-47a8-a645-91ce75d0ed68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f72f4afe-c290-48e6-a2fb-05f257b4ebc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8726a9a-7558-4185-8455-047fae9f90d9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df5aeba-1991-4dda-b3a8-d676eafa4a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28f5317-5dde-447b-82db-9b852e0f5378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc453406-608c-4fd8-b722-dc43c75a2145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d445ce39-cf30-4138-8b12-1560f2c608ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6f1b0a-b982-4a9a-bcf2-d301546d4869",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02823ad6-1c1c-45c4-8ae2-64baeb3a21f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7381a75b-4b13-483d-a02f-fc0993a250d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44f08bc-cc69-4964-9e88-393160acee4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8916d2c4-570a-4389-aa85-6c9904162e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf48599-3e8e-4b1e-9d98-28aa0b71b53d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb2132e-ebb8-4a1a-9365-f5ab6571d61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225d7e61-94ba-42e6-8ea9-39d3c6d64049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3760df0c-1b98-4904-b139-4d1d028a2568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd43cf41-840e-4da5-b368-e5e7281f7375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52817bc1-644d-4a5d-b30d-4bfe5adc9cd4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00711872-9551-4e6b-97e2-039186253eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3232adb8-21ab-467a-85e5-2e9cc0af659a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5da88c-7efb-4949-88b5-192f39db4246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5128cf3-bfce-447f-8ce8-901698e2bde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fff0e1b-d8f0-4a04-828d-acd763af9264",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adb789e-0ca5-4ce0-a293-93c0dad0cb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9998f81-0681-4ad0-8fc9-82d7d6ecc288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968e9ca3-9abd-48b2-8206-ce1d98e4b026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca59b3ba-ef18-47a2-a4dd-f8259c68446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f357af-16a7-4a6a-973e-cbabafe70ab4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98f6329-d23d-4917-a540-5503c77dab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699413da-4d9b-4226-abe5-8b8fd55c144c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f6f47d-b260-44d1-b26a-235049199965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31aab7c-f7bc-45f3-870f-e76a2117936b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ac6d84-c146-4048-b016-0f3519fb0ff7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96119236-9830-482b-b823-98aef3ff0a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5c0100-0608-463f-92ac-c913dc183224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f653db3-228b-4a06-805a-bcba1df483ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "311b49ec-5055-424f-ab16-cd3bd5aca343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a054d4-901f-483c-85a4-c99a174560ff",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1df7bf8-51c6-4e21-bece-4e3a2af7458f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2b0314-b5f9-4285-8541-9169bb0cf50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce1ed76-91c5-4c15-b5e2-a9ddbad6effe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1351ab-1370-4c06-b4fd-f366ca620419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad469302-064e-4ec3-854f-dc6d69366725",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa7b26d-4f67-4d83-befd-ff0ad56244f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5daf659-60c4-4388-9a36-84c56f8cd57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf0247d-d27c-45d9-be72-ac63b75cf65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4946f404-9478-44aa-a1d9-83e2438f16e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7396fd-6529-4323-9c78-4f7c5b2d0092",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172fbcb5-9daf-4211-bede-74f8b32c7b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4426158-8d5b-4329-9d1a-5a6d698e3fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727d2be2-2ff1-4692-b622-58fa2daa3398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff9146f-d311-4181-9aa3-7475b770603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1467b48-d918-4c6e-ac0c-df2823aa7087",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d19a3b-471c-4747-82c2-2c1e60650639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbef03a-710f-48f1-a07f-a5b3126bf17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e878a0ff-6303-4b42-b46b-e624943006d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "517b732e-7fb4-452a-80c5-4cacc55e6fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd69f649-efb0-48a2-b29c-fa3319d6c7f6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784b6d2e-e90a-4c7b-8138-b9a19e6cd37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e7fe01-9869-4d67-9af1-4063b9b9a8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1d708e-0be5-4058-82d6-4f5359df83c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "853b71ed-9d4b-4197-9117-67c45f08f015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a79ae6-fe0c-4192-a927-1b7b083acf44",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f300fd9-51e0-469b-b194-beef103ff16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5659ecf1-8886-463b-a68a-f054f4da87cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc5aff7-88d7-467d-8feb-df039c3ffb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc26e693-52a6-466e-9510-2707368f80f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84246e2-8a3c-4fe8-8096-a056067cb563",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898fb566-bcc6-4dbf-b84f-a622c26bae16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede248dc-c255-4a51-978e-b69c32235d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b46af6-3ff7-4e5c-9255-e09322b6f1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1fdbc6-e094-443e-a957-c47011055889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38f28d9-6076-44e4-bb67-d9cd82805733",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f3b10d-50ec-44d7-bd64-50c6f1bf1231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615b49ee-3867-4fcb-ae3b-69ce8ed25be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2170f8-d471-48f8-80a6-c57dd8f7858d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e84dc698-8fc6-4430-a708-ac102710c80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453b1dce-dad8-4bfe-b836-891a41a02151",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15ecb19-ab6f-4a7d-af21-856b83d9441d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c6d2b8-26f4-45f6-9ed9-ca253fef5f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570cf537-89d1-4bce-a9af-a82cdeb2502a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "48fac656-bb30-4aea-a460-580aec6d127a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992c908b-3574-48b7-ae74-ddbc92e989eb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082ef66e-dd11-46a1-a89a-8cde269940b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15e39d00-dcd6-4ade-b788-9f1f2bd05b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fdc8c0-be68-4735-881b-281c6dafe8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a22ebda-f155-44f7-937d-1f18979fecb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b992956-e95e-4db0-82a2-9c44a9bfa265",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42017f49-4260-46c6-bd9e-825ef2a110aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756d6df5-3162-4e4b-b4ab-9ec3d5730baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ba214c-41c6-4438-ba4b-186c3357150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d36c4902-23d8-4382-b676-5d7115420c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13d7e18-9b7f-4be4-b5f9-ca1354e4c48e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1912352-c191-481b-b1ce-146caf3ff22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c250ef0b-f6b6-49ad-b697-4aef868c99a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aade00b-ad11-42b6-a63d-2c639f76f383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec255e4-b336-433a-adad-40ac6e7f86db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c863578d-c325-42bf-91ae-c6587bc39aa1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee6fb16-9dac-4cf8-a7c0-95c5667adebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcb5d17-d0eb-4594-ba79-9d5828f7478d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafcb5fd-d1bb-4cc5-8b43-a6137efc2ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddf81c5-2654-467f-8eb0-a02104f1669a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34eb0bfe-3410-4703-bfd9-1d2abf86c8f0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fedaea-c986-4cb0-9f54-422331131e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43072b6-2d3e-4317-9c26-44194c466815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caba9499-949f-4425-90c0-89a42eb441e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba748792-c9f8-403a-afb4-478ea83eb355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ef2364-eef6-4a82-a79a-16189529cf5a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1c7fca-d024-4082-b60e-0bccbf22c5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f76d1d8-7739-4b03-b30e-11aca0f7d5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99da9885-4718-4255-aa13-963a7776fc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9bd2ed-d023-4136-b671-05246f0dffc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982253e5-27af-4bfc-ad3f-88756dd6c490",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd32ccc-0f71-48c7-83cc-e93a02cfe5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c4a626-b393-458b-86e8-877bca161cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ba08a0-deb3-4142-a0fd-98ed5582f0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "82fbd590-627b-49f9-99aa-5f1dd62111f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775471ad-2966-42ff-a723-7ea88a53fd9a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a1aa00-9e54-434d-8058-f5cd5decc792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f78e7f1-e8a4-4783-ae10-6fde80ae153b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741c4992-a391-4b68-9d5e-15d8e03d8e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb81fdf-4426-4c24-8690-35de8b6e2073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da614c72-1eb1-4d60-b605-d5fe207f40ad",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a398ff-6c16-48ee-8cc1-7884be42dd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb763cc-25ff-4e6d-a7cb-4d8fe0b3e053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9908a6a7-7364-4771-828f-1216c2c8a1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0953ba2-321c-4b01-9088-8ee2516b8a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1766fb7a-c534-44b1-96cd-0158130afbc6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85a4bab-81ea-40bf-9cce-e2e2da3f7e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873b42a0-2554-4805-b983-dfcfc42f8d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2b2a97-e09b-41b0-9ddd-c2712d746ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7a0d7a-9901-48bf-91da-349b1122c6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67f2f08-8ef9-41bf-87d2-de13231c647e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16de0d94-6d56-41f9-8c7d-43dafac51fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9ea1ed-4025-4417-ad11-fc221bbb259c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e439d59-8186-4743-9f66-142e8b9c5889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94bbb5e-eb8e-4ae5-a50c-6f4d089eea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099daf3c-305f-41ee-9341-3a90d8736ba5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a195a2-66da-4b03-ae8a-47d9f464e12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1514262-7500-4911-844b-d8aae7b40fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508bf49f-cf6c-4980-9789-c28e0cb863da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2322fc9b-a019-4bf9-a2a1-c6c78f388a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c01821-b65f-4f9f-88f2-8cdbe3742796",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809e8d40-ed17-4139-b291-887fd8f3a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f39a017-7bf0-4edd-b758-2fd6792664b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f577e4-eeb3-497c-b731-792e9b9e0b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34717e39-f70e-47ac-91f8-204a9e200410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfecfbfb-f873-42d3-a1e5-694472c533ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1887705-5025-490c-8ceb-146433a53d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9570a120-c2b8-40e0-8e8d-8a9f022aa988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8b884a-1c2e-4ff2-b4d4-849f050a9f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5fac78-62cb-48d8-838a-6c1f6d5aff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b029ecac-3465-4804-ae93-7aa8dcd6d028",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a95e5ca-e780-4f19-b101-9dcd8f4ff509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7600eb-f489-4c28-80c7-5084275cf52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee507e3-5926-41a3-ac75-383cf4ce3a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69d3b8ab-201e-457b-980f-909d4ed29ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fa761d-62aa-4396-baf7-4f2da086e841",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aa92a2-523b-4905-af74-8f62f3b1e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e74f35-9d2e-4eab-b198-3665125f4515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fad758-9ef3-48c7-8a8f-f6935af6aa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4204bac-c9ef-490e-b8b7-f93c8267c44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b4e107-b591-4b2d-b30a-960d88c53167",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6703d4-3f64-4e99-8ce2-c527a2406c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408c9fe7-5429-48ca-94da-c3885ce086b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f20bc7a-4923-456a-88f4-18157f307228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41293994-6a50-4464-940f-b6f2d0272432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1f412f-5bd3-4697-b41f-42969fc51aef",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a3b76d-f67c-4b73-952c-7bc8f5e3387c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835096cd-9439-4a93-ba73-206cbeff9404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101620ff-a0b5-4167-ae76-07b61a009d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa268c3-aecc-4126-a9ba-19b756bcf851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c609212f-bbf9-4216-aea8-8850bdabddd7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4960a2-8e22-442e-9c34-5b58b591781b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bdac21-e50e-4f56-80aa-e9f404f795b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd0e014-7c6e-4c8f-b12b-afaa21c9ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae595e3b-8201-4321-8dfc-2ae96ffcd5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9b525f-e99d-4aa4-81fa-de7da632562b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b4093f-b2b4-4fa8-bb37-793945d3f1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d044537c-cc18-4ffb-a13c-3f6d82bc6fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839536a2-8eb5-40c4-a40b-2840e330f2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e427bae6-a83d-443b-9d6b-690d9467baf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e1f1bf-429f-42d9-a4a4-e68211ceff02",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c95973a-86dc-47ae-af22-3fbd60e94240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81159b78-beaa-4f82-ad15-7aedb7dd6194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d8ee00-e478-484d-a5c9-dd9bd72945d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "47cd810c-cdfc-4ff6-9dd9-07f541920f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3191396e-2901-400d-b2fc-4df4d40867f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c478c52f-0776-47c5-8330-7a9345ff73a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b331a79b-c97d-4073-b579-33a301e60527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e510c881-c591-4c90-8e47-e0d488a88b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3adee5eb-dd1e-48d0-8973-5c1a67390b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1f54d9-f578-402b-a350-f87065b97d28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b047775-ac3a-4bf8-ab8d-da07d7f9db7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b789eb5f-6f09-4550-9537-8604cc09b005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1536b5-c823-4fae-bbfb-4f7cc0cff64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd203031-0db7-488a-ab01-5d7bc04a5ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b96d50-c08c-4d72-9b63-a6fe87902183",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ebfac7-e07c-4bdb-8360-c5a8edecc4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c11c99-c876-49f6-8c1e-5bd1efca3c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0cda7e-f290-47a5-8d55-569eafec9fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b090e24-0598-4517-90f3-16cad45e6938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16bba66-4ca0-4f40-9766-fc7285add36a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3661f94c-8643-42d7-aed9-4992ac956565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37856c7e-c2be-422c-802a-bc45aefc7789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df266e8-164a-4d5f-b178-8fd2801c3252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e77589e-02c9-43c2-912d-3d790f10ee52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7470684-28f9-4d85-ae62-49e7a18dd27c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf771aa-9a44-4329-bff3-2089b93e7cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dfdc78-1814-4bed-bad1-280209065092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7bf9fe-d462-4c31-b48b-d69896c5b652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fcb039-37a2-4747-b9f3-e922fc5d60b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bbfb13-a40a-4abc-9947-6de6a2286a40",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17770311-75eb-4cc9-bfe3-c6618eb206fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34239de-8bb2-4735-98a6-cfcaab5ee8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ce9ff5-ec70-49b6-a487-8ae1611110c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "341ae7af-1f93-4947-a408-56879c3614cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f29af7-cf1e-4a48-9ef5-2d42681d8cef",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f1a77f-127d-4c03-b272-a0e0ae3f2c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27723e12-1acd-4097-9160-4e6a8529fde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57592e4c-4f4f-4096-a2c0-280b375eee83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f6363f-6ac7-4388-bfd1-912144846ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c95c35-b963-441c-a6eb-93c3c621a392",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01988b6c-dd72-4922-b453-78909fb7ca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf4865f-ce44-4cb9-902b-22f7cf60d4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ccc9a0-51d3-4424-bc9c-6498f479ea32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49be08dc-992c-4680-ae40-a080fe333b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57a8ebb-8a50-4f2a-9d83-afdfeaf8b0e0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac092e8b-7590-4c6f-8df2-17d29f761ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85b868e-0a1d-4a9e-bcb0-a2f5a8e5ed39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21689af-1305-4d8e-ae45-94fff42d3ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9289afaa-4992-48f7-b376-3b71bc4b1248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6d8b3c-afea-4440-9c84-19060cda7b2b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33356392-ca73-4fd2-a14b-bf7dfe6e88a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a6c9dc-2375-45be-971f-fd69160e5996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8bdfcb-b36b-4a01-a891-1ecf47efa78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50219989-2dd6-4358-a0bc-4daeb945bc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962a8090-8a01-44a4-b7ee-621f785f8d85",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4ad9b4-a784-4b23-93bf-b4558e1f30cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a3495a-03b7-4243-8c96-6ab62b5b7e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34241167-fe44-4e16-a098-716155f4004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc5980f-0a13-4313-8a10-605bedef56fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ea2bcb-ea3a-4d20-8d02-129f91573895",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650ef21a-2a89-430a-bc9a-b218f1b440da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52657a62-1a6e-44f8-afff-d64b08a6d174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab38b349-6418-4164-973b-547fe49cdd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee18d713-e8ec-419a-a2b4-fc0b23f50a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf071ca-58ba-4549-a968-76e5114fb1f2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608f04e3-9a0d-4e1f-a3ac-0961d101ad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d88db7-edc6-4ee8-8b79-a4a55610d31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3192ac-bb92-4e5a-a213-e2584853d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6464f6b5-0129-4044-a58c-7a686769b8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2960d045-e82b-4b20-88fd-54d289eeec7f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b39d21-46b3-4eea-9226-5386c9aea518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42de0c52-cc24-45cc-9deb-247859ba997b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfe46c4-ffe9-4a9e-b071-0cd1c79a5e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bc3f43-fd79-4f9d-a7ac-366342b3a864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79c1446-b64d-4d16-ba03-9479beb2e4ea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5645ca33-2d03-44d7-b677-ab3ecbae80d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97103b76-895b-4862-8cf4-8043427ba1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb97dc24-1914-457d-b2ce-46a75f88629e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c28552-f12d-4ce8-9566-6f884a9dcd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e24e17-5464-4512-bdd4-5da884f7113a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4056d9bf-89b1-4702-bfaa-41c081b30eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0a2712-190a-43a2-8001-541d2487f3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55cf9eb-52d9-4812-bb7d-c2a066e04b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b0c1b5-788d-4f4c-b737-363e226caaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc0ab35-7ebb-4dc3-acb2-3873e86898e4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519f0090-a615-4380-a9c9-dc107e0eb428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b0097a-29c6-4b6c-9f2a-e3f9450b8c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69997c0-2ba7-446b-a559-dc2cdb95086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9cf9966-1545-4fd4-a662-550573522f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953b17d4-6c50-4844-8f09-15d0d2166b9e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dbb681-7e29-461b-bcf8-8e853f7edd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44ef552-9f45-4d06-988f-506b54abca41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6b309a-ce79-43af-b92f-51dff5eb320f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb488737-2f61-430b-b00b-a74efb96fbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e14664-c6ae-438e-b792-0223f2bff3a5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26319f3-e0c2-4beb-90c7-d09ad85f63dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6758c3-d8b6-4f58-b1d7-f401fcb7b2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016b273f-a528-4164-b58b-3e6619cbafd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2c87ac-7f9b-40d9-8d29-d71b9595daf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70e71ba-a261-4fda-a4a8-b6238f47e07b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022bd667-dcfa-42ad-b411-04b5b50a12fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2023353c-db29-4642-9dab-d9148438889f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92619847-7270-4588-8082-1343254a29b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c2e0b1-add2-47b6-923f-a44db036803b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00554380-0f34-4d0c-9c27-1a1d98b28f1d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca28ec2d-3b90-4a3b-a138-7f7b8cc66137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22262526-f867-4283-9b2e-e5009a7f2b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77723db5-eef9-4254-b5b1-18c5e43ba6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6333fac-2523-4b09-9a47-050e74dbb4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d010a846-7faa-42a2-a101-a17f7b886f8e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5923c1d7-9ba9-4324-9584-2120274ee26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be93c404-af66-4cf7-b000-3787fe53ebd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0921f21-69e2-4bac-aaeb-4168b4075c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e07c39-679d-4e74-8c44-7ba28b77ba37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9425051-dd8b-49b0-98ba-6d1af6fb20ce",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c4e877-7e1b-475d-b0a5-ea1dd2a6b8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038740ce-370f-4ddf-959c-3bc1b0914291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d8ae52-420c-4d4a-9fe8-930a3e31a696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a653223-2645-4a75-b088-b899061616c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea51d930-9651-4231-9be0-14ddbccc0636",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c45696-9a3d-42d3-b50d-ccdf967228a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795832d2-897f-4cac-8e06-5cff4dfe91d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495a166b-3814-4c78-a550-d5b496d3661b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "765eb708-2e5a-47cc-8710-c196c945e12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a434cf-8e48-4bd2-b9ab-4b71885a531d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f34f719-33b6-484d-b88d-85a9fd8ed508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb90d006-439c-44ae-ab30-d64a2a1f0c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166e852b-83c3-48e4-9808-4b92c8c922cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43dfbef4-2735-49b8-9b76-0349b08804f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cf9436-224c-489e-875e-ff0f8d67fbb8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102b50b8-a2c8-43b8-b0b3-9db91f104f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb93a41d-cf07-4359-9f0e-caf86a16e1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc2c01b-ba0a-40d5-a92d-2d1bc5323a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbf7911-a769-48ac-98a4-6b2432c874fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e637c13d-48d4-4b53-adc1-312397178dee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bbd242-ba60-4bb2-b1ff-ff839b1cc0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be713a9d-47fb-42f0-8410-8976b1f93903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92582004-9567-465b-909f-250e1d973df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdb49e5-1b9b-4be4-a8e3-0e947954ba69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a3c1e8-2c47-4004-8144-d47bf08457cf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e085b4-81e1-4f1f-aa59-62c143ffae53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68950e32-384e-4b0c-a826-85bb9dff3dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0de348-329f-43e9-8033-6c60e9c10826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9108b9-09ec-4171-a3a8-2f9afed69658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34667c8-0b8f-471f-b7c9-dc652e387011",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81d8bdb-e1e8-40f8-8ac2-0389573c4669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d89346-72ab-4fd3-9ca2-5648e628bdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aa94e1-b915-4592-bc7e-d576fdfaf2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31558099-2622-42b8-8e9c-37608f4dde00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7826096f-8d89-49ec-9fdb-4e626f94390c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee63236-0c5b-4e9c-91b0-2dce00453cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942564be-f556-4104-a918-29fcd9a1d048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c20af9f-9792-4852-8149-50f28d6f8909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf6b183-e264-4ffc-bb40-6f8ba70692ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550abba3-45be-4489-97b7-2a0d5b698408",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca0ba68-007c-4364-a791-06e25fce1dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf933a5-c0c2-4a0b-b917-5a8629b8e141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08634ff-a2b2-42bd-9dc1-1a9fefd3d189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f15b4f4d-dbe9-4a2b-831f-c0d257a471d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82410cf-0646-4686-bcad-40cfb35d227b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e99c5c-64d1-4059-bab6-2eeeedbdb85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac346534-3e3e-4753-aef9-0b4edc46b241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4276d397-ec3e-41b8-9491-e1ceac3c4d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5463065d-210c-4c06-b772-b5f10bf20e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa4dd82-a221-4c71-be46-dfb617c72022",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e2c11b-5a4e-479a-9920-770afe06b632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d69a9ed-b561-425b-96de-de480dac335b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67bc0cf-4ca9-47c0-b834-68ded9b12701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "93c790f8-ae80-4569-8af4-191b1eae3d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48639f52-749c-4d1d-adb1-0741f2197212",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af6fd45-893e-438b-b30b-155c1e5f060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcbca55-d6f7-4f3d-ae71-d45e809d1908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b1aef6-fbce-49bb-8f28-565d521edb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a36daf5c-b583-4878-9b86-040b7b1ea2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1591ab-31d4-4869-a68c-0cd0d91c3f2f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4f7728-3c07-4b73-82c2-0adbf7ea3aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9a856d-12f4-4b7a-807d-52563a498841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33478535-857f-4196-93e4-1f9f748e9b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfb4a86-5514-48ba-898c-d50d7f982999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fe876d-d5c8-4947-b923-37b288dea6da",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7db3ab-2f3b-457a-af09-5a47c5a3887f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "70efe389-c55f-4f57-ba99-27793cef0f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8340457c-b1ef-4dcf-aa6a-96b838868a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "38485c79-17d0-4b59-bbb9-bcc081c88069"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66faae83-8830-4652-a766-bc3e2f4bcb7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1b4dad6-c90d-4f75-9a6f-6445bb13418d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba36c1b-ee3f-44fc-a12a-ff8aa7153784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1637e830-ac8d-4f17-ad91-4771dee4338a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749d1b9e-5205-47de-91f0-e65da6bc8250",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7008440-3520-49ab-80bc-c6b340ccba6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca638d0b-d613-4f6d-b15d-d7073dfe1eeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a814f5e8-3920-4fa6-8b67-56c06a4315c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a0265dd-3c08-4ad1-a3c3-a1b9d3032b60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61671591-12f8-4b09-a326-0f1c79104054"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55a2a2a8-58e4-4a8f-81dd-69d941898b0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46da18aa-fc88-4af6-bce5-9e0a560b6790"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4d5a100-a6e7-43bb-9412-5aa0dfd39340",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "398668f0-620a-4fc6-93ce-683765f9b3fe"
                }
              }
            ]
          },
          {
            "id": "9b11d394-4f18-4343-87bf-0911c2d10c1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ddef773-742d-4f3e-9983-05ccc6650724",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "be2aad85-00e1-47ee-9e32-fb0969ecb2cf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311b841d-0832-4b5f-9020-0e8ec8e77ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4c8e1110-0a5f-4e11-83ee-3bf45bdbbfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481f2052-7274-4188-9dbc-920f4c4de21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e6bae2-b7ed-4f08-8dab-8c7a9e4a850d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd7d6461-f42c-4e68-8a51-00363f2f3843",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f8b8075-092c-4ead-9b33-e646676f8fe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38ea631e-a1f9-462a-a284-23cd57c63305"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86b04ea5-bc41-48e7-becb-41a86f7d23eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c468a61b-8302-43cb-bb7e-4e322800ba83"
                    }
                  }
                ]
              },
              {
                "id": "5cda4769-33c1-4eae-b849-0dbbdccb6096",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8e956b0-3c8b-4b2e-a1e6-b2d80705260c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19bd2776-2c65-4488-bdc8-a3790d275e31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d45d1abb-b1c4-43fd-8231-b9006119df87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4048306a-a023-4a6f-951f-a3629bb0a236"
                    }
                  }
                ]
              },
              {
                "id": "692fe444-b31c-46f7-9943-2078ca676539",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dde34c7-dc21-4146-a67a-3dd131310f2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "980970f2-3f7a-492d-83a1-37c48bebc830"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5135c00f-e72f-4e60-834f-060ddf72f91d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5cb7cdb-04d7-4726-9cba-65341a9cc909"
                    }
                  }
                ]
              },
              {
                "id": "11db4c2c-210f-4ff3-ad48-566249f250e6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2b7fdaf-f012-4480-9e10-464d1c9ee1b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a9cfe9b-9c12-4d03-a9be-86e905ebdc0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd619b40-fb1e-4ad5-a400-13bc6bdfc72e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c0e622d8-3f00-4093-bbb6-3bf3e2dd5305"
                    }
                  }
                ]
              },
              {
                "id": "df09a4bd-0582-4331-82ba-29bd468060e9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54aa91fb-d8a5-4516-aba1-5b3d942ada89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e9fa871-cf91-44e8-a571-d9f6cfaff848"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8211de80-f7a2-4eb4-8aba-13d15cc601ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "32bcb07c-799e-4c64-b86e-1dd75656a096"
                    }
                  }
                ]
              },
              {
                "id": "7dafbcb1-3847-41a9-9ac2-3b8f5b79125d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f42da6b-2991-4db0-a1f6-9c8538683b5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b41dfb6-1df9-448a-84cd-195b11edc88c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cdae643-d5d1-43c0-9bad-191b7c715ac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ad7d989-a43d-4804-bc79-291e260d2175"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b413c84-9f80-49ba-9c24-e63980427f8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36b11130-c9a1-40d4-8dd2-b0261068bfa9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7ec6eab-472a-44b3-98b6-1c1c2aca9b35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbd91541-01f2-441b-9fd9-01450328eb74"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "083d0862-e240-44bc-9ea4-6dd9601e83b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9f8081b7-4cb9-444a-b3e8-7bceba205be6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af2ab686-a9d4-43cf-957d-43dc57e1e50a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3eff362-d4a7-4967-8e5a-10bc8d667e61"
            }
          }
        ]
      },
      {
        "id": "925868e1-667e-4cbf-ae80-8554cce66811",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "45c7bed3-31b4-4e01-b3ec-5746d88aa316",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32f36008-5601-4de1-993a-51988068774a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c0b20be-a441-41f3-9e66-b55bead2de90",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994bc60d-5930-4ceb-a4ba-0342384b4196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9a2a24-da5c-402c-9773-8d8dc2131c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a40da42-03e3-407d-8d20-2a0f6314258b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef4e4a3-06a2-4045-87b0-5808e254364c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073f3061-584d-487c-b9c5-1dc8f2301a0f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda88e9e-fe09-4552-8336-80bf0108b8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10bae9d-725c-4f0d-b251-95c72c24056f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9f22f3-23f8-4936-9d02-9d0bc49ba50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "909e1514-5788-4a10-bf96-a0d99af0fa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a73dc8-270a-4396-970a-556e3fe6e7e8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1552931d-de8a-4a36-b1d2-78b39d694ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019d5807-3f8b-4bb6-b7ad-1cc137fe9adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b84e0db-8ef4-4633-a8bf-85d225d13818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3517b1-36e2-43df-a05a-0cdfede45712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6f8009-fa08-4d37-b75e-ffa0f5b9af51",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef39f82-f5c1-4647-88b6-ab78f5907429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0958e2-3a25-4b70-b7f9-5ac8272b1992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29473553-2647-4718-ab43-035ecf2d027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37dee814-96f4-442c-a81f-894dbd8248e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55b4cf4-2331-42e1-9f82-ec22fdf6a9bc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dca380d-287e-43f1-864c-60f92ea3935e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f5ba62-d696-4769-b03c-b16da37645b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1bd1d6-257e-4a9e-969d-e681b2484436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ef65b1-eb20-4259-93a1-f9b5795c3439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd48fe6b-5bb5-4d65-9684-dccc1e78f28a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f8f1ca-610d-4dcc-8d9e-19cc8089a9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ca536f-11ba-4950-9892-96403a728e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a7ceb4-a928-4f23-9b1f-5dd5e3eb80c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7499f8-e112-4717-8283-d6f82b652efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04947958-627b-4670-8bc9-d1c3feba9e02",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ee7fe5-9b07-4e61-9666-d835f6f240c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e641b7ee-f66e-48dc-a1c8-2fd6dab921bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b00c8c-f9db-4178-89a0-5fba8a1b163f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f2a7fe-39e7-45c3-9725-5bd59b6f8c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2591de2c-a904-4bc9-9e19-863bbe3c3211",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014765cc-02b9-4863-91b0-fb7b03d0e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7e5aab-af84-4010-82b5-efe32cedba1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf6d148-9e0b-47c0-83fc-3c2f3da2f3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5a234d-3bef-4974-94c2-a639314f12c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841a3a2a-1460-4625-b807-07379b515160",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e4ee85-0512-4641-a90b-d9d90baf5c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c13caaf-a24e-4414-b6ac-2e697928d7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91608f6-df59-4084-a676-ad2dfe1a96d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3f5328-1a7e-49e2-a11c-2d49f8579b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e28c9a9-4969-4fa7-acf9-a95d87e38c06",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a063a0-4cae-4afa-a0c8-9d487fb2c740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352da345-8b56-4193-b094-86789b74e05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85c9b20-5625-40b5-ad88-ff7c343412d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3f7409-33d6-4cbf-bfe6-cadc5bf61db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bac4e5-671f-4b30-ada7-6764718f2253",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf4fb3b-fc61-494a-8585-c01ef5c72df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff065a1-8d58-4c92-9f41-c0ae22d133e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294ea7dd-2282-4692-a910-085d611cedd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c4236c71-1261-4697-9941-0767fd45a175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381656d0-b0b2-4804-b53f-1a9a165a1df2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cea38e1-9885-4757-b7b4-91a4cd7dc1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e487081-72e6-4bb5-af7f-d91045b6d829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f76da3c-e71b-4c14-b1d2-7942877d866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12a2fcf0-7226-4be7-b575-03871e1a3fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af50d36e-7379-4642-8ad5-b8c0c295a2a9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa84fa89-dd8c-4315-ac93-44a17f5d1f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776d9464-c24a-4a24-b6dd-2614260ba761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252ee775-6d5e-4296-acff-cf29392202ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03120021-ee25-4567-a8ad-454388a03809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b08f4e-f128-4d61-aab6-e01c44815f35",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290d8995-5d2b-4729-abd6-242fcc22acd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee406d5-5c52-455e-97de-c859d6fffd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54628d01-e307-4136-947b-b61990cbbe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "92736e46-d177-4db1-ac40-aee9839a59ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8651d9e2-9d71-4f89-aecf-156c5d4a9815",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eca5079-1515-4503-bff7-ed5d1c01f4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6553a1-3532-4c3c-a40e-4176d603a47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa1aad5-4947-4bfe-b85e-3a25706ccd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "678da212-7a6b-4085-ad16-2efa6fc4d754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518a3996-5316-4649-a019-bf55bdc8ac7c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d79ac76-209e-4874-910b-33d11b43a7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe30500-1c18-41ab-8598-03f307e490b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e82033-abd7-4e19-b72e-6e9b0ce87669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0b8374-cf11-425e-8295-7c2ac0877383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f60658-3b31-4e5e-ba06-78abdec7a599",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b97cc1-eb03-44df-876d-826b0ba46e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69cacad-501d-4e9a-baf4-03b2648705c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbed32d2-ecf1-4504-af01-bd1cdcd99cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "827f751c-9733-43d5-bfb1-13a73b821ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ec7202-f6b1-4b0e-b8be-ec23df59a14f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0bad0a-c173-44b6-a7cd-dcb07a510b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f384af4-77d5-4cfe-961d-eacbd2b1f375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3eb1e1-3bfb-409e-84c1-d328465c15e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd6e19b-497b-44da-a0ae-84d9855b4263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f99bb9-f71d-45f6-9390-badb83d67fbf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d9f95d-0fd9-45cf-9bd7-e09a4e2f7c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68328fb-46d0-4d97-96f7-f5306b74f5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a52d5eb-546c-41eb-bbfe-05780a86e301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f57a1528-19f7-4407-995c-51752c86ec19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700685b3-8a90-4515-bf19-2512ad1b7a5f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e499a2-de86-4ece-89bb-bb1d437ef407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2092181-1e21-4be0-bc81-c3b17fd7dbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac51614a-0966-4196-83b2-d5cf38ee3604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8f9293-d54b-4fbd-99a7-b42b9fabb283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0d899c-5f75-46f2-80fc-e3caa85c98be",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfbab1b-5c79-439d-9749-0c1e47aad40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a061e59-de4f-4c78-9ce3-47621e59a47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b840fe-40bc-424b-b30e-70e454257798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5563095-6123-438f-8fcd-4678bb93ee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd60c49-4b58-4d3b-b104-d0e2f2531414",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b73383-bb04-4087-ab1c-0d42edaa8667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9ea68f-f70a-4fba-aeb1-e7badd86512e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1914a8c-c3cb-480c-bee5-34569b24010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7d52d8-82b1-405c-9f42-1a4b54c96086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93d97dc-637f-4bcc-923a-29ab56855089",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e36c1af-e143-43c2-afe8-f670f34f8ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3277700e-ca4e-464d-a975-ac3544fe3526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a1b373-b76a-49c6-87f4-09bbad24097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "513ff6d0-6b26-4198-aa49-19bad0852886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e36aa8-d297-4476-9ec0-9115301c5af6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1fbdc4-ed8c-4a34-b5d3-7c5852016b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d539c219-c8fb-4a64-b262-636c73e6668f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bbf6c2-b641-4655-9e83-d71347fa312e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be42dce6-23f9-462f-aa5a-d01daf68b837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d46cf3d-e7eb-4a91-bd9e-484cda9c7f87",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f59dc5-448f-47a3-ad86-884c0bcba052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5486501-8ebf-4f52-930d-45df405f28b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8830da-6fe8-4082-8958-a139761746c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad16039b-d617-4bf8-851d-738ef8827c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd65dde5-ddd3-457a-8aa1-f1472847fb83",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2794f919-934b-41d7-a64f-0d780e244e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df18546-9b22-4939-bae6-e0e442249d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7776b7-1e82-436e-95d9-177f550e9116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72c62c4-51fb-43ee-a5a6-fb33501c1fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653f153-3ae9-4d61-95f0-fcc148f74685",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556c9a12-3f07-40ef-bc0b-f62f3a832739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed95d62d-d9c6-400c-8339-5e97fd65b461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559262c4-a196-4aeb-9f76-4fa90f239915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0d173b-1c23-4b93-8cbb-c9f0083ad6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469d26ad-52a4-45f2-87e6-d958be5721c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdece68c-cd3f-409d-9056-55c09c0d2f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f937b62-bffd-4f0b-8e69-c4f6f397f362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13542ad9-a7bb-4ca0-99de-881c34069b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b65a91f7-0baa-4581-9ca2-a43e2b0b6f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa3ae93-7fc3-4e05-b394-898f97db7349",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6fdd77-332b-4426-a179-07276a61fa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed24f4da-ede0-495a-997b-0c5a85465c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7feac4-c802-4a0c-bec4-d77f5a9aaa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf96362-4164-4a20-bb57-cf0a9af9aed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9232d66-0e22-4e63-91a8-7de12b883616",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ec51e8-ff7a-4c35-a08a-034174cc975b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8885ad87-15aa-4c9f-a72a-9a6f278bbfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3f8e9f-dd38-440d-a1d9-95103153c92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68fdd84e-576f-4f74-b1ff-0de51ea5b344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0040c8ba-393d-4cff-be7b-73fa43de5d94",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f7b1dd-7fd3-4c52-abb7-d81d0fad5019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b519d20c-fd37-4999-acd8-fb2278ac2416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6902522e-aa5c-4c3e-a7cf-a071ad4920c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc6c0ed-eb01-471d-8569-093c1eaf1d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d83a65c-222c-48e4-b03f-9272dea24f84",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c332b98-991b-49fe-a2dd-e77695555cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb79c3a-451e-4333-893d-b594da2be06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d599ead3-fa2a-47df-96ca-3414725e8ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41351d5-be54-43c4-bc0c-ca5869bf84f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c5fbcf9-8010-453e-bcb0-9f66ff619780",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5dbfad0-b577-4529-9f4c-87c989740c8c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f63040-fbb8-46ac-899a-5dff5b72aeda",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "85b452a1-4a19-4836-8569-94eb9cf1cc6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261c1996-242a-4150-a57c-be42383eed51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90c067fc-9f9e-4276-a094-1a47de0ce1c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7c90a65-9577-43d4-8143-7318c3074213",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abb5714b-670f-4869-9c95-175dad63f58d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46c849f3-a1b1-40f3-9c6b-d265295cb490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "484df9cf-cfda-4a9a-a77e-5f9d12aa269c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2862c249-0aa8-4178-b256-fa3c31de67fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0e7d8ab-4586-4d86-a335-205300358f57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3de777e-46cb-47c2-949e-0a72c9527813",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c7ac02f-8a4b-4eea-9f2e-d4801126595c"
            }
          }
        ]
      },
      {
        "id": "56208995-2139-4047-98ae-dcbcfd0b8c1d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f0a8cd16-3f71-47d5-b82b-64b8c4b383a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2cd5bbb-3b85-486c-b0dd-8d4b81838eca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b73962a6-0552-4856-b413-d04add357064",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd97c6ca-3ed7-4569-bcb1-9da421bade81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecb36d4-142b-497d-8a07-01c5d215529e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1919c646-9af4-476d-8818-10426ec4f1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e003830-57b7-4c6b-addc-1e5ae40b65d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb47deb-7f40-4a83-99c6-47f8a82df2d7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69840f7e-03b5-4d80-bf9f-a371472a4f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdaa819a-11f5-428f-a0e8-bef1e136843e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03a7aa1-376d-4b5e-b961-210bac49d934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41ea8b4-f124-4e73-8c92-b70daed70b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5831f021-ee3c-4abe-b1aa-092e8a0dbc14",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d65630-b151-4fcc-991d-cd963eed6ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1c60be-8507-48cb-93d2-832921c1a1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4468188-d96f-4486-ad86-c8f7c4a9d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1af5c9-d024-4245-a48e-e236ddef2b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bc5351-0955-4c07-b4ad-cfe1e5d183e8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0c99f3-5b06-40da-ac7e-9269fd857d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2959cb43-831c-475b-bacd-919fb623adbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab212a20-ccc4-47f9-ab02-9d682e2f2c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf1129a-7f11-469f-82f6-a467cc68ab54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003e37cf-ab4b-4cc7-9e54-a63c292fb600",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e10daef-01cd-4dd0-a357-e8f1ea0e2ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431eef49-dd56-4ad8-9c7d-69a97e3dbdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a23debb-b191-4b56-9898-560e14b8379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d6a513-ec02-4b5e-ac80-733d116dab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adac39a-fdb9-40a1-bb62-f102357ac0ff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cccf62f-3e9e-465d-a047-31931343a147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e42516-6b15-40b1-8a91-3dae98a6a77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8848cb1a-868c-40ef-b317-863416ecd9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1c9d5e-406e-470c-a93f-a67771a38119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8675245c-85c0-4fec-9486-f03c5bfaad83",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69edc351-ce9a-498c-89b0-736fbf9aca4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baf0a51-42d3-494b-8e06-54ad3faa5e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6757e05a-90c9-4d51-87cd-444678aac308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f08ae7f-d131-47df-8674-7477f69d96eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b6b689-efc1-4176-9ea5-a9ef2eabab78",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d13c4-8a57-4d74-a349-fecf9a4ada0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76597562-d5ae-4391-92d9-77b29e93d478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf44583-361d-43c9-9d44-292eb97dbc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b954a440-3e78-4773-8800-49f39b5a52ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7cc1f2-87c5-45d7-989c-71fa2946655b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cf3251-f5d9-48b3-a8ab-b4460f33364e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26942ce9-a715-4a04-a3ca-fb6ad506369e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e793122-c1c6-4613-8ef0-1373de04bdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a849377-f507-450f-8144-5ee917350a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ae68c5-1c38-47ae-8a97-a21d185d246c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba768e98-2bbd-4b5c-8c6f-72677dbd8258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6179a61c-3d30-40db-8b55-9d17471297b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13f25d2-e6bb-46b6-a8a6-e1c1bcc68c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed48ed44-8284-4666-a489-761f69e16f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3a8732-238a-4cf5-b5c4-1132a686c2f2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2b8fc5-82cf-417d-9b8a-f2bf95c1c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb5fed4-f8a0-4da8-a04f-b429c1de7732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f2bd0b-dff3-4acc-931d-abcca9a0ac7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "534a46c0-6764-4494-9215-f241ea861fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5c289-5187-47f3-9fdd-0bb3053caa96",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eb882b-1a70-437d-815a-78d9d86a6bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290ee594-5c89-41c0-9e6a-c0217ab30a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950aadf0-7da1-4f63-a0d1-728c34161db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c40f0e79-ed46-43ef-ae03-ccbfa7bf2614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5fb3c3-08d0-4c70-8394-a144d8645b01",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20301bd-a1c6-41bd-9367-65ef365326eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdfb403-ac0a-4d05-9cac-279695ad6f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e35372f-d41b-4970-ba1e-7579fb71f3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8920fea4-ff8a-4b00-bdec-e354770c253b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797e4198-5dd7-4a80-a5e2-ab95ff4e7747",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dfa40f-2419-4f84-b7aa-4431e93993ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba699a22-ed10-4cb0-802a-b4a592ef6ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3fb125-d7ba-4bf0-a339-931fb87f13f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a325172b-595d-4b30-8a39-b1fd2e0389f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94f3c1b-32e5-478f-b31d-c98eef40ff5b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79d2269-7ee1-4b44-8c87-cf1219bafcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faa6597-c015-486d-92b8-99826e594474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187d3106-1bcf-435f-a073-7e708f77d127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8771df29-2a98-41f1-9b02-e0a654212b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10219ed3-577d-4a55-8313-4ce556a89daf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8834c86a-db49-44a6-b6a1-949e27f7f575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938f5ce9-f9af-492e-bcc5-ed43da82595b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7a7805-9592-49d9-982e-4b553c2c9d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43fe6eb-49b5-4038-9398-22fd509e665c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796355e7-5c96-48b3-b6d4-a351cfdea4e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee16405-a209-4b66-973f-c7c3e22d14d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fe5aef-016f-4d5d-ab9f-7fc3ecdcea9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65338608-9db8-4efd-b9e9-d1f7f206e90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b80ab66-741e-493b-85a2-4bc7398b7f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da18dc38-4161-46c7-8972-e2a937682eef",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cbf70a-819c-4755-89a9-535eaaa12b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4db7efb-1e1c-43b4-84f3-3826dcde724a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1227eda0-840e-460d-832b-0346cea47931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae22fdf7-5067-4df5-8808-46f667300352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05045d4-dfb2-4173-a321-48dca0fe3c28",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19c26d4-fa5e-4d7a-86f5-76d990414fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76479daa-bedd-4358-8646-d5a4046c5ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f05619-0470-4b7f-9d14-203f555e9988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a91797e-fb20-4f41-a5e4-732a5d817f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511ecc62-a919-472e-95bf-3a79c969a065",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b5753e-c982-4e03-ba7a-7efa3b7ec04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5b4bd1-963e-444f-8f02-dc4fb554deaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ec1172-80c8-4513-adc5-125303e141cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3443be98-7952-425a-b46e-748ff03b289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e03d80-0964-422d-a248-a7a245a97540",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d338153c-4d7b-4212-bc6b-6de1c334962a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903c1fc1-011d-4a23-830a-c88a87ae279b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fd67a2-e22b-4cb7-a5ed-1bcf66e23893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4208ff6-8f42-4b28-9082-695c4de45e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095a1e9d-bcaf-4411-b264-a6c4c5367555",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641aa4c8-4366-452c-8f62-5d6ad1d0f975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383b8a6c-8b65-4138-890c-ff35e232c08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bae1158-a8f6-4aa1-bd1e-b0b7aa6b64d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffee7cbd-5b6b-487d-8a9c-faee27e9480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac7b564-16cd-42fa-ba38-efde64562933",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485e57e3-d341-4244-87a3-7fc5a89b7f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a1b99d-07c5-43e2-9c3a-78633bfeed88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c747c0bc-f03f-4039-8353-b93933ad0b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4212679-697c-4ff5-8d9f-dd75d28b626c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd055f5-7b28-4484-a390-80fd678e4ddd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81adaef2-7b49-47ca-a797-26a01f7bac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e446144-44d5-47c5-8a00-87de6a760cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7092f48a-f627-4ff0-bc7b-a3375be880a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5703e332-717f-45a3-8116-ffa4bfb2f560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd673b65-b8d8-43e2-8c1e-73fd5cd120ab",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b273c48d-2e26-417c-b183-ba1e14ed6ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55c8eeb-4948-465d-bafb-85dd83a54458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b8930d-38fd-4368-94f6-6bf2255d717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "084fda42-7958-4259-85a5-4e16e65a5625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41304ee8-c49c-4a98-bd40-fd0c8312da24",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b292d0-526d-44e2-949d-d584c9e128a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa61224-c218-485f-911d-b47b5acf1ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b734827-9370-458d-adae-311345398c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d9f7a8-04da-4d90-b561-ab91d015a4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41742305-b0b4-46f4-87ee-8050370f5a66",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf45bd4-c000-4a1d-af41-7f4d24e49465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f009a121-558a-4952-b05a-c340092c0cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fbcc66-e0f1-478e-9109-0266948511bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52725ba5-7e8f-48fe-a49b-0a075ff83d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584ee74e-2ae8-4be6-8ecc-3bf84905f6e4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04ee059-cba3-4f1b-a41c-b0d97c635193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b72059-65e8-40be-bc84-11ee4edac1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badf3477-0cb2-4e59-af5e-7ff97902127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "137b8169-3dcb-4dbb-934f-76d4a9361209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c2132a-411e-4b69-acb2-166207e98baf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b95739-b843-47ed-99fb-ebf7e1836286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132dacae-66c8-460c-a019-7760f29da5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a616cc-85b6-44d0-9b9b-46fa770ffb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55183320-ad2d-4a8c-94f8-bc630c3261b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa07baeb-4180-40a0-9b9f-70e893746abc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f74337-764e-4768-9fdd-1191ddde049d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74d97c6-93b9-4e52-8d76-b4867e79a6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3482c84a-5fdd-4766-8531-58bb770baae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71bd03f3-fbc9-4624-91c8-ad7c404c5cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2451b3fc-47e2-4c1d-8c87-c837b0d540f5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a38158-138d-4269-9be9-38ca700a9f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04907d8-e89e-487f-81d8-d30f10040878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8582800f-5298-4d83-8baa-49503565734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c90c251-46e6-4f87-8791-3f36833c655f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb43288-bf43-469c-8721-0861631a0306",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67f98e6-7f29-41f9-82c1-dd7f8c3f759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1726a60a-e982-45b5-b666-03c886f61efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72396e4-5e7c-49c1-84e2-834602b1aaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "552e0ff0-d968-4598-a9a7-4f44241d468a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c8e402-99fc-4c50-8fb0-2b18bd119585",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124eda1d-1141-4579-ae3d-8dec5b41a93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12db68b2-8aa1-4e02-9047-ad9b1572d67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6ea843-16a3-46ec-ac48-cac51b513fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7a516b-8a56-46ae-bdf6-b49e31d151fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e11c856-3660-436d-87f9-a8471cdccfc2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b891b3e1-7dc4-4ede-931a-5568785d33e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884380a8-e206-4396-9324-ff8c922fcf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de770d0-b199-4b79-850b-3c6ea9b68e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6582f04-fb9f-4f73-b5e1-6ce7791eb20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedd54a9-9b26-4091-a54f-5e5a8038a210",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be387ae-05b4-4324-bbad-ae4487ebda40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218e7382-3e91-4960-8344-5da9f4d6bef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee44b11-4420-4dc8-8cb9-d907638b8004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "220df89e-0518-4e40-b66d-50406ef04a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9065a732-e63d-4032-a5d1-f4f2bd3bd704",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed7b6b0-0c42-4ae3-aa39-83fc5ebeb31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cf8a20-d7c4-4e8b-98e3-0e3f318046b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a3cd3e-267c-4725-8c59-b98a98cc6a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b26a32-116b-4b46-9cc6-282c3739f7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a567af-d668-4e1e-a6e4-877bf39a70c5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6917607-5935-4c65-8af9-20f11d9b1b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e384c438-b4a0-4a0c-8d29-fd8e53643718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d8ba3a-1d08-4694-979f-976c7b7ea4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a369c6-2dd6-484b-9858-c59e48c94f8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44d147dc-52aa-41d8-a2d0-48b82bf5b77f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdd3a3fb-e301-44a3-b88b-57df71f4ec8b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724a4657-bd76-4148-ac57-51d4fd76a4d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b22af62f-f4e4-41d6-a353-e11182645015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcb6aad-9a45-4595-93e0-c8a101acff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6260f88f-eea7-4492-8cf9-ca5b331b2aad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35d924ea-c9fb-4f7a-9873-f4a249b180e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe6f89f4-fd6d-47f6-96fc-4c2ad65813b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03dcdbb6-2cc6-4380-b48d-e6abe115906d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "882a1eec-e069-4654-abf0-d598b04a08ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19da6302-d62e-4239-86cc-a3d81e3a608c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b82cbea-dc99-4791-a2c9-ea81647017d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f1fa1d1-5ca8-4423-84ae-f500f6b6a2d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cacb4ed-cb16-4235-bd37-4f1b83591fe5"
            }
          }
        ]
      },
      {
        "id": "904c5caa-3523-45f1-9b9e-08826f549de3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6ad5400a-9e78-4738-8f61-35cac54f883f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ff5c84a-f701-4272-b172-4fe07963bd52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50265a4a-8af4-4bc5-a787-9d3ec38a5bab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01262600-284e-489f-a773-58bc17cd5fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b396b71-bff4-4f1f-ae89-6a95c4dd02ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f268bf94-f68b-406e-ac96-e18eba80f0f8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7190ba2-6be3-4cad-93ac-67974698c581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c90792-2ce6-4bf8-9682-e9287ee4077d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8a6783-0a4f-4494-81f6-999f0039b0c9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa26014b-891c-4c7f-94f7-ba13d2851a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d4bda6-3b76-49e7-a8ed-c2fbf30cfc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2805087-44ec-4391-b61f-b65a7d670034",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d10f8c-8a7f-401c-8e81-3797c759db00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22950178-0fb1-493e-bb48-aeeda1852789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02799dba-a0bb-40aa-ac2e-0032f4052d32",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92eea742-e174-484e-adb3-2af26286f204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7f9fe2-0c41-43b1-aab5-8cb98460e440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33941cda-9cea-43f2-a256-232a86aa1989",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aa481b-85f6-493b-8c2e-617fc09068e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba871960-dec8-4b30-b39a-02c968d57e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c52562-9747-4d1d-a08b-e9cbfaece6a1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86267b38-9bf8-4005-980d-f0c9a763fbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd2f9e9-582e-45df-adb0-5839c922f735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f09c58b-c6de-4510-a14e-db6a957104de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c14369c-2bcd-492c-9d14-88c810f36b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d1af35-c6d5-4074-87a1-0ce7d49998f2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b78797-b683-4c58-bbbb-11dff23c56d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec39eed5-cc0f-49a2-9885-d6e9cae33709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d66590f-5b3f-4e6f-a1ac-be3e764377dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508f2ccf-ed86-489c-8890-9ff0cd4129c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beace6f-67ba-4515-8087-92e1a93511a2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7c4225-16ae-4648-bd7e-85d13b5e3fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862a5636-16e3-4816-a774-3f9cb0d75a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2440b366-4954-4828-8093-195ec4fdf300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ad69ef-2cfa-44fe-8ec9-85d0fe49ef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0326c17-6854-4039-9ec1-231b231f9592",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e70115-d617-464a-9fb2-26889f1f406d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eccf80e7-922e-4fd4-8b3f-abf7c8e9bbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8f10fa-7f38-4082-b129-9172fbc9db66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846a8a4a-0470-4fff-acc0-3d1ce73c92dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4aa76c4-f453-4971-8ef5-ef4dbfbbc8a4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ac64a1-8c66-42f6-a458-c794a4787582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26beac07-e3b0-4537-a99a-4c1a8e01041d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b577e35-6ff2-42d6-8a45-8ecaf3967ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b93d963-a4a8-4d20-80d6-ddc822b770ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25920d9-e281-4b02-8af0-4f1f9537f0d0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8d0a7a-1880-49a3-bd50-861787c0ade8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deab18df-3403-4bc3-b7ab-2cd5ac22911a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93990bd-a4f6-4511-ba31-4e6bcc5b7bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33492062-3d65-4c48-8afc-47e10343f5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0218e3fd-d207-48a6-9db8-9a797197ad6a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cbd0b2-fcb4-4b73-a71a-ed147cf67455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15dac163-f961-4dda-8339-808f80511c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ca6b27-ec9b-4bd4-870d-37c5946704a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ed08e9-0454-485c-b4c0-c7bca8d2bf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57cc7ea-5f48-4d13-a86f-87fc72c57539",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47c832d-5bcf-4675-8c3e-32f6a484768e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a22b05-3c3f-4d76-8ed9-6fd7944773ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622bc8a6-79ff-4178-832e-798a52ab01b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade365ca-c075-46ba-b02d-b13531b94d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da590c92-e792-4258-b8bc-59403ed6b90f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cd7b8c-d2ae-4afb-9ca7-942dd6ee7f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7b9f968-39aa-4e03-a0dc-a196ddd54330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe1c214-f39b-4224-b1e9-97810a8ea6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc50954a-2bea-4d06-888f-86992216e1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe8b805-5ff1-4334-9f31-5da7f02cdd0f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fae186a-3fc2-4b2c-b6f4-570231eb9bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28368b42-b066-44e0-b8ec-c79df7d2690f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f17193-39be-433f-905c-47a49776f999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3772908b-a524-4b9d-a5f4-269080a7f6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07397245-b9a7-4a17-87c9-9ea8d81ebc09",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0b7418-1daa-4d0a-bb1d-a9a2e665a25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b432b56-884d-4e7a-9287-7450b718509d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8647d9-fc5c-4c76-9b5e-3b08a83cbf04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7380aa65-ba29-417b-86ae-f7d25c1431c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5eb115-be1f-4362-b3ac-425c0b43d08d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe735ff2-d52b-47ca-a41b-6c6e5090e94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c43534-e74b-4266-a9b3-654cc0b3ea49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91514398-a43c-4e68-b748-f11ae22a0e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425538bf-63af-4a43-a97d-27e925b58623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2021dc-c39d-4d10-8e27-21f7c9374863",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15d6790-3d80-4ef9-9074-b84914bfa69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7ec813-f1f2-48bd-8b7f-10518860350c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b649097a-cf7d-4eb9-ade6-129884174735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7b874d-75da-4068-bda9-72369621e6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94824c12-0aa4-4b27-8a86-b07fbce20955",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fd68d8-9f8f-48d2-830f-8211c569baa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a35bd0f-eae3-4fdd-ac57-ad9f1095d90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602af26e-2247-4f38-ad1a-8edfed10d55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350c9999-a547-447f-8c83-832e8e09bdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de45e16-02d5-4594-8500-c8a236468861",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c28aba-f569-4ffe-9291-b62d6313bef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb50da8f-7474-44ec-8ca3-5efbad41f427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e4c09a-d01f-4bf6-8d88-b657d70f4bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4c7913-7009-4e85-a711-6f4ba40c6a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b846d7a-4619-41ae-85d7-f0cb1db4ea27",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811b77de-2594-4644-b945-8b68b5760f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e9892f-22fd-46bd-ae0f-f6f893896bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bfa9bc-5732-4eab-bc7f-90ae66337fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad91f03a-90ed-464f-a21c-635efff77d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a86a6a6-b0f0-413f-9cd5-cabc44a2e5d7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5568d26-f9d1-4fd2-a2be-f9c1faa12155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50055f3f-f0f4-45d3-b8f4-a9e4be095bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef1728b-e486-42ca-bbd4-6508a73b3fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50ccedd-42ba-4888-8731-66d2d187b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b92a87-eb1e-483c-adc8-77b9302c8030",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0234717-e8f3-4589-b2dd-6e6b4802b0df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d94906-f8ea-49e6-b817-180e7dacc8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8aafea0-354d-4d5c-85b7-e6b449d1c8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950a8516-9fe6-4e18-9dbb-2d38f9073846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a54be4-590a-4b5a-9bcf-3edcbe0630c6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b182012e-4c15-4fbe-af10-72303d196044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4388391-f2f4-4901-81b5-c0efc9c00372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0aa94e-157c-40f2-a8a7-34b561ace3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20c108e-1038-46a1-8600-725c890f794c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15752b26-622c-4a89-aa08-9c87ea956ea1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7212582-7e50-4032-b720-831dd874f819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528a0fb4-240f-4725-9775-2f58f469e2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388b57c9-e18a-48e8-a91f-36e89df33290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c9e91f-39b7-474e-96c2-11328e07c168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90172f0b-1a02-4d4b-a6df-ee0be93edc3c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3192de4-5626-40b2-860b-dd998e0912fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f814f7-def1-4945-90df-ff79422f737c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753558a5-fb66-4ff0-942f-b138fd8ab18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886729f2-4de0-4a30-8dfd-da9aa5b5a9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92ff3a5-d506-4c24-86be-d996c21f9a83",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b21818-9938-4562-90c6-6945612226ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c5809b-398e-4d3c-abac-fbc1f136fb3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a35957-afee-47ee-8578-bf701da803b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd662eeb-bc1d-44b8-9f8a-696db172595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471e5ff9-4a8d-4784-a4fb-e24c7d9f653c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a67dba-fd4b-438b-86bd-af8ffd77733e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9eaa4f8-488f-41cb-8279-d7d85bba0863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1cbd58-5c81-42f5-b46c-50ba8428cefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9995b1cc-e194-418f-b70c-f48db39f93c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8f85a8-92ec-479b-a15d-26533b0bdfdc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7d513b-1d85-493f-b0b6-37f243a89009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c416a638-3d5f-4005-9849-e5f8863fb7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38270d7-ec92-42ba-95f9-7ebf8b92a3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7932069-c7ff-4d22-94af-181e72267851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f40ebdf-b446-4d58-98f1-5ed6fc8eee90",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18336ab-37ec-4186-aa2f-39d9a07f332a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0356087-706f-43ac-ad05-60dfe674bdd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa26cc2-2135-4ad8-948c-b127b79d7cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf052cc-0b5e-4299-a324-61bb14705565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42488345-6382-4aae-80bf-36f14e10cacf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e68f29-72f5-4a90-b9cc-0f983aeb955d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4c5c74-839d-48e5-999a-012fdec3297e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcc59e4-06bb-4fb9-af2f-e123936eb91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c26466c-64ad-4846-80d6-c1a310dbc1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcffecd8-478e-4657-b4e3-2c46043e8706",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769cdf51-b12e-49ff-9905-a0c8623970f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84bdaaf4-3d85-4c95-96b6-9e53e166bd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ea7690-4593-4c53-b372-c16f4cea01ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c642d97c-4c71-4147-93a8-2a383c2834f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c53caf-0cc1-49de-9f7e-bde2d18e3cc7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134d8e8f-8fa2-4fe7-842a-f9d1e9760f21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea180736-e075-47a7-bf37-fa9e6f35b1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7917b867-59ed-46ce-88be-006e1b079570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a89de64-c00b-4659-9da5-dec74fbfda35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7665ac33-6c6a-445d-9d1e-09b91972c53c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be2650e-aac1-4ed7-a85a-4c55ce1028ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2e1061-2ee1-46f1-ad3e-801bb48ed7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff456584-a1f8-4e6a-b9ec-a3d33cc1199e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45831e7-1670-4220-b758-723cbe78e01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c1eec0-8d3d-4984-a4cf-c5eb41683c96",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad691e8-07b7-42c8-89ec-6421a078c579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954eef92-c572-4c7a-8691-4c7823c8cabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9d87e0-4d6c-452b-93b0-f2493b2c74f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807a3c02-6ebf-41ac-bb5e-2fab65f5e209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f66f94-c209-4917-82ff-7d5423c6b385",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed20045d-9bc1-45cf-b60d-2230b647e462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958d9ee9-01ef-4604-948c-0009189316a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca22e11-0c3f-42d3-a333-1627bf3e7304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae81b90-5a6b-47c2-b7b8-e3705dd704ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5183ba2-7b64-49fd-a00e-14c0baaeb99b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aff37e5-1197-408e-8b61-a966c80a12b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab1abb1-965f-449e-818a-03184f78c1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea24094-1262-4f60-9153-d485db9488a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90edcaab-251a-4620-aaf9-81313bf6cdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98451337-c792-4d49-9692-27e769b22e0a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7471821b-022d-4e28-b7b5-a8cfffe1be74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2ffb25-355c-4972-ae61-b641abbac41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27205a6-51c3-4d45-b792-5d16b0a617f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763353bc-c298-4ddc-b64e-8bb8806c331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc705dcd-5d4c-4b16-892a-f23d3d5b31a7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c5b2dd-c970-4f38-8880-2dbc972aa918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb397d0-8bec-4e85-a3cc-0d9bee93909b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61294835-64da-4e7a-acec-925ec0c835cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d262171-4406-4901-a35c-c63481c58339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ad8f08-a3e3-43ba-a037-29672dbb1862",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6edcd0-8c6a-4d48-b2c2-7e4c7ccff96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55805d6e-b596-4573-b05c-94d043110335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeb0b40-0192-4aa7-9f06-a902631b0789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667ba2df-8a9e-47af-aa1a-714fc1ce269c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3659a793-12e0-4688-aad5-f6d2157aa71d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7502aa0-1b84-4b66-a8d2-d6e6b3fca96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f229c140-6582-4b01-af0b-8814039bc47c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faafdb78-ea46-48c2-b6e3-1ee697d006e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddca2da-c08a-423b-ae46-b26537d0537b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc4f47d-f701-48c2-9944-79b59a7582d0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654ab900-e5d2-4ee5-8d38-a824520458af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0175054f-ed56-4c62-8149-f05b02169861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c5490c-5294-4076-9dbb-e2baf8e704c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdf4d57-5504-4b22-9d4e-fbf784f1f2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25dbbdc-ef61-4d26-bfb8-5bac38340186",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d14a5d-b0ff-4d6a-98c8-90a1c4bb035a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0ea62b-9acb-44bf-a7d4-15e8703d8af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023ecee0-554a-49a5-bc90-6cc73cc9a69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc1bc0b-8775-45b1-b644-971b903c5c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fd8d60-cea6-40fd-9844-13f1843486fe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47a2307-dae3-40e8-941d-df6b4dec8c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf864978-dfe6-40bf-bcfc-b697d96f383e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f36e483-7875-4492-bae3-51298d04d6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d96cdb-f980-4821-b59d-3abf210a6bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20389dfa-ce22-4b03-ae93-3455a9d36ae6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbcb762-9e6e-4028-b3b4-82729b81d70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea09ebf0-12f9-4d21-a69f-191cbbe5f102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2083c0-3391-453e-9ebd-7c42d216bd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ced2dc-1365-447b-9cc9-bb3f05df3b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afc2042-f0e1-4977-99e1-00c7f1e9d94a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3f8e6d-40ff-44dc-ba9c-af360ec4ff98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4695338-2c51-483f-9d38-8fc941650a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20fefab-bb79-4358-997b-723048261da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f584213e-2af0-4f1f-9e92-7efc0531c2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81b24dc-f70f-4ae2-b3cb-1ad38f25d737",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd3cbe0-9087-4c91-9236-9b0b626c0e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee19b06-0a83-4a98-958a-0f42cf9f8f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26d9522-aaaf-47b8-a8d7-9bbdc325a29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a5eda7-13d4-46bb-b86d-b06da72db51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcf3b68-79ab-4c24-b487-79de862e09be",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4625c7-7c3b-447f-9360-086e051ba860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83efc466-cf32-4974-a851-8fa814b1d3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d51ca55-b363-484d-8bc1-b31b088dbd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37992a1f-02e0-48e4-8092-0dbf74d67f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91438b58-3a96-41ea-a1f4-7b4eb360a483",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b5263f-b56a-47d4-9b85-79ab06f9e7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08c1aa3-31d9-4e03-ad2e-abbacae9c7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298bde54-c363-4c66-81f1-24d99cc23dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e931a26b-7d6e-4094-bfd0-2c9d79718802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f43c582-2560-4ae8-8621-3641a7a12dff",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38973f87-fcbc-40b6-938c-775292aa7abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05210c92-56fe-429a-a067-6506788a2477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09681bfa-8ebd-4a91-82ad-acb942b637f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90f731a-d9f6-42c1-b345-d50efd408219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef6ae68-b2bc-476a-840a-b259b7a3ad91",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43e32d1-bc10-4f68-b56b-1b1a13aba441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ba88f3-dbbb-419e-842c-c86d75f42810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513af292-4411-4d08-af20-5a56caa21d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd12c0a-3897-4faf-a039-b4658bb12013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d31728c-429c-4fa3-8a86-ddf212ec6504",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8749a1-291c-4adc-8696-95c78861c44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc94ad4-7739-46e5-90a7-ccc257335be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b003e5-7fe4-4f30-8abd-58360ba66a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e84fdb-1d28-4847-b8b3-eec3f7deaafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe318056-22cb-4608-9093-1b67aa1c10fd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2969bee6-877f-497f-9a64-2576dac2851b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d95f077-4f39-4de6-a8ab-4d68d771e367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7382dd60-ed90-41f8-8b77-6d2cfe18ca63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29896aee-076d-4f48-964b-b0d802a3dbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1b370b-e0a0-40a1-a003-b8334605448d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b506a046-0980-45fd-81d2-8321292089f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f61b49-33ab-4bfa-a80f-29456b5055d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a761f5-a4ab-473f-b157-48fbbe1c23eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6d92e7-3f4c-44fe-b143-6aa2d7e65fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a5a0a6-f460-4477-8d25-4c68b5736f71",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff20b2a8-cb1a-4c8b-bc11-8edaf195f4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8831bae9-162e-4eb9-a435-89a9f686276d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24af55ca-b8c3-40c9-b2ea-05072817dcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17867c19-b3f4-4ea6-9659-089f01813ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d751c87-da1c-4c21-99b4-ce0afe9f67e0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d4ddc3-c250-46c6-976a-cb8266f24d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bfab1b-9fd1-487b-a53a-c60d534b9067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14d3ca1-dbdb-4330-818e-e7c0d73c51f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bff5e8-e1ff-4683-9d7d-3c1b674f846c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486dd019-7349-43c3-b3e0-79e6664c2cde",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704a7803-8bde-4aca-bed9-6ddd6a7ba7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f8e1ec-efe6-487d-a920-71749e139026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb1a5d-4876-4cde-a03e-5af163e4b111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42b3586-0f6f-4136-8698-c18578430257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4689acb-7813-48ba-9a8f-f8a6a6f46ccb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19238d6e-4dfd-4591-986b-caae8a90bb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02589423-49da-483d-803f-5810a0b0fa1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6bce47-bf69-48cb-96bf-32ac55f41b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fae66f-e813-44a9-93ca-f966457f9f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a3daa-6a30-4ab0-bd4e-d042fcdb37b8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2acbef-17d3-4da9-be18-bd631424dd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cc178a-0a9b-4bde-98e9-43c47f99e4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f5a6ee-084d-435b-867d-db7593cc997e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b32a35f-592d-4199-8dfa-0369ab601a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4306fa-98aa-40a8-95b2-1c411c7525c0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82a931f-0edd-4ec1-b2e7-19c62f7fb7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f969e6b-9b46-492a-a7ba-c8cddfff1c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eb9370-8e4d-4663-877e-4f5de3858e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84859538-f8f6-43b9-8cda-70df594fe582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1262448-1d2a-482d-bb33-0f56ea808135",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d627cf5b-e05a-4b18-bcbc-191bed88889e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee932d9-257d-4a0d-b7f4-ea7646c490f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ea9dd9-3ccc-463c-8246-2645ed32eb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c310b3-7703-4f23-b66e-d17d3603613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16fc2c7-09e6-49ff-beca-e2de1ca61b3b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4302de81-b3f4-4c9f-8f2b-a91d0c3e1ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394c0a57-314c-4160-ad53-16a3119828b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ce5b90-ae31-43e6-a823-f4251db648f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b68464c-f165-417d-9c06-dc66682be595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8783f761-33cc-4eb6-a56a-0256f90bff5e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4720a4-b8bb-44cb-a6b7-3d01b2e5c69c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06b245f-b1fa-4540-b169-618721539a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6310f00d-d3c7-4a93-858a-409a5bdfbda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e582a609-fc11-4a4d-9d91-3a7ed63a7e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6854682f-ac9b-4239-af0e-5d79fa199e36",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068d4ea6-024e-401a-99d3-fb3f7568164f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68128163-55f9-4067-b7eb-d628526f73b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97412bc7-6cc2-4074-ba61-11baa6eda667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf60681-ed57-4018-8cf1-a88133ecdb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9734c2f4-aa12-437c-9044-41e0ded8f109",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cf4ca4-3942-464b-ba98-8565535afa9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b92ef17d-001a-4f04-b2c0-e9b66b01a6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17558f7-c355-4fc7-875a-24e52a839709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e7483b-297e-4362-8208-b4552cf25880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55287511-8013-4b1c-b175-ac6813c0830e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b4f9b5-3f8d-40a8-9f4d-bc4d2ab0c306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f97fe7-517e-42af-9fa8-210ea223ac53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97abb07-008f-4546-9c0c-528059ab4ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d71fc2-e411-4d85-b49e-6bf04ae513f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f4933c-3ea1-469a-b977-ea1a3dd64ee3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a977a8-53a8-4d13-8c4e-f6b4a30cd0cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385abac2-e67b-497b-a643-201657ceeec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8871927-fc04-45a1-855f-f54f0a9cf1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da92dc18-75c4-4367-9529-445d25b90729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c48347-0dd9-4459-a459-0814dd62ce51",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d26b96-e724-4aae-b185-ac08a041c3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97d9f9c-bd3d-46e2-a125-115b3cee26a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc8de0b-87d6-44c9-ab59-7051e46a6a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a640172-f0bb-4242-b41d-e93b9befccb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b43d73d-8c18-436e-bd0d-7e7fcba21857",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222a742c-cd75-427e-a09e-20f9488391f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3f3d95-3264-4dec-a093-73164b74c33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb6a0f-a24d-4858-8d8a-e1ec19e49959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cf830a-c89a-477f-8908-7e6931049918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb8eef2-91b7-444f-991a-51b72856e075",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af98824b-129b-4ff4-8a52-d7c141a305c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ab6072-64d1-4015-80ad-a40be75f1865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037d4b1b-c19e-42dd-bbbf-52422bec975c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb40a5d2-69e5-4f24-adfd-a98fbf86bdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b5cb74-4ef7-4985-adb7-8d4688235c52",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a622e52b-f833-4cae-9a6b-e81b45c73ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5eca1ab-0f1e-4713-951b-96d70fc33a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9729dc-5b21-4fb3-b9ea-38dda785097c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9fdcf8-918b-42da-b77b-8462509e7f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f1f5e8-aaeb-4f16-bee9-e3673aa081ea",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e61d9d0-d866-42b7-9b86-6a89a843c79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325d8db7-ffbd-42eb-b11d-ba5be268fe85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfe1619-1474-472a-99a6-a0009bdf3b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71564661-07a7-4c68-b318-eb7fd37d0487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba13413-445a-4d11-a8b8-0d53bf4b8877",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8583742c-cbd3-405f-af7f-47b2ea798f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcaf1f36-ae7a-4fdf-a305-f0ec16ff6dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97e71b3-27ed-4132-9cb5-0e8707ebf152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3faf3f4-50ac-4ec0-8ff8-1c1f8b4fa638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98765f1-e596-49dc-b441-b9779728209a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7044ce1a-b39c-41de-9f71-8cb984d903bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e88aebf-91a6-45a9-9146-6404ca607684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0312fd2-8750-4c3d-8a6c-29bdb14ce8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb328d2-06b2-4fcb-9446-d7407585461e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf7f79c-d3fb-4b67-bd35-48b533bb9c17",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785e8a1f-97e7-41d5-a62a-e62871bda9da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2551278d-d254-4b22-8d82-e74c141890c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e1e08a-d416-4ae4-b7e3-fa5dba179595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d6498a-ad45-4529-b8f5-43d5c84b61dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1a3ae7-2a14-4bda-af65-b0c330555fea",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a363178-d0ef-4553-abb4-b90c17b9a2de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "186cfdbe-303f-4044-a9fa-bf119b023338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efcc5b6-03e1-4831-8ee3-c7bbadb73bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da5ea5f-d548-4695-9c75-4d0f62d86f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573cbd0c-a6fc-4be4-a0e3-da0374ff7402",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79607f8d-07d7-4876-af12-3814a5896b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d731ad-5120-47c3-aa7c-9acb3d431e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf821d-5f5f-44af-8e70-b6de110bd0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992690d2-b78c-4241-9e8a-3c14c565b715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52156aae-a53c-41e3-a24c-f7ffee92762e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c16a788-2521-4328-a2bd-af48f846161c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49422f7e-8bf7-4f72-a3a2-a488bb38d20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdc67a5-0887-4804-9153-963097b0505d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6a5964-4d5b-4874-ab61-db59e4bda739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5040a86-c3b1-4582-9a46-6cf7a05a3431",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03aeba9-039f-440c-bcd9-2bf020634b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fc6aed0-5139-445b-84a4-97c80d94bba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec324a24-0daf-406d-b98b-2dd3fa18dc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45befaf0-cd67-4726-b4bb-81b29baf461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8312b533-953e-4966-9435-ff8e3aeee32a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87713ef7-8c8e-498b-aa1d-8d00ca1f0774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa56048-e965-428e-b72e-58b96659e5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7a380e-0ed1-410c-99d7-85eb188aec43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5342c2c1-0197-4a93-adeb-a1cfd0aaa9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84cce97-b395-4a18-a332-489ff826620b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eb0d48-959a-4ce4-9a9d-36812b3a6ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76945145-e6e0-43ab-bdef-d1a76c4a3d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf8036d-d0f9-4bdc-a018-3605c23b0cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e47035e-8c4b-4f77-a669-66d664d115ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0020d6f-825f-4717-8e62-9cc1560793e4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c882fbf-c851-4831-afc9-7f6f6ba8011e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b35ef2-93a5-4a9d-81e2-317b50b685c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990088d0-685b-47de-9ac8-70b06d3da48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9591f34-18f1-4f6a-b157-43667f5d2edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734dc98c-87d3-4676-9abc-3ff869d76178",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78919967-360c-44e2-8ace-ec2a14e50dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f05f2c5-bdb6-4635-8a91-f5bd8022cae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b14a250-089f-4bf7-994b-aa0c1d3e2046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a817f443-1113-4c86-a04b-7efeef0a1df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a17bb7-dc84-45cb-b956-9b4da7729f9e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09914f57-694d-4abd-bbcc-be3418d1fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061492fd-6b12-42ef-93c9-bcded057532a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cdaae2-4ecb-4832-ae1f-904c11d935aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805ea553-00da-4e89-bc8f-2baadd7dfe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c56e9fa-f074-4502-b143-d29dab0f95f9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eedfe7-314a-45f2-afa8-d039c3dd01af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c0045cf-b55e-4f4b-a2f4-09c7fad19315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68453813-fdfe-45fe-ad69-a4f87a27a5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6be1c20-0962-441f-920d-0d01210620b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764ace52-0e31-43b3-878c-3765392fdd2f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4c9e7a-ced3-4a43-95d4-de2d8c3c436c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750b761b-a32c-4261-99d0-f8a7dbcbfaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a332be07-e74d-4e9d-962f-9e4955d1af98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1548b499-e4cd-4803-b9e4-0bbdbf9841c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a889ab9-db98-4774-a62c-5d80bfc549b8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891ddad1-6103-417b-81f2-7e865952b174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c8bf20-e4b6-49dc-81c9-a27e9229107a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d737023-e2ae-4001-9d1c-cda5daf8f3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a594ff7-200c-4314-bd09-397d00693308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acce4ea-ac09-423f-825e-f075713e7521",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7778480-2d1e-427c-903c-c2daae7b466e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213d0edb-d798-4876-8c00-3526877cc6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f2425b-874f-4e61-9b29-07372c0ee4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76aabdd0-ea75-41ea-a686-23e4d1a6ceb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a820adff-5ae9-49d6-b18a-2674d8b7b1cd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81773b0-7be3-4361-871a-9333c4e5a672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "537471e0-da45-4715-9ae3-3384aa6f5186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0b67ea-39d6-4123-9108-e1d11c13d49f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154f534e-87cf-4e19-9b40-93c06fa26705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f75494-77a2-4b50-86c8-967332616aff",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adb2935-fe83-4411-acd3-c5da90f9cc4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015b1f07-0dc3-46d8-a5df-926a95580524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1569c4-b48b-47e5-bf30-cbe1b8d96927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067e57d5-5a6a-4791-9ffd-279af1bb2256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a57069-c36e-487d-98c0-1c4e23d25759",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb967c85-56a0-46d3-8fc8-55e869c6f903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af0a3e7b-be41-4ad6-aaa8-cd1b375469f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bf0571-5a32-4d0d-9195-8398180eb944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5819e6-0218-4bcb-8046-78518816ff03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c05942-334a-4f38-86bd-4698d7f1c477",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce763f26-04d9-488b-aaaf-48f71c722c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2392fcc8-6172-4ace-8950-0e842d2e60d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e9c222-c421-4993-82a1-d8cc5bcbd684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9487785d-4f99-4f3f-9d36-c62c28ad2e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02027b70-f5b8-4d82-8f92-97c99e07a5d2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91765111-1390-4eed-885b-01adf0f24eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f17540a-e47f-4ad8-8738-d73792492fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b2b420-608c-41e5-b3a9-d978fa9f4ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263e68f6-ef4f-4476-bc34-9ee68dd1a7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6875c4-9908-4843-8147-1cabbf008f4e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0982fa0d-edf3-48c6-87db-0eb30be1f33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1727b5c6-2cd9-41c0-b6b0-af8149132a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c79d628-21fd-4948-86c8-d01e8569505d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5033805-159d-4e0b-9c1e-458950ff92b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd27367-f850-4603-96d5-1c5f2d83c508",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0baae6e-7879-4228-b7e9-1fca6e11f4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dec39b9-14df-4abc-9468-66111f658992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ebf20e-9eb8-43d3-8e18-3f4b98de8f1d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07024ec-1bbb-4ea6-8ec3-52f555eb7a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de63a627-2041-4293-93de-c00a10670ee5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efa8cfd-ddc4-4265-af3d-11bb987c1697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e8eb0a-fcec-4ea0-a32c-32e34189cf9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0bf773-fa02-4c68-a69d-409e25e95328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408fbb59-9f5a-4333-8f91-43e1a75c08f4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98ceb31e-6793-4228-95fb-ef4ffbc697f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cda60fb-bab7-4bc5-83cf-224f6c9d7a7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "047d7720-c782-4783-8963-befca27d89b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e199f2d9-4e0c-4b2e-b113-8907826e42fa"
                    }
                  }
                ]
              },
              {
                "id": "792034b9-23e5-400e-819e-195740f35caf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e70fe02-7831-43ef-8046-4cdba03e2004",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccacb010-5a3b-4b67-9536-4c2efa6b3392",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e332e5ac-a312-4aab-a48a-98ed84375c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4608153a-7655-45d2-a708-2354894a93e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "593b8854-45e0-4dd3-b118-cd559679b582"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56b2cad8-53fc-4777-8be5-03e07e1035a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfe70a35-6f2a-49f8-857c-8b5fde32e171"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da765bf9-f9ae-441a-b9e3-48f830ab7917",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12fb01e5-1f23-437a-9de8-d961e2dfb13d"
                    }
                  }
                ]
              },
              {
                "id": "bf2791ef-65da-4589-bb04-fde08aa2c718",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "85a46e6a-2bc0-4aed-97ba-370225d78f6d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e201f48-6963-4637-b64f-e46c293ec0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a662711b-994c-4153-a2ba-3413ba8a58c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87279c1c-557a-430a-8da9-2a4c7d62fb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742284ee-c355-4651-baa1-19d9e85cdf66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "76592601-cd90-4b59-ab1d-25b0d26aca17",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdcabb5f-30ad-4a1d-9046-c34cf91c534f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c8844a-2169-4eb2-9ba9-454ae2ce4da6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13c04ccd-ce1a-470f-ab52-6aaddb952f41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4db18de-ddae-4eaa-9218-91641c046aef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0943fdcf-6fb8-4445-9eed-b889de905273"
                    }
                  }
                ]
              },
              {
                "id": "8b6b58fd-f739-4019-b865-f1fc85217855",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b349f74-03dd-4bc8-ac62-a93b9652dc40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95e33146-4e28-4d22-bcca-8e5e56fbc936"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48e9216e-4ceb-475d-9a4e-fcea8bcca491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c44700c-680f-46f7-a266-e789a0d25440"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7735aa6-a739-42cd-ba2c-64c20572824c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e1402ecf-3d40-469c-9afd-b3ab9a89ccb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52798ce5-50d1-40e9-83ef-faffa8c9796b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82070f26-f114-4787-965a-e38bf805964f"
            }
          }
        ]
      },
      {
        "id": "1fb60a1c-fdf3-48f2-84af-b5de87acc7c2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "947d57ae-a251-49a9-82fe-b078a1ecf924",
            "name": "Negative Testing",
            "item": [
              {
                "id": "464bd1d9-f8a4-4fe1-be78-d9080c4bd938",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2381cf9-7e0e-426e-9ee1-abf16e141d18",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572e9516-137d-4f57-9355-90a5e4443aae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ab8c3d1a-7f1c-408e-a4c6-db80cf6ef95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b978f0be-3bb2-404c-8958-143a16b1d1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddfab068-483f-4645-9ab6-f0f6a85dbfb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72fdd359-f8ae-40d9-8ed6-e6e6d22b5083",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70745298-cd0e-4301-81e0-114393724ff5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "becc1215-f7cb-48c6-8c3e-5d9bf2bc8e59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99261b14-fe59-4ad0-a042-5b34bf50b9d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecdf1968-dda1-4faf-9981-4f1d7a72fc8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f6fd1adf-9442-475f-b75b-12d6b9d6eb39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc47b41e-de7a-470f-bc3e-96fff9007eb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c53144d-3b4d-46a6-bac6-6a1df2b4566c"
            }
          }
        ]
      },
      {
        "id": "4b2724da-7926-488d-b01c-8097f6910e47",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "859963c2-d504-4bd9-8dd3-7d3f55a6d002",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ecc9097-6766-4baf-88d5-449007213756",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5127fdcd-1290-4b59-aa08-47073666b900",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0c14ab-5f06-404d-97d5-65930fb787d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "573f1115-87a5-4d0b-83a7-558faf2f61a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f9f8cc-88df-454b-83fb-65dfb3c8c029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "819dffef-8b80-4f6c-87fd-290de60e1468"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e5e9648-d713-41a7-a7d7-67f15e6d0b78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce0c0a7a-dfba-44d5-891d-33130bb27e26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a19edf36-8361-49e6-8f1c-bd3ec1c9669e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e372d57f-a158-49ca-bf93-078fb38dd0a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12a677d8-a5d5-4100-b903-36369bab4e47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79adb8cf-31a1-4f81-bd69-945cb4b6afc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc45997e-4e30-4f54-8c0d-f0c62d18f380",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a600851-2f3b-4dad-89d3-907b15750543"
            }
          }
        ]
      },
      {
        "id": "936020b9-9d50-4ec1-9176-5a1fd62d7006",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "65156e7d-0408-4898-a359-733156b1854a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcb223e6-5d7c-4a6e-98d2-ce25dccf59a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94340481-49b7-45af-a56d-1e8848f42dfa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3d2a4a-331e-40f3-a66c-00309c153813",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37ffaa43-d67f-4cfb-b03c-e0c235244d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e216a8-e194-4824-bdcc-964b27364bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2ada72e-4dfd-4bd2-a748-7b4c34c931a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab2fa0a1-c994-40b6-a2e1-e5993267e4b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72a81160-8d1e-4bc7-bce8-e225da64a383"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6b3c4b8-710f-4ced-b7c5-3c62c6fd97c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "995fa04f-6282-4ba2-b466-217fdd8182f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25abf15a-c041-4bb1-8c4c-15d298629c28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29ef4671-411f-4e05-8493-adb460c7f8eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fd7b36e-bb67-4840-bcdb-63042b51f86c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf874475-d6c6-403f-8d64-3b9c8674d546"
            }
          }
        ]
      },
      {
        "id": "195329c6-7917-44e3-bfba-ac4431357643",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4aba048c-4ec6-4c19-b107-a542b63607b7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "007c2f28-bdf3-436f-b054-9ddfd73dd205",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "118fb088-b660-4eac-a145-4117f49ef369",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1085cdef-9fa8-46b5-8185-61fb2ce0761b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6de7098d-e9b5-4ef2-b2d0-b054de0c39a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 32.610526315789485,
      "responseMin": 6,
      "responseMax": 316,
      "responseSd": 26.821683321786892,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704242120357,
      "completed": 1704242139145
    },
    "executions": [
      {
        "id": "a73e96e1-b3d4-420a-9e82-e1d72b85552a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7d37ac4c-cc6b-424d-8e2f-32b17cea6b7f",
          "httpRequestId": "2f242b48-cff4-400b-aa7f-5afbb8118cd7"
        },
        "item": {
          "id": "a73e96e1-b3d4-420a-9e82-e1d72b85552a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "feffa32a-2e90-4a4b-a45e-3e132629c35a",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "4aee48c9-574d-49b9-b8d9-f116e5ba957d",
        "cursor": {
          "ref": "f67ee6b7-562c-49ce-9025-58b9250c03ef",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "950d153a-076d-4499-9fbd-a9cf8a1cc94f"
        },
        "item": {
          "id": "4aee48c9-574d-49b9-b8d9-f116e5ba957d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e8b84d01-ecd6-41dd-8906-807a8bd62296",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e3d2e108-941d-4fe8-99b9-1daeff382080",
        "cursor": {
          "ref": "476b9a5d-2c21-4095-893e-142be9e158b3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d9761e14-15a5-4610-a100-99698db05927"
        },
        "item": {
          "id": "e3d2e108-941d-4fe8-99b9-1daeff382080",
          "name": "did_json"
        },
        "response": {
          "id": "b88c349f-1be4-450c-9ed6-0b6bd9a95ddd",
          "status": "OK",
          "code": 200,
          "responseTime": 263,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea32bbb-eea3-4b41-af1f-9b3190f98899",
        "cursor": {
          "ref": "4c3afb19-b5c0-4f9c-bfea-510df62b32fc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3abc53a-6c61-4a38-b4c1-8c4f764ca827"
        },
        "item": {
          "id": "2ea32bbb-eea3-4b41-af1f-9b3190f98899",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6ca5163-24fb-4442-a2d8-179b493209ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea32bbb-eea3-4b41-af1f-9b3190f98899",
        "cursor": {
          "ref": "4c3afb19-b5c0-4f9c-bfea-510df62b32fc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3abc53a-6c61-4a38-b4c1-8c4f764ca827"
        },
        "item": {
          "id": "2ea32bbb-eea3-4b41-af1f-9b3190f98899",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6ca5163-24fb-4442-a2d8-179b493209ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d88538-98b6-4ac2-a81a-f367fb3b520d",
        "cursor": {
          "ref": "e32f95b4-95b8-45d1-98d9-695cc2f9ab3e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c6f37ac3-d327-4e7d-af57-4dfb95b5eec3"
        },
        "item": {
          "id": "98d88538-98b6-4ac2-a81a-f367fb3b520d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8cc9e4d8-1a62-4623-969b-561ffad97c67",
          "status": "Not Found",
          "code": 404,
          "responseTime": 316,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e3ea9b-2e8a-4580-ab07-7b2dba92b2ba",
        "cursor": {
          "ref": "62e1ffe3-90d2-4f62-92c9-8c0f442a81bc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1ac7b0c9-6028-484a-a603-a53b95971d6c"
        },
        "item": {
          "id": "35e3ea9b-2e8a-4580-ab07-7b2dba92b2ba",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1a1d3e7f-41c3-4c26-a827-83735e4a6d61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c110572d-59c3-4a42-96b0-138d3a058f4c",
        "cursor": {
          "ref": "dd9f9354-16f9-4d61-a8be-be048a85af24",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "afb74ce1-4aeb-42fa-84e4-7a9b71347d6d"
        },
        "item": {
          "id": "c110572d-59c3-4a42-96b0-138d3a058f4c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2fd0b581-d312-4aec-afe2-447acb5ffa8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c4c77c-8af0-4293-939b-5fc041cf72e7",
        "cursor": {
          "ref": "95ae0e15-6f74-47fe-9ada-f91a5a0fe31d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7bde46b3-3b7c-4689-b09e-dd22ba2340fb"
        },
        "item": {
          "id": "52c4c77c-8af0-4293-939b-5fc041cf72e7",
          "name": "identifiers"
        },
        "response": {
          "id": "5b967186-1718-4b8b-80a2-9bc50ee1f93b",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcc6278-fb8b-4ae8-ac92-0df17445dfc5",
        "cursor": {
          "ref": "c6f2a039-4276-453a-a8d2-52393482f796",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c10750df-cde5-4bbe-907b-ae9673f7039c"
        },
        "item": {
          "id": "5bcc6278-fb8b-4ae8-ac92-0df17445dfc5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8d1476e9-6731-454c-a37a-d05dce4ddacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f35ac3e-da1b-4e5f-8eca-e5be4c524a3e",
        "cursor": {
          "ref": "ed0c39eb-cba9-4e06-aabb-d25a49b7eb77",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "714ca960-15b9-4e13-ab36-42def0526674"
        },
        "item": {
          "id": "0f35ac3e-da1b-4e5f-8eca-e5be4c524a3e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e5b5fca5-6897-41ef-b73c-8aace4f699f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589ec6f2-b51a-45fa-b16c-7cdd1cfc12fc",
        "cursor": {
          "ref": "5f2661c6-d704-4348-8c93-56f32fcd7c44",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bc39dcc7-6586-44b1-b0f2-d4ccfb34f781"
        },
        "item": {
          "id": "589ec6f2-b51a-45fa-b16c-7cdd1cfc12fc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d7d958aa-c508-45f5-b260-73f37f74e8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9249f644-0098-45c7-a27d-07ed21a3e13a",
        "cursor": {
          "ref": "3d407148-bfd3-4683-935a-258f8ede2fbe",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d2131e78-9234-4df2-9d0b-8449128446e9"
        },
        "item": {
          "id": "9249f644-0098-45c7-a27d-07ed21a3e13a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d68d349d-6b06-4afa-b44f-ac764f17b714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d2975d-5efa-4561-9e79-8b247da5ccf5",
        "cursor": {
          "ref": "2a9f7ad6-2b2d-4fcc-8001-f6929be29256",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ede4462f-2a62-4b92-ad2a-147a3227a576"
        },
        "item": {
          "id": "b3d2975d-5efa-4561-9e79-8b247da5ccf5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "171a67fa-f05b-42ef-aa89-410e3029874c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce556ae0-08ba-4b88-adf6-7b869cc9f13c",
        "cursor": {
          "ref": "108f35c7-719c-4aee-a0e1-cfff8fb2db5b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9585c36b-00c5-43ea-aa37-8811269c24ae"
        },
        "item": {
          "id": "ce556ae0-08ba-4b88-adf6-7b869cc9f13c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d6d0896c-f6f3-438e-adcc-08753fca7828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c43b28-5319-4776-8b4d-6282dc07c9e4",
        "cursor": {
          "ref": "4e43dd29-3080-4be2-b147-9d105a447fc8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "564b382a-ac8e-4c6c-9653-46394e15ab26"
        },
        "item": {
          "id": "34c43b28-5319-4776-8b4d-6282dc07c9e4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3593f54e-2d05-4eba-8dcd-8dcf57c79c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d547d36b-b638-446f-b5ea-dc3b6d2e367a",
        "cursor": {
          "ref": "2ea719f4-e142-4462-a499-4a8e81c23093",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b424074e-7fb6-4806-82d6-2eb208ce4f35"
        },
        "item": {
          "id": "d547d36b-b638-446f-b5ea-dc3b6d2e367a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5b127ab7-cbfc-4ce6-a834-b22cadbc188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2c2452-57f1-4137-b36d-2ad793916233",
        "cursor": {
          "ref": "6ea89bff-6cb7-48b1-a5b1-69e1fe84591e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2d40a5e7-4e42-4d50-bdc4-3ded57f09354"
        },
        "item": {
          "id": "7d2c2452-57f1-4137-b36d-2ad793916233",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "49658198-9eb4-4d73-bc4d-2e87e6139764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17e8785-e649-4ab2-bb33-fe00bd6277c2",
        "cursor": {
          "ref": "ac4e5632-de05-4844-ade0-6741291f987c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "17226848-49a3-4014-9fee-fc25fe7bbb1f"
        },
        "item": {
          "id": "e17e8785-e649-4ab2-bb33-fe00bd6277c2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f789cbc1-c879-4ab0-b70d-dfd65a1bdc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327330d1-6b63-48f6-b6b2-cd737ee61596",
        "cursor": {
          "ref": "9d124c23-5f04-4e6c-a38c-7147a843520a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9a553191-1fa5-4781-9ce8-b0c2eb974af7"
        },
        "item": {
          "id": "327330d1-6b63-48f6-b6b2-cd737ee61596",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d724a6f8-2088-4cfd-a17d-0b1792e1354a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfece617-affa-432f-9ebc-6c890a043c83",
        "cursor": {
          "ref": "7f5f7132-033b-4eb9-9a97-1b9664de774f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "95da10e4-194d-414c-9998-af79fa7f3322"
        },
        "item": {
          "id": "dfece617-affa-432f-9ebc-6c890a043c83",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a7653489-0d20-4303-a6d6-fe424021063b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31445b7d-9490-4587-8612-33309ec8bd01",
        "cursor": {
          "ref": "60c2ba70-4d3f-457a-97c2-c941c0a9ab66",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "88b3343c-d3d3-42c8-9819-0700341f04cd"
        },
        "item": {
          "id": "31445b7d-9490-4587-8612-33309ec8bd01",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "38138503-5c52-44d5-9cbc-440517d5b802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0634e6-cb77-4e75-8b0f-368125ad5380",
        "cursor": {
          "ref": "82b8a72f-9506-4d21-8617-0da78db32e7b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "70b4674f-a4e3-499e-b06c-9f38f30dd8fa"
        },
        "item": {
          "id": "1c0634e6-cb77-4e75-8b0f-368125ad5380",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "346be646-6591-436e-ba1f-a34b8fa5fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b9e320-8a77-4323-818a-16d843b688c8",
        "cursor": {
          "ref": "63b025d5-9ed2-40dc-b85e-aeab45ecf80e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a3a63079-31d0-45ec-8d50-fc0220f695cb"
        },
        "item": {
          "id": "02b9e320-8a77-4323-818a-16d843b688c8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2f68aab7-c0c5-4a18-af7f-37e426ae9f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81392cb-b17f-4229-ae21-8fb27bf22d4e",
        "cursor": {
          "ref": "c10e9737-0f11-4079-b0e8-dfe57f210480",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0363fe0e-3689-4799-a4c3-d8e3153176d8"
        },
        "item": {
          "id": "c81392cb-b17f-4229-ae21-8fb27bf22d4e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "affefea5-ceb0-4d15-80e3-6d9287bf9d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eb7c63-807a-4790-ac7d-452a6a4bb621",
        "cursor": {
          "ref": "59530a8e-a69b-4a92-8209-3a358b953d0c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b6035064-a95e-4dee-abd4-078aaeed038b"
        },
        "item": {
          "id": "37eb7c63-807a-4790-ac7d-452a6a4bb621",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4450c45a-4e99-49cd-8fdf-83441533d162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f0f5b1-a8ab-4ef4-bbf9-c6c43971dd63",
        "cursor": {
          "ref": "f5b4b9b6-da73-45e6-8dc7-a1c0c5641d5f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "440c7167-cf55-4ea0-ac74-29a9f321f3b6"
        },
        "item": {
          "id": "92f0f5b1-a8ab-4ef4-bbf9-c6c43971dd63",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9d2476c6-7266-4017-b678-731bf8b31d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57fcc16-03b9-4d28-9b18-7088656d0789",
        "cursor": {
          "ref": "1f90ed29-6806-43e0-b1af-6c979c78752a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "265ab5d4-5720-404d-b084-c7286c0671ba"
        },
        "item": {
          "id": "c57fcc16-03b9-4d28-9b18-7088656d0789",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "54a9d173-1f2c-46b8-83a1-5a983c59d3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8726a9a-7558-4185-8455-047fae9f90d9",
        "cursor": {
          "ref": "9f5c3b5f-d5c7-4729-8a20-3a2d077bd457",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b362ca2f-674b-46c3-909e-608ddf554d95"
        },
        "item": {
          "id": "c8726a9a-7558-4185-8455-047fae9f90d9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a2b86c2e-eb22-4d33-8942-4c4cbb688a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6f1b0a-b982-4a9a-bcf2-d301546d4869",
        "cursor": {
          "ref": "4fd9d828-ab92-4aeb-8782-bb782a63c997",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bb1e0d27-5962-4319-ad56-55d448a53033"
        },
        "item": {
          "id": "db6f1b0a-b982-4a9a-bcf2-d301546d4869",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "be8172bf-746d-4719-b9d7-5bbb7930ab8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf48599-3e8e-4b1e-9d98-28aa0b71b53d",
        "cursor": {
          "ref": "83d544b8-00b9-40a2-ae6b-fb3e7376736f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f7fe085c-7e78-4ff4-a6a8-f9e4454814ed"
        },
        "item": {
          "id": "2bf48599-3e8e-4b1e-9d98-28aa0b71b53d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fd0a3040-549b-4605-ac6e-a1eef699ef0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52817bc1-644d-4a5d-b30d-4bfe5adc9cd4",
        "cursor": {
          "ref": "27dd8c6d-59d0-44d4-8570-4308dcff3043",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2f0e6e99-79ae-405b-81ea-971dd0591880"
        },
        "item": {
          "id": "52817bc1-644d-4a5d-b30d-4bfe5adc9cd4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c37fad9c-1bbb-40bf-bf74-80f0d553bc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fff0e1b-d8f0-4a04-828d-acd763af9264",
        "cursor": {
          "ref": "c256cd48-0016-4de4-a891-a2712f73cff2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bdaaea98-b4e8-4b63-a1f1-bcc1354ce30f"
        },
        "item": {
          "id": "0fff0e1b-d8f0-4a04-828d-acd763af9264",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5ed80f28-85a6-40cb-871e-57bca5bf5c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f357af-16a7-4a6a-973e-cbabafe70ab4",
        "cursor": {
          "ref": "b9b8a471-32b2-4bab-96fb-8a4013a796ff",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "43df01c8-a6b9-4847-821e-b1aa6e3d42a1"
        },
        "item": {
          "id": "79f357af-16a7-4a6a-973e-cbabafe70ab4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cc669680-405a-4a26-b022-7481575b1df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ac6d84-c146-4048-b016-0f3519fb0ff7",
        "cursor": {
          "ref": "5566d2da-c42e-492d-84cf-7c78e2395f6d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "27c4cf67-8fcb-4736-96bb-44ae4e267ac7"
        },
        "item": {
          "id": "02ac6d84-c146-4048-b016-0f3519fb0ff7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "884776e5-2b68-4f4b-ab27-80c8585193bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a054d4-901f-483c-85a4-c99a174560ff",
        "cursor": {
          "ref": "5c5a7f7a-8487-492b-87e4-01a18767ccab",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "85e919a9-10bf-44fa-ae21-761e4db1702e"
        },
        "item": {
          "id": "b9a054d4-901f-483c-85a4-c99a174560ff",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a584288d-ac8e-4008-80e3-c3be74131d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad469302-064e-4ec3-854f-dc6d69366725",
        "cursor": {
          "ref": "9893695b-90be-411e-811b-ecd01a83b576",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "46dc0806-a5a9-465b-9eb1-fdba17ed1ef7"
        },
        "item": {
          "id": "ad469302-064e-4ec3-854f-dc6d69366725",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "63d17fd8-0a93-401d-a773-9729defe47bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7396fd-6529-4323-9c78-4f7c5b2d0092",
        "cursor": {
          "ref": "304c05ca-ffa3-4599-b6ad-a3d0819447e6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "008dcdda-7caf-43aa-a7cb-1329409cfc21"
        },
        "item": {
          "id": "db7396fd-6529-4323-9c78-4f7c5b2d0092",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "24f36435-2b4a-4ff9-8c34-155d9bc3dfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1467b48-d918-4c6e-ac0c-df2823aa7087",
        "cursor": {
          "ref": "8971cf19-4050-4c60-8b15-0cfce438e0a1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b232a46a-34de-4bdc-a93f-1b93791e13a6"
        },
        "item": {
          "id": "d1467b48-d918-4c6e-ac0c-df2823aa7087",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d2bc8c79-4804-4df5-b3ee-31f6aee26f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd69f649-efb0-48a2-b29c-fa3319d6c7f6",
        "cursor": {
          "ref": "c59edbea-4d04-4d07-91b1-c0824e1a9d5a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "31499329-b235-4183-92e5-5ec36b19c5ea"
        },
        "item": {
          "id": "fd69f649-efb0-48a2-b29c-fa3319d6c7f6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c4da7cd6-9f8e-4faf-80d6-97fbfc48c99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a79ae6-fe0c-4192-a927-1b7b083acf44",
        "cursor": {
          "ref": "4d2d6520-5a41-41ed-b82c-741ea6b34666",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "db038a92-90d3-41e4-a80a-ece28e6ab8d5"
        },
        "item": {
          "id": "87a79ae6-fe0c-4192-a927-1b7b083acf44",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1c953450-3257-487d-bbbd-52a74d508a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84246e2-8a3c-4fe8-8096-a056067cb563",
        "cursor": {
          "ref": "9c17dcc8-8fc0-4e9c-b790-d5005ad2d797",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c7ee9d02-48af-4ad3-8f61-0d36ba93b94c"
        },
        "item": {
          "id": "c84246e2-8a3c-4fe8-8096-a056067cb563",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9407fcf5-a82c-48b0-bfd8-879fe5957af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38f28d9-6076-44e4-bb67-d9cd82805733",
        "cursor": {
          "ref": "d7302e55-4a89-4b82-8fd2-76a4968f03b1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "51b92ecb-1500-4179-8eaa-4e401ed4dac9"
        },
        "item": {
          "id": "a38f28d9-6076-44e4-bb67-d9cd82805733",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e473bd3b-be24-407e-a434-1ea3104c7238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453b1dce-dad8-4bfe-b836-891a41a02151",
        "cursor": {
          "ref": "cf372770-7fb1-460f-a743-3c9a5642cb1f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "45b89bca-4642-4f22-83ab-2cb74817e75f"
        },
        "item": {
          "id": "453b1dce-dad8-4bfe-b836-891a41a02151",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fb4f36e6-93a7-48ec-ac87-cdaeb758a950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992c908b-3574-48b7-ae74-ddbc92e989eb",
        "cursor": {
          "ref": "4521fa10-4f17-498e-82d3-ea8e94ddd601",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "834894d7-74d8-4b03-bb4a-06c76f1a0db2"
        },
        "item": {
          "id": "992c908b-3574-48b7-ae74-ddbc92e989eb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "851401d2-5301-4880-8789-7dc1cdc0da90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b992956-e95e-4db0-82a2-9c44a9bfa265",
        "cursor": {
          "ref": "76ce3ff8-e270-4365-86f8-822397f429ba",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1465823d-e646-4786-86f6-23559cb27fbc"
        },
        "item": {
          "id": "7b992956-e95e-4db0-82a2-9c44a9bfa265",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3ae304a4-b09b-4987-84fc-454407d71219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13d7e18-9b7f-4be4-b5f9-ca1354e4c48e",
        "cursor": {
          "ref": "ae930411-c1a2-47f5-b56a-26f45951e6dc",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "182aa244-7314-4ce9-bb2d-7a0c59f1d4c3"
        },
        "item": {
          "id": "c13d7e18-9b7f-4be4-b5f9-ca1354e4c48e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ccfdd089-fbb6-4ba3-bc5e-3d58d2678d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c863578d-c325-42bf-91ae-c6587bc39aa1",
        "cursor": {
          "ref": "173d45d3-2c6e-4823-b62b-37e32c9bcd92",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "81c4a346-bf5e-475c-ab78-bfa3d608e95a"
        },
        "item": {
          "id": "c863578d-c325-42bf-91ae-c6587bc39aa1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5e8fd8d1-d40e-43bd-8e50-e876cc83fd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eb0bfe-3410-4703-bfd9-1d2abf86c8f0",
        "cursor": {
          "ref": "08ce8c85-9677-464d-a0b7-fa6eb551c868",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "95a20208-4756-4b4b-a2f2-f2a63bc65a3e"
        },
        "item": {
          "id": "34eb0bfe-3410-4703-bfd9-1d2abf86c8f0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9d002fff-18fb-470c-ab8e-466aea67e8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ef2364-eef6-4a82-a79a-16189529cf5a",
        "cursor": {
          "ref": "2140c103-a597-4a36-9fb9-56b346a38b0b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0e2b63ee-d27e-4434-b6a7-9d2e7c49008d"
        },
        "item": {
          "id": "f0ef2364-eef6-4a82-a79a-16189529cf5a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "61916e83-808d-435f-9eea-e40b698a612d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982253e5-27af-4bfc-ad3f-88756dd6c490",
        "cursor": {
          "ref": "2dda5fe8-92a8-4472-afd3-f537fb494c39",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b7dfdfa1-9deb-4e10-8887-97c3802979c4"
        },
        "item": {
          "id": "982253e5-27af-4bfc-ad3f-88756dd6c490",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dfb3a8e0-f7de-4a3a-ab14-06a6765d5c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775471ad-2966-42ff-a723-7ea88a53fd9a",
        "cursor": {
          "ref": "aa586c31-f355-4c90-80ba-cbc03e2e54fe",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e976b438-3568-4e45-9d95-2b0afcdc38f2"
        },
        "item": {
          "id": "775471ad-2966-42ff-a723-7ea88a53fd9a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9d26efbf-f6c4-443e-a90b-ac71942b42ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da614c72-1eb1-4d60-b605-d5fe207f40ad",
        "cursor": {
          "ref": "dd16900a-6e56-4f67-9d86-5dbd258f983e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "00454499-52df-4555-9dc2-af34012e993f"
        },
        "item": {
          "id": "da614c72-1eb1-4d60-b605-d5fe207f40ad",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "81517c09-1c50-496d-81a4-aebce5c06612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1766fb7a-c534-44b1-96cd-0158130afbc6",
        "cursor": {
          "ref": "6edb5567-7faf-42af-a52f-546b0d43e117",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b2b3f19a-3fa8-419b-9633-97fce02cf6a6"
        },
        "item": {
          "id": "1766fb7a-c534-44b1-96cd-0158130afbc6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b5958550-a348-4852-b605-91d9c6f3979f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67f2f08-8ef9-41bf-87d2-de13231c647e",
        "cursor": {
          "ref": "4fcae5bf-5d24-4a1a-b7a8-c847f29f7aaa",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0cb428d8-755d-40fc-a717-4e3050ff10bd"
        },
        "item": {
          "id": "e67f2f08-8ef9-41bf-87d2-de13231c647e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cfb1e9df-0536-448b-942c-259b4883d8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099daf3c-305f-41ee-9341-3a90d8736ba5",
        "cursor": {
          "ref": "bfb2adc0-36c5-4d65-9551-b1c3f3f05a2f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "753890bf-1ff1-4ce4-86ba-acdb8b02c64c"
        },
        "item": {
          "id": "099daf3c-305f-41ee-9341-3a90d8736ba5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6424c62f-0f28-4bc1-aa97-b0a7f2e325d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c01821-b65f-4f9f-88f2-8cdbe3742796",
        "cursor": {
          "ref": "b42dd1fd-859c-4020-9c92-451b5a212bba",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "528b9784-0cba-41e3-a4a9-cc81d9af9420"
        },
        "item": {
          "id": "e3c01821-b65f-4f9f-88f2-8cdbe3742796",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "77f4a934-b228-4ed6-b52b-5bd506d6a931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfecfbfb-f873-42d3-a1e5-694472c533ca",
        "cursor": {
          "ref": "216050a2-1c9e-4351-8254-be89db32ce85",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6d008472-2963-42f8-8d22-3c7d65831fcf"
        },
        "item": {
          "id": "cfecfbfb-f873-42d3-a1e5-694472c533ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9cec63e7-1d54-4210-8261-7764d36f95a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b029ecac-3465-4804-ae93-7aa8dcd6d028",
        "cursor": {
          "ref": "1ac8b441-534b-4a85-a670-4ba99ce34504",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5406c452-07b6-4401-be5c-9b2668ed714c"
        },
        "item": {
          "id": "b029ecac-3465-4804-ae93-7aa8dcd6d028",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f452762a-f2f0-40b2-807d-009e1f2f9f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fa761d-62aa-4396-baf7-4f2da086e841",
        "cursor": {
          "ref": "6a9375a8-d5c4-4c3d-a884-02cbc68febbe",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "06ce50f5-5a16-4456-8100-f33a6f46d4e3"
        },
        "item": {
          "id": "71fa761d-62aa-4396-baf7-4f2da086e841",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "464239e8-ed79-4163-9fd9-2a4036be0140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b4e107-b591-4b2d-b30a-960d88c53167",
        "cursor": {
          "ref": "cb8cb519-0d38-4374-b4e7-6024c8bddc3f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7f6f0367-1f5d-49f9-ad80-25bc0dcbe1e7"
        },
        "item": {
          "id": "75b4e107-b591-4b2d-b30a-960d88c53167",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "657dc6cf-7896-481a-87e0-b75aeccce0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1f412f-5bd3-4697-b41f-42969fc51aef",
        "cursor": {
          "ref": "1d8cbd6b-2372-4a40-8f47-2001e55ba830",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dd46adbf-a9f3-453c-9d96-a1a7a1a3458b"
        },
        "item": {
          "id": "4c1f412f-5bd3-4697-b41f-42969fc51aef",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1c26d81f-5eb6-4126-b108-299f05e9a398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c609212f-bbf9-4216-aea8-8850bdabddd7",
        "cursor": {
          "ref": "5af2a292-fea4-4a69-9f2c-a77f1e726b04",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "515633bb-8195-45a5-91c9-4e566e6df37a"
        },
        "item": {
          "id": "c609212f-bbf9-4216-aea8-8850bdabddd7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "00bb0fe7-6e7c-4109-90a9-72810c04e08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9b525f-e99d-4aa4-81fa-de7da632562b",
        "cursor": {
          "ref": "970a77cf-07f7-473a-9283-2923485dd0c4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bf04f476-52e6-4084-b7c1-e004e7a9f1b1"
        },
        "item": {
          "id": "ea9b525f-e99d-4aa4-81fa-de7da632562b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d6616896-2b0f-4576-b65b-89eb13b89fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e1f1bf-429f-42d9-a4a4-e68211ceff02",
        "cursor": {
          "ref": "94d576eb-342c-4e69-aab3-1a8f86eb2bec",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "43cb99bd-d0e9-4728-9258-d1f6ee5370f8"
        },
        "item": {
          "id": "c2e1f1bf-429f-42d9-a4a4-e68211ceff02",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8e5f9af7-7aa7-40d8-a928-962a77f0f475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3191396e-2901-400d-b2fc-4df4d40867f4",
        "cursor": {
          "ref": "8380b4eb-8c5e-49c1-a68b-c93a851f3ab4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b30bfccd-a646-4265-b084-d3b32e929259"
        },
        "item": {
          "id": "3191396e-2901-400d-b2fc-4df4d40867f4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "07fb4f50-b19b-477d-b5b8-9cdbd317c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1f54d9-f578-402b-a350-f87065b97d28",
        "cursor": {
          "ref": "fd179354-8c8c-4838-aa3f-6e9105206e95",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "128a2db5-5305-40fb-8ca8-7068e29242ff"
        },
        "item": {
          "id": "df1f54d9-f578-402b-a350-f87065b97d28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "170a81ea-dc3d-4a85-b0be-fa83857a4519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b96d50-c08c-4d72-9b63-a6fe87902183",
        "cursor": {
          "ref": "1c4a4229-6986-4b19-bf0f-9c8063e8f77b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "97eddf36-abfc-4c2a-a1ff-ca55846edb38"
        },
        "item": {
          "id": "67b96d50-c08c-4d72-9b63-a6fe87902183",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "29a94950-43bf-432d-ab2f-a5c57604421b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16bba66-4ca0-4f40-9766-fc7285add36a",
        "cursor": {
          "ref": "f29ee4f3-24bc-47bf-983d-6375bc37245d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f34ab84e-377e-4a4e-b706-358ed6878d6b"
        },
        "item": {
          "id": "b16bba66-4ca0-4f40-9766-fc7285add36a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ae4e5195-b72d-4322-a530-0db24c7c1aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7470684-28f9-4d85-ae62-49e7a18dd27c",
        "cursor": {
          "ref": "3994ef72-c9ec-4286-acf3-fcb420c72398",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be4637b0-2c68-4d87-84ce-70927dde3a5f"
        },
        "item": {
          "id": "c7470684-28f9-4d85-ae62-49e7a18dd27c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "59ceaf4e-bbbd-4f6e-a911-d6d6acf8159b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bbfb13-a40a-4abc-9947-6de6a2286a40",
        "cursor": {
          "ref": "5756bb20-c67f-44bc-b3c4-9efc3c719c40",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c27a0a08-a310-4a48-a15e-dc36f5ccec24"
        },
        "item": {
          "id": "61bbfb13-a40a-4abc-9947-6de6a2286a40",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "db923082-22c8-4c63-b045-560cf53dc37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f29af7-cf1e-4a48-9ef5-2d42681d8cef",
        "cursor": {
          "ref": "d870b5d0-d761-4a0d-82e3-7d7a9f1d712e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "258bdb19-6fa9-4c48-9118-cf1df7ab2fd8"
        },
        "item": {
          "id": "d4f29af7-cf1e-4a48-9ef5-2d42681d8cef",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "43d5b1be-1aeb-4491-88e1-970a07d374da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c95c35-b963-441c-a6eb-93c3c621a392",
        "cursor": {
          "ref": "4e9bd396-7f04-4f1b-82ff-2bafd4d968b6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "42ce5a0b-f3e8-4b89-aaf2-79be7fe06e89"
        },
        "item": {
          "id": "07c95c35-b963-441c-a6eb-93c3c621a392",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "89fa1a6c-dab8-4853-b493-910c00522f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57a8ebb-8a50-4f2a-9d83-afdfeaf8b0e0",
        "cursor": {
          "ref": "3ad5f95b-fa06-43b3-9479-8033bb9a5640",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "74df0683-cb1b-45f1-befe-224b3498ea0b"
        },
        "item": {
          "id": "e57a8ebb-8a50-4f2a-9d83-afdfeaf8b0e0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fb7a4c43-d337-48a5-a014-6014f7015f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6d8b3c-afea-4440-9c84-19060cda7b2b",
        "cursor": {
          "ref": "814c93a9-2cac-4460-8983-3673728596c7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fb399c76-180f-4cc1-a26d-d2eb3dca0cbf"
        },
        "item": {
          "id": "4b6d8b3c-afea-4440-9c84-19060cda7b2b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0e059e74-b836-4ec0-99d9-0ac840e3e19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962a8090-8a01-44a4-b7ee-621f785f8d85",
        "cursor": {
          "ref": "769e7163-8ef8-43c3-b2f0-7f5bc6b923d3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "752e7d43-e959-4fa8-bc29-455729ccd64b"
        },
        "item": {
          "id": "962a8090-8a01-44a4-b7ee-621f785f8d85",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c95c9d40-5c3e-4cbc-806c-79f552491e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ea2bcb-ea3a-4d20-8d02-129f91573895",
        "cursor": {
          "ref": "91c642e1-c940-4390-b62c-4b7bed7fc459",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "26e8a7ae-9047-42c9-9fd0-89152b45830e"
        },
        "item": {
          "id": "32ea2bcb-ea3a-4d20-8d02-129f91573895",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2a5967c9-9330-4b6a-bfd8-deddb6babafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf071ca-58ba-4549-a968-76e5114fb1f2",
        "cursor": {
          "ref": "01082c35-e76e-4db1-b360-3ae733c9a9c9",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8b4bf4b8-d4b4-4c3e-9bec-cfbc164dd565"
        },
        "item": {
          "id": "ddf071ca-58ba-4549-a968-76e5114fb1f2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d74695d8-5de8-4aca-a516-b60700b146a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2960d045-e82b-4b20-88fd-54d289eeec7f",
        "cursor": {
          "ref": "6d9cc7df-59ea-4b65-aa6b-d58a54f2c179",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "74dd9c0e-e531-479b-8710-63ddcf381b42"
        },
        "item": {
          "id": "2960d045-e82b-4b20-88fd-54d289eeec7f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb503e2a-77a8-4ce0-90aa-7eced37a3a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79c1446-b64d-4d16-ba03-9479beb2e4ea",
        "cursor": {
          "ref": "f206addc-1fdd-4cff-aa6e-f2f015e7d8ba",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5a34b4e9-c258-4fae-92b8-36cbbd7be16c"
        },
        "item": {
          "id": "b79c1446-b64d-4d16-ba03-9479beb2e4ea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "26f970fc-7a8f-4fd2-9545-d91f78b41e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e24e17-5464-4512-bdd4-5da884f7113a",
        "cursor": {
          "ref": "d3b66c28-6778-4a4e-8bf7-def00782d08e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5dbcc583-5f38-4ccb-a753-71318c61b11b"
        },
        "item": {
          "id": "a7e24e17-5464-4512-bdd4-5da884f7113a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e0a9a490-f6dc-4174-96c7-12dc1aca3518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc0ab35-7ebb-4dc3-acb2-3873e86898e4",
        "cursor": {
          "ref": "eef41c4c-aa50-497d-b742-6adc76348a58",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "56bcad0c-56b3-4eff-a6e1-5321f0e8bcdc"
        },
        "item": {
          "id": "4fc0ab35-7ebb-4dc3-acb2-3873e86898e4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "923221cf-9d72-4709-b57a-1bc68288b1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953b17d4-6c50-4844-8f09-15d0d2166b9e",
        "cursor": {
          "ref": "748c6795-838c-4cd3-b6e8-c0b8e752bb54",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "497473f7-0a4c-439b-b958-5dffcff7b205"
        },
        "item": {
          "id": "953b17d4-6c50-4844-8f09-15d0d2166b9e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2d03f5c6-9b5e-439f-a6c3-d25bc302516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e14664-c6ae-438e-b792-0223f2bff3a5",
        "cursor": {
          "ref": "1e3ee806-a2cb-4db1-8c98-233791311f7c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9ad0f441-b060-44c3-b0e2-27315c6db01d"
        },
        "item": {
          "id": "b6e14664-c6ae-438e-b792-0223f2bff3a5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e7aac4e7-add7-4572-99f6-98cf1fdda3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70e71ba-a261-4fda-a4a8-b6238f47e07b",
        "cursor": {
          "ref": "b25d731e-f228-4e7c-890a-f90171ea0079",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5d8ed6a4-3e37-46a0-9a3c-25d163877ab7"
        },
        "item": {
          "id": "f70e71ba-a261-4fda-a4a8-b6238f47e07b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "801b6a8c-e5cf-44d3-aa47-3dcfddbb2cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00554380-0f34-4d0c-9c27-1a1d98b28f1d",
        "cursor": {
          "ref": "501c797b-bea6-4744-9b6c-8ad666682d1d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "50d4d5db-2926-430a-814a-04de03e3e44d"
        },
        "item": {
          "id": "00554380-0f34-4d0c-9c27-1a1d98b28f1d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "93737769-9731-4251-88e1-0dcf0a2fd20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d010a846-7faa-42a2-a101-a17f7b886f8e",
        "cursor": {
          "ref": "dea26731-c288-4bec-92f0-d78399a52525",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eed6f5c1-999b-4323-9a8b-27f1e52d5a60"
        },
        "item": {
          "id": "d010a846-7faa-42a2-a101-a17f7b886f8e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0bb96327-edd7-415e-9b89-c6b84eaa4b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9425051-dd8b-49b0-98ba-6d1af6fb20ce",
        "cursor": {
          "ref": "d7683fa7-cdbd-4e28-a392-435cd4d8257d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c6b53d36-6a25-4630-9fa3-e785cd8d5484"
        },
        "item": {
          "id": "c9425051-dd8b-49b0-98ba-6d1af6fb20ce",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "63292dd0-a5ef-4bd5-ba1c-3bd3f07a365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea51d930-9651-4231-9be0-14ddbccc0636",
        "cursor": {
          "ref": "d2928537-186a-4ae0-887b-ede601c2aa87",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e052a9e0-5c31-4544-bbf4-e0e95e659f29"
        },
        "item": {
          "id": "ea51d930-9651-4231-9be0-14ddbccc0636",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a35f5136-6ce3-4815-aae1-ae1c84ca0417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a434cf-8e48-4bd2-b9ab-4b71885a531d",
        "cursor": {
          "ref": "8468162d-ec8e-4282-a9a5-4a0149381354",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b9fba88e-99a3-4bc2-a0c0-feb32671d6eb"
        },
        "item": {
          "id": "c8a434cf-8e48-4bd2-b9ab-4b71885a531d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "082ac2c3-c646-4fc4-928b-e6307cbd66ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cf9436-224c-489e-875e-ff0f8d67fbb8",
        "cursor": {
          "ref": "7f81a4ce-ce07-4af0-9536-fc19fd4c1030",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "abcb3f5f-ad56-411a-9c31-975cddc7666c"
        },
        "item": {
          "id": "35cf9436-224c-489e-875e-ff0f8d67fbb8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "729ad369-d7d2-47f5-9b22-6319ab418c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e637c13d-48d4-4b53-adc1-312397178dee",
        "cursor": {
          "ref": "128bf237-f88d-4809-a6f7-323747eeb3fb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "403362a8-6fb7-4d2f-80b4-c7e54b5315d7"
        },
        "item": {
          "id": "e637c13d-48d4-4b53-adc1-312397178dee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "30842ec3-3689-42b2-a1b1-4c041c36c640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a3c1e8-2c47-4004-8144-d47bf08457cf",
        "cursor": {
          "ref": "0dae9934-f313-4cd3-9181-2eb49ee4e96a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c0733729-7929-4614-8b1b-f67d8797e5a1"
        },
        "item": {
          "id": "a5a3c1e8-2c47-4004-8144-d47bf08457cf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bbe02c50-c5f6-4516-ba06-24a66952645c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34667c8-0b8f-471f-b7c9-dc652e387011",
        "cursor": {
          "ref": "c685f079-ab3d-40e8-9a74-36dc871b2767",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "acf91685-52f0-4cbd-ba90-84198dd1cd5d"
        },
        "item": {
          "id": "b34667c8-0b8f-471f-b7c9-dc652e387011",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e590bd3e-ee7c-4665-a8db-4390688d70fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7826096f-8d89-49ec-9fdb-4e626f94390c",
        "cursor": {
          "ref": "eb039864-1158-4728-893b-3fc1a76affdd",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "574f61e5-c31a-4db7-94e5-dbe29194627f"
        },
        "item": {
          "id": "7826096f-8d89-49ec-9fdb-4e626f94390c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b7999e4b-06f3-4afb-b899-ee7c6600c1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550abba3-45be-4489-97b7-2a0d5b698408",
        "cursor": {
          "ref": "c2325e53-3487-4900-a9d1-dc40f0a3ac37",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f8632480-3d28-47c2-b0d6-d2f3d44473fa"
        },
        "item": {
          "id": "550abba3-45be-4489-97b7-2a0d5b698408",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "86002949-324c-4748-8d52-8cf010944c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82410cf-0646-4686-bcad-40cfb35d227b",
        "cursor": {
          "ref": "31a74396-78c2-483c-9194-ef8ecdd9f02e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "81f7d92e-3638-44ac-b783-bd14cbe53a88"
        },
        "item": {
          "id": "b82410cf-0646-4686-bcad-40cfb35d227b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1bde7adf-a4e1-4c3d-90da-a89320e684f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa4dd82-a221-4c71-be46-dfb617c72022",
        "cursor": {
          "ref": "65298f42-36b9-44df-b3f3-0834d5367b16",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e3784ef6-58fb-4759-b5d7-02bf36e14ddb"
        },
        "item": {
          "id": "4aa4dd82-a221-4c71-be46-dfb617c72022",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "82d0efa0-ae35-49ef-b4e7-c47cc8c0ee7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48639f52-749c-4d1d-adb1-0741f2197212",
        "cursor": {
          "ref": "5acee282-9de7-46d0-aa0f-63b1f642e242",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5a4ea09f-2a71-4f83-95bc-443af523d9a4"
        },
        "item": {
          "id": "48639f52-749c-4d1d-adb1-0741f2197212",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "49907841-867c-49c9-97fd-281153d89e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1591ab-31d4-4869-a68c-0cd0d91c3f2f",
        "cursor": {
          "ref": "7966101b-0544-462e-a140-8971ab6b4721",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f034c36c-bdbb-411b-bd24-e1c5f3de078d"
        },
        "item": {
          "id": "cb1591ab-31d4-4869-a68c-0cd0d91c3f2f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "63d7b3f6-3900-46fe-85f2-09990e7d8451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fe876d-d5c8-4947-b923-37b288dea6da",
        "cursor": {
          "ref": "8a801c48-f867-4fcb-adf1-f86cea994b7e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e92885df-16ec-4466-9e4b-2ba830f60930"
        },
        "item": {
          "id": "66fe876d-d5c8-4947-b923-37b288dea6da",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5535fa63-7a83-4b2d-b5c8-f1403fcbeae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b4dad6-c90d-4f75-9a6f-6445bb13418d",
        "cursor": {
          "ref": "7e36531a-d891-415a-a019-a73e8cba2281",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cb08b1d8-b8ae-439d-b65a-e30228a05131"
        },
        "item": {
          "id": "a1b4dad6-c90d-4f75-9a6f-6445bb13418d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "253ea7ff-6f01-435d-8644-84564c5cc560",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2aad85-00e1-47ee-9e32-fb0969ecb2cf",
        "cursor": {
          "ref": "d5ce7435-9314-498a-8300-2f254425ead5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0f92884e-07f6-4e03-8bbc-80ad4aa48caa"
        },
        "item": {
          "id": "be2aad85-00e1-47ee-9e32-fb0969ecb2cf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c99bac03-a3da-40d8-b697-478ec1fc4b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dd7d6461-f42c-4e68-8a51-00363f2f3843",
        "cursor": {
          "ref": "5db94759-998f-400f-a10a-d165c7f5510e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9f1bab20-f631-4260-af32-c878bd25deb9"
        },
        "item": {
          "id": "dd7d6461-f42c-4e68-8a51-00363f2f3843",
          "name": "credentials_issue"
        },
        "response": {
          "id": "84519a60-c237-4135-9b3d-b3a553467213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5cda4769-33c1-4eae-b849-0dbbdccb6096",
        "cursor": {
          "ref": "817f71ac-ccec-4cce-98e2-d2bdb800c091",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "97fbd3da-bbb3-4e97-bf1d-c0f52791f3e0"
        },
        "item": {
          "id": "5cda4769-33c1-4eae-b849-0dbbdccb6096",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2b4f9790-c994-45d9-a01d-842595a55120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "692fe444-b31c-46f7-9943-2078ca676539",
        "cursor": {
          "ref": "ea08411a-7dbd-4de3-a646-7c394221d806",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6cada2d7-bdb3-4f63-a14e-287b77f77f68"
        },
        "item": {
          "id": "692fe444-b31c-46f7-9943-2078ca676539",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bcbccd7a-b833-4422-879d-a8e6f10e2678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "11db4c2c-210f-4ff3-ad48-566249f250e6",
        "cursor": {
          "ref": "f71a6e13-8531-418e-8b69-564556a65444",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "61c44bcf-8124-4075-997d-6523269aa88c"
        },
        "item": {
          "id": "11db4c2c-210f-4ff3-ad48-566249f250e6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2324d194-564d-4a20-a6f4-9e0e13686cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "df09a4bd-0582-4331-82ba-29bd468060e9",
        "cursor": {
          "ref": "3272c5b9-d772-43d2-b82d-413ca4819c7e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d6b10722-2c76-4709-a8fb-1128adc7a66d"
        },
        "item": {
          "id": "df09a4bd-0582-4331-82ba-29bd468060e9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c8484217-8dea-42f6-94a2-f9b7899523da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7dafbcb1-3847-41a9-9ac2-3b8f5b79125d",
        "cursor": {
          "ref": "97cb7dbf-3a68-44c6-b8d5-a0f01c23a786",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d83424d7-b0a4-41ae-b52d-f98b007fea9e"
        },
        "item": {
          "id": "7dafbcb1-3847-41a9-9ac2-3b8f5b79125d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d43ccae6-1f4b-4b96-9d7f-b0638b1e616f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9c0b20be-a441-41f3-9e66-b55bead2de90",
        "cursor": {
          "ref": "8031cc17-7ca6-479a-8fae-185d576c6062",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3416af4c-d2e9-49f5-bda7-b2ebcd22396c"
        },
        "item": {
          "id": "9c0b20be-a441-41f3-9e66-b55bead2de90",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "58d19c28-1c15-40c7-a81d-68824e6e33aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073f3061-584d-487c-b9c5-1dc8f2301a0f",
        "cursor": {
          "ref": "52e8c16d-5921-4ff8-997a-877a212b6bb4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cc12d359-8595-4985-b624-cdc2648485b2"
        },
        "item": {
          "id": "073f3061-584d-487c-b9c5-1dc8f2301a0f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f9e623a1-a40e-4ca8-bd9d-53065b873554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a73dc8-270a-4396-970a-556e3fe6e7e8",
        "cursor": {
          "ref": "39a16c7e-64b4-475a-9b11-04adb1e8a412",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "80c8da04-26b4-47a3-a96f-3759fc9e5645"
        },
        "item": {
          "id": "23a73dc8-270a-4396-970a-556e3fe6e7e8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "300036c6-e66d-41a1-8e28-b185eb34faed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6f8009-fa08-4d37-b75e-ffa0f5b9af51",
        "cursor": {
          "ref": "48cac103-3887-4f29-96f1-e1a006b04357",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a2b10e29-9489-4a12-bb2d-d2e3cf913576"
        },
        "item": {
          "id": "aa6f8009-fa08-4d37-b75e-ffa0f5b9af51",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "60c887e2-4626-4914-aea7-2935e701ab03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55b4cf4-2331-42e1-9f82-ec22fdf6a9bc",
        "cursor": {
          "ref": "02976d31-35f3-4dca-8784-69e6b1d1c2df",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f6f9de15-28c8-4549-85f1-3d1b6f24275c"
        },
        "item": {
          "id": "f55b4cf4-2331-42e1-9f82-ec22fdf6a9bc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3870369b-9253-405f-b98a-2921a220b53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd48fe6b-5bb5-4d65-9684-dccc1e78f28a",
        "cursor": {
          "ref": "51a5919b-5594-42d6-8624-1bd0c8b60ddf",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1361614a-90e3-485f-870c-3730788927ee"
        },
        "item": {
          "id": "dd48fe6b-5bb5-4d65-9684-dccc1e78f28a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "943b8f9b-2703-4081-9bbd-a2e7105e0c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04947958-627b-4670-8bc9-d1c3feba9e02",
        "cursor": {
          "ref": "2efec69a-48dc-4086-856e-a94d686e6f4b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "85910da1-e4ec-41d4-bdf2-82a0f8389688"
        },
        "item": {
          "id": "04947958-627b-4670-8bc9-d1c3feba9e02",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "100945f1-5e93-4c1b-8923-863873b1cf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2591de2c-a904-4bc9-9e19-863bbe3c3211",
        "cursor": {
          "ref": "75746387-4fdb-4e49-9321-9dd171731566",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cf7f4c9b-9081-417a-95b0-0329749ae193"
        },
        "item": {
          "id": "2591de2c-a904-4bc9-9e19-863bbe3c3211",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "21a3f203-7b27-4dc3-8277-58fb7656d68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841a3a2a-1460-4625-b807-07379b515160",
        "cursor": {
          "ref": "c9dbdb27-e3be-4391-8783-52456cc90a8c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "920de826-1dbb-45e8-8285-7b490f1003f6"
        },
        "item": {
          "id": "841a3a2a-1460-4625-b807-07379b515160",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "62bb5312-d8a7-4e82-98df-8541e5da632d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e28c9a9-4969-4fa7-acf9-a95d87e38c06",
        "cursor": {
          "ref": "a09083b7-5c35-4d3d-b4d2-bdee1efbea14",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fd464842-5f11-48f9-94ec-caee51bfa635"
        },
        "item": {
          "id": "5e28c9a9-4969-4fa7-acf9-a95d87e38c06",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d2f0976c-ad91-4b6e-939f-aeb0a4ac79a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bac4e5-671f-4b30-ada7-6764718f2253",
        "cursor": {
          "ref": "f46a1606-282e-420b-b847-24c68e123f28",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a7d2fa8-bcfd-4e04-b44b-87451342c6ea"
        },
        "item": {
          "id": "d1bac4e5-671f-4b30-ada7-6764718f2253",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0c92b330-7917-48bf-8271-69aefb45bbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381656d0-b0b2-4804-b53f-1a9a165a1df2",
        "cursor": {
          "ref": "2444569e-8d0d-4e06-b1ee-4b2b7232122f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7e8e2d1f-7514-4e6c-9d2a-2832c8993e22"
        },
        "item": {
          "id": "381656d0-b0b2-4804-b53f-1a9a165a1df2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3b20a7a0-d332-44d6-bea1-430a8c5b2398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af50d36e-7379-4642-8ad5-b8c0c295a2a9",
        "cursor": {
          "ref": "d411b405-6b89-4781-bbcb-3683ac884f16",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3f14b0e6-50ce-4642-9c44-9046b604cf32"
        },
        "item": {
          "id": "af50d36e-7379-4642-8ad5-b8c0c295a2a9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f6a36bca-3204-4df4-a236-6b3dab628654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b08f4e-f128-4d61-aab6-e01c44815f35",
        "cursor": {
          "ref": "0e1ebaf0-c9ca-4b50-9fd2-4403f317bece",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7fedf6c2-499e-4a66-b92e-0fd4af209fe2"
        },
        "item": {
          "id": "79b08f4e-f128-4d61-aab6-e01c44815f35",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "842d58d5-938e-487c-a536-a78f210680b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8651d9e2-9d71-4f89-aecf-156c5d4a9815",
        "cursor": {
          "ref": "a987b7a5-3965-4d96-9af7-7baeedcb6442",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3c3ba510-fc17-4e1b-93f1-d65299e411ce"
        },
        "item": {
          "id": "8651d9e2-9d71-4f89-aecf-156c5d4a9815",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6abec1fe-3f69-4998-afbc-24b381705834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518a3996-5316-4649-a019-bf55bdc8ac7c",
        "cursor": {
          "ref": "b2357826-376d-4293-b65f-e7416c8a5d64",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "02dd5680-9b8e-4eba-be8d-a988711f3d59"
        },
        "item": {
          "id": "518a3996-5316-4649-a019-bf55bdc8ac7c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7cde54ad-ac4c-46d5-96e0-1c4e829cd6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f60658-3b31-4e5e-ba06-78abdec7a599",
        "cursor": {
          "ref": "97f7f6d1-9e09-47cf-a318-cd45b699ade5",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c3f02321-5b75-4457-90a5-7055017926f7"
        },
        "item": {
          "id": "07f60658-3b31-4e5e-ba06-78abdec7a599",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b3ca3b60-f7dc-475f-8e15-5d9dbf0d25e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ec7202-f6b1-4b0e-b8be-ec23df59a14f",
        "cursor": {
          "ref": "59e421e1-a52d-4663-9784-44564c9aa8a5",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5bc19210-3fa3-467f-b5ac-078417ab999a"
        },
        "item": {
          "id": "f1ec7202-f6b1-4b0e-b8be-ec23df59a14f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3a0e3cff-7c7c-4fcc-9158-6f001958cbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f99bb9-f71d-45f6-9390-badb83d67fbf",
        "cursor": {
          "ref": "4b0699bd-41e7-43d5-b2ab-ee0f0319ec47",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "98592eca-9c94-4e6d-a561-deb2bf98e55c"
        },
        "item": {
          "id": "26f99bb9-f71d-45f6-9390-badb83d67fbf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4bdf1019-0a78-488c-a433-1d6897999470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700685b3-8a90-4515-bf19-2512ad1b7a5f",
        "cursor": {
          "ref": "38b5fca5-5848-4831-94e8-e3584fae9208",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e38b4bc-19c2-4660-bdcf-e675631e554b"
        },
        "item": {
          "id": "700685b3-8a90-4515-bf19-2512ad1b7a5f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1297951d-a8ad-49d4-9aea-b3630f1f4814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0d899c-5f75-46f2-80fc-e3caa85c98be",
        "cursor": {
          "ref": "da602ca8-ee1f-464d-9ecf-4f6ac81216df",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5719c15a-17d1-477c-a186-11907506956d"
        },
        "item": {
          "id": "4e0d899c-5f75-46f2-80fc-e3caa85c98be",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "99b47c61-d573-4d82-8d20-9f6613bc5a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd60c49-4b58-4d3b-b104-d0e2f2531414",
        "cursor": {
          "ref": "4bc0ca3b-0f4b-479e-a88e-b11cfa366fdd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c3ac70aa-e0ca-431a-a5b8-91a3b94528cf"
        },
        "item": {
          "id": "3bd60c49-4b58-4d3b-b104-d0e2f2531414",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "af0a4574-93ea-46c7-8484-50905af863f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93d97dc-637f-4bcc-923a-29ab56855089",
        "cursor": {
          "ref": "6ea0e777-5b92-4507-8adc-f069a890ed48",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8b52dca5-f3c5-4f4d-b64d-922f5593f880"
        },
        "item": {
          "id": "b93d97dc-637f-4bcc-923a-29ab56855089",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8d9b4ad-fe0a-4466-98ed-a3de64a0b636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e36aa8-d297-4476-9ec0-9115301c5af6",
        "cursor": {
          "ref": "fcbeb2da-f0bb-49d7-ad7d-502a4a129d07",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5dd72f89-76fc-4761-b2f2-b656d68230b7"
        },
        "item": {
          "id": "e1e36aa8-d297-4476-9ec0-9115301c5af6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f2bc88ab-66e9-48d8-ba2f-25c9832a7ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d46cf3d-e7eb-4a91-bd9e-484cda9c7f87",
        "cursor": {
          "ref": "8c91f498-babe-4d59-a525-2052396869f9",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "128ea26e-507e-4882-8f6a-51001fd176fa"
        },
        "item": {
          "id": "9d46cf3d-e7eb-4a91-bd9e-484cda9c7f87",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "517d5cc8-1681-42bf-b2a7-4b59e42ac8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd65dde5-ddd3-457a-8aa1-f1472847fb83",
        "cursor": {
          "ref": "064f7353-d81f-4fe5-a6a7-7fdae1a1b495",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "20a930c3-d475-4daa-ba77-a4a57af50c45"
        },
        "item": {
          "id": "bd65dde5-ddd3-457a-8aa1-f1472847fb83",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "664a7887-9f3e-4733-b94c-71593fb9d9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653f153-3ae9-4d61-95f0-fcc148f74685",
        "cursor": {
          "ref": "d0148d50-31db-4401-943d-ada28fdcf1a0",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "22bb7020-85c1-4817-9849-ed75c47d5548"
        },
        "item": {
          "id": "6653f153-3ae9-4d61-95f0-fcc148f74685",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b742735c-8d93-4b2b-a178-2e3f3438c33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469d26ad-52a4-45f2-87e6-d958be5721c5",
        "cursor": {
          "ref": "53fe1fe6-7982-4ead-b717-b26e1f009fed",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c5ff3098-232e-4b3a-89f0-a6fb8b608509"
        },
        "item": {
          "id": "469d26ad-52a4-45f2-87e6-d958be5721c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "325c95eb-3b18-4aed-a20f-850742e2478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa3ae93-7fc3-4e05-b394-898f97db7349",
        "cursor": {
          "ref": "fe948785-5834-41dc-bb7f-b69496ea106f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "57e67c06-d623-4dae-b32b-b7bb1c815a85"
        },
        "item": {
          "id": "4fa3ae93-7fc3-4e05-b394-898f97db7349",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1da421aa-929d-4ed9-a8ca-061824c96218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9232d66-0e22-4e63-91a8-7de12b883616",
        "cursor": {
          "ref": "dc23fdfb-d500-4f87-96e8-26509e42dc58",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8d481ada-b83a-4a66-b00e-659c4c41e992"
        },
        "item": {
          "id": "a9232d66-0e22-4e63-91a8-7de12b883616",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "542b9f44-c2d3-454f-87d1-3dae070ef996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0040c8ba-393d-4cff-be7b-73fa43de5d94",
        "cursor": {
          "ref": "fa8e0a18-4b79-45bc-915a-cf9990e6f9db",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "58c9299e-4173-4551-843e-16b51551428b"
        },
        "item": {
          "id": "0040c8ba-393d-4cff-be7b-73fa43de5d94",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31a21643-62ad-4a8e-826b-7a39f161dd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d83a65c-222c-48e4-b03f-9272dea24f84",
        "cursor": {
          "ref": "82cf1394-63d6-44de-a3cc-191d276fc6ab",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "707be25d-b9cc-4f04-8355-758bfa1a8051"
        },
        "item": {
          "id": "5d83a65c-222c-48e4-b03f-9272dea24f84",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aceb0301-f454-4d35-8197-59ce5269b73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dbfad0-b577-4529-9f4c-87c989740c8c",
        "cursor": {
          "ref": "ae799978-78bc-4baf-94fc-ac8febfda501",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a3f16794-b554-4337-b91f-63175008c8aa"
        },
        "item": {
          "id": "a5dbfad0-b577-4529-9f4c-87c989740c8c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "122c6d9a-0af2-4409-9fdc-b9d1fdc2937c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73962a6-0552-4856-b413-d04add357064",
        "cursor": {
          "ref": "2607a793-29fa-4cee-ba0a-1c6f61acafc0",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f73e990e-5499-4463-84a8-a5e99fd2eeab"
        },
        "item": {
          "id": "b73962a6-0552-4856-b413-d04add357064",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "28a4b185-529d-4afd-885f-8476949385c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb47deb-7f40-4a83-99c6-47f8a82df2d7",
        "cursor": {
          "ref": "cb3e970f-e614-40f2-9b45-9167ad213b5f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "872837d6-5a18-4965-bf31-9c8f36054c42"
        },
        "item": {
          "id": "3bb47deb-7f40-4a83-99c6-47f8a82df2d7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ab2e46bc-e662-404e-926b-4d82f1b17f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5831f021-ee3c-4abe-b1aa-092e8a0dbc14",
        "cursor": {
          "ref": "2604ed10-6226-4bf1-a1c5-fd78eb93dca8",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "768328d6-bcb3-4178-9abd-27301e3523fd"
        },
        "item": {
          "id": "5831f021-ee3c-4abe-b1aa-092e8a0dbc14",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ec944f4b-a5fb-4c5b-b57d-7f2e8aaba1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bc5351-0955-4c07-b4ad-cfe1e5d183e8",
        "cursor": {
          "ref": "2dce537e-0250-4c68-8ff3-fb03a355deab",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "33fddd3f-2d98-4b0a-874a-0f8fa66977d3"
        },
        "item": {
          "id": "39bc5351-0955-4c07-b4ad-cfe1e5d183e8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "289159e3-0be0-4e21-80e6-64392ab193bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003e37cf-ab4b-4cc7-9e54-a63c292fb600",
        "cursor": {
          "ref": "c5c5b744-fe2c-4128-be78-869b88e23a08",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5804fc28-5906-40af-bd5b-05784d35ad4a"
        },
        "item": {
          "id": "003e37cf-ab4b-4cc7-9e54-a63c292fb600",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c8812010-845a-41c9-9c60-cfb7a2cff81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adac39a-fdb9-40a1-bb62-f102357ac0ff",
        "cursor": {
          "ref": "c74729b2-188b-4cf4-ad98-658aee2daa9a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0f14e12a-96d8-4486-88f5-629767ef81be"
        },
        "item": {
          "id": "4adac39a-fdb9-40a1-bb62-f102357ac0ff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f327f8c9-f2a8-4493-9507-730fb9ed9507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8675245c-85c0-4fec-9486-f03c5bfaad83",
        "cursor": {
          "ref": "02b2fcbf-6dcb-4220-8204-421faa51855a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "51f868c9-95ed-40c1-a949-da1390606c78"
        },
        "item": {
          "id": "8675245c-85c0-4fec-9486-f03c5bfaad83",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "11e60ad0-21a1-43d7-9c94-1680c216d930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b6b689-efc1-4176-9ea5-a9ef2eabab78",
        "cursor": {
          "ref": "6b83f239-ce5e-4bd6-aa59-ad863f4383b2",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ed5bfd17-26ea-4a35-ae51-def0783e2b61"
        },
        "item": {
          "id": "d7b6b689-efc1-4176-9ea5-a9ef2eabab78",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "515eaf43-2e7f-4eee-b8d0-168193a864d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7cc1f2-87c5-45d7-989c-71fa2946655b",
        "cursor": {
          "ref": "dadfc16d-3f3c-47c3-b97e-f335a5abde8f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ec126d06-032b-4e89-8e63-4afe1d7b6595"
        },
        "item": {
          "id": "fb7cc1f2-87c5-45d7-989c-71fa2946655b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ac258527-116b-4f6b-9355-d10f16a52385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ae68c5-1c38-47ae-8a97-a21d185d246c",
        "cursor": {
          "ref": "a82fa342-fef2-4c6a-a7f1-ecb041db32f0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "849cf737-57ca-4921-8658-91b14deb1e47"
        },
        "item": {
          "id": "58ae68c5-1c38-47ae-8a97-a21d185d246c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e12c631b-b252-4c8e-94cb-dcc0d02be331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3a8732-238a-4cf5-b5c4-1132a686c2f2",
        "cursor": {
          "ref": "5b8e6a04-0686-4aa5-ae8a-5d397a5323cb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c0265156-5f3b-4fda-9e7d-2a7f4ee9eb82"
        },
        "item": {
          "id": "4f3a8732-238a-4cf5-b5c4-1132a686c2f2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0203cb10-edf1-4c9d-b340-dee3ba33b41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5c289-5187-47f3-9fdd-0bb3053caa96",
        "cursor": {
          "ref": "84851957-098e-4c72-adc1-429bf359689d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ce960593-6d37-4c95-82c1-3dcf409c0054"
        },
        "item": {
          "id": "47f5c289-5187-47f3-9fdd-0bb3053caa96",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f4cd3aeb-10d3-40bb-b9ae-2c0eef04707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5fb3c3-08d0-4c70-8394-a144d8645b01",
        "cursor": {
          "ref": "f20df605-405e-462e-a0ae-db033bb5def5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "630de5d9-8b0d-4199-9cfa-0a67544c31ab"
        },
        "item": {
          "id": "3b5fb3c3-08d0-4c70-8394-a144d8645b01",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0993b8e3-8ad6-46da-a7f1-5b0c219f5a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797e4198-5dd7-4a80-a5e2-ab95ff4e7747",
        "cursor": {
          "ref": "4abc777f-b2ed-4a4b-b447-f387e2c2fad3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a36669d6-24a2-4f73-81ae-71349283bb7c"
        },
        "item": {
          "id": "797e4198-5dd7-4a80-a5e2-ab95ff4e7747",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bfe27ad0-19df-4a83-83be-a9486f2d99c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94f3c1b-32e5-478f-b31d-c98eef40ff5b",
        "cursor": {
          "ref": "91e71e27-1007-41b6-9f3d-1ccacfff135a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5dc02944-fc81-4f49-8b81-43d82b7ce822"
        },
        "item": {
          "id": "b94f3c1b-32e5-478f-b31d-c98eef40ff5b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fa3a2ebf-0967-4b46-9762-878ed8777b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10219ed3-577d-4a55-8313-4ce556a89daf",
        "cursor": {
          "ref": "95fa845b-1143-44b0-a3d0-0e16441bfa40",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "63603ac0-3277-4ecb-886b-ce1495786a26"
        },
        "item": {
          "id": "10219ed3-577d-4a55-8313-4ce556a89daf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "119a688b-0e34-4602-9ea3-ae05ec5aac31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796355e7-5c96-48b3-b6d4-a351cfdea4e5",
        "cursor": {
          "ref": "ec9656f9-7b83-46c2-b6fb-52d69ba89661",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5fd42ba8-05fa-443c-8f5a-6b43001effe2"
        },
        "item": {
          "id": "796355e7-5c96-48b3-b6d4-a351cfdea4e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8321e6de-b5aa-40c4-ae75-d45431f460bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da18dc38-4161-46c7-8972-e2a937682eef",
        "cursor": {
          "ref": "4a9b2006-6b23-462f-831a-1601992d296f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1efe4642-c436-4d91-b69f-d53e570512b7"
        },
        "item": {
          "id": "da18dc38-4161-46c7-8972-e2a937682eef",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "add69f56-3a33-46a5-b452-499640f4f600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05045d4-dfb2-4173-a321-48dca0fe3c28",
        "cursor": {
          "ref": "382c0d38-6a54-4576-bcc9-d067470f977b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2914c3c8-4b78-4dc7-9e95-fdda2e0875d9"
        },
        "item": {
          "id": "a05045d4-dfb2-4173-a321-48dca0fe3c28",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5f3e089e-4be2-41fd-a69f-e2a6af7efe69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511ecc62-a919-472e-95bf-3a79c969a065",
        "cursor": {
          "ref": "f403ddbe-3dd9-49c3-938d-8b192342d3d5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3869cc3c-a2e8-4f9c-916b-8ebfac1c79af"
        },
        "item": {
          "id": "511ecc62-a919-472e-95bf-3a79c969a065",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "38496e46-e89d-4060-8055-3158d9781694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e03d80-0964-422d-a248-a7a245a97540",
        "cursor": {
          "ref": "01ac6bd3-3a77-4ab9-9b60-3df3c47564bf",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "46b40f3d-8005-4160-95fb-0ff76399d0c5"
        },
        "item": {
          "id": "05e03d80-0964-422d-a248-a7a245a97540",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c16f85a9-0fcb-4eb1-85b3-52ab041da227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095a1e9d-bcaf-4411-b264-a6c4c5367555",
        "cursor": {
          "ref": "8a717584-1d68-4a1f-828a-090a6eccb074",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b41529ed-7d2b-4109-9cb9-15b2fb65b4d4"
        },
        "item": {
          "id": "095a1e9d-bcaf-4411-b264-a6c4c5367555",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f2dfb6fd-275b-49eb-a239-d07a6decccd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac7b564-16cd-42fa-ba38-efde64562933",
        "cursor": {
          "ref": "0d3874ec-d0f1-4d2b-a7bd-31e9ebfe3252",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "be353dec-2e0e-429a-a01d-01593bf5767a"
        },
        "item": {
          "id": "7ac7b564-16cd-42fa-ba38-efde64562933",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a576ae8-7cb6-46d3-ae9c-8c38fda86f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd055f5-7b28-4484-a390-80fd678e4ddd",
        "cursor": {
          "ref": "63cef68a-7f63-4ce5-8121-9ede72fd0aaf",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ba8f6c08-4faf-4932-9377-7c4555c1a322"
        },
        "item": {
          "id": "ddd055f5-7b28-4484-a390-80fd678e4ddd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f1acd9ff-a147-4770-bad5-f033c58cd52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd673b65-b8d8-43e2-8c1e-73fd5cd120ab",
        "cursor": {
          "ref": "742f5e13-1244-467a-905f-9891902aea13",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a19505d2-4e3a-4ce5-86e0-f73289734647"
        },
        "item": {
          "id": "fd673b65-b8d8-43e2-8c1e-73fd5cd120ab",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b8c70f9b-7537-4658-8255-bc59d5ca431a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41304ee8-c49c-4a98-bd40-fd0c8312da24",
        "cursor": {
          "ref": "a9b37d21-4339-4098-a71b-9a864136338b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3762bca6-d426-4989-80a2-ca5d696e5266"
        },
        "item": {
          "id": "41304ee8-c49c-4a98-bd40-fd0c8312da24",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "09f0c67a-6621-468b-b153-6565dc380143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41742305-b0b4-46f4-87ee-8050370f5a66",
        "cursor": {
          "ref": "335576a6-d381-438a-bae4-39de21daabc6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "00dade09-511d-4e43-ab7b-f0aa5ba16f5f"
        },
        "item": {
          "id": "41742305-b0b4-46f4-87ee-8050370f5a66",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5340dd68-5803-4345-a1ff-9cb63e50ea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584ee74e-2ae8-4be6-8ecc-3bf84905f6e4",
        "cursor": {
          "ref": "4e260e99-5617-4724-8371-ed3240441426",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "31388b9c-16e9-4067-ae70-d3031accbe93"
        },
        "item": {
          "id": "584ee74e-2ae8-4be6-8ecc-3bf84905f6e4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d7eb00b7-163f-4889-b13e-26b763c963e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c2132a-411e-4b69-acb2-166207e98baf",
        "cursor": {
          "ref": "9764ce14-95f6-4ea7-966d-9b0e9122ee99",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aa782bcf-ee23-4fc2-839f-3a01948776e4"
        },
        "item": {
          "id": "d3c2132a-411e-4b69-acb2-166207e98baf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f1f74c6c-4e04-4e1b-bf34-e74190fbfbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa07baeb-4180-40a0-9b9f-70e893746abc",
        "cursor": {
          "ref": "c5424cd7-9b55-4413-9ab7-e21b3a61aedf",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e98ed5e1-cd9f-41c4-840d-d634c3ab34c7"
        },
        "item": {
          "id": "aa07baeb-4180-40a0-9b9f-70e893746abc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5cbcd595-f09c-4564-8050-7944789d1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2451b3fc-47e2-4c1d-8c87-c837b0d540f5",
        "cursor": {
          "ref": "5a28bbba-b172-466f-aee6-70e548d91fe6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dfdc8652-d465-4d31-a094-b4224b61d576"
        },
        "item": {
          "id": "2451b3fc-47e2-4c1d-8c87-c837b0d540f5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7485e4f8-5e98-4909-9461-cc92630fceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb43288-bf43-469c-8721-0861631a0306",
        "cursor": {
          "ref": "a483e1e6-7781-4172-878a-9eb20b67b131",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b172466a-512c-412b-bd95-ef1bb284d7c2"
        },
        "item": {
          "id": "3fb43288-bf43-469c-8721-0861631a0306",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5eaa394f-33c6-4d79-b752-d86d23c60e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c8e402-99fc-4c50-8fb0-2b18bd119585",
        "cursor": {
          "ref": "e92bc36b-5e1b-4eaf-94f9-83e4d4136f4f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dce38a20-2a7c-46ad-bddd-32ed68753c8d"
        },
        "item": {
          "id": "f5c8e402-99fc-4c50-8fb0-2b18bd119585",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ece2c487-5c25-4d2a-8791-b0af979f3b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e11c856-3660-436d-87f9-a8471cdccfc2",
        "cursor": {
          "ref": "c1540ae9-8b10-4acd-9a6f-b3cd6f79ca76",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ee4f8f09-8388-498c-9287-a3cb2fa520c6"
        },
        "item": {
          "id": "7e11c856-3660-436d-87f9-a8471cdccfc2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dfd43706-3144-4f5f-8fb7-16fb610a4bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedd54a9-9b26-4091-a54f-5e5a8038a210",
        "cursor": {
          "ref": "6b664446-0114-4ee8-b8ae-95e0608a94be",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8b4ee135-20ab-48a5-9576-79a2caa5329c"
        },
        "item": {
          "id": "bedd54a9-9b26-4091-a54f-5e5a8038a210",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "60537a29-8a17-4bad-acda-42b57e0e733e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9065a732-e63d-4032-a5d1-f4f2bd3bd704",
        "cursor": {
          "ref": "935113fd-2f93-48d4-af0f-057c6e84212a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "29fdd675-5c7e-4791-af79-e65d4e0acb5c"
        },
        "item": {
          "id": "9065a732-e63d-4032-a5d1-f4f2bd3bd704",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0238189c-0cac-41ed-87ff-16fd61ffdcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a567af-d668-4e1e-a6e4-877bf39a70c5",
        "cursor": {
          "ref": "282210d0-d60b-4281-9401-159b63f20f97",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "25929e4f-5ebd-4a8e-a08d-0617dfa91baf"
        },
        "item": {
          "id": "b4a567af-d668-4e1e-a6e4-877bf39a70c5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "80650ab7-dec3-444b-bdf0-faf180970322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd3a3fb-e301-44a3-b88b-57df71f4ec8b",
        "cursor": {
          "ref": "402f3d32-5b3c-4a8e-bdee-573d111f5b94",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d069b938-ed28-416c-8ca0-c304143c06fd"
        },
        "item": {
          "id": "fdd3a3fb-e301-44a3-b88b-57df71f4ec8b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2132f9d4-e3a4-4900-8fb5-fed8d0ae50db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50265a4a-8af4-4bc5-a787-9d3ec38a5bab",
        "cursor": {
          "ref": "02b0707e-a075-42c7-a820-d1e99a299032",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a45bf0b7-3cb9-48ac-88b4-c559641c64da"
        },
        "item": {
          "id": "50265a4a-8af4-4bc5-a787-9d3ec38a5bab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "27657ec6-8b8c-4dc9-87ec-fe1e9d0d6fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f268bf94-f68b-406e-ac96-e18eba80f0f8",
        "cursor": {
          "ref": "061e1085-5094-4963-9cd4-5dbdccf4432c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0ccab967-4abc-4f5e-8b65-1f914fe349d4"
        },
        "item": {
          "id": "f268bf94-f68b-406e-ac96-e18eba80f0f8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "245d2f23-9ea7-4223-b998-a68526ecdb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8a6783-0a4f-4494-81f6-999f0039b0c9",
        "cursor": {
          "ref": "7f34814b-f461-4f55-b72a-1788e9a01047",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "14ac7bc5-57aa-466d-9577-5247c5269209"
        },
        "item": {
          "id": "be8a6783-0a4f-4494-81f6-999f0039b0c9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c14a8b1d-7aca-49be-b4df-3e8e58770391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2805087-44ec-4391-b61f-b65a7d670034",
        "cursor": {
          "ref": "e8489ed5-5a9f-4864-aaab-a78b56fd70c6",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6c26d510-01ba-48d2-a058-5109b87f31c6"
        },
        "item": {
          "id": "e2805087-44ec-4391-b61f-b65a7d670034",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "85a85c00-0bbe-4052-8d06-83a56aef6b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02799dba-a0bb-40aa-ac2e-0032f4052d32",
        "cursor": {
          "ref": "e2bf5ba6-f854-480f-8f41-3b198a409059",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "15c8980c-f409-4608-96e1-dc127d24b800"
        },
        "item": {
          "id": "02799dba-a0bb-40aa-ac2e-0032f4052d32",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c96adaf4-0934-47f3-9297-1bc5afa3998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33941cda-9cea-43f2-a256-232a86aa1989",
        "cursor": {
          "ref": "d53209ce-07f8-4e5e-9c72-996b3f3f3d35",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "071e07d1-aa1f-490c-a100-cf36eeb40b2a"
        },
        "item": {
          "id": "33941cda-9cea-43f2-a256-232a86aa1989",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "663452bd-1b31-470f-bac3-e893f005baa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c52562-9747-4d1d-a08b-e9cbfaece6a1",
        "cursor": {
          "ref": "22dcea3f-b226-4714-bcd2-7b05f4ab5bb2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "320cd473-73a8-44ae-8b2b-75a6ecd397da"
        },
        "item": {
          "id": "03c52562-9747-4d1d-a08b-e9cbfaece6a1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7a876e85-d39f-4053-bca6-b9ed86a0c619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d1af35-c6d5-4074-87a1-0ce7d49998f2",
        "cursor": {
          "ref": "fbccb4c2-df81-4b9a-9df5-29cd93cf4a7f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "067a794a-f804-4af4-9429-0524bf7bb38e"
        },
        "item": {
          "id": "30d1af35-c6d5-4074-87a1-0ce7d49998f2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "75ab1e52-33c2-4b95-a40d-4d575d364af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beace6f-67ba-4515-8087-92e1a93511a2",
        "cursor": {
          "ref": "d55be369-b678-4279-9dca-08313e06c29c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "255efa4a-bf66-4f4d-ac99-09111672aa88"
        },
        "item": {
          "id": "6beace6f-67ba-4515-8087-92e1a93511a2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d33e8bbb-fbf5-4cf4-a5df-fabd52a174a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0326c17-6854-4039-9ec1-231b231f9592",
        "cursor": {
          "ref": "2a985678-bc09-4fdc-8ab1-3fdf804766ab",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eebafe66-f118-4885-800f-a88d26f0154d"
        },
        "item": {
          "id": "c0326c17-6854-4039-9ec1-231b231f9592",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7d0590c4-da0b-46a9-95fe-a0f74a571f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4aa76c4-f453-4971-8ef5-ef4dbfbbc8a4",
        "cursor": {
          "ref": "85c2dff4-fda7-4958-abf6-d08ac0183258",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b8afcdf2-ae3f-4933-9e7a-68bed15eb414"
        },
        "item": {
          "id": "c4aa76c4-f453-4971-8ef5-ef4dbfbbc8a4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a82f8acc-d903-446c-9f8c-c065e6bfbf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25920d9-e281-4b02-8af0-4f1f9537f0d0",
        "cursor": {
          "ref": "d36cd91f-e12a-4278-9f9b-e27d1c07c044",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d5ab556b-dfd5-4ee4-b6f3-c4b6357d48ea"
        },
        "item": {
          "id": "c25920d9-e281-4b02-8af0-4f1f9537f0d0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f5ac2755-95f3-40ca-a54c-7c49b9e65fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0218e3fd-d207-48a6-9db8-9a797197ad6a",
        "cursor": {
          "ref": "a53f9ef6-18f3-4e8f-89fa-6831fea0ab1e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "daae8aef-b6de-4c34-b769-07caea1da44c"
        },
        "item": {
          "id": "0218e3fd-d207-48a6-9db8-9a797197ad6a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8e8158be-6fb8-45b8-876a-9a1cc6b2f3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57cc7ea-5f48-4d13-a86f-87fc72c57539",
        "cursor": {
          "ref": "cdf77f26-9fee-4bd4-bdcb-4ce4bd7f66f6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "390cc25b-c2b3-49ea-8c02-029469f08133"
        },
        "item": {
          "id": "c57cc7ea-5f48-4d13-a86f-87fc72c57539",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "940d2415-c7f2-4c09-9e57-9e365e7babc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da590c92-e792-4258-b8bc-59403ed6b90f",
        "cursor": {
          "ref": "9334bef7-aeb9-4c79-8af1-3732c5ae17dd",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8529ba7c-78e5-4cb8-b966-4c82055779c5"
        },
        "item": {
          "id": "da590c92-e792-4258-b8bc-59403ed6b90f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cafd1601-443d-424c-8bb9-86c866e5c57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe8b805-5ff1-4334-9f31-5da7f02cdd0f",
        "cursor": {
          "ref": "1fa6b0b8-010b-47c0-bf04-4d0c5a830541",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "df7c2a6a-ba33-4ae9-a985-d87333d406d1"
        },
        "item": {
          "id": "cbe8b805-5ff1-4334-9f31-5da7f02cdd0f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dac50f40-0775-4617-9cea-cf9bdbee0f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07397245-b9a7-4a17-87c9-9ea8d81ebc09",
        "cursor": {
          "ref": "efdc6414-cdef-4d99-ae23-1dcc6c76bc26",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "652a4e43-08b9-4b18-b412-641e0343127b"
        },
        "item": {
          "id": "07397245-b9a7-4a17-87c9-9ea8d81ebc09",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "62e14f61-a684-4dbc-a014-8878ddfe4b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5eb115-be1f-4362-b3ac-425c0b43d08d",
        "cursor": {
          "ref": "f5370cc4-ba0a-4150-9610-0ed948f8a45c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "581c8213-8cee-4518-9828-3739e9117894"
        },
        "item": {
          "id": "2b5eb115-be1f-4362-b3ac-425c0b43d08d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b9c7b5c0-eba7-4c75-ab63-e410d5ab3bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2021dc-c39d-4d10-8e27-21f7c9374863",
        "cursor": {
          "ref": "4921688e-7588-4991-88ec-58a5956f84e0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fa87ae2a-94e3-49b4-98b5-4ce34c8d324d"
        },
        "item": {
          "id": "3d2021dc-c39d-4d10-8e27-21f7c9374863",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b0121768-e995-4848-a8a2-689b5a3ed20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94824c12-0aa4-4b27-8a86-b07fbce20955",
        "cursor": {
          "ref": "f7222444-675a-47d9-bdd2-36adfe8e0d80",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "81aa4ade-9403-45dd-9835-9019091f0e65"
        },
        "item": {
          "id": "94824c12-0aa4-4b27-8a86-b07fbce20955",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "257e958f-bdb4-47b3-901c-d2e03f9f30bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de45e16-02d5-4594-8500-c8a236468861",
        "cursor": {
          "ref": "24b4dc69-0bf6-4873-9fe2-70c6b74a7d87",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b5ffe994-7a9b-4f96-8b5c-a5f9515b409f"
        },
        "item": {
          "id": "2de45e16-02d5-4594-8500-c8a236468861",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "61ab3b43-d3ac-48ad-b4a8-17219d57d581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b846d7a-4619-41ae-85d7-f0cb1db4ea27",
        "cursor": {
          "ref": "7a15d448-913b-463e-a9fc-9bb14d9b1061",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bda1ec9e-ff4b-44b3-a6bf-7a847382203c"
        },
        "item": {
          "id": "3b846d7a-4619-41ae-85d7-f0cb1db4ea27",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "252a24e8-360a-4afb-912c-c76fb70d23d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a86a6a6-b0f0-413f-9cd5-cabc44a2e5d7",
        "cursor": {
          "ref": "39c46180-41ab-43c6-91c0-a73871423072",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f9508e77-2a33-4509-a0af-a3db994e615a"
        },
        "item": {
          "id": "8a86a6a6-b0f0-413f-9cd5-cabc44a2e5d7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1b4bcf3a-0509-4c08-85a6-b6cbdcdfe960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b92a87-eb1e-483c-adc8-77b9302c8030",
        "cursor": {
          "ref": "5e5ab8e7-b4b8-492e-8baa-76261bf9270e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "542dbb12-4e25-484d-8dfb-6da95688ee76"
        },
        "item": {
          "id": "72b92a87-eb1e-483c-adc8-77b9302c8030",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "95d3a20e-d94c-4461-ae2a-60c480e31c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a54be4-590a-4b5a-9bcf-3edcbe0630c6",
        "cursor": {
          "ref": "eac9d870-4b64-4835-a8c6-f65a3a5ac22b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8d3fff24-ee91-4735-bbb4-b6624dc32a9c"
        },
        "item": {
          "id": "66a54be4-590a-4b5a-9bcf-3edcbe0630c6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2e8cf8fe-a438-4527-96bf-3fdb817f612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15752b26-622c-4a89-aa08-9c87ea956ea1",
        "cursor": {
          "ref": "dabacd69-e364-406b-b5d0-fc14ec1a0f36",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bb5deee0-db62-4c90-9454-4fb9446b773f"
        },
        "item": {
          "id": "15752b26-622c-4a89-aa08-9c87ea956ea1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d9902e42-4aa1-4320-aca4-c42247b71509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90172f0b-1a02-4d4b-a6df-ee0be93edc3c",
        "cursor": {
          "ref": "bb234cd2-df82-4b3b-8dd0-6ec179e44962",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3d356472-1647-43a2-8a61-08083537b20c"
        },
        "item": {
          "id": "90172f0b-1a02-4d4b-a6df-ee0be93edc3c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "aa849679-aefb-484a-bd7c-946c806be6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92ff3a5-d506-4c24-86be-d996c21f9a83",
        "cursor": {
          "ref": "5c860e30-577e-4431-9bee-ba3c5aa5d1ae",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "80b0155c-6ebc-406c-a1ad-29ceabc318be"
        },
        "item": {
          "id": "d92ff3a5-d506-4c24-86be-d996c21f9a83",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "edc2cb17-d2d1-458c-9b6f-197fdf84f9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471e5ff9-4a8d-4784-a4fb-e24c7d9f653c",
        "cursor": {
          "ref": "d671a855-80e4-499e-8b9b-0add8536cedc",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "86ab071f-76ef-44a9-97b4-fc58de650827"
        },
        "item": {
          "id": "471e5ff9-4a8d-4784-a4fb-e24c7d9f653c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0cfbb277-a39d-4e09-a7db-2dd6cd65dd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8f85a8-92ec-479b-a15d-26533b0bdfdc",
        "cursor": {
          "ref": "7483eb0c-afed-44c2-9ca8-5cc105753dd0",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e543f3c5-4a38-4c8d-ab4e-b98d511a0c3a"
        },
        "item": {
          "id": "bb8f85a8-92ec-479b-a15d-26533b0bdfdc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "906632aa-0d71-4b5a-8100-d693083a208f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f40ebdf-b446-4d58-98f1-5ed6fc8eee90",
        "cursor": {
          "ref": "f1d4c8c9-2c6a-45b1-9550-d1d3ae1a68c2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1b87d43b-d800-43d9-baf1-88c8a3056008"
        },
        "item": {
          "id": "2f40ebdf-b446-4d58-98f1-5ed6fc8eee90",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "48366186-5058-4fa9-b00b-07634fe6d565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42488345-6382-4aae-80bf-36f14e10cacf",
        "cursor": {
          "ref": "f205a850-3f74-4375-b2aa-fb322c98bcf0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d69eaf59-26a5-4691-8c14-20b80cf62234"
        },
        "item": {
          "id": "42488345-6382-4aae-80bf-36f14e10cacf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fad8dd52-bdee-41c2-a050-70e87bca2e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcffecd8-478e-4657-b4e3-2c46043e8706",
        "cursor": {
          "ref": "a3018b84-5d42-4df3-bd38-508cde1085bb",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5dbff9f5-9b53-4e26-82f0-2c800eb59572"
        },
        "item": {
          "id": "bcffecd8-478e-4657-b4e3-2c46043e8706",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "51920cc6-c355-4fee-85ef-b8f9b3db1adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c53caf-0cc1-49de-9f7e-bde2d18e3cc7",
        "cursor": {
          "ref": "cb225658-d495-4191-a197-41455728b7e0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1c1520fe-9ca9-479f-9152-feb5f3cd91ef"
        },
        "item": {
          "id": "30c53caf-0cc1-49de-9f7e-bde2d18e3cc7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8bef36ca-3ec6-4f35-9902-bbdc4ee8418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7665ac33-6c6a-445d-9d1e-09b91972c53c",
        "cursor": {
          "ref": "1e48c0e6-1c28-49b8-8644-f0307e79b91c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dc89198c-ed7a-4b09-b860-2ce24ba22c40"
        },
        "item": {
          "id": "7665ac33-6c6a-445d-9d1e-09b91972c53c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "30cc22f6-e578-449f-be86-759026a2ada9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c1eec0-8d3d-4984-a4cf-c5eb41683c96",
        "cursor": {
          "ref": "26ccc5f7-2fcc-4065-a23a-d305211b7eaa",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fb174d83-b3b3-46ed-b140-99899adb3535"
        },
        "item": {
          "id": "72c1eec0-8d3d-4984-a4cf-c5eb41683c96",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5517a7e-53a3-428c-8d2f-9b2d3ffb7db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f66f94-c209-4917-82ff-7d5423c6b385",
        "cursor": {
          "ref": "9ba3565b-af8a-49e1-a5a4-04384e728e73",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1e16ca19-7cf5-458e-ac84-79221b6b270c"
        },
        "item": {
          "id": "c2f66f94-c209-4917-82ff-7d5423c6b385",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "776833b6-2eaa-4a7a-a2cd-dc1aa6a6320b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5183ba2-7b64-49fd-a00e-14c0baaeb99b",
        "cursor": {
          "ref": "071120a0-a3fc-464b-9648-e5589a7becc9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ece3e1c5-4c3b-425f-87d5-ffc83e12023c"
        },
        "item": {
          "id": "c5183ba2-7b64-49fd-a00e-14c0baaeb99b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4d26ad8c-b1ac-4601-80bc-ed598ccdc8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98451337-c792-4d49-9692-27e769b22e0a",
        "cursor": {
          "ref": "de062d7a-8a88-4c25-adcb-e09ab28323e4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9ea1e79-24d3-4db1-a97f-070a2ab26a7e"
        },
        "item": {
          "id": "98451337-c792-4d49-9692-27e769b22e0a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8ae5b794-bece-4b5b-a615-912a1a628c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc705dcd-5d4c-4b16-892a-f23d3d5b31a7",
        "cursor": {
          "ref": "3050efc0-b5f5-4aa3-98fb-f5074a596f9c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dd1c1005-1029-412c-a720-d0443aac81de"
        },
        "item": {
          "id": "cc705dcd-5d4c-4b16-892a-f23d3d5b31a7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ec430d9d-34ea-4945-9464-60e238b343d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ad8f08-a3e3-43ba-a037-29672dbb1862",
        "cursor": {
          "ref": "84d435c4-2cfa-4198-9cc7-cd18c061ed40",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a5c5c5c8-8a21-4927-a3c9-01a72043954b"
        },
        "item": {
          "id": "64ad8f08-a3e3-43ba-a037-29672dbb1862",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dc2cc1b6-a07d-4a07-a97d-9c7eb48c521f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3659a793-12e0-4688-aad5-f6d2157aa71d",
        "cursor": {
          "ref": "288febb5-43c4-4215-872c-e8f0fe85f7ae",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eb1c6943-5c01-44b4-955c-99fc965da1ad"
        },
        "item": {
          "id": "3659a793-12e0-4688-aad5-f6d2157aa71d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d3cf0b9e-36d8-4fa8-8b7c-198545c6a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc4f47d-f701-48c2-9944-79b59a7582d0",
        "cursor": {
          "ref": "1df0ff71-1eb1-446e-9d19-ec5743d25d25",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f3ca9b7-06f8-4dea-8c1a-aa50b4f7a88e"
        },
        "item": {
          "id": "3dc4f47d-f701-48c2-9944-79b59a7582d0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7caaef7a-de86-4676-8258-8913679e3a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25dbbdc-ef61-4d26-bfb8-5bac38340186",
        "cursor": {
          "ref": "87943259-38d0-42e3-8bb8-28ced4496969",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b9b3124d-b0ea-4eac-a5ba-75ae1de6df71"
        },
        "item": {
          "id": "f25dbbdc-ef61-4d26-bfb8-5bac38340186",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "786d4ac5-57a3-4bc6-b153-ee77eb4cef45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fd8d60-cea6-40fd-9844-13f1843486fe",
        "cursor": {
          "ref": "19d1e2d1-5f78-41d2-bde6-112e6d54647b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e1cc4052-be25-4359-ae9f-aaf085750691"
        },
        "item": {
          "id": "b6fd8d60-cea6-40fd-9844-13f1843486fe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b5c0b1ab-f892-409d-a557-15639a1bb2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20389dfa-ce22-4b03-ae93-3455a9d36ae6",
        "cursor": {
          "ref": "668ac691-2504-4bdf-9bfa-6fd6c5f383d6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "21e5f34c-d938-4c13-99aa-f112ef2ce614"
        },
        "item": {
          "id": "20389dfa-ce22-4b03-ae93-3455a9d36ae6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "155e23a4-ed69-4baa-a7e2-ffe8405cec64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afc2042-f0e1-4977-99e1-00c7f1e9d94a",
        "cursor": {
          "ref": "75f47cfb-79fe-4ddc-be05-16a50138a238",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bea7e8d9-f961-465e-ad01-6b78244a6699"
        },
        "item": {
          "id": "0afc2042-f0e1-4977-99e1-00c7f1e9d94a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cb1419df-cf25-4a66-822c-acd1e44528a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81b24dc-f70f-4ae2-b3cb-1ad38f25d737",
        "cursor": {
          "ref": "5b71e728-8cf4-40a7-801b-02739ef64ad2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "668ee470-8329-4d0e-8ee1-4e752179320d"
        },
        "item": {
          "id": "a81b24dc-f70f-4ae2-b3cb-1ad38f25d737",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "068074d1-e426-40fe-a2d9-6eac78033f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcf3b68-79ab-4c24-b487-79de862e09be",
        "cursor": {
          "ref": "5062b5fd-9978-45aa-8b32-53c718a10c74",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1d12a6ea-6598-4d71-8c73-53f4329b38fa"
        },
        "item": {
          "id": "edcf3b68-79ab-4c24-b487-79de862e09be",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f9f73f27-fe0e-4dab-8fea-f6c75a499730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91438b58-3a96-41ea-a1f4-7b4eb360a483",
        "cursor": {
          "ref": "96e20b37-1ed7-4c6a-96a4-7c3a9eaada44",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "adb8ce21-db40-4188-a754-0d9e71562587"
        },
        "item": {
          "id": "91438b58-3a96-41ea-a1f4-7b4eb360a483",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8f7642a2-0499-424f-9993-df4525d06c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f43c582-2560-4ae8-8621-3641a7a12dff",
        "cursor": {
          "ref": "afb4843b-c82b-483c-8f07-ced647b612da",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "05ebb5c5-092f-4925-806e-4f4ac66e03f0"
        },
        "item": {
          "id": "9f43c582-2560-4ae8-8621-3641a7a12dff",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bd956f7b-b6c5-4b6d-a2e0-2c3ef2fd57b6",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "aef6ae68-b2bc-476a-840a-b259b7a3ad91",
        "cursor": {
          "ref": "478cbf55-6a81-40ee-961c-e9c085f92d14",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6fc0bc74-274a-48f8-9cef-9a7893170c9b"
        },
        "item": {
          "id": "aef6ae68-b2bc-476a-840a-b259b7a3ad91",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cdec3e40-d17e-42ed-84de-15e722872fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d31728c-429c-4fa3-8a86-ddf212ec6504",
        "cursor": {
          "ref": "007eae70-63c5-44a2-92ca-89cc3e60241f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "11a3251a-ea78-4909-96e9-fec47bad8491"
        },
        "item": {
          "id": "2d31728c-429c-4fa3-8a86-ddf212ec6504",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "50565160-92a4-4776-a17e-4de618bfc038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe318056-22cb-4608-9093-1b67aa1c10fd",
        "cursor": {
          "ref": "f902899e-d236-4f50-b161-700db2bbdab4",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c613af09-1b07-4224-b402-a8d9c47b44eb"
        },
        "item": {
          "id": "fe318056-22cb-4608-9093-1b67aa1c10fd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "899bdea1-3c2f-4d60-ba2b-e30db1ef0548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1b370b-e0a0-40a1-a003-b8334605448d",
        "cursor": {
          "ref": "01bb4baa-7a7a-4093-98d4-160fa6490483",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef5f3841-3433-420b-bb7f-e66a3a753432"
        },
        "item": {
          "id": "4c1b370b-e0a0-40a1-a003-b8334605448d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ad1a981b-59d1-420b-80bf-702b3cfd69cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a5a0a6-f460-4477-8d25-4c68b5736f71",
        "cursor": {
          "ref": "658a9caf-92b3-4ded-91bd-2e393ed9507f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7599c448-7ac3-4ea7-8186-63d250a8013e"
        },
        "item": {
          "id": "75a5a0a6-f460-4477-8d25-4c68b5736f71",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "faed97e2-2877-4d68-be32-a38ff3dc4e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d751c87-da1c-4c21-99b4-ce0afe9f67e0",
        "cursor": {
          "ref": "713d7fd1-e57c-47f4-b47e-c06690008c86",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dbbc54cb-3728-4df0-a9ca-638c40b6ebe0"
        },
        "item": {
          "id": "6d751c87-da1c-4c21-99b4-ce0afe9f67e0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "63992062-2341-480a-90e0-3a8d524ea611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486dd019-7349-43c3-b3e0-79e6664c2cde",
        "cursor": {
          "ref": "b294fcf7-395e-4e65-8dbf-765c0b3cad3a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "27f9f252-2062-4db2-a990-1b58ccd95df8"
        },
        "item": {
          "id": "486dd019-7349-43c3-b3e0-79e6664c2cde",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d96a625c-1bcd-491a-86ae-5f4e935f6a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4689acb-7813-48ba-9a8f-f8a6a6f46ccb",
        "cursor": {
          "ref": "fb3a0411-1260-43a3-967c-e8a672878f40",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "945074fa-c5d1-47e1-99df-57e16a6b8c8b"
        },
        "item": {
          "id": "a4689acb-7813-48ba-9a8f-f8a6a6f46ccb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "944d13e9-4fd1-4e03-bdaf-dfaafce77665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a3daa-6a30-4ab0-bd4e-d042fcdb37b8",
        "cursor": {
          "ref": "55ebae24-75c9-44e9-aa0d-df63131f75c1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c447f388-03dd-4e49-acde-44f73941dbd1"
        },
        "item": {
          "id": "423a3daa-6a30-4ab0-bd4e-d042fcdb37b8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dc1b9b0d-cdae-45de-8d3f-2da946b6d86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4306fa-98aa-40a8-95b2-1c411c7525c0",
        "cursor": {
          "ref": "5488e1c7-54da-4573-8708-b0b02b480c21",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3f2808f0-c283-47a6-b717-f6f6de722941"
        },
        "item": {
          "id": "1c4306fa-98aa-40a8-95b2-1c411c7525c0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d506a867-1dd3-454c-ac9f-ee771de7fceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1262448-1d2a-482d-bb33-0f56ea808135",
        "cursor": {
          "ref": "58cc3bfb-9b4e-41c0-be60-648acf577885",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "96b16b5c-9906-49b9-a1d6-c40cff4bb8c2"
        },
        "item": {
          "id": "a1262448-1d2a-482d-bb33-0f56ea808135",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fc966561-74ef-4fd1-9266-f83f3eda2a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16fc2c7-09e6-49ff-beca-e2de1ca61b3b",
        "cursor": {
          "ref": "02f943a6-3131-450b-981f-e2a95ee6c0e7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "738c91ba-93b6-497e-8380-9c82f7723a9d"
        },
        "item": {
          "id": "e16fc2c7-09e6-49ff-beca-e2de1ca61b3b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7e7ee1e2-83ad-4616-a68d-8291ff14df35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8783f761-33cc-4eb6-a56a-0256f90bff5e",
        "cursor": {
          "ref": "4589b3d6-e78b-40f2-b41b-ec21d154ba8c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5a4b9d77-3da7-4f8a-8818-47215a642ffc"
        },
        "item": {
          "id": "8783f761-33cc-4eb6-a56a-0256f90bff5e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9a6de5bb-938a-4fd0-b68e-75fb6867cfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6854682f-ac9b-4239-af0e-5d79fa199e36",
        "cursor": {
          "ref": "24db7a6b-203b-4d87-a77e-8473a6b6a9fe",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "47e8be64-d096-4c3c-a1cc-497e9931d2a0"
        },
        "item": {
          "id": "6854682f-ac9b-4239-af0e-5d79fa199e36",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6b4c698d-226d-41b3-8d86-417f3eeba927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9734c2f4-aa12-437c-9044-41e0ded8f109",
        "cursor": {
          "ref": "ea07d7bc-e9ea-43c0-bd8a-89f33b53ba53",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bfd94e8f-7990-4eb8-9a8c-07ebc5ce0e2d"
        },
        "item": {
          "id": "9734c2f4-aa12-437c-9044-41e0ded8f109",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "13a56dc6-7466-465f-a3ba-669d834fa215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55287511-8013-4b1c-b175-ac6813c0830e",
        "cursor": {
          "ref": "da2103f6-6621-42aa-9403-fadd805cffaf",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4ccd8169-dbc5-41c8-90de-944b184fc501"
        },
        "item": {
          "id": "55287511-8013-4b1c-b175-ac6813c0830e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "639da5f5-9c14-427e-a62d-9950282a2ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f4933c-3ea1-469a-b977-ea1a3dd64ee3",
        "cursor": {
          "ref": "f52f00dd-a2a8-44b6-8276-f5b76ff67a25",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4d44d022-3c67-49a3-865a-b411e72bd47f"
        },
        "item": {
          "id": "b7f4933c-3ea1-469a-b977-ea1a3dd64ee3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e2e9d2bb-c105-4d14-9b7b-cb90eeedb955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c48347-0dd9-4459-a459-0814dd62ce51",
        "cursor": {
          "ref": "cf69821c-f152-4604-9377-74a371b756bd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "60c6a3ab-1151-4e7d-8599-0d44b20cf727"
        },
        "item": {
          "id": "73c48347-0dd9-4459-a459-0814dd62ce51",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "958f3e77-a5d3-427e-93f8-cacd5a5fb981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b43d73d-8c18-436e-bd0d-7e7fcba21857",
        "cursor": {
          "ref": "8a372e7f-a158-4661-bc65-06ab0281cfb0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b12a7abd-0429-4f78-b7f8-a10de50f6cda"
        },
        "item": {
          "id": "9b43d73d-8c18-436e-bd0d-7e7fcba21857",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "95d1b931-0cc1-4368-bd56-1d5021225047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb8eef2-91b7-444f-991a-51b72856e075",
        "cursor": {
          "ref": "cc8d3673-5b6c-4980-8cb8-23905fe143ba",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e06f3ba3-892c-469a-9b4e-f8f285a47185"
        },
        "item": {
          "id": "6bb8eef2-91b7-444f-991a-51b72856e075",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "67cc4a75-951d-4870-82ea-c6cebfdf4f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b5cb74-4ef7-4985-adb7-8d4688235c52",
        "cursor": {
          "ref": "23746a47-07f1-4678-bc0b-d6c950f3b377",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "de8e7971-6262-4142-95de-52959a4efd2f"
        },
        "item": {
          "id": "53b5cb74-4ef7-4985-adb7-8d4688235c52",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c9fcab5-aa38-4f1b-a984-6e8b51f36e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f1f5e8-aaeb-4f16-bee9-e3673aa081ea",
        "cursor": {
          "ref": "57e8136a-4150-448c-8208-aa0d3c0574a1",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "779fb1cf-7016-42a1-aeef-e9377659bf90"
        },
        "item": {
          "id": "b9f1f5e8-aaeb-4f16-bee9-e3673aa081ea",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a980845e-8795-4b2c-b25e-1605deb26cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba13413-445a-4d11-a8b8-0d53bf4b8877",
        "cursor": {
          "ref": "2ba8f8a2-b52c-456b-a545-478af2de1d77",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "08d9686e-bf6b-4a16-93ce-5756cb11bb92"
        },
        "item": {
          "id": "9ba13413-445a-4d11-a8b8-0d53bf4b8877",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7237897b-31c4-46fa-979d-3c6419149563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98765f1-e596-49dc-b441-b9779728209a",
        "cursor": {
          "ref": "9a21c7e8-c90b-4c2d-b064-b6e1ac3b274a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "73584f75-4139-4b80-af40-1ef70d06d9ea"
        },
        "item": {
          "id": "a98765f1-e596-49dc-b441-b9779728209a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "864ed9bd-7abf-4038-95ff-cec73c7a71ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf7f79c-d3fb-4b67-bd35-48b533bb9c17",
        "cursor": {
          "ref": "0ffac1ff-329e-4877-9be2-624b98f0bb44",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "edea293e-b98d-4f39-9d7a-476bdd6c6b47"
        },
        "item": {
          "id": "6cf7f79c-d3fb-4b67-bd35-48b533bb9c17",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4a5192de-dd56-40e2-9a89-0f86fa2315bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1a3ae7-2a14-4bda-af65-b0c330555fea",
        "cursor": {
          "ref": "1762d642-699f-4388-a2bc-2dc16db0a596",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5ba87096-3302-4f31-8e92-4b1832e68f13"
        },
        "item": {
          "id": "ea1a3ae7-2a14-4bda-af65-b0c330555fea",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f840dd4b-d9e7-4f49-9c7d-4b072af7fbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573cbd0c-a6fc-4be4-a0e3-da0374ff7402",
        "cursor": {
          "ref": "d6356f47-b4df-4942-a42e-21595a395f23",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "17d58ece-8e66-4e42-a4ad-ee3b2a21c541"
        },
        "item": {
          "id": "573cbd0c-a6fc-4be4-a0e3-da0374ff7402",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5ef4a8b6-60f1-4259-8a96-65875e76f841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52156aae-a53c-41e3-a24c-f7ffee92762e",
        "cursor": {
          "ref": "c91af8e1-4f3f-406a-9ec2-a8c7b7d6faaa",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "796e03f2-9e47-45b6-a885-6931228410c9"
        },
        "item": {
          "id": "52156aae-a53c-41e3-a24c-f7ffee92762e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "461d5972-2d32-4a81-a843-29b38246518e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5040a86-c3b1-4582-9a46-6cf7a05a3431",
        "cursor": {
          "ref": "d1388d73-254e-4ec8-be18-60600e09c55f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0ec2fa08-75be-4096-978e-b7ce69bbf801"
        },
        "item": {
          "id": "c5040a86-c3b1-4582-9a46-6cf7a05a3431",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "965848d9-76e9-472f-a2c9-b6025caa3327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8312b533-953e-4966-9435-ff8e3aeee32a",
        "cursor": {
          "ref": "4fa637b1-8501-40d0-a7b1-f066600c9046",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c06c5050-c5c2-4a5d-9073-589907430433"
        },
        "item": {
          "id": "8312b533-953e-4966-9435-ff8e3aeee32a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "90cf6016-d6ae-4142-a084-6f7ccaa0201e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84cce97-b395-4a18-a332-489ff826620b",
        "cursor": {
          "ref": "22891ad8-b8fd-4502-b7d4-4eafcfb2748b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9400c68d-771a-4d33-a2e5-5e849b9c9e87"
        },
        "item": {
          "id": "a84cce97-b395-4a18-a332-489ff826620b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6917ea8b-c088-492b-be88-f980304f5c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0020d6f-825f-4717-8e62-9cc1560793e4",
        "cursor": {
          "ref": "3d9bbfce-7a1f-4d39-9d0c-ce168a2c5eb7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "22cf2a1d-24f9-476f-af4e-e5e3acfda143"
        },
        "item": {
          "id": "d0020d6f-825f-4717-8e62-9cc1560793e4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "baf04497-6219-4a5c-aff3-496d2d1f95c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734dc98c-87d3-4676-9abc-3ff869d76178",
        "cursor": {
          "ref": "67070e69-4af7-4a23-bb90-cefdf386395d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "45a8f962-fc4a-4b4a-b9c0-d9d30958c4c3"
        },
        "item": {
          "id": "734dc98c-87d3-4676-9abc-3ff869d76178",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f2501ecd-9a85-4b49-8ca4-47efbde24e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a17bb7-dc84-45cb-b956-9b4da7729f9e",
        "cursor": {
          "ref": "4cfa0ff0-5b86-40c3-8143-2340f514e45d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "34d2d120-313d-4226-82e3-63f3b5f351c6"
        },
        "item": {
          "id": "a7a17bb7-dc84-45cb-b956-9b4da7729f9e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "49fcc610-af4a-4669-bb95-2bc821496e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c56e9fa-f074-4502-b143-d29dab0f95f9",
        "cursor": {
          "ref": "894d4d3a-0b7f-42dd-b165-c26d19cc8bf3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e111dfd7-19e4-4806-a019-d05f00265713"
        },
        "item": {
          "id": "5c56e9fa-f074-4502-b143-d29dab0f95f9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "52853453-5e63-4335-848a-2a25c3beb324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764ace52-0e31-43b3-878c-3765392fdd2f",
        "cursor": {
          "ref": "ba474636-242b-4f10-b66d-e2c776732914",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5c7ef7fa-52cd-450b-8d2d-0164fbf791aa"
        },
        "item": {
          "id": "764ace52-0e31-43b3-878c-3765392fdd2f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8eb3f94b-1689-41c9-9415-145f0b78e5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a889ab9-db98-4774-a62c-5d80bfc549b8",
        "cursor": {
          "ref": "d8fb3e8f-b63d-4dd7-9bb1-c5df0e908b3f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b8188642-6e54-4925-893a-a4dd6822022c"
        },
        "item": {
          "id": "7a889ab9-db98-4774-a62c-5d80bfc549b8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "158ce6a4-0e27-4915-a341-8b914b530816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acce4ea-ac09-423f-825e-f075713e7521",
        "cursor": {
          "ref": "7a85cfa3-4a0b-4c86-be0a-7a5c8e7daca5",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fe4cc848-3c43-4099-b3f2-fa4448f7f665"
        },
        "item": {
          "id": "5acce4ea-ac09-423f-825e-f075713e7521",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2c25fa5b-6e0d-42fc-babe-6e1c33351a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a820adff-5ae9-49d6-b18a-2674d8b7b1cd",
        "cursor": {
          "ref": "fa5f442e-ae35-48db-a062-c450273a119c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "19893cad-528d-44fe-8976-dfd9fe351b52"
        },
        "item": {
          "id": "a820adff-5ae9-49d6-b18a-2674d8b7b1cd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b812cae7-536b-4930-a286-4fe801e4ccc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f75494-77a2-4b50-86c8-967332616aff",
        "cursor": {
          "ref": "effc547a-4654-4a7e-bdfb-0eb4f4c67619",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "47edf921-924b-4b60-b478-9febbca144d6"
        },
        "item": {
          "id": "01f75494-77a2-4b50-86c8-967332616aff",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "26389f64-5d54-4afd-81a0-99a07ca96180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a57069-c36e-487d-98c0-1c4e23d25759",
        "cursor": {
          "ref": "d8fdb431-ce17-4bf7-8ee2-e307926ae3a5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "47c688d7-5f70-4dff-8311-a8f2c9b0580a"
        },
        "item": {
          "id": "26a57069-c36e-487d-98c0-1c4e23d25759",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "53c92296-1c5a-4455-aed6-62651370ef12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c05942-334a-4f38-86bd-4698d7f1c477",
        "cursor": {
          "ref": "6904c90a-acbc-462f-8779-06188cc57c58",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "46dffaf7-0a85-4b61-a955-95439cdd4104"
        },
        "item": {
          "id": "a8c05942-334a-4f38-86bd-4698d7f1c477",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "df2ea65d-d716-4dca-b141-c8d7b72af75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02027b70-f5b8-4d82-8f92-97c99e07a5d2",
        "cursor": {
          "ref": "6ac3a2f7-1b8a-4c1e-b859-c54e33e083d2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "02028e3e-f675-4604-8756-1db92aad40a3"
        },
        "item": {
          "id": "02027b70-f5b8-4d82-8f92-97c99e07a5d2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8fb91cdf-4a3f-4b1b-8d59-6c578dfda4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6875c4-9908-4843-8147-1cabbf008f4e",
        "cursor": {
          "ref": "c7b9c839-9fd7-4e90-bf86-c0e9f485591f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8f96998a-8d77-4ae1-adf3-0cd84801ca32"
        },
        "item": {
          "id": "dc6875c4-9908-4843-8147-1cabbf008f4e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2f60e347-2e7c-4d6f-8f77-3b915896462c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd27367-f850-4603-96d5-1c5f2d83c508",
        "cursor": {
          "ref": "ca50061f-0f36-4c60-8770-f9f456212949",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "915e36cd-83f9-4670-aa34-c94032c4585c"
        },
        "item": {
          "id": "cdd27367-f850-4603-96d5-1c5f2d83c508",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "94495bad-a2b5-41d0-8081-d88817661323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de63a627-2041-4293-93de-c00a10670ee5",
        "cursor": {
          "ref": "b31d8d37-7031-41b3-9812-568e74871172",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f686f9b0-dbdf-42b8-9afa-5599c004a62c"
        },
        "item": {
          "id": "de63a627-2041-4293-93de-c00a10670ee5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "770c80b9-7177-4bd5-b212-812ea00b1c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e70fe02-7831-43ef-8046-4cdba03e2004",
        "cursor": {
          "ref": "f2613b5a-9c3c-4c5b-976d-347262202911",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4e22c5ca-3ba8-4568-a205-516fb8b6c591"
        },
        "item": {
          "id": "5e70fe02-7831-43ef-8046-4cdba03e2004",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "733bcba8-2502-4680-88d3-9385ec74a981",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a46e6a-2bc0-4aed-97ba-370225d78f6d",
        "cursor": {
          "ref": "c7232ea3-22f3-40d9-bb44-5fa0cb3aea60",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3e656a87-a287-4665-bf6d-3eadfb9b0c3d"
        },
        "item": {
          "id": "85a46e6a-2bc0-4aed-97ba-370225d78f6d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "73978176-88ba-4170-9161-d2d5422a6bc7",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcabb5f-30ad-4a1d-9046-c34cf91c534f",
        "cursor": {
          "ref": "ba22c009-f2d1-4662-a9e4-b25eec13ce8f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c585997e-5c62-490d-bfda-ed7144602d5e"
        },
        "item": {
          "id": "fdcabb5f-30ad-4a1d-9046-c34cf91c534f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e747c3a7-a516-446c-955b-297d7aa943d7",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6b58fd-f739-4019-b865-f1fc85217855",
        "cursor": {
          "ref": "861c5cef-200b-431d-91ca-b6fa45772f2c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d63760f0-1abb-4075-bfad-d92d8146cdde"
        },
        "item": {
          "id": "8b6b58fd-f739-4019-b865-f1fc85217855",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c996fd18-29d5-48fd-a384-51a37fb2b078",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2381cf9-7e0e-426e-9ee1-abf16e141d18",
        "cursor": {
          "ref": "957fa899-3380-4c93-9c4c-1fa299fa7c3b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a40d0d97-166e-4293-8187-a144beee1e5a"
        },
        "item": {
          "id": "f2381cf9-7e0e-426e-9ee1-abf16e141d18",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d0fb3a8b-ed06-414d-b6e3-23f5cd9f051b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2381cf9-7e0e-426e-9ee1-abf16e141d18",
        "cursor": {
          "ref": "957fa899-3380-4c93-9c4c-1fa299fa7c3b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a40d0d97-166e-4293-8187-a144beee1e5a"
        },
        "item": {
          "id": "f2381cf9-7e0e-426e-9ee1-abf16e141d18",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d0fb3a8b-ed06-414d-b6e3-23f5cd9f051b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5127fdcd-1290-4b59-aa08-47073666b900",
        "cursor": {
          "ref": "b862ce57-eade-44f5-9c3e-de2171dbbbae",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "de408a03-d7ae-4b52-896f-2ee593d9f313"
        },
        "item": {
          "id": "5127fdcd-1290-4b59-aa08-47073666b900",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "07b030df-3249-4f70-8dab-51d98df04300",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94340481-49b7-45af-a56d-1e8848f42dfa",
        "cursor": {
          "ref": "d08becff-5bc0-427b-b41b-f2f7731fd32a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fefb6e81-2fec-4c00-a624-6bb581e69366"
        },
        "item": {
          "id": "94340481-49b7-45af-a56d-1e8848f42dfa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a9456932-744d-4e71-83e1-1c037602b033",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}