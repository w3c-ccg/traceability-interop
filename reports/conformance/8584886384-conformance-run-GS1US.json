{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0bde5658-3979-4ed5-8dc2-77327dad8693",
        "name": "Clear Cache",
        "item": [
          {
            "id": "802da134-32d5-48a3-8f43-bb6d9a293f9b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da7855f5-0922-42b7-ba31-f803db77ca3f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "896256d0-0f13-4810-b2f8-bc98bd68f1b2"
                }
              }
            ]
          },
          {
            "id": "aab93e44-4260-4798-b0d4-3ffa01764aa9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8046b271-e668-42b2-a0b6-2d67b28d3c8a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e5ab742-4886-4957-a0a3-2aa1a37f22c0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b94ccde0-a2f1-4a74-b43e-34eaa271bf4a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "db0f9d99-59b9-4aac-89e7-f1ac6230d290",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f36a9f54-71d6-42fb-9d8b-843dfb01444e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4bda811-0ea6-4667-b16a-d7a3d9d88fa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "358ebdf1-469e-444c-bc78-3476c83e4ea4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56e9d57c-26a9-4ed6-ab37-6200dc76abdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5e68e42-0949-4f29-b9d2-d58850211e76"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46a2534e-2e30-4812-8173-ad92be44168b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "faed207e-4b19-4376-b7af-de085e3bbb74"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6a2c1b3-3e26-486b-8ecf-771175e1a60b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dbcb1e2f-b3e1-4320-8778-750cd701ae0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f14f66f3-7801-4601-8555-6f9582a7e66b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1835c8e-81b8-43d4-a8cc-b4c3e76d99f5"
            }
          }
        ]
      },
      {
        "id": "16afe6d7-1cce-42b7-b7a6-98d00ab329f0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ef1f2c5b-d01f-4bc1-9bfd-2e73d5633b71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e4651c9-2130-4c95-8c9c-1565ea294564",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d5f57c6-8a62-4015-82d7-b2e3a3120db4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0067652a-7e13-4d0f-b0a8-53e1d08e0647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2188956-0d5d-491a-864c-6f8f86d72ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6006c4a3-37c7-4109-8a5e-072802f6df14",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b9d107-00b3-4e48-88e9-60bb79e0340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93a91794-9152-46f5-a9eb-8b55ad4bd97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ed6096-7a81-4bd8-a32d-54640a11b71b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0592cd7f-8b89-4b0b-807c-468e869edcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc365ccc-4fe4-4fc5-a00f-7666cddb61c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8eb96ee3-0b59-422f-82d0-18697a14b0b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbb3ed31-f41c-4ee1-90bb-3b67467fb1a3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1ca6d0-612f-4281-a72a-57124df2185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b7a9eed-2b38-4abe-8455-54b45504ba8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e70cc3-4d0e-45cd-b788-1539ebd694a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c08009a-4d8c-45ec-8e51-818f1dbffc00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "742563d8-4202-4ec8-8e05-f1097a0838d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "304cc7d6-db58-42da-b503-76d4d74c2222",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36e4a89e-982e-4d96-94ef-b224183c3e1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1219625a-46b7-468b-8753-df63f6bd7eea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65ab776e-a1b1-431d-8127-fe483cf050e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c29f92bf-0e66-4ea9-890f-048fbf873b18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bd25614-87ca-4eaa-815c-1e71fd59e88f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5a991d7-c3a0-468a-9be2-efba59bb439f"
            }
          }
        ]
      },
      {
        "id": "1297690c-03ea-4df8-aeed-348cb0948532",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "333ec4da-8746-4f95-a252-695182d9bff1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2a6cc4a-fb69-46c0-bee0-680b39ffb764",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ad455f03-904d-4b57-8866-8913bddca171",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e044651-7deb-4dbd-9ed3-74edd7d0055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1c09ec-6778-4200-8376-666ad2d7937e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0db01e-10ea-4860-aa93-29de13a5f46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74ab987a-a422-4dcb-b34c-6d4a22803cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2b5f46-3b4f-42ae-bdeb-afbf1c242d83",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6482c07c-7ffe-4bb4-8a80-76140ea0e069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a21f7f-78b1-442f-a417-b1bb6312e2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44b6d1e-45f9-4e27-989e-1d8d3d38ebae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0df58b9d-3dd6-408f-8973-e2dee828c22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5594b92a-b760-42dd-8017-38d4cd9da27c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14369ea3-0520-4472-a9d7-1b95f08a5e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827025bd-25f8-4372-b576-b80166945c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7423cb3-7fab-4292-a70d-d238fd316af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d174b254-08c5-4fd5-8746-0ce878979058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a688f502-5f38-4022-a8d0-beb842d94097",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0865b79-62c6-4f82-94ec-143226cd6022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29008f2-fc99-40dd-a024-e5e5502d8051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f1e43b-3140-4363-b4fe-9f3605dad2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2612c33c-3a0c-44a9-9cbc-5878073d6737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4a7bf6-a7ba-436d-b2c4-86de813921c2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612dae02-442f-4666-a644-012e94c3be93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2407b3c8-627c-4b2b-826f-b923b803ed59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1730920a-bedf-40e4-ac41-cc241fbbb577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f7ecbef-035f-45c2-9e0d-c00387c68dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c49070e-4610-4bfb-8632-fea8f937b5f0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74d9965-bb23-4a35-89d5-2d5f06014157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3324e6-9c5f-4395-a96d-acbe7690f5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25636e45-bdd0-4fbe-9af2-48ce38153861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a68becd8-8da5-4630-a6c3-9a8ef281f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b78651f-fc08-4037-9bb6-d539176caa69",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabbdb99-ab6a-4fb3-8b53-376f5cdf359c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c161ab2a-1f8d-4e91-9057-2b21bdce4870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3861f6-e413-4538-a1ff-2d61a87cbf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e095b9e-12bb-4925-8d07-b0c12f937067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b08877-b75a-4d4a-8b60-a5238f3dbb36",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39456b39-8d81-479e-8615-cb2a5813e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace252f0-d38d-42d6-9e14-d64154430b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad0dc6d-3ae0-4f16-b23b-990b0001a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51373185-bfa5-49e3-ab06-b86522158a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2da5459-5551-4931-b6e6-358483c2f7d4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cffa44-630d-41e1-a4c0-79c05483b777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a52a69-e640-4610-9f21-f68e8cc91491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9063edec-983a-4314-9407-7ca3caf24715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07492786-e98d-4c96-ae7e-b65208b03b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cf4066-aaab-4248-8993-b56a83a9bb63",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1798e984-8e00-42ac-9c51-0537e11f158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351a5f8d-734d-406f-9ad5-3a4eaf6414fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0182b4db-e509-4535-8b45-d5d2dde700dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14ea3c7c-e480-45d3-b6e4-1d490167bad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648343b6-fb5e-44f1-82db-1d7978a9cb20",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c215a0-43fd-4854-b259-7380baec8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f11227a-30d3-4860-96c0-a3c87f965360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d5f28c-fc74-41ef-9d69-df041f18f721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbd0b80f-7885-4090-be5b-93478ce50a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf2e351-df8b-47a4-a1c4-c8625436ad14",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bf97d4-e3fc-4166-9d54-2c1b2c0638b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e717a1e5-5c86-47eb-987a-00f41f4f2376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708a98a1-8341-4b43-8633-6c3793e3e119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c2bf19e-17d0-4d60-bb3e-85bd738f0e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824967b1-99e8-4be2-8daf-e6b22270cf74",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b19110-4581-4314-a757-1ba5cddafa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2776be18-bd98-4234-a417-ff97d701f6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e3943e-cf72-495b-82e0-28b6f9720704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8a604ac-29ce-4613-ae61-e0bbb28d5cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fb7066-c2b4-4f2a-9ef5-40e1af6a1e85",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d631d9e-a592-4e6d-b31a-6a785706c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361c213a-697a-44ad-92db-45cadf8ddbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d492693-058d-4eb8-ab73-7bf7d0e5caa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a5921fc-ed42-4895-b103-72b9687c2bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e5a745-cd28-4e13-b2d0-fa6d67b3c3fb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cbbdda-a985-4428-a11c-54568b021e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af942030-d2db-4a54-ba4b-63d0825f5951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1d95b7-de21-49f7-8806-9609613cee6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67a7ecff-3188-46e9-8e92-d87801987414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758cf262-6dda-4d5a-b95f-8970f09723c2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4469379e-ea7d-48c7-ad0a-c738b61e01f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36d2d5b-3343-4a31-8117-64dd5bc3c786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a9657f-3e8f-4831-9284-71ed43f0488c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "573b8ef1-5084-427a-957b-fca9f023f22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f79504-4fdf-4893-b65c-2a50901c0e98",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c962d123-da14-4d26-b5d9-08185314c9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807e9468-23c6-4c26-b152-acff64fa94ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6277af-9ce5-482d-b2c6-642f73ec823f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4a0a3e3-db52-4888-ac79-6d11ebad0277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd9e5b9-6973-4017-bed8-ec26bd818768",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee13082a-9340-4191-aca8-15557b4379a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715066e6-5cf7-4fe4-9393-b01bcfdb2523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8fba86-5589-4124-b315-5e0c67960b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c939033f-cb59-4cd3-9e1e-879b435d675b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271464d3-5f3b-4ff3-9853-e0f57458b005",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f383a6c-2407-4138-a879-497be2b320df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbae1c11-7307-44f0-8c1e-5e19c8717007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7194be4f-1e27-4df2-ba08-c1f677b90109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "561ee372-d081-4be7-b295-15d2cd492304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d56cb2-10ce-4b02-9a3d-52d2bdaf3e91",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eadd55-02fd-4783-a96a-cd815157a83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cbfa45-4c9b-49fe-a6de-b9225a3eb239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b5963-719f-49ed-a2e9-70e313c9d644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12e47931-7c0e-4004-9c68-0820f8308113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b50824-7399-4aa3-a980-2ebaf84752e9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fda1520-c775-40c2-8c79-d821b990c528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caf8f89-7523-4cc4-a7ce-295473331de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fa7458-c449-430b-a54f-fe2e5fe05c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7d3bb7-04bd-4b1a-b3a5-a97f91a48f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06363551-0f55-4faa-ac5b-a71263144b48",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734f86d8-1556-4d9e-b45f-174113814d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710eab16-f5bf-485f-8492-321944ac779e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b7bb65-68d9-4e07-909e-8dfabab77ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10a7630d-7347-4baf-aa01-ce57174fede6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e50c5ef-c99c-430a-9ecf-75c08efe9220",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6ef3d3-ae54-4a14-99de-46aea1ba36b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7fa22b-733c-4d23-b250-968b20070fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcbef67-47b9-4f62-ab19-ca03935f29df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8dbf6a-663d-4260-aec2-50acdab1681b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8e08b5-c991-4651-8a2c-b3dbc6e5e5fb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b27659-0569-467d-a46b-d348a8d3de7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98895c03-cd94-4580-b091-8ef5b2911540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873ccbcf-f610-4cce-8920-70d658a116f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1c891d-b9d1-4065-9d72-dadf7367deab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78af8b17-6db2-476d-bc7b-ee95b9519d25",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0e1346-becf-4f87-9cab-455f3cd21528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac3afd7-3395-4ec2-85da-5a3a693960b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d969eba0-0632-4dec-afcf-3bef222c26db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa321842-a35d-446d-a000-897e10bd8cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209b3d7d-6935-417a-be69-c4cfeb0a88cb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d53dd5e-1db1-4b90-befb-6a446318dcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef86179d-b9b9-473c-b3ee-0cc4649e5496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c625e3c2-1bb2-4423-8969-1acfec7331a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9cf563-10b4-4596-afdf-1b8a32d476ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe1e835-7b02-4bb9-a3db-72cccd687252",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0decd2-24d1-423d-a719-9720e1424b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d992e4f-d48a-46fa-9185-d5a8e0608458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4019153f-097c-45dc-8657-2b2009375d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f36c5a0-8289-44e8-af7e-2c6199b22068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee45510-903f-41fd-88cb-b282d955deb2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc720c2c-e55a-4ba9-9491-a67a68bc26fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6da598c-7784-46fb-b011-ac117e6f62c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8ae744-30ca-4b60-aa83-a2c1498cc2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "231d5dfd-3e4d-48f4-92d9-d454d80733c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdc3c3e-e709-433b-bcb6-b0ce49cbcd3b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f790b8d-3db4-46ef-ba6b-1d4461a001ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b0d17d-970a-4ff7-906b-3effbed3172a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970d9b73-3c7a-4dd4-9a7d-c71d6b779a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c6c631-088a-4f08-b2f2-fc2bb8c3c05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90633c94-2b4b-4716-a302-62260528c884",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f983d4-1a20-483d-98ce-447f93805b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e2dcc3-2fa8-4248-bc9e-628be7835d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efe0292-83de-4ceb-895b-31f62543e982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5125c7-ad5b-4e6f-9fdb-08c23b4ead75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ce4a4c-7074-4295-9970-2c8f90723c4b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2657acdd-09f1-474f-92b8-65d51a898242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924d75ec-ab88-4f32-9d45-5ad92b2ba85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9cc095-7258-49da-afee-a9281f2f6018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84cd1596-10a7-4442-bcb6-9f766e1a9bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a48173-3514-47bf-8a56-39862d98b1cc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b159b278-d851-4e96-afad-210af1b89e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b9cae7-ef27-4076-be18-ded893e88ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ba5e7f-2c24-44b1-8113-aa53216d3ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b829d74-4036-4232-bafe-c2d023320254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106ca3d5-4383-4ae4-9dda-504bb375d97f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae80788-e3da-4eab-bd3d-5cb7e80b36d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251f1f01-c3ca-4192-8c73-b8bf25982f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b1029b-2a4d-4b5f-93f7-438307f416d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6081f6-a931-4655-a4a8-d135402df413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ad8d46-1b82-4ad5-8891-b413518eefb6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c8b22e-ce08-49e0-ba5c-e1e851387ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bb5452-80e6-479f-8fdc-f8a5d2b87eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dce8b1c-898c-4d3f-927d-eeb49d0f35bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9206649e-ad0f-4cf7-9034-9f22864e6cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1874337-32cd-498b-b097-499834a03a98",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1d5991-9ded-4f02-a310-fe9a795eb60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ff8fcc-cac8-4679-938b-1bd47dbfa1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76536cce-defd-4265-bcd3-a1689ba846a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f8faf491-5021-4b53-9094-5cabfa5c973b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03651a2f-be69-405e-9e84-5d4199aa8ef0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb19b52-c122-429a-acfb-f57da98807b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "681aa1be-02fb-4669-908b-68fc4a46e529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3f1c2b-e5a5-437d-ae2e-ab65ee132734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0fae83-9f9b-42a7-8de0-cfcdffef2c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fe94aa-5008-4663-9651-958b0ef4e799",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d341b4f2-e4b1-4495-bb10-179c5315d54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d52e98d-5a4c-4e92-8a95-7a9bd2b3727d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4143a524-2d3a-4e00-90fd-d9ea51a27a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abb5d1b7-131f-4e57-9af1-4ebd52c022be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501f8b66-a922-45d7-8dac-964b9b82ce01",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c20270-f624-474b-aa1f-021ed6a4b526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069b37d9-fa34-45e7-93df-39789d01a243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08e7abe-ba57-4fa7-9ad9-80ea6acea8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a58519-edfb-4f65-80d9-abba6bfab763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75ace42-01bd-488e-8dcc-56b0572b5697",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dda82a3-d92f-4f9a-9130-468290347ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5a7cc7-1cea-442d-bb81-dd104db53e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b71d90-ea2d-4b3b-a095-9740b3b85abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f379cda-1e37-4abb-aadc-6d5f3e9cf6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41464c30-c7a3-43b8-be15-35f0557aa9b0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc8c4ac-5722-47f9-a23f-7b53ec969f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db45cbc-1571-4188-959d-27d53dfc802f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea31de8-fa28-48f7-9593-30ab9d65bf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f375f9-155f-4b1c-9e80-2a9381d4df28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5338412-4133-4fb6-aa26-d3a3edd4fcba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8543c48-57d9-4299-a234-9e7c012800a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45145905-5f7d-4837-9d88-a4a955dc3890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d038bf01-2abe-46d9-8ce2-5734df16f41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5669e0d-4532-4c4f-a91c-d118f6a81a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2e0af8-8d70-40ca-899e-4b94f5f2de45",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045f26ad-eade-4424-b787-f51156be6f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc07e62-8a23-4f71-be5f-c9df0a366d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5786262e-91c3-4bcc-8ff3-e031a36d897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfe71f5-cb8d-4387-acc5-f5b99ec97e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a6e811-6e8d-4cf6-95f7-f79343ee044b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8ce185-c996-4f1a-a45a-83abdaff5172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e271c51-7ea8-4952-b792-b61510bc7415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d98c7ac-3427-458c-ac4c-70b09daf5cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b766a3f-a281-4ecf-9516-79c43b28700a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e8cabd-02b2-4e15-ac8e-d6386e797688",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a358a73e-cc5f-4b01-9ba0-cb91e53deaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acaaef0-984c-4c35-9533-73db10a5e863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d070cb0-4658-48f1-9b27-fadbd8a0c35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0369fe-dcfb-4dd4-a85f-7e0d3a81f4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3331bf6-3658-4949-ac95-4eca9ef84c41",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090faa69-56aa-4e33-9b84-93b9587dba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7505f307-7fbf-4cfa-b03d-1eded12669e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fe54c0-ddd6-4f3d-978e-88a58d0665f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18094d3-c12a-4e18-890e-c1a70b84133b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4388696-4e79-4694-8c0b-71fe50cd1f63",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0c7b9e-3188-4d1a-aaa9-7df34110e1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd29a1b-2c3e-4767-81c1-41aff0b1a8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f12871-49e7-49b4-a8c1-9f84f88a53da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ff7bac-8614-474d-914f-328c16d655e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d9b27e-df98-4b83-9ffe-f933460bae67",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dff787-35b4-4683-84c6-6511d8846d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bef65cd-08fb-4de2-8e1b-97b82c01635d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4593fc-2b10-4b0b-90c6-16cdc6218a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f293fe-af2f-4df8-9c65-72dd51f9422e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016717ea-0b63-44b6-b2a8-cc54cf6af65b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e010d1-dde1-4d9d-902b-fb9bc38eaba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b88837c-7912-4eca-80e1-29dfadbab743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d01f3bb-d3ce-496c-ad1e-13d0808a499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecb4bb4-d946-4322-8dcc-780721ef117d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c104eb5-33dc-45d0-8226-38cfd50a4afe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c2b91d-7d62-44bc-b133-b1fcd0ec95fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819fb076-01fc-4c2e-bb04-004f914968be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6459409-d1df-4159-9e72-73a71fe06778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c8df20-bea9-496a-af7e-efc7178a90ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52a096e-fce5-476c-b2c0-03a4b8b05cdd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709a3db0-a5fe-4463-b447-bc5a143795d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609e8b1d-85b8-4cc7-a4aa-56c587140b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9350429f-5565-4049-b0d1-6c417f29a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c480b1-13c3-4354-ab81-df2c10dd6f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2e96de-6623-46ee-9003-3f0bfa251fd1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02758f7d-b860-4ca0-a484-123851b485b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640f5833-d169-4101-b7e1-c105ae0b407c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3337f8ee-b9ed-4a26-bdb8-b6d25fd09803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3529eef3-84cd-4c07-93e8-879ebb7c3d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460ed965-4eae-476b-af9a-b5dda26fe686",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a77087-bcd1-4362-ab13-8dc01499493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86491d27-65a6-4fdb-914a-37719047bb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a73c1b5-ad72-4e57-9eab-4458474db00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d91decc-0c02-410f-98c8-27d43e20ecbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4075f4bb-f051-4cb2-a022-9e31ef0ce653",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bb0746-a9ab-4c2f-96c4-d90adb2df143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72e9c94-faaa-4293-9633-7e04f6fee5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8a75b3-925d-445e-bc28-7b0038666426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db2433c4-58df-4fb4-a839-d4f40e684f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c47c38-237a-4371-920b-1d0d579f9c0d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33053fe-d816-4af2-85d3-faf11c9f1af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923d5114-6308-44cb-980c-287b1ad72d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a93193f-02c4-4c6b-a064-6e7070fa9794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "576a90a2-7a42-4cba-b409-60f8e6a015c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31eb3084-4dbd-4e43-afe1-5042f15a7c94",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fece07-c113-428a-b338-c5aedfddc49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bea4b18-d2a2-4aa7-8e1d-85f7fd18222f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbb8e3e-e29f-4fd1-85fc-ba435e139947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1edc5663-03f6-44f8-84cd-5d505a29e3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7583d0c2-7cb4-4b84-9549-303e0e878c11",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722b56c7-b335-465b-aab2-0eec29d31359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3831878-07d2-42bd-b878-588d866bf389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0d6651-f77d-484f-a870-b17922de47ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "234220e7-6590-4ac0-af46-f16aad7211c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1cebce-81c9-4b40-9823-4da180cfe761",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f7af93-0ebc-4660-8a00-96ee5e0a9191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e440141e-9f16-4ebf-9e0c-2dd5d0e57cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9175e5-def7-4fc9-a15a-75bc9e297946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab43f062-54ac-4b2e-ae56-6a14857671b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6528db6-7d12-48cc-b743-4b8481d7e40b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628bdfc0-150e-479b-8da8-262665fd2638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd69d4e-84ae-44d9-9919-fa0cc5c36264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4323b565-a7de-4f71-bda4-101bc17c7827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cef8d3b-20d3-44cd-bbc7-2bbc4ef14cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7edf094-7a12-4be4-a818-d858bd58bd52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97c6ab5-7e8f-4a75-950f-e246d0e709f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d4a604-cdf5-4a90-bef1-2067f55c705a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f727be-2120-4aad-b381-bc34d06b1e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0373b591-7994-4175-a162-c2931e51d880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f418448-86d6-45d1-b234-0263b91041ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a340f5ec-4d51-4c52-bbef-a3205771cd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c569e1d-efbc-425d-98aa-ae273deab5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaf7883-c7da-4558-9d87-00f870e6f5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfad980b-a58f-472c-a614-1e5f89cc1a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823615a6-b2a7-4b18-8342-88aeeb1d49ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4779e73d-cac0-4e6b-a823-cd589b875646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6a4b5a-9d73-4db0-aab2-ec38df3ca4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99598321-e1a0-4304-8ca5-9ce50a2a6e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2eb6840-ef93-42ef-9af9-0d0a6bdae64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf64d88-cd58-43c0-8197-8b9c5660b95c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb54d72-a8fc-4ae0-ab59-299014d4de5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb324ea-00ac-432e-8720-41eca2b8d49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c883ca48-7739-4499-84f8-8819e505e5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "993cd9b0-4099-46dc-aac7-c828b3a279ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5008134c-905e-4388-a8a9-c067588ef8f4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2018ba69-7c37-47bd-94de-277cb89271f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4121e4ca-9214-49eb-949c-0f8ca5f30ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a052a045-797c-4cb5-98bd-3cb834b885cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00a45e0-fa7d-4514-bc6c-b2fa911bbc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3123259-e5b0-4630-a45b-14238262a22d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c673e4-d610-45e9-bb75-6d4a2397f184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78af7e9-bfd4-475e-be64-5f91cea114ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8690c19d-cd83-4bdc-ac76-bb20725eace1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ed586f-1aae-4aba-8bbe-d9012cc66cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c6ed82-5ec6-432a-8df7-dd50066a13f2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101a4c15-e5f6-48b6-a9b0-0c762d274f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c498e148-3e76-4d89-a558-7b48dcb946fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b991719f-7fdf-4c79-9723-100ef320c45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0036c9a4-5fa8-4556-8b7e-927cba8143b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8d46a9-0f2a-42e7-bf52-155d1bfd999e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5519b126-4df3-4c0f-a2e8-d009e8f2114c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5fac76-667b-4960-bd4b-ad537a524da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8e0ee5-a821-4c28-8ee5-4115ecd6ceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a17329fc-2337-4588-b88a-59f47d0fa5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947ffdcb-e980-40b7-8d03-e1f6fcda6f36",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d7653d-1256-4f38-932e-18a153a1246d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70daa1ca-e570-4603-b9d5-d32e3494d236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48544ca-eb93-48e0-bb01-fddf12791ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bee76b4-69a1-4af3-93e7-9e19b7b235a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c71a774-3dd2-495e-86c4-b7d1b47da5c4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897722e8-a6fd-4fcd-bcc6-92be12ee5adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f417612-e9c8-4adb-bf3e-d570407730c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01215c00-8d11-4892-9cb7-6d7ae9406aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "703912e6-a283-4589-bf57-fd93de6d0025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffe44cd-5643-4211-b03d-ddf11997e8b3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7650f1c-7446-4eff-b828-022390c406e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663dc2d3-10c0-46cf-929e-5bc99b5f0001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27328819-af37-4626-b2cd-06b32fdc145f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f681df-6643-4b18-9ba2-9dc024b2ea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff9906d-b9d8-4ae6-8bc2-941ef090efae",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a33ca3-a5c6-4f78-9389-cc5e90121140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26364ed-005c-4fb3-a823-9c040e4b3fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e50482-95b0-46e9-817a-73187c91acc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f692e950-aff4-47b9-b2e1-00a636006945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08046841-5f18-44de-99c3-f4f3b22ef77c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb435f6-d081-4bf3-9a48-0288eb703202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027c8442-fccd-4a06-b6fa-0c4d38c9ea10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e563da-8e70-4131-8b85-db45ecb6ce3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76eed432-97a4-4186-805a-6c6a2530fe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2ecb1f-65b5-4496-87b6-e2c042cb459f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f01109-6181-4c55-a3cb-9f88fbcdc21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efcb873-0b3e-4e80-837f-cbbb8f50a564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2496ff-ed7e-4bce-acce-678121e5b531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "719de034-0e32-49c8-afc8-3be032a2b25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebb18e1-663b-42b0-adc8-11eb7124ab1b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1f7d69-938e-48f7-8a46-1588ae56a1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e29b3f-1830-419b-92ed-6505a9fa6472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a229da2-dc32-43fd-abed-2b51542026c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b573720-b7f2-4b88-80e9-0b29f5a616f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c745c7d-1f82-4650-b6c6-cae7ec1c642e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21921c7d-a6a2-4f7d-af77-4262bc795aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409adcb5-e271-4e95-8f0f-386cfb309965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d47cb8-5f6a-4a79-977e-1d49a5aa2400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03eb2275-7aca-4019-8356-c4fc1ae5d782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b8de02-0979-4fe8-ad7e-c3783391d288",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d212947-e459-49b8-8a3b-38c7f3f49c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67377d8-63ca-4a66-a7a4-a1f6cbb9eb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec925fa-889e-4eab-a39a-b8ab39d4e5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1464a969-a866-497b-9087-fea4f56c2541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368f71bc-cd82-4ebd-8076-bed7d01a76f9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55c6b9a-9c39-444f-928f-0d4d6f503a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a337e9-9277-415f-b723-fc143ed29d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ffe42b-de3d-4418-a3d9-5537e0cb598d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "499740bd-b63a-43b7-9b2b-72d51a8cd161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4b03a8-89c3-4fdb-b151-dc88ed7b6192",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a6a55b-fb9e-4b18-9f01-aa32933cf32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01231a21-b57d-46b6-a29f-0c5da4b578e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8efaae-7ed2-46a8-8407-b64af9b4d677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2846394-314c-4e89-bc48-6814fad15cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c356a2c-ef28-4e30-9493-73408b9a9595",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91be4e02-abf2-471b-9032-fe7268352afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc46cfb2-a70c-4084-be67-2cb0d06c93bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06118dbf-f8fc-43a0-bcfe-874785c3f83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e02e87c3-e0b2-4671-9199-ec9ccd9e7dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1f3d17-ba76-4e70-9209-ac951500d594",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03de5b4-769c-40c0-a5b1-943582aa5e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02a880b-adaf-495e-8239-c39e576ea86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ce4c69-ed98-4a6a-a6ab-c726f7942622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ed9b22-6093-4425-8128-73bfddb5f52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a613bb3c-62ed-41f9-bf22-cdbf86b0b71a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ec960c-6674-413f-a24e-4ca02d895330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9e600a-4833-4df2-b299-2317577e8d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e56e97-7803-4015-9f91-3e90c1286de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52de1163-86ed-4b78-852b-288a3dc79612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17279eb-1b8c-484e-a547-6ffbebf664b5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064816fd-c061-45e5-b8d5-b1137839814b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64b2ecd-e8d3-40ca-9a04-59320d773c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f01c55a-b8eb-4a45-ad95-fe16f55dc8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "84290d96-6391-46f4-a886-36f9b155ef1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05afc39-0492-4a7d-99ec-cd724bfd25e6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7483d8-fe67-4d1f-a264-cd3696314517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7755081f-9804-4671-ba67-e0d7aa3d43d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f76923-189f-45bc-bdc8-72a6e96e308f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9941b2-cf16-4c02-8b8a-648c58e0d642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce1e139-0eb8-488f-b504-657151505ec9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526208c2-1c3c-4c19-9cc3-98fcf933638d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcab8c84-b4f7-444a-be62-db90995c7c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66adbd22-7c91-4cfc-b12f-8a3096e9a7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc5ad47-f7d9-4169-b6cb-5f3f67c9149e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44ec169-dcfd-4bd0-9924-5fd61f8fd446",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405fcd3f-6eaf-46fc-8d3b-73ec0a9bd73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25565306-ec87-4293-a936-b526e6d7b0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4479bf06-b819-4453-b131-657d73d2f666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c29882-f824-4556-b17b-95f733bf30bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51242a9d-6a72-4953-aa50-15bd91561e17",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869c1cf4-6d23-4d00-baf3-ad2493aaf831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba7fb4f-e025-47f8-8c57-596ec5f7f800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ee8b8-3e9d-456b-b374-093b8223e40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f49b5de8-a5f6-4442-ad31-c1ec1ad07d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f762e2-e728-49a5-9a9f-e192134d9ee7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc077bc-fa79-41c9-8466-e1c47a071258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57383d90-e9dc-44be-865c-d8bb3adbaec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec5a8b6-4d45-45c3-a891-a3163a30f0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "408a7350-cbc0-4717-b94d-34d0922902bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb703f5b-2cbf-4cfb-b864-027cd4a6a989",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac32c2b5-590a-4b33-9f1b-61af1f697fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69872878-bfe1-44da-b608-0961602950d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84b4c11-43c2-4a6c-8c43-1b95dd9a69d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2377b071-fb0d-4fb1-b092-fe0f37c03b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a495d6-5248-445f-908a-3749ad862807",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163d4738-a4b3-4de6-82ea-87210c8434e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684fa574-e75b-48fc-b377-0101a8cbff36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5c1e60-7320-47b8-9889-8d258bd36b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b83043d8-cd65-4e9f-9003-8c6a0f9cec69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1759124f-4318-40f7-911c-90521315d599",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b4eca3-679c-457d-82bc-c531c79b34fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23915dcf-c2e6-4b82-9041-9f77e64b321b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651b582e-fdc9-4a7e-92e0-8e8ad8e9d9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8cd3b2-f6ad-4c94-a4a3-0c73a471ba2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a360c898-d1c1-4173-9895-a42f468e4bf0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1770b4-c8df-44b1-bf88-6544d982f9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07187484-cb51-4133-aa5d-2205d33789af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c05c70-9c65-424c-89d8-c9b9ab7c8325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92c5fa4e-e42f-4e9e-9b2a-bb4f6fcacd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfb5d66-6f74-43ec-9bdd-2ad352aced0f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c7f14a-5930-4f2f-a09e-54290dd31536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373d1e49-327b-4b95-b3b7-7d739386b5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0392f8-e432-4ab0-a095-87cc3bd19b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "764fc941-2785-411b-bfe8-718c1514dd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247f2966-8fa2-40b0-b3bc-f7f2a07164a0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec18cf23-f550-4187-b62e-d28b63ed2ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "da691431-0b28-4a24-acd8-be2f2ab87827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7d8451-0bbf-4606-b112-c2881b067aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6796e1b-b3d7-4e5a-b881-7cd0e5c15c60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44f745fb-6855-425e-ae55-6ff869f1b1c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bf3478c-1345-4483-ae32-928a67ae9677",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e8f94-a468-42c9-909c-2ce0d7e304a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9b6d1e8-0341-455b-92f2-ec2bab155605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622efc28-3a73-437a-a0e0-03f435fa9caa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbfc5759-281e-4e18-8a28-e594ed4f5460"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c98284ac-59e1-416b-9d9a-eab910fe6c0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "beae8299-8b43-415f-8a93-ea80cff66c10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22fac3fc-8e4f-438d-a30e-27e65cd71079",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68b98452-7dbc-479f-85cc-c5d5667daeda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e92252a-f801-415f-8974-20274a9ec36e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4867227-0475-449a-ac5f-5dc88f9509ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b43c0d64-56f8-400d-9d4c-bb6afd60e416",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f50b1fa2-39b8-41ce-ba07-411deac30c0c"
                }
              }
            ]
          },
          {
            "id": "fe434ae1-72c4-4c79-9f62-9183c2486de5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b359df99-a331-47c7-a998-2bc1d869a7a9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "93e88c5a-729d-401c-b4e5-d9f2535957d5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b67f5b-2200-46c1-bb82-1dfbcf87cdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "23b67bcc-a910-41bd-ad14-ccf7dca391f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0027dbb7-cc67-4b83-9d3f-3529696c4f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b4316a-0e2a-4f38-ba8a-8024c977df7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b6f1c1d4-c5d0-4289-84b5-4d5d4d12c1be",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc44193e-c121-4863-b302-06d358075cfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b834f5b0-7da9-4650-999a-cc0d5adffea9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10eda6e4-02af-4752-933a-ca688f2da1c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c660ef00-44ec-4495-bc74-4bec4d493f7a"
                    }
                  }
                ]
              },
              {
                "id": "eec9e77a-2c7c-4734-a2a6-d2fa8e4b00b3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40109712-0c9c-4a60-90ef-3f2059b84009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2e6b892-d85e-468d-a5a5-b6d6e62c4740"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46fe1f6a-6085-49e9-b7b6-2e840edc20b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae05caa6-7d54-4477-839f-b04596a141e5"
                    }
                  }
                ]
              },
              {
                "id": "4252daf7-c984-4330-8e25-ef298e452462",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89a760ae-c283-4fdc-9f7e-475cad6d911d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ce4dabf-a3d1-433f-bce6-7742b6a9db40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c2f571d-3223-4fa6-9a63-4d8f4a668e17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c77dd2de-5dfd-4b4f-abd6-076a0e0680a9"
                    }
                  }
                ]
              },
              {
                "id": "3e6d9f95-0b39-4536-b5be-446df4b96c0f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d37ced12-d4e9-440f-b5cf-ee7105e7b8b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67d6efc9-d195-4a5b-bed3-15a7172353f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df0b6d38-5d93-4330-be67-d07f0614cc06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "28b7574f-3b8f-4e56-ba64-47e7fbc0313e"
                    }
                  }
                ]
              },
              {
                "id": "3feb895a-f8b9-4c52-9df9-fc6c46247074",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ed8dc61-5e48-4b96-8542-13d28d47f1b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43a8c336-e969-4cee-914d-95fbb92f2e9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a087b3e-4f4d-45f9-b779-a76620d7c660",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "046915ab-b24e-4733-a741-4c7d6ab7707f"
                    }
                  }
                ]
              },
              {
                "id": "30f2e6e0-7649-4caf-84d4-c2df5202450e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d8b847d-f358-4b83-aee6-5434bc58fe12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8567378-0660-4637-994a-1ddcab4ed885"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c074fb7-27d2-47a0-95fb-3d451a45312e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1de171c-6f19-4527-8dd3-42d3a7d78346"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0575a5cd-5fb4-4d00-9ed3-170cb2170932",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32cde1e9-192d-454e-a53b-cbe6d364937c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e4f88a3-b9cc-4c30-acba-d275be51f6b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8731c82e-c6fb-4799-b196-ca2a11765dc9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73a637c8-7d23-43d0-8a87-c1a8472fd15d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f04936bc-843d-4560-a975-1f8a94b2af0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6c5cfb1-3629-4740-9ff6-a165832ae2ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcdfbe63-918f-4c52-982c-520b356798cd"
            }
          }
        ]
      },
      {
        "id": "1bb4de3d-f8d8-460d-9d6d-125176e76dcb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5dfbd0ed-bbe7-4b9c-b4ca-234e3b1de618",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a241e0b-19ce-4e09-86ae-1aa64471270c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5567b6a9-bc08-4455-96b3-a4d97823f2a7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9444c4d-0c39-4347-9d49-e419d30677d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fb72fd-9f05-4941-b3fd-96856c810494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cff4d94-8f4e-4d13-af04-1fb0c530cedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "22ea435e-f1d0-4c8b-beca-525464230b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2518e29-b0d1-4df1-bb15-59c17b67bf24",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0528bf1-fe58-4f6f-95b6-4bd938e38ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b689702-b2cd-4e0c-a7da-c7be5e1918ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2b9ef0-d71f-4b96-b64f-b27e3a0949c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3304f0f8-51e1-4fb8-8522-1928d10a3207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31af5877-8cba-478a-b8c4-3ebcb86c8976",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ce1b2b-e5b3-44cc-9fc9-0080e1ad4fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb990136-ea60-46ec-87db-77a835bd85ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f259d1-7ff4-43fd-b1db-fe54e5247489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9aa7d88-8b3b-4a7c-93c2-24e85fdebc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fade7a48-b1d1-4d2d-9090-93142305d6cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decd9f69-5ea7-432e-be5f-49a214514191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b428fedd-2c46-4b8c-9f6d-e1d2f5826d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4201c6d6-666e-43ab-a495-df307d60c15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49636b32-784a-48c3-bd7b-5ed3f6c5d348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0847cb8d-2a7c-46be-a5a0-a8eed3a4b8ac",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aed44d-6a02-4931-86e4-acca3ca94fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d80d0f8-1fb6-45c9-a9ed-a89a4760cef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e15fd14-a5f4-425b-b4d7-722a19042fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1128f115-67d0-49ca-952e-bdcf667ba423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2013b793-f345-45eb-b689-9c94cdf36e58",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed2173b-d8ae-4550-876e-c214a86f7d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a41a0d9-5a05-4454-9bae-0312de2f5b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e182c49-47f5-4133-bc20-0b858aa7380a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd8b184-79e9-4e73-9fc5-bd6b93af768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb242be-14e8-452b-8f44-5e931ad75a9a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a803908-6618-41b6-9b05-d828356f516c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc8c2ad-b1a4-43b9-a01c-f5edfe83c20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b933adb-0cfe-4afa-a4ba-fc147db19c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfbae61-338a-4827-ab31-562c77d292c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5376205b-c130-4d93-94f5-d1352022a3c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df7ff51-c48e-4fce-bcbc-1a1e33b45cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773b4573-b6ee-42af-9c3c-a2307b3d1bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971d5e51-eff2-43e7-b54b-abb939e9d6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9ce633-cb8c-4aaf-8876-01f493a35452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a873396-cf60-4da7-964e-a08dc2beea29",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad4cb8e-2a45-4523-9e80-d989182e1e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46623071-afb0-4e9c-b036-41c4948eb02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e2019b-84fa-4660-8ce1-b48fc686cdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b3def5-770d-41a9-ad66-cbcd9f9d97e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00b0439-fc9c-4cf3-a187-0fa28e2c7452",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0957f9-5a01-4013-a381-7f058bfe10ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beca3e27-da93-4f3c-98c4-d942bda02cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0274f0eb-b8a6-4210-9be5-00ba618aa905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2f1644-f9d3-46a1-87a1-d4c081796054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589abefa-6d1a-49f2-8c9e-4dd8de45caca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08de9959-896c-4926-8542-8fa455e92b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c049d6e0-cc7f-4280-847c-82de1bd33eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f56e55a-8dfd-4d52-a02f-562ccf9fd83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "66df6f6e-19bd-4f19-b53d-bd14ac2a72c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcb953d-685b-42c2-814b-c47187c2bfe6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fe27f0-56d0-493b-9e9d-2d4af07a8774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb807104-605a-4d9c-8a4e-c302306d0124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b499f34-cf80-4224-be1d-bffd96c9e44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4fe82b-11ce-45f8-9658-7ebe2c64498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2c5aab-2fa0-46a2-a55c-dc513aacb655",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a78329d-5c6a-4337-a2b8-b72855e07eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22d7086-1a4b-4e62-b697-2eb782efdb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdab4eb-dfce-45c4-bd56-b5fbf13733aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30561b4b-4953-4cce-ad4b-1500cf998d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06062008-b4ae-4efd-ae61-79965c050fb3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1043ccda-d0d7-45a4-9043-ce12668e297a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8527b56-1a09-44d4-887a-e227124ee198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eafbea5-30ac-46b2-8c78-2df9d9c63a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "941d1ac1-ba36-494e-9335-0c05ebc0b0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5cd1aa-5fd0-49ee-94db-b21d25116b7e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd800cdc-19bd-49bc-9043-74ab6e60e06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ff5654-3f06-4274-a154-ebf876546e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d869fd6a-86c4-4102-b0a2-2b5fa8735bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f142aa08-82a9-4570-99af-5f2b0ddd86bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6ffc9b-a8d1-4c02-b0a6-532cb73c4a72",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d7bd49-e550-44f8-b15b-d5aa05c9cf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b03ec2-ce67-433a-af8c-98e0c32e5715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1af7d5-5689-4961-9277-67aec4f780dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "93e30462-5616-4108-8b59-c4eea2df582d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfef349-73b6-4881-81c6-abc000d0e6f4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a64c391-58e1-4cbe-b27b-4e2e1355dbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d169752-861f-46d8-8d0b-52e5bf78cc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bc81d6-28b7-4de3-be46-78b9aeb0501a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8169ba3-4fc8-4029-bb34-d6f395df96b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60477c6a-a956-4b19-bb28-d56c1de8234a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45615de-7053-4221-8681-b4bfce9f7de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46549b79-6a6e-4e3f-befd-26f6b4721056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f125b75b-40b6-4420-bd84-4b17217250aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "045be353-5c7d-46e9-9725-525405b3075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df65e4b5-11eb-44bb-a5b0-572b573da077",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bfc0d2-6305-4f2c-9050-52de8d8c270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b4fd99-ff42-4923-9c3e-b3a285668541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd65f48-2e25-4b8f-82e6-1d0d030a441f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ef4418-4ac3-4e7a-a26b-832c4f79db62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2d34ea-7e18-4d23-a660-b327aa6111ed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99472c48-6e39-4515-8def-eebc1515acc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f8f772-1759-42b8-a56a-2cf7f86ef44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e5d54b-281f-4857-a8db-33e0cb637249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60598436-634c-4bc2-92dd-1a362779b040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc053343-be78-4e5c-a060-3586c9f8f8ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec75e1d-81e7-42f5-9c48-c30fe795f715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8032c06-a336-4986-b1a9-33bdd13b6f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a689555f-2b26-4950-b64f-6a5042ce326b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3a5c77-0c26-4747-97f2-6b9ac65cc4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7825823c-98ca-4532-b408-bf150f8777e1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af70c94e-78b4-4779-a15e-c320245e2016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d200a0-324a-4e0e-9b27-b42369dfa43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ae74d1-57ca-417b-b0eb-087f4220d7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db673e62-d545-483b-83b1-ac61d77e559f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f156a9a-5c80-4911-8595-c5516b4d8775",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ce5536-3808-48f7-a097-b4cf625ad83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d133adb-412d-4dec-b038-6f78a02529c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074cb399-e82e-44c8-9e26-95fabfddb0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "576ffb75-573c-4a57-8d73-f4354210a85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7022f29c-560b-47ce-8c8d-4eff08322003",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad7d2b1-cc66-424f-8eea-88abf6484881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8eaffa-d8ab-4582-9045-f0dddcf709c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94ef771-aecb-46a2-800b-42fe43abb1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6901e6b8-222a-43f7-851c-b15df96216b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f684e6f-f1e9-44e5-a580-c5591340a43a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b2943c-d227-4484-8d8c-63541c2b8d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c255fe4-dda7-4876-9ffd-9fea48853e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5074fc-3a4d-4199-982a-9792b8bd27c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4361f3a8-2a89-4e3a-a8f6-946268c683fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3e9dd4-100b-451a-beb3-0e9e769ed917",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70de47b0-6c5a-4698-993a-e60704292488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3789b6-b50f-475b-9d30-25d03ad79456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc3ff5c-566b-4908-b6ce-c5d86f9ff763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81316151-3643-4517-a0b5-7c1f7c1b072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea77a98-ae9c-411a-9090-e02abff0f9ae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3979305f-0464-4585-b7ac-cb6757ad1cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d71745-932c-4193-9fc4-f75ae92e7bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0392036a-6575-49f7-ac8b-47813d371928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf3c96e-9cc3-404b-be63-f89efb37092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7f4329-52b9-446e-aae3-d46b8d862f18",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297abd4d-e114-498e-87ae-487ac583f686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c749ad-253f-45fc-ae96-1f1dea22cc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90d2b92-12e4-4542-8533-1dc265147326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "293973d5-a55d-41a4-b50b-cea1430bc456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cfa4b2-7e18-46c3-8805-a3e78289fcb7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b8b918-3993-4829-811e-7bd37f743fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672a30a8-8b2a-4a7e-94fa-8cd90d65809f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e2f281-7d5b-4d1a-b242-b221d045af69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abbd609-3406-4d71-bf36-d69b1cf423ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f3dc9d-76c9-4aa3-818e-87b8e6de5188",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7521495-9ae0-4f32-b934-ccd098b19171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110d077a-a968-4817-ad07-4eb42034eae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b9d7bd-71f9-416c-bdab-24de83c2b921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6e8aa0-f4dd-4284-aaf1-face7ee70bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e93523-15fa-4cb2-bf70-767c1dad022e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea292583-ce97-44d9-ad29-0458e32ad07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a4e469-afaf-4184-96c7-a732a95d3212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5a18fa-86dc-4acc-b42b-98f024c53d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "027fea89-30d8-448a-9b8f-a1b387e7d284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701baeca-aa20-4509-91da-9c750fcf4f2e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2686c282-eb5b-432b-893a-b28bc254b2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3033ef50-8665-4cf4-bd16-6eec081c1a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c945bdd0-b3f4-40d9-aa12-5e0ab39494c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f076663d-2fe1-4ecc-9214-e49c1ae0c9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ca0091-0e5f-4250-b306-4345755c6023",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ad3462-87ac-4d5f-90d5-770b196f52aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f1822d-f10c-4abc-8857-1c4272011bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3599975-390d-4ee9-8471-83c515c76135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab2db0b-e800-4c4d-918b-1a64a81e1f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60018798-b11d-40dd-9c47-15b4ac527915",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a37beed-3ef7-4cbe-a664-d129b301efa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc915ec-a814-477f-9d3e-d7b56df62d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a90f88b-e6e0-4ca5-bbc1-a9f757b01ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9e9d20-9249-441d-a64c-71464fb9e473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd24ae7f-b77c-4eb0-98ee-735280506c44",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4b1f98-bfd4-4f55-b59f-19f35d48ca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f84d1f-481c-492c-911e-8eda71d78423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37006b04-450d-4e22-926c-9b34dc59e2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b6e4fb-08aa-4c81-92e7-707b738a6569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f6e059-5651-4ff8-9631-f5d4b20c3a28",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358cf0b5-aa47-479b-bfca-cdc841a2738e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92c53c2-fe6d-432e-93cc-3603610d5bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c744ac8e-fb2b-46fb-878b-9b92c5448a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef4c7ba-52b4-41a3-9290-06ada2c10ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee831537-a7b9-495d-803b-f710a983d235",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1136233e-7f66-4400-a1e9-cff9c12b3313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ee416a-df34-497f-a795-18e33febf4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa1f27-43e4-4bef-b10c-047ea10d89ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00dba479-aefd-4601-b081-e5e8161879a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f836cece-e0b7-48a9-b504-950599448e26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31ebada5-941a-4547-acd3-cc8b11640d7d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951cecbf-1fa1-4b43-889c-837acce9389f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7da3a9a9-b994-4f71-8e94-0bdcb7a58877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42155f7d-8048-4f48-8beb-917ac7c77124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b8ce95f-88ae-42ea-8d90-ef16fddcf082"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a523e70d-fb41-4054-a921-22b565cb42ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbfc4892-7880-4bd1-ba90-6c912e185ac8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b10a587d-66cf-4189-bb59-2412d780ffa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a161dc6-fbdc-45b9-8216-261ac7148040"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4978057-0d1e-4408-a4a5-f83d1cf63bec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2c2effb-e9df-4c26-92e3-a88592cfe417"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99ad34b7-8d45-473f-83d2-6d87426e9c8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18d552f9-89ee-46cf-899e-d9990e2613db"
            }
          }
        ]
      },
      {
        "id": "485f457c-2154-48d9-b0a8-5de162201326",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fa13e1db-db61-4431-8874-d9f51aca20cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "484ac57e-2d09-450a-879b-bc81d269136c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7dad1120-2e87-41b1-ae0d-f78666a947e4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7723535-6e7f-4f8a-9646-74d0d00c8153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee05619a-8639-4761-b035-628a4c5743ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b49baa-98fc-4646-a008-b9ac92b26154",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb7e326-37ea-4722-aff5-55c16c99cf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735654cb-a1bb-4fb1-96bf-afbbbe25ce32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdc30af-53e5-4dbb-b621-e5782bf262a7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854ce075-e065-49aa-b6e8-09c03cf327d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4218cc26-7f5f-4a7e-b170-5d1f2ed5854e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef875860-a94b-4f54-9d73-80926757835a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4675e248-5222-45bc-8630-72b58de99b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007f255c-2b58-43a0-a0b6-fdc9fcbceb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a80c000-f157-4732-94af-4be733752dbf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491ca7e7-33c0-46cd-a229-260c7e46f7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cb9464-caf6-40ca-b8ac-40c28d2dd123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1e6a69-6859-4df6-bac4-7c5a3497bb70",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a07b491-47de-4fcd-8ad0-3ce6c6c9c3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcfcb11-0fe7-41cc-b615-8dcb3ff2ae42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f0c5b4-32b1-491a-9b05-65a1699f35f9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0318f3b-7079-4c3e-9a73-f6bebd8e9266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8dacc2-d083-408d-bc7a-7f9415532794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee6f7db-1cb0-48ec-9a2d-e4d2a7e9c2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1102225e-e603-4f33-ace9-80a8fe57f906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f247bf-4fe7-438f-b418-c5529e735db1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f065725-d772-4872-b945-86043e53c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab51526-6c64-4ccb-8a9a-a0406e785529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c231195-3ebb-4336-8c21-938819f1246c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1c5b54-080f-4bb1-b763-ea4b96ead7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c44ec6-61a8-4c55-b356-c170b682bf2a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86aa780-1196-447b-842f-12bc0c322b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf59a36f-121c-42e0-8af1-3066232a4408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15329b8-dd09-4a83-b91e-ae8f673af954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac60244b-a268-4078-8d5b-c172e1aa411f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e334a91a-dd61-48fb-b70e-46d053c69a9b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd52c42-d198-4d7b-9cad-be3a5191c3d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feb886f4-a36e-4eea-bd5a-cdf374234d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88f01ec-7b19-4677-a022-8e6a76e3142e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c82937-98ef-411e-ad1e-b0bd7daf3fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d876b8b-ff7f-4544-af21-f3de8390375b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac418891-9a16-4b6d-a71a-132c4c12fc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8a2492-bc1a-42db-b1c2-e1c282df5713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525c11ce-9a42-4471-8519-c1c7ae4f32d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7a9d05-f790-45b6-a735-30a42b8204c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6840cab-a66b-49ee-8dd4-78ee97ed79b3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b019048b-20af-463b-a2a6-9aa364469ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad92505a-4077-4538-a6b1-f3418623ff2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3dc5cd-f705-4e14-bef7-52c7c76d42c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00121067-59a0-4287-b4b1-3fcf5707b87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a00251-a2ad-467e-a527-e8ed859893eb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e2c933-6c45-40eb-921e-7537f7e2cf57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c7dd324-4965-486f-a9c5-5a513418d890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e6e0d7-775c-47d8-a66a-3fda8c3bbcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f63308a-521f-4bf3-9954-69412c456b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dee2c6-4b7e-4fcb-8999-6093192bbcfb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cac7c4-2197-4eb1-9dba-875a0a8f4b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "734d0bc4-deb2-410e-9daa-700f5e4e1c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190f8aac-8525-4fd9-9771-04beed221853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5b2f02-6ec1-4431-8c31-b6f6b32d56aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca99b641-a1e8-4f6b-99cf-adf095a9657e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb79504-601f-4a06-b65d-9d0a5439f8cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c85257-f83b-4eb5-9114-3833ebed6d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8a66bf-0eb0-46e5-ae91-782b0e5882eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8db63ed-1916-42c8-adbd-9269945074ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f3c03e-d198-4268-a809-9bdb60d0c181",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95faf53-ced7-4c7f-8e69-c2519c72c945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018a08b8-6198-4c39-b9dc-943be02d5b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257c5ebe-473f-4a1f-8f8f-2b53a66c9baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c1b270-680a-4e5f-9fa6-fd46f7ea24db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76ddaa1-9330-477a-97a4-d71fb62c2c97",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f72e9e-5ea6-443a-b420-926440d38e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bad99d-0924-4b4c-8b13-74a6e288f098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e59d570-0e23-46cf-93a1-cf06aad86256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8051c2b-be70-4cff-a77e-0563cb3ff7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15362a14-f371-4bde-94f6-3a1c141d7d08",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b97bbd2-832a-4912-92e8-91bc1d88677d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77603a3-4265-4e62-bfca-772762a53ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61617dc-7003-457e-a5b9-6ea0a7486517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152be424-12f5-44c8-8aa6-b066e9b1fbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d5f14a-44f8-48da-8d40-e4bcccb6884e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2037bf5-991c-40ce-9cbd-5b25848ed2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3572d840-7a27-462c-a90f-b331386fbb12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b00db2-807a-4788-bf9e-ffb8db8eb882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec01376a-bf01-4c82-a054-1c9a1603da0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba57d703-8c39-4fd3-b608-88a80d4cf07f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a496b9-7a0d-4a68-9b88-5bfed091076a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf771825-db6b-4912-b461-9a80bb3e7bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03ef2a4-e72b-49d4-81fd-deeed82ab653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd20369c-a4aa-4cdc-ae31-89e4028eb447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df214ad3-4c2b-4a62-9875-8a96946d9f04",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03617699-426e-493f-b0db-183228d9629e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cfde7e-5eb8-4b96-abac-93cf090a9744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a7cc95-73ba-45a6-9d4f-0b3db9965f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835c448f-38fb-4040-a6b4-73a4e24e4e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75d3340-c090-4f62-8fc7-63f9ea95d874",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f2d311-51ed-41ba-a203-a2fb306b8df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e68232-8e86-413a-a39a-32f64fb7aa3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8873ef-5ed0-4698-8983-5ad371a40b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1aff6c-d19a-4ac8-a233-2d40b294dfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3647f756-314d-4c76-aa06-3f0ffcacde16",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce96df04-2b13-4068-8f06-e264d90539ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99312fd0-3f16-45b9-8916-35d4c29304c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401596d6-50d7-47cd-b9e7-d2e5d03f5e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6c23dc-05d0-4c92-977d-55ccefa56058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3068031e-f907-461e-8bf2-9b17b3ceaab2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e21080-171b-40f6-8fa7-bfd9b4799370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78cc120-c7d2-432a-8ecd-3c5e2ba91eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b96318-2a59-4621-985e-5d701b5819b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48398353-d465-4078-a8eb-3894381be96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c18ced3-646d-4ff8-b7eb-0c8d02951713",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beef6fd9-3d25-41cf-b196-b6f0b6ca596e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e0b329-bdee-49c7-98ff-501bd9d5a135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2346aafb-7008-4a21-8d10-2a828f9439e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05b4706-14eb-46f6-a2d0-5de47877d15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d810de0-27d3-4e71-8fdb-ec529df70779",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad29fc4d-b390-4ff1-81b5-8c3dd297c3cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9741da5f-5d39-400a-9db1-837f840ce9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056d8877-ebd4-4147-bcfe-f94d391e0e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aec160f-6dcc-401e-aeb1-a2bf832a55bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e0227a-71ad-4cd0-ba2e-2be0c1d9bac3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f515be63-bd34-493b-a2f3-f9d5da9fe2c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a513dae-35f4-4fbe-bc02-fad3b6d9fdf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fcf657-8652-403a-bb29-fe1c2a453ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f0252d-35b1-4c4d-8c7d-cb8e7382303d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d3a82b-9adc-4dd4-a029-fa1a2b322e45",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7962da5-c500-471a-88bb-56f198ddfc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5d9663-10de-431a-86a6-089392d113c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee789c9-1b8f-4769-a95b-d245c73231c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5b00af-b0b4-4fd5-9b30-a15b5b161849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535a47f4-646a-4e98-ae0d-311ce322d41e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90adf0f3-fac2-4491-bb14-33b4884aea01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720a98e4-f003-4f79-bea3-f6c2165d0977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825d8ae8-6156-4857-ba5f-b7d8a521c22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c0e322-b5e2-4d70-8293-19640da36c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f4faa0-f178-4dd6-bdbc-dfcbdf8abd46",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f491757-35aa-4c1f-a67f-b76f69331168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd959f2-bfd0-4130-b3d1-fbbcd571ffe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b281080f-7b5b-4283-ac0a-304598a60f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d6df3b-3c25-4336-b474-e9a690b4f122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759622a4-979e-495b-9a5d-adc46cb47572",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e069b146-20d2-498e-a051-5635a8b0f1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3ae542-40e8-4ac3-b360-838fc45370ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8223c3-1ee6-4fb4-9237-729eb5dce03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00efc1f9-a79c-4e49-9b52-0a1b00c5d99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b034b95a-87c2-49c5-9e5a-1b8f124d19bc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4a26ca-8902-41af-8b16-b1f9ded3a908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a5f6f8-08a0-44ef-ad09-f992800c394a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfee531-2f84-4dec-8dc1-75d246601897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0de830-89fc-4569-a852-4ca3a1bf2926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10ee0a9-cce1-4a30-87be-7fd3f69c526f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d703a7-6c9a-4999-9407-1a8882ab3343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776eaea6-8d72-42f0-addf-20c5dad5a757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ac9d95-f94f-4d79-9314-1f10909c193d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f8115f-3e25-4772-9349-648a8d418ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8472e23e-6aa2-47ae-ac7e-c759df394822",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a50153c-a779-4d2f-9929-d820092a65d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c04abc2-bd09-43c8-ad0a-89647e88f619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fcf3ae-ee72-4618-8622-ea7f8d0159bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acbee8d-94d5-4224-863e-5462803382e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7aa47e-2483-480a-856f-b8a412a2231b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae40611-6173-40e8-b006-e562f23758d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfd9af2-7d9c-4de7-a9a5-adaf15954328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0008c3-3fb3-4253-83f4-c620e021385b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6295ed0-1316-44d8-b528-091a0319cdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d53a3cd-e0a4-471c-826b-dcefecfbbc2b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf6a086-b0b4-4fb7-b431-49f8087e8955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4299dd-7caa-48c9-bb56-aa6309888fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23bcf61-c5b5-4c40-9c8c-a78ed69643ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0a5b55-4568-4ebf-99cb-084e6e11b602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b575389-fe18-48e0-9a24-51eba8a24009",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1868325-9504-4c88-be3a-6524a818cecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff13f3f-c3a4-4b40-8c3b-beeb83a647ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2b8262-0abb-4704-8b95-60987064c79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ba39b9-4863-4f69-a9a4-e1fb9b8c92c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8ef617-48bd-4abc-949c-94d1d2ea02cd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7eeba4d-f41c-4275-87dd-58376956893f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d93c36-926e-40ee-92bb-b82efe85b635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7ab448-e117-46c4-a023-e106b4e276d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c1ee53-42c3-47ff-aa20-2bf6a94471da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d21e93-1e89-4ce9-ae8a-df52ece915e2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ef694c-9493-4096-b972-f6bcb1b38eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf0beb7-6b96-41e5-b691-e7873e4c1cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3c20c9-82d9-4c7e-94c9-73cecb71895c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b6cf06-16e9-4f05-b8c7-f59de16afce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0011a48a-001a-4a3e-9388-51a9df4a7013",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b6f1fd-c564-4502-a85c-00f44efb8b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f14d00b-0afb-48da-be06-a9d3280be7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4140de2-d7c6-464a-a3fe-1d6b1a775349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee357b8-7e27-491b-ba36-e60314417293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e769c681-1ebe-4eaa-9d90-c1911f977007",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717776ec-ca15-4d65-8b6a-c235c10ca2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25713fa-fa0e-4fa4-8505-cecb1db27da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdec5fd-b2f0-491f-8199-b5b906fe3623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be41e115-69bc-42fe-bc9a-0b4f70f77454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c30c2b-ea32-4896-949f-431ad9300133",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b161854-072f-420c-8e94-c91f379fdaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5dfec8-e5ad-462c-834d-b71317b649fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5be2eeb-d9e7-4182-a035-951a1f81fcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0a5fac-522d-4bda-aabc-d62403f18f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5e89a4-bf68-4545-8cc4-9c673600b3bb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903d4fc5-d772-41fb-9210-bd23ba677ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597d22b6-0921-4db0-9f6c-1ccdea160f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a786f792-bca9-4827-9dbd-8f1402b8288c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ec685c-a4bc-4c13-be1e-aac8c24595f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefa9bb2-357f-4746-bbcc-f26bb97f0352",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35046ad9-310e-43f1-a39d-217908447e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400fcad5-a84f-47b7-886a-3ab0276d49cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f473359a-ed02-4f26-b29e-7903f1dd9f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddad98ad-7305-4c62-a6e2-373d2e5d192f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59de0431-25f3-482f-b035-d7a9fc02b422",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2e615e-88bf-43f2-834e-21526b9f0181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecca0ba-ae57-422a-b96a-35b5aaf9b9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f7dc8f-6359-484e-99cc-b832269a3763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a7104f-ee6a-43ca-a2c3-fc5e31be0dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4285b78-3ec8-4559-a360-f43c0ecc4106",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17303ce9-ca73-460c-89a6-d4f708c734f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ecfb14-58ad-4a2a-ae6d-6afb3d3ac92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d143f23f-fa51-422d-94df-7d61ac9abc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4308036a-c37c-4bbc-a97b-10d88035447e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfe23fc-e669-41f7-8735-774bb3ea3bcc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5915619d-66f8-4a92-ada1-5ec21ea85fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d82aa5-a8c6-446f-9743-e031c8055699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554c2785-88e0-4c1b-b695-660660a69185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2334f5ab-3fd6-4890-a246-202001311d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1c67bf-3596-4733-ad2f-b590a565cb8b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe5c0fc-f8ee-4c9e-ba1d-dafbbd9c27d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2a5a2b-afae-4d56-a849-16292e79e959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70b31a1-1bc2-4dc3-8758-f45de4214447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce44107-08fe-4cd6-9f3a-e928d9937370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ca51ea-8b1a-43ef-be59-c435210bcadb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a04a50-4219-48e9-83c3-3b97ca40ca8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e4f7c4-3407-463a-bf80-a5e45d68619a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3bf422-ec46-41ac-b4ff-d2f1eb423c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44e4ca9-ffd2-44c2-b30c-cb7b22341af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d737c9-f190-4c12-a4b6-aa8126ad3c6e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5c70a8-6ddb-4db2-aad5-a04460c8f16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7530276e-23fe-439a-b9d9-5d63cc665a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab622f6-da5e-41df-9255-ee493b86713c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb1e390-27ee-4fc4-9c94-1fba209a682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9768b12d-640b-4e18-981f-41fabb2113e7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262d6a68-c988-4dc4-9035-74f948399c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5639e1-406e-4443-9a76-bee4410bb0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142cb29a-37e6-4d16-8712-b5b7eb303ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b721516-ea34-4ccc-812b-19ee3873587d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23e36ea-c842-48a5-a18b-96161476c543",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f300ac9-416d-4fed-ac9c-d6f01a089752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a59bd8a-777f-420a-9cc9-3e985a56d7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99479748-9054-408a-a173-0b571a66ae71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6df1ad0-3f2e-4c15-85ad-7321262a9972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da85e2a-063e-48dc-9f4c-bfc5b45bc9da",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ebd687-e96d-4ed7-9db7-b702236c48a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1715d0-367d-48e4-89e3-befecf3bfbb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c19c60-15bb-47d8-909e-5ebec624c0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c717d9-ed1f-47f9-a6da-6b8690e6913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2250d58a-cdeb-48e0-b119-6a0c2de38f8a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538e08e4-7181-4480-9a11-03848963f154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c26801b-34c3-4a5b-9e2c-d343f791ee7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94562bc8-dcda-4cc1-80d1-738d5596669f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8901735d-f2eb-46b7-a7f0-372743161d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae55608-da01-47d3-adc7-edeb10d0dd88",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86e5771-8da9-4743-a211-4ad6188e2391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8ded9f-bfd6-4ebc-bfa0-b667684c811c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc92b18-2f71-4b77-914e-1cbff4ee0535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d5861e-1eec-4dcf-aea2-9097cd4843fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf3326a-1083-46bf-9a12-176be752c8a5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1eedd84-f529-4894-861d-ea38ec4f7ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588ab64b-2891-43dd-9398-990bdbee2130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91bf4eb-e89c-4f35-bb1f-764992bb4cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83ad5de-8a31-4e78-a08b-6c7db4157440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13076660-9f0b-47b0-89df-363c97d1d522",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa02a66d-1c79-4ecc-b37a-6275dc917500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdca715-5c18-4845-9579-9f5ffa78907d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daba190f-7720-4716-b526-0c515f4edb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf4906c-a31e-40b2-ace6-bd20687ffc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bab746-c763-4666-b552-7d4029206c21",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2ba6f6-3bac-4a1e-99de-dc0b054b74a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cc0cf5-ddfa-41c1-a46d-1f7fa92f970c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d37291a-1bdf-4c60-b550-dd866bc5a7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e90d51-4de6-4802-8a83-ae399c94f4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b99ba8-daf8-494a-bd1c-0826855c4892",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3752039e-27d1-4d00-bc00-26c917fc3402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5afb2f-d3fd-46e7-ba1b-d9f711d0e3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551d967b-52d6-4931-989a-d3f02d245c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb91715-12a0-4a0f-8012-9042b34b9d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c6430b-557c-43e6-bb9c-dafe99224e7a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50804bc-be07-4312-aa7b-dd3711ce0042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eadea1d-3009-45a5-a4f1-18fdf72b7e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fb0fda-f145-4971-baa5-0fe035e6b638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5629bd8-ad71-4664-b2e4-2a78c3ebf7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe295e38-5bbb-4f0b-aebe-2b160611917e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46801994-310b-497d-9b94-9b645e04e23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a99dff-0277-4cde-b393-42642695052f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b791be9-d029-4b17-8956-52d5e468a981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d666bccc-67be-4deb-aab1-e7019bae2172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fe8293-d666-4158-aa25-d34e8b45cef9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962c8bf0-5ba6-4b20-8600-f506d1899f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691a921f-ea05-4613-8d71-9129f96da474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f89ce0-01f7-412c-bc81-83bb64a5854c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63458a12-559c-425f-822e-04cb3a4ea6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa56365-44f8-4c79-9307-461730f7a476",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c717b-8b77-4fa2-8fea-5cedebb43240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e457586-b9e5-494e-8c83-8e08d06a7a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531598ba-f1e0-4a64-8d6f-e0f6e0bcc804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b780f972-5d84-428c-8463-7c733485d1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c70118-919b-4712-a9ae-24726a01faa7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add05505-ddfb-436b-a13e-394eafccda8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de271e73-c2dd-4845-87ca-99221b27176d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ba06ff-dea7-4fe1-8522-5be00fc15058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed159aa-a892-477d-adff-7a6333d1749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c826c662-260e-484a-96e7-34819c09c334",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a813eae-4afa-4f76-83d8-3d093f380921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a834840-d136-46e4-8536-6865edd83ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402df016-6fe2-44b3-a171-c9e818bfe9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d74e476-bd7b-4090-9bd1-028b714dcd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a3d869-ccff-4d95-83b9-69ec15567c47",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3babaf01-ac53-4e58-98ea-bee47953a565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cdf3e8e-b578-4c2c-b37c-33e8a98c3491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f052b46b-8b62-45c4-8cf0-615734ec8322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c9b453-ebbf-4449-837a-038666c4889e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d726ab-16c3-4ca6-b816-dea158e1035f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadc70b1-ffde-4075-bcf2-5e81ca24ef0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe05817-e634-488b-a68e-be94f534e49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf28711-7c3b-4f46-9fde-8ef7773a2d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6effb1ad-d4a4-4c7c-8920-1827c3c053ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6f8c3a-76a3-4ab7-86ae-80929a07828a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d52cf4-b4b8-466e-bb26-2e8f18413a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f65f162-6ef5-4cf8-9571-46e81f6397d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c612d14-01b9-4ee2-aeb9-55ba1c6ba263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5838f1-77bd-47b0-b247-e489f37db2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fa5aab-75cf-4b10-b955-29c495eeb6f6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befc4002-05e0-4607-8a64-32853445135a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72675fba-fcc7-43c0-8fba-9c762e11494a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93a36e9-a246-47e3-99c4-d7f50e3d12ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c6e882-98ed-40d4-9703-96ef715c0c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0f137b-589b-44e2-9667-63136dab4ccd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef8ea0e-9712-432c-96cf-fb37595d7d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18beccc5-8055-42c2-b838-bdf8b9584c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f47259-7365-4d96-9794-117521ff63ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587108b0-e5c5-420e-a24a-6ba6acc2f061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b33786-8fa7-4793-be20-0870900b82fb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8927c402-d477-4a3c-9239-ac735d6ebff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcad183d-2c99-4338-9cc3-1a80106ac752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269e15d1-f291-4fd9-95af-61dae3b33fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b00bcb-a078-4563-b662-5e189280ca46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e20d23-280e-4262-b6e2-f212b1cf727e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5a555f-6e57-4710-b059-731797c7ab41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5192c735-91ab-4e0c-8753-423c39f7a48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3821e48f-df3e-4c6b-b4b8-7cb340e8fdf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85887faa-8e5a-4125-bab9-5b63e4679ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfca455-d0ed-482a-b1d9-ecc9eb5d5398",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b259c7a-8000-4a90-94a2-e587701ea017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3d3770-75d1-4915-a35f-1ef8efb29cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4979d3-e3cb-4183-9e69-1dfeb647fbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36315a24-24d1-4991-87a8-a2a5edbe40c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca9407f-992d-4bc9-a96a-cf176f79f4b5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752083a5-def6-456f-9e50-3d135afdc1a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b58041b-5f4c-4b1f-9082-407c99533844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa397631-b582-40ba-9a36-1801af4c30d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f56b44d-9e4b-40d6-a362-eb4932036a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b473aa1-8e10-4e9b-92bb-764b99976018",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa86991-9e90-4557-ba5f-4e2add7b3747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963815da-0ea3-43f5-85f5-d81509a34ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe666ef-cdaa-4954-8bd4-61c9ef7f2bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ea4b2c-a2cb-4e7d-b2c1-99c6e5dbc90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08193503-22f5-4f95-86db-4f8a0ae1f412",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48204771-1aa8-4219-bb04-75a98ab2dcce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d848ecf-3f8e-4171-9e4e-c072006fc0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469aea24-8be6-4bad-8d76-daea7b1c5c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd970ae-649d-4e78-9923-85f34ec18300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782ce0f0-eabe-40d6-8f4f-607ae7505f22",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9def4927-594d-4d2d-826f-f8078bee464d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "748945ab-233e-4346-a8af-c24169d61f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97b086d-ffac-4231-9848-cf5219786cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fedc6e-10c3-4faf-b76f-b20eee5b68e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1408e4-bd2b-45e0-afa7-7387821e8b23",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a50157-a04c-46ac-9f64-cb67bfe4b3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ac5f72-fc0c-41c6-8f6a-0b747266f0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8331c590-5614-448c-966b-aade42d70a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba70931-35e9-4a9f-8dfc-b243db147aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cae890-0039-42e3-a09b-9f4a4aaa5622",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3713612-a88d-4bfd-9687-534bad2309e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1300d741-5c5d-4b02-8d7b-b033d18cee84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d997028b-282a-485d-aad3-c8a552ee52a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7496b6-0600-4da4-a69b-253850315a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39ad604-8870-4f2e-b192-d7734008b0ba",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8ca232-d942-49ee-9526-7f3f8286c005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5781c19-47cb-40e2-aab6-5d568ee1edb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5537ebad-9507-4b17-b638-d8e8b86cc4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108acf5c-b693-4ad4-90c1-294968b984e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22792742-9d8d-46ce-b146-05df411349d9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a4da76-6a2b-4564-874e-581dd9e81389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3cf3fe-ed57-4a2b-92ab-f6f9256768d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a402691-4eb9-4cfa-9177-b3b9e950e644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab57d00-c28d-46b4-94e7-88b40ce199c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fa211b-fbc8-4063-9c49-b8dcb6c86934",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e018b12-36e5-4f71-8700-d6967a687342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d73e78-2e0a-4925-aa35-25ef42dad700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c42890b-c1bf-4ea1-b374-6bed8ceb870c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6f8b65-682d-45db-be92-cad675325f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9a9b97-afbd-4461-852b-77117db22211",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a173085-48f1-461c-9acd-45b681aeaeab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724f627b-f055-44bc-87d4-b16e44519e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb39777-a0d6-4ae0-8f46-dd84f4543e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f06cc09-b8a4-4212-9455-9761dc7cab8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6740e3e7-8112-4c19-8fe1-3ef8455c096e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9b7862-1364-44dd-9c65-5d7057b858fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83e015a-4a61-4b40-a453-41d1dcfd54aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4701b9-90d2-41eb-b07a-09b336c17983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121039a6-67fb-4435-bd9a-5e8f36fa6b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7713db4-e90b-40d9-81cc-0c0ab429189e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c95950a-5ead-4e6f-ba4e-694eaefe7e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8dae814-4fd3-47c0-a179-9a9e281758e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30fd9ec-8d1e-49df-a340-5ddb6021b287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c36b6a5-bc6e-45c8-aaaa-96e257b69629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ff976b-04a4-460f-a583-05fddc2c628e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b0caa0-14f3-4c3e-8277-3aa81780737e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbf0ca0-de7b-4c73-b341-31fee475eced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f102c6d9-a605-42a0-8ebd-970779a7694f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016f03b2-7e7e-4ac5-bbfb-b1c00b857b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4e2d38-e614-4a36-9799-3f9b267c7f44",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88a16e0-753e-4484-8bf4-3fa50f4fc6a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e57c14-e6bb-4e95-877d-609b4599a247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a85913e-91e3-4fbf-bd3b-ffc3660fe473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8395f3a7-8833-4e62-8487-5a0f739c4dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235caaea-3c7e-44dc-9d26-76f20f951549",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a641a1fc-41b3-487d-af2f-2b3b9d6e0c69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd47aaba-b56d-4355-bd89-d797e051adf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b82b839-1ed5-43f5-9192-1fb74a2e80ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206fb008-42b0-48d5-87c9-6190a4032a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faad911f-0e5a-401b-9aef-636a64ca6c71",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6800779b-fe39-4c6b-8990-0fb4ca5090e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb46e066-60e5-42c7-8b7a-59f344b1ac66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ca1c83-4551-4c0e-8abd-26d98578938a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985871ed-f0d2-41f7-a7d2-5dde5da1c4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e7cbdd-4b21-4003-8cda-00e931c9510b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb04516-0c50-46de-ae6f-281f5eb4b5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c4017c-102c-4bab-9cd4-e3ce1ec25302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b635e17e-dbe2-45db-b452-e8230764ee93",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0f7132-c0ba-447f-a70b-47120f3f258f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393bde96-602c-432b-9961-be01337b1be8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624d2eef-d680-4016-9dee-b58e658a41e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6471737d-b23f-47a9-97d8-cbe2432ac7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3289bcd6-73b7-4d49-b8af-baef833cc71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d32951d-0185-444f-89da-e6b19c011dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180f8f94-d1fc-413c-839d-bd248f519015",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91866c1a-62f7-4c3d-b4e3-e41b009fd7f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d69fa1ef-ad8b-48b0-bfee-4b8934349088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480fc392-b983-4f10-af33-232b2911a823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57a73cd-7f5e-4c5b-8990-de4fc1fb78aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efe5a93-9259-4bb4-b99e-c864843e6a5c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6908d4-9239-4d25-8822-8b16b6eb5cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11c56e6d-c9a1-41f3-9fab-f7e694faa07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70e95b1-2873-437d-aa6c-23aa95d598b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42836ea-7e82-476a-a962-cd93d2edec66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3d0d2d-a182-44bd-bea2-ac4d8af060d2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350340c5-7207-486b-8024-f813ca53b7e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa1de0e-f54f-4540-b9b8-08a51e80d0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83b9019-3418-4817-999f-6c63e019b5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5814b9a9-629a-43c6-a9b7-d6f134d8e042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a25b1f9-cb42-4b12-8944-38377cecfd43",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780a6e59-2e5a-400f-b5b8-865a5bcc617e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce730ef-d377-4cad-b0ea-d7abb11c5d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07aab0ef-0d22-4d16-9e84-b248a6f7c8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65f75ed-ab88-4fc2-9a5a-01f573b08e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d36eab-21d7-4d6e-8c40-91d07dc42b8d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec0ac65-9a1c-47e5-8437-58ee1df0f052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250de239-a47b-47e6-9f91-737d988cb186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938e4a25-6b7e-4417-b7c7-66b8a48a75e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660e7ff2-18be-448f-ba2a-808659c9b2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04497fd-fa95-483b-ab18-c2e8c57c2605",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893d56fa-80bc-4e90-aebc-502086345505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6892953f-fc1b-4711-a764-9cdeed94852d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce0c47c-97bd-44c5-a4b5-e140fbeb8a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4df146-d521-4be7-97b7-52b5f7366629"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "498b647d-73eb-4a3a-8b4e-5c3fcf916eb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bc8dff4-c541-4cec-b0d7-2e0470a0c3c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "768a41e6-b646-4b9d-b365-c54cc5698f69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1fc055f-1765-4f40-8c85-4a514e2feb00"
                    }
                  }
                ]
              },
              {
                "id": "61459a88-798a-455b-bbff-a45b48f7d147",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5d1e7cb-92ce-49b5-bbda-96cfa01ba2c4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb867b0-3f01-466c-a22e-1cd9b0a8691d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ded155d9-026e-4dd0-8eae-73cb3e9902c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65517dfe-31b4-4bb9-80fb-d184ba9fc3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dd9aa00-caed-4fa9-811b-08bd85043126"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ab25918-c1dc-4a7d-9263-bc76fd301fe5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4aa563c-9dca-4f2c-9ec3-b165398cedbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b555c21b-08cd-471c-b325-2bb6e6936d77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edd003a7-5428-4acc-879d-6ceb61e5e6fc"
                    }
                  }
                ]
              },
              {
                "id": "f337be2c-ce9a-4ef7-9950-5c6c1345ee20",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "678d2b35-5238-4ca6-8b9e-d921aa5652bc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d8f8dd-06a3-4046-9c42-dd2e6c9c9922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "29cbfd59-7ab7-41e8-8e4b-0f1efe6314c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf39af9-9740-4dd6-a275-e4614eab8b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0eb64e-220f-4ac8-9881-051c13f2b712"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f3d51791-e2b2-4e62-9b2c-719a9f0c3bd2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d319a18f-a399-467c-ab3e-bc33a21dbaa5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a3d9b9c-ded0-45a7-ab50-e061f7db4699",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b8b799a2-a41b-4c90-a37a-958f50bf6914"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fc22e16-dd1d-4344-802f-b22fda65eb4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e47abd6-ff57-4be3-a086-7c25220bd728"
                    }
                  }
                ]
              },
              {
                "id": "3deadedf-65e1-46ad-af75-12224ba01cb0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c1f5504-9360-49c9-a953-da813f1c8a32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2683820e-003b-4cb3-8ca5-53a9e66111f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77787438-2881-477a-8b7c-3abd299f7fdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc5f28a2-2362-4d66-8cdc-07cf7d20b0e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1005b58-35d4-48c4-a204-864026cbb48a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8a82814d-d72e-43e1-89c8-b08e8b99888f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a6e5d7e-f53d-478c-b94e-8437faf9bb2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6492b66d-0d35-4c2c-b251-52cffef8b54b"
            }
          }
        ]
      },
      {
        "id": "725e26d9-2ced-413b-b966-0cdf102e4de8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "28e3a329-364f-4020-bf5a-eb1f7cbdaf5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "107e4b3c-d4d9-4a5c-aa88-44673c8e803a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1263ddc-f906-478d-8319-a1f88293d46d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9625c6-8636-4dc9-b510-937b83eb46fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21ec0b1a-eb26-40a8-a7ee-13e64818aa20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572ee45e-c1e2-44ae-a3bd-143d7ee0a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "926d0a71-a232-46d6-a197-bf9ca125e0cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e64b2286-a3db-467b-9266-de280a2d9177",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2306caef-225d-45c5-bda9-b0e8e8214704"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "737fc609-3e35-4888-9067-b9e1dc0f9541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08d54bd2-8028-4518-a611-77a23297269c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f39112b-72ff-4891-9621-3abf69b54242",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5748f020-c88c-430e-8315-76de4adc9599"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c51faaa-5143-4073-aa76-b36596436751",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a94404a-4eee-4e81-8b64-a82622ef1b1c"
            }
          }
        ]
      },
      {
        "id": "d5bb62c4-0c03-4432-8fd4-0fe20bd5b4c3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bc625b69-defc-4562-a8af-a76088fc912f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ec5e53f-c438-45ef-88a1-2480eaaf2f52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2310ddc2-83d5-4557-811b-42a7f9883772",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb4bab8-ef98-4dd3-ab89-cef40104cef5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9195a34e-ca37-497a-a1e8-05a6246a10a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e054d08b-d831-42df-b5a2-5afad231ebb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c341263-c2de-48d1-948c-0fd4d0b0204d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c33efdd1-c94c-453d-9d0e-5135a37040f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "287b8a03-8d71-47a7-b180-9efe6c725f49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "594a4901-ac5f-4dc0-810d-ba1cab0fe57b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48193309-485e-4a90-9cb3-bc72392e25a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d023cd0a-362d-4ad6-8e0b-2919f6f7f37b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2a940d4-5892-493e-9244-7c4791f68627"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4743f854-8902-4f85-81b9-285f4c305ce1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a32e081-5609-4940-8562-da8427c33249"
            }
          }
        ]
      },
      {
        "id": "f81ee5aa-59f4-421a-9093-f8e0ef8c7d25",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3c518d93-fb06-428e-80c2-b0ffbffa3628",
            "name": "Negative Testing",
            "item": [
              {
                "id": "412a89fe-ce05-4581-b104-ff5f41e34d6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd7280e5-a55c-46f5-825f-f608837e9415",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e86aa5a-770a-4d24-a2cb-2e49830be08e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "108a9c3a-94e3-4186-88a8-d032d7352226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c955e0c-6881-4245-b3bd-d0988d4958e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a06fa397-525d-46cd-aed8-a4a455e28a39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7e346a4-bfa1-469f-a471-b1970aeef936",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc269e0d-bf02-455b-b0a0-6cfd832165ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da2d0ea1-36c3-4b76-9e87-f6cf790dfc1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9c0a093-4cdf-4f0a-84e7-332925f36742"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9878685-47af-4e25-8fc9-676f5d8b957e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbf14e63-b47f-491d-8b9d-d351d72891a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91ed818a-b9e6-4fff-b791-d1580180f173",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89372d74-91ad-4bd9-842a-809c41e20656"
            }
          }
        ]
      },
      {
        "id": "4d77c8cc-8aa4-4b26-9d67-1d8231c43970",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97e9e750-134e-4643-b997-7f0c1a8d5acc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca73b321-b12b-470b-9e69-0b5295847d0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "19fcf14e-76c3-4d6a-814d-0b1c7c562e40",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e361df9-541c-4bd4-ad01-0b51f5941fdb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b1ff34e-5af0-4193-b8c2-27bbc19ad6d3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.38888888888889,
      "responseMin": 5,
      "responseMax": 7806,
      "responseSd": 534.8721620329595,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712450318046,
      "completed": 1712450350252
    },
    "executions": [
      {
        "id": "802da134-32d5-48a3-8f43-bb6d9a293f9b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8c811421-51cb-4613-9ebe-3947c1a5b729",
          "httpRequestId": "ae5f714d-a6e5-4dc2-81d7-937d1835551a"
        },
        "item": {
          "id": "802da134-32d5-48a3-8f43-bb6d9a293f9b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aaa07744-5ec8-4b23-9fc3-53473d6be0dd",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "aab93e44-4260-4798-b0d4-3ffa01764aa9",
        "cursor": {
          "ref": "8d0a6cc5-729a-433f-a9e2-49cf3b70ae67",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3e591335-e004-4163-9dd6-f0746c4e13bf"
        },
        "item": {
          "id": "aab93e44-4260-4798-b0d4-3ffa01764aa9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d62e0a8f-917a-4e45-a75d-88d6034e0a94",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "f36a9f54-71d6-42fb-9d8b-843dfb01444e",
        "cursor": {
          "ref": "70f4bc6e-63c5-4a10-bb58-06d2176fb037",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cf4c0e97-f9fa-4c21-89f5-37a1aed3d5a8"
        },
        "item": {
          "id": "f36a9f54-71d6-42fb-9d8b-843dfb01444e",
          "name": "did_json"
        },
        "response": {
          "id": "a44cd463-bcaa-46e5-a049-deca272da9a5",
          "status": "OK",
          "code": 200,
          "responseTime": 177,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f57c6-8a62-4015-82d7-b2e3a3120db4",
        "cursor": {
          "ref": "37cbf721-eb38-4794-a8c2-e0d04d951b9c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3fd3db9-c74c-4247-b009-516c20b2d2f7"
        },
        "item": {
          "id": "5d5f57c6-8a62-4015-82d7-b2e3a3120db4",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa248269-b37e-4fba-99a1-3b1150b82dd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 425,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f57c6-8a62-4015-82d7-b2e3a3120db4",
        "cursor": {
          "ref": "37cbf721-eb38-4794-a8c2-e0d04d951b9c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3fd3db9-c74c-4247-b009-516c20b2d2f7"
        },
        "item": {
          "id": "5d5f57c6-8a62-4015-82d7-b2e3a3120db4",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa248269-b37e-4fba-99a1-3b1150b82dd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 425,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6006c4a3-37c7-4109-8a5e-072802f6df14",
        "cursor": {
          "ref": "f1ce5b1d-6985-4fbf-8b2b-867a5c70e061",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "56721db5-39ba-42ab-a85e-fb400bde23da"
        },
        "item": {
          "id": "6006c4a3-37c7-4109-8a5e-072802f6df14",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "21be8e64-fb6a-42c1-929b-c41cd687c16f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ed6096-7a81-4bd8-a32d-54640a11b71b",
        "cursor": {
          "ref": "25f1be42-67db-4431-a214-d4fab9f1f4e9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "48e5f64c-51c8-4a44-9eec-a58d5323517c"
        },
        "item": {
          "id": "51ed6096-7a81-4bd8-a32d-54640a11b71b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2f09c68a-282c-4377-84a5-19659cd65b0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb3ed31-f41c-4ee1-90bb-3b67467fb1a3",
        "cursor": {
          "ref": "92aab77e-3096-4b76-a7bf-c2966baad5e8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d5ebcb04-c9d4-4ce0-9dfd-48890e8f9c94"
        },
        "item": {
          "id": "fbb3ed31-f41c-4ee1-90bb-3b67467fb1a3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dc348db3-5786-4a9c-8289-46d59191bdf6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304cc7d6-db58-42da-b503-76d4d74c2222",
        "cursor": {
          "ref": "ff3ffe75-e533-471b-838a-297dcc31bbf5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2de59963-9e22-4095-8876-bc324a845171"
        },
        "item": {
          "id": "304cc7d6-db58-42da-b503-76d4d74c2222",
          "name": "identifiers"
        },
        "response": {
          "id": "980e9aa5-dd39-4b71-86d3-0225dd6d277f",
          "status": "OK",
          "code": 200,
          "responseTime": 647,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad455f03-904d-4b57-8866-8913bddca171",
        "cursor": {
          "ref": "46b892f1-b6fc-4e57-928a-591b8547ef35",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "743de302-41f6-4af2-9db7-3f87a8b27f43"
        },
        "item": {
          "id": "ad455f03-904d-4b57-8866-8913bddca171",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cac7dffc-5b02-4b90-a52e-e70d309a4661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2b5f46-3b4f-42ae-bdeb-afbf1c242d83",
        "cursor": {
          "ref": "94dab5dd-ae67-4887-9c30-92bdfee8d1de",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c91773f8-fe6f-426e-a3ab-3e4397a26264"
        },
        "item": {
          "id": "9b2b5f46-3b4f-42ae-bdeb-afbf1c242d83",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "53dffd9f-652f-48c4-9aa0-22452e067bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5594b92a-b760-42dd-8017-38d4cd9da27c",
        "cursor": {
          "ref": "782b4b74-2482-48d4-8b30-c1bd88132391",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6ce22069-973c-4cd7-b4da-6be23fc3ea58"
        },
        "item": {
          "id": "5594b92a-b760-42dd-8017-38d4cd9da27c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "67d37bfd-68fc-46df-a948-035abebec112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a688f502-5f38-4022-a8d0-beb842d94097",
        "cursor": {
          "ref": "7631ba20-0615-4eaf-ac50-fd83112564f6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "136e71b5-ddb1-4377-971c-e43f2da3a8bd"
        },
        "item": {
          "id": "a688f502-5f38-4022-a8d0-beb842d94097",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bd7a4729-3306-41a7-8f4f-bf6b26d9f0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4a7bf6-a7ba-436d-b2c4-86de813921c2",
        "cursor": {
          "ref": "6280956a-7ebb-4ee0-82e9-3c3933a21981",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f7e1e593-1bd4-4029-b0a1-cf2e77fe931c"
        },
        "item": {
          "id": "dd4a7bf6-a7ba-436d-b2c4-86de813921c2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5acf04cc-c05e-4d5c-8f18-de0e75b943b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c49070e-4610-4bfb-8632-fea8f937b5f0",
        "cursor": {
          "ref": "baf7cc95-350a-462f-89a4-57585eec7802",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d7131917-70ef-4866-8423-5e0ce7c00337"
        },
        "item": {
          "id": "3c49070e-4610-4bfb-8632-fea8f937b5f0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6a5e4f7b-f3c3-4780-bb2e-0f129c7d9613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b78651f-fc08-4037-9bb6-d539176caa69",
        "cursor": {
          "ref": "e4a932ef-ddc5-40a0-8828-755ea30adbcf",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "385c7339-b844-4d08-a5cd-a3b064c118ee"
        },
        "item": {
          "id": "3b78651f-fc08-4037-9bb6-d539176caa69",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7e9f7066-b5b8-4372-ac3b-38423ef48fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b08877-b75a-4d4a-8b60-a5238f3dbb36",
        "cursor": {
          "ref": "627eacfb-ffa6-4006-9ad9-5ca1c0afb370",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dfd95efa-247b-46a8-81db-edac5db61e76"
        },
        "item": {
          "id": "e2b08877-b75a-4d4a-8b60-a5238f3dbb36",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "af617152-eaa7-44e8-9c30-cb74d1a4240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2da5459-5551-4931-b6e6-358483c2f7d4",
        "cursor": {
          "ref": "4be070cf-583d-44fe-ad60-9749439c9b06",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dad7d7ed-b86d-4bd1-8f81-cc87496870b6"
        },
        "item": {
          "id": "f2da5459-5551-4931-b6e6-358483c2f7d4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2c5ed0ce-bab6-4a9a-81ec-89276d6e7033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cf4066-aaab-4248-8993-b56a83a9bb63",
        "cursor": {
          "ref": "d6277a10-8ed4-4e77-8999-cd05f79c7fa6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4202f1a5-99ab-44dc-a6e9-15156179fc49"
        },
        "item": {
          "id": "d5cf4066-aaab-4248-8993-b56a83a9bb63",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6f539ecb-87a8-449a-b8eb-81592299dbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648343b6-fb5e-44f1-82db-1d7978a9cb20",
        "cursor": {
          "ref": "5b987c17-df44-43c9-9f1b-a3561d5d90c0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "70a73bd2-f300-4615-ad28-ff9cb372afe3"
        },
        "item": {
          "id": "648343b6-fb5e-44f1-82db-1d7978a9cb20",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "827a0932-6bf2-45a1-ba42-c8317e60531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf2e351-df8b-47a4-a1c4-c8625436ad14",
        "cursor": {
          "ref": "dd53c490-ec47-4837-ad5b-117adf143d17",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4385f633-6d24-4966-a091-1ed1494a5853"
        },
        "item": {
          "id": "ebf2e351-df8b-47a4-a1c4-c8625436ad14",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4a41a1a1-411f-422e-aaa8-850c660bce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824967b1-99e8-4be2-8daf-e6b22270cf74",
        "cursor": {
          "ref": "0fd5013f-5cf7-4b52-b459-c3010101035d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d0a072b7-e8f9-4a89-a5d4-672375589234"
        },
        "item": {
          "id": "824967b1-99e8-4be2-8daf-e6b22270cf74",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "43b0e12c-6f55-48ed-8f8d-2a4b036fb7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fb7066-c2b4-4f2a-9ef5-40e1af6a1e85",
        "cursor": {
          "ref": "95efe0e2-bb3e-4f77-948f-1c52ec1219e9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a33d0490-f281-4496-834b-8aefef03e7ba"
        },
        "item": {
          "id": "63fb7066-c2b4-4f2a-9ef5-40e1af6a1e85",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d40b4440-f63f-46af-a5b5-966e115c1376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e5a745-cd28-4e13-b2d0-fa6d67b3c3fb",
        "cursor": {
          "ref": "c22cf23b-6448-4e27-a3e2-36c88c9af91c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4b2f15e0-d7b4-40dd-8f68-c43621808046"
        },
        "item": {
          "id": "b5e5a745-cd28-4e13-b2d0-fa6d67b3c3fb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c29a4209-8a74-4213-95e7-d162be8a6805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758cf262-6dda-4d5a-b95f-8970f09723c2",
        "cursor": {
          "ref": "3a107db0-26df-4683-b142-09364d1645e9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "324eb925-705d-47fe-98cc-430fd9f9ee7a"
        },
        "item": {
          "id": "758cf262-6dda-4d5a-b95f-8970f09723c2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a5940981-675f-4b1b-b2e2-33d71ae1e942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f79504-4fdf-4893-b65c-2a50901c0e98",
        "cursor": {
          "ref": "edf25224-006d-4186-92c5-130872f6e9e9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a7c10fdd-e83f-4d6a-a07d-c55db4e4e4b4"
        },
        "item": {
          "id": "95f79504-4fdf-4893-b65c-2a50901c0e98",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b55d64d9-0a37-4946-b814-d168c064df98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd9e5b9-6973-4017-bed8-ec26bd818768",
        "cursor": {
          "ref": "59337020-bbba-46fc-be54-9f783bb22a9c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f3d0e7f5-8e4f-4e40-bbaf-39c7aad5a006"
        },
        "item": {
          "id": "4cd9e5b9-6973-4017-bed8-ec26bd818768",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4bb37480-4035-47a1-8243-209400f336da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271464d3-5f3b-4ff3-9853-e0f57458b005",
        "cursor": {
          "ref": "194e583d-5134-4284-9fc9-a56768048534",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c47967ac-25d1-4354-8b99-e8fd6cad47bb"
        },
        "item": {
          "id": "271464d3-5f3b-4ff3-9853-e0f57458b005",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "46a74630-4abd-4f9c-a096-5b3615be676f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d56cb2-10ce-4b02-9a3d-52d2bdaf3e91",
        "cursor": {
          "ref": "b285e388-d81a-4b0f-919e-5422a263b253",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fce7a7b8-67b8-4aad-918e-31a5a6a340c6"
        },
        "item": {
          "id": "a2d56cb2-10ce-4b02-9a3d-52d2bdaf3e91",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e51c5582-c08c-42ac-8bf5-d804d7a581cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b50824-7399-4aa3-a980-2ebaf84752e9",
        "cursor": {
          "ref": "1f652c04-5e7f-4603-be9a-89c97465c2c8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b45c65fb-8cf2-441f-a365-b51ee5d9d004"
        },
        "item": {
          "id": "d1b50824-7399-4aa3-a980-2ebaf84752e9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2bb65011-6690-4a87-92ed-aa7168dd20db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06363551-0f55-4faa-ac5b-a71263144b48",
        "cursor": {
          "ref": "56cf51af-1fa9-4e49-b60a-4c0e4cbedbce",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d1ca7fe-35db-49c8-83f0-87c68281ed36"
        },
        "item": {
          "id": "06363551-0f55-4faa-ac5b-a71263144b48",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1848ea22-e300-4aa5-b4e1-1985fffff099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e50c5ef-c99c-430a-9ecf-75c08efe9220",
        "cursor": {
          "ref": "a3510268-32d3-4b5e-a3e1-c5c58db4b91f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1112ca12-7dc2-4159-8776-f23ddcbfb3ee"
        },
        "item": {
          "id": "8e50c5ef-c99c-430a-9ecf-75c08efe9220",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7f74825b-99d1-436e-9886-7307a5ef9ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8e08b5-c991-4651-8a2c-b3dbc6e5e5fb",
        "cursor": {
          "ref": "5eb36b88-635a-41f5-9d95-ca49915d4442",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f84764d0-e5d2-48bb-9930-f0a541c04c73"
        },
        "item": {
          "id": "4f8e08b5-c991-4651-8a2c-b3dbc6e5e5fb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b8dfbe83-4e41-4acf-b5a2-f45c13264b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78af8b17-6db2-476d-bc7b-ee95b9519d25",
        "cursor": {
          "ref": "128865e5-fe9d-42ef-8839-4be61f069133",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "256e7669-76c2-41b5-bcfe-df72ad8d3a08"
        },
        "item": {
          "id": "78af8b17-6db2-476d-bc7b-ee95b9519d25",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "47e62b60-72f8-4dd6-a61f-501e532b61f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209b3d7d-6935-417a-be69-c4cfeb0a88cb",
        "cursor": {
          "ref": "a3373ab9-1f16-4dcb-a150-da9bcf8adc1c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cddab0db-eac5-4850-8d2f-4c8d9280b7be"
        },
        "item": {
          "id": "209b3d7d-6935-417a-be69-c4cfeb0a88cb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4579ccce-dbd1-40cb-b7a6-134e02580e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe1e835-7b02-4bb9-a3db-72cccd687252",
        "cursor": {
          "ref": "fae2fae1-6d37-4b29-a760-b99361709ff1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "28fdf988-6e2a-4129-ac31-2fe93efbac64"
        },
        "item": {
          "id": "2fe1e835-7b02-4bb9-a3db-72cccd687252",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "595278bd-3267-438a-8e01-9cc04e6f95c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee45510-903f-41fd-88cb-b282d955deb2",
        "cursor": {
          "ref": "159845c8-ed99-449b-95f9-df9f72be7523",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "11146b2a-102a-495e-8920-4102136d5161"
        },
        "item": {
          "id": "fee45510-903f-41fd-88cb-b282d955deb2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6b33916a-c726-4dc4-be80-242a8d2de882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdc3c3e-e709-433b-bcb6-b0ce49cbcd3b",
        "cursor": {
          "ref": "1b910806-0fe7-4c06-91f8-4908d475836b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e7131e05-cdc1-4e35-a630-babd7fc80eb4"
        },
        "item": {
          "id": "abdc3c3e-e709-433b-bcb6-b0ce49cbcd3b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6eebb46e-b65a-4ed3-b117-8871a03bd3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90633c94-2b4b-4716-a302-62260528c884",
        "cursor": {
          "ref": "e9cd58e8-07d9-45e3-9ece-352ec08caf88",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cd0b0e90-1422-4f3c-a637-301e392e71a6"
        },
        "item": {
          "id": "90633c94-2b4b-4716-a302-62260528c884",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "267c2ebb-2f31-436a-9698-69f501d739b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ce4a4c-7074-4295-9970-2c8f90723c4b",
        "cursor": {
          "ref": "cefa1622-2bd8-4e61-b4c5-af75306ac827",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f61750cd-1897-4aed-a8b2-b5ec21802ca3"
        },
        "item": {
          "id": "38ce4a4c-7074-4295-9970-2c8f90723c4b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9a49d77a-ac9f-47ee-8371-58b2600e04bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a48173-3514-47bf-8a56-39862d98b1cc",
        "cursor": {
          "ref": "8c8d126b-0c35-48e2-8294-e74a34df4512",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "eebb38ff-54ec-4ed4-9e36-ff5b0e9f46ef"
        },
        "item": {
          "id": "65a48173-3514-47bf-8a56-39862d98b1cc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7ee5b1b0-1d51-43fd-b5c4-945a19a764bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106ca3d5-4383-4ae4-9dda-504bb375d97f",
        "cursor": {
          "ref": "131dd6ba-9630-4dd9-852a-0627bbc6d2b9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d3509b6f-10c3-41ff-a5ce-bf7fb673816d"
        },
        "item": {
          "id": "106ca3d5-4383-4ae4-9dda-504bb375d97f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "873aa9f3-8ba6-4ba7-bf83-4d0f785c5768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ad8d46-1b82-4ad5-8891-b413518eefb6",
        "cursor": {
          "ref": "3f8cfd11-f4f4-416e-b6ea-ae37bc2540b1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "85c963a9-d889-4b97-8cf3-a915438dc0b9"
        },
        "item": {
          "id": "69ad8d46-1b82-4ad5-8891-b413518eefb6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "24817e16-09e2-4a81-b567-fc41925f0ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1874337-32cd-498b-b097-499834a03a98",
        "cursor": {
          "ref": "28ffe29b-d245-44c0-a932-c9d449ebcb97",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7b9b5d85-27a8-44d1-b2df-a5546ea237b3"
        },
        "item": {
          "id": "e1874337-32cd-498b-b097-499834a03a98",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e27e0dad-ef3c-4ec7-b579-8e0d4530c4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03651a2f-be69-405e-9e84-5d4199aa8ef0",
        "cursor": {
          "ref": "022dbbe1-320d-4c02-9d59-a644b90b7f75",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "55f5b1c1-eb2d-464f-ac5a-144f81b8becb"
        },
        "item": {
          "id": "03651a2f-be69-405e-9e84-5d4199aa8ef0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ed85c81d-6096-4b91-8d49-8be074dbcf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fe94aa-5008-4663-9651-958b0ef4e799",
        "cursor": {
          "ref": "0425a3fc-c85d-4212-bf70-a2053e5ab6c4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "58431462-64ba-419e-b3e7-2687657059cc"
        },
        "item": {
          "id": "67fe94aa-5008-4663-9651-958b0ef4e799",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e338661a-1d85-4345-9d30-751fe131e11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f8b66-a922-45d7-8dac-964b9b82ce01",
        "cursor": {
          "ref": "26c4abb6-f8af-4138-822a-510eb0236b5e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fd90a9ba-4e51-4188-86e3-6acd2d69cf48"
        },
        "item": {
          "id": "501f8b66-a922-45d7-8dac-964b9b82ce01",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f4f85b87-50fd-445c-98d5-1f1a066d3a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75ace42-01bd-488e-8dcc-56b0572b5697",
        "cursor": {
          "ref": "f2af265a-cf40-4a92-9593-654eb4b7d83a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ab120931-922b-4b5b-8da6-e111321a33c6"
        },
        "item": {
          "id": "e75ace42-01bd-488e-8dcc-56b0572b5697",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "49d88c6d-0816-40c0-8c65-f9acb120c84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41464c30-c7a3-43b8-be15-35f0557aa9b0",
        "cursor": {
          "ref": "5675c6a6-6ee0-48bd-9d02-a0a2194ea449",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "654bf975-ab3f-4da5-8225-36c6e7f74958"
        },
        "item": {
          "id": "41464c30-c7a3-43b8-be15-35f0557aa9b0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c66bbf6b-c750-4357-a77f-e9ee5a3ca05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5338412-4133-4fb6-aa26-d3a3edd4fcba",
        "cursor": {
          "ref": "552544c8-e22a-44d5-b191-116cdde3579b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ee5fa8c9-824f-4c43-91c5-56a8fee73990"
        },
        "item": {
          "id": "b5338412-4133-4fb6-aa26-d3a3edd4fcba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "99cbbda6-9365-43a3-a775-1f3f420cf2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2e0af8-8d70-40ca-899e-4b94f5f2de45",
        "cursor": {
          "ref": "0297e660-51f8-4e93-8b24-f81ee6deed0c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8ede7e0a-4b42-4399-9a6e-0b7495702247"
        },
        "item": {
          "id": "ec2e0af8-8d70-40ca-899e-4b94f5f2de45",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "20ef8b7b-7799-4789-a5f6-74d8d4e6c188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a6e811-6e8d-4cf6-95f7-f79343ee044b",
        "cursor": {
          "ref": "f530e710-de95-4d98-a9af-ebf262ae061b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "04e5025a-0e86-4445-90b6-742b042c8b57"
        },
        "item": {
          "id": "63a6e811-6e8d-4cf6-95f7-f79343ee044b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "16855dce-1ea0-4429-aa81-cf205f5d7a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e8cabd-02b2-4e15-ac8e-d6386e797688",
        "cursor": {
          "ref": "6f60c881-f4da-4000-bfa2-9e4ceebe6958",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "77b2bfc2-99c5-409d-875a-4217b24b8079"
        },
        "item": {
          "id": "12e8cabd-02b2-4e15-ac8e-d6386e797688",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bff82ad4-52e7-4e6d-98cd-299c121133b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3331bf6-3658-4949-ac95-4eca9ef84c41",
        "cursor": {
          "ref": "9d784263-0338-4e5e-9fc4-3e3c14ee5a03",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e329cfa3-2413-4bab-9676-f014681e78d4"
        },
        "item": {
          "id": "e3331bf6-3658-4949-ac95-4eca9ef84c41",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "015506fc-d9d9-4afb-b290-3f29cb600c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4388696-4e79-4694-8c0b-71fe50cd1f63",
        "cursor": {
          "ref": "3d80a7ca-d2dc-4438-bc32-dcc0b17da6b6",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e9c75532-b6cb-4409-9a06-5d5bc32a851b"
        },
        "item": {
          "id": "b4388696-4e79-4694-8c0b-71fe50cd1f63",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3b826615-bb20-445f-a9d1-a57e4f760d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d9b27e-df98-4b83-9ffe-f933460bae67",
        "cursor": {
          "ref": "252bcd4b-b170-46fe-80c3-b0c1cc7f36ea",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6822637e-f003-440a-997e-5ca8ca8f4250"
        },
        "item": {
          "id": "f7d9b27e-df98-4b83-9ffe-f933460bae67",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "857dee8f-1818-4e81-b12a-0b00b2840a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016717ea-0b63-44b6-b2a8-cc54cf6af65b",
        "cursor": {
          "ref": "b479b05c-7288-4bb4-93bd-e8979e1dc81d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "588c3fa5-ba11-46b3-a366-bca888b7c5f2"
        },
        "item": {
          "id": "016717ea-0b63-44b6-b2a8-cc54cf6af65b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c604c895-f02e-43ce-a906-1358dde1ee1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c104eb5-33dc-45d0-8226-38cfd50a4afe",
        "cursor": {
          "ref": "a3c63433-41c6-407a-8654-11683508f7b9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a9c32426-88ee-4989-9098-de2c72f36a8c"
        },
        "item": {
          "id": "3c104eb5-33dc-45d0-8226-38cfd50a4afe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8e429b7c-5804-412a-b422-3871fa268f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52a096e-fce5-476c-b2c0-03a4b8b05cdd",
        "cursor": {
          "ref": "3959912a-a32b-4db4-b76f-1cb549032e63",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6abdd3a4-a372-44fc-8085-3f04078b2176"
        },
        "item": {
          "id": "c52a096e-fce5-476c-b2c0-03a4b8b05cdd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d49bf486-c4a9-4a8e-87e0-0cc54c56a7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2e96de-6623-46ee-9003-3f0bfa251fd1",
        "cursor": {
          "ref": "85594377-7fd3-425d-a2b8-32dbea6bf015",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a57dd4f9-ec58-4128-9bd4-32e881d50c88"
        },
        "item": {
          "id": "2b2e96de-6623-46ee-9003-3f0bfa251fd1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "06a4d882-5c79-4734-908d-62139198f91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460ed965-4eae-476b-af9a-b5dda26fe686",
        "cursor": {
          "ref": "0e6f6a5a-efc9-42f5-8883-361ea0938e03",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3937e059-cbbf-4e58-b38c-2df83357f707"
        },
        "item": {
          "id": "460ed965-4eae-476b-af9a-b5dda26fe686",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9da5853c-c23a-4fc2-afdc-8fb001309d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4075f4bb-f051-4cb2-a022-9e31ef0ce653",
        "cursor": {
          "ref": "1c37cb1d-7373-4b4b-bf57-149185a7112e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "07b243ee-cea6-4846-9e34-8b9a468a527d"
        },
        "item": {
          "id": "4075f4bb-f051-4cb2-a022-9e31ef0ce653",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0229450f-d25e-4402-9ec8-ec9ba3d85a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c47c38-237a-4371-920b-1d0d579f9c0d",
        "cursor": {
          "ref": "737b3251-de2d-4d38-9784-b1e8a7088cb7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f41d60bb-4166-406d-8904-d960b2785325"
        },
        "item": {
          "id": "e0c47c38-237a-4371-920b-1d0d579f9c0d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "67f83ac8-df4b-47d3-8db3-2b81bad8d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31eb3084-4dbd-4e43-afe1-5042f15a7c94",
        "cursor": {
          "ref": "448c77d3-e93b-4387-bdcc-9123883dd5c6",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ff559ca7-3cdd-4e46-9f6d-73b4e22cce5c"
        },
        "item": {
          "id": "31eb3084-4dbd-4e43-afe1-5042f15a7c94",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b5a2c8e4-a2ec-4b79-8e97-e28ebbce2a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7583d0c2-7cb4-4b84-9549-303e0e878c11",
        "cursor": {
          "ref": "630fe0fa-6f91-4be1-92c8-3f48ad257a2e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8666f924-001a-429a-a023-13e57835ddb5"
        },
        "item": {
          "id": "7583d0c2-7cb4-4b84-9549-303e0e878c11",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b05e9412-0119-4753-9fb4-840d0252a8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1cebce-81c9-4b40-9823-4da180cfe761",
        "cursor": {
          "ref": "d2017090-6bc6-40e3-88d3-c30f6765253f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cfffdd94-5f03-4bb6-8701-d96e1a252826"
        },
        "item": {
          "id": "3a1cebce-81c9-4b40-9823-4da180cfe761",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f51847e6-a7d7-4240-86ad-10bf70d71148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6528db6-7d12-48cc-b743-4b8481d7e40b",
        "cursor": {
          "ref": "20696c46-1812-4852-afad-246956e24770",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a9fbbd96-4c96-4aa2-a38f-6521b1088918"
        },
        "item": {
          "id": "d6528db6-7d12-48cc-b743-4b8481d7e40b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "07363f67-5e59-405f-a4a7-5b0ba55e0cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7edf094-7a12-4be4-a818-d858bd58bd52",
        "cursor": {
          "ref": "d29c4916-3de8-4111-9062-000e0102de51",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7900ff50-dd47-4f12-beef-5eedef6a1710"
        },
        "item": {
          "id": "f7edf094-7a12-4be4-a818-d858bd58bd52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5dd07711-81b4-46c2-92bd-6abec667d6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f418448-86d6-45d1-b234-0263b91041ed",
        "cursor": {
          "ref": "46661495-eaab-4839-a754-10fdd8152f45",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "56c8553e-200d-432c-8f81-e7d4344a000f"
        },
        "item": {
          "id": "9f418448-86d6-45d1-b234-0263b91041ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a8c3057f-293c-4c11-86d8-4b3b44e57d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823615a6-b2a7-4b18-8342-88aeeb1d49ed",
        "cursor": {
          "ref": "cac9ce7f-ee9d-4a4b-8cdf-369f929ce2e2",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9c385ad4-a599-49bc-a882-8787862f5c82"
        },
        "item": {
          "id": "823615a6-b2a7-4b18-8342-88aeeb1d49ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "10adde3a-9536-4922-9b1f-330dfdd33b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf64d88-cd58-43c0-8197-8b9c5660b95c",
        "cursor": {
          "ref": "637ce65c-7a51-497e-988f-531ffbc9419e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "deb136f2-b62c-4248-a482-71de39374a21"
        },
        "item": {
          "id": "9cf64d88-cd58-43c0-8197-8b9c5660b95c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f017605c-826e-4933-8123-b4a8cba31d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5008134c-905e-4388-a8a9-c067588ef8f4",
        "cursor": {
          "ref": "33823a34-3e29-4d2a-94ed-aa96d25f8e05",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d0a54d35-69f4-4051-a4e2-1f0f750f1722"
        },
        "item": {
          "id": "5008134c-905e-4388-a8a9-c067588ef8f4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "53492daf-cdf7-4843-bc5e-42930b3932a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3123259-e5b0-4630-a45b-14238262a22d",
        "cursor": {
          "ref": "79754036-ff69-4d3c-9852-92a57be33aa6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cbd886d3-bab0-4478-bda9-0d19ee0eb3e8"
        },
        "item": {
          "id": "c3123259-e5b0-4630-a45b-14238262a22d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5337ab65-44d3-4c47-8a45-4bc40a3c7f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c6ed82-5ec6-432a-8df7-dd50066a13f2",
        "cursor": {
          "ref": "51580445-dc08-469f-8595-cab3d0364261",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f7f0952e-6df1-40b4-a4ed-da0216fe0fb8"
        },
        "item": {
          "id": "01c6ed82-5ec6-432a-8df7-dd50066a13f2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e17d2235-3e57-4657-8e71-595156bde063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8d46a9-0f2a-42e7-bf52-155d1bfd999e",
        "cursor": {
          "ref": "5c15d262-e52f-48be-84f2-f70562187f74",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "19bba39a-fdb2-42fd-b048-d011c03c94cc"
        },
        "item": {
          "id": "8f8d46a9-0f2a-42e7-bf52-155d1bfd999e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "953159c0-26f7-4077-85d2-2384e332aa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947ffdcb-e980-40b7-8d03-e1f6fcda6f36",
        "cursor": {
          "ref": "b04239dd-f47d-4add-a436-f0902be985ce",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8e5a0225-fcdd-4679-adfa-644de377abb5"
        },
        "item": {
          "id": "947ffdcb-e980-40b7-8d03-e1f6fcda6f36",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f4aae7f4-a78c-41b2-808f-59ca430abf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c71a774-3dd2-495e-86c4-b7d1b47da5c4",
        "cursor": {
          "ref": "e4781778-7c71-4325-b0d2-eb73e1c3750f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2493a77a-6a81-4d49-88ec-adfd245c9559"
        },
        "item": {
          "id": "6c71a774-3dd2-495e-86c4-b7d1b47da5c4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3d1ae1cc-7005-4be5-b691-80c1660e8305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffe44cd-5643-4211-b03d-ddf11997e8b3",
        "cursor": {
          "ref": "fe944fc0-c847-4be1-8221-489981256f36",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9bdb322e-e6e1-4800-b9d2-7ea119f9f5c9"
        },
        "item": {
          "id": "2ffe44cd-5643-4211-b03d-ddf11997e8b3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ef7ff21f-af50-404a-bb49-16e57841aa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff9906d-b9d8-4ae6-8bc2-941ef090efae",
        "cursor": {
          "ref": "ada7a959-bcad-401a-94c4-24d500293f84",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c37aca80-3f1b-4515-bee1-f051ba1eddaa"
        },
        "item": {
          "id": "3ff9906d-b9d8-4ae6-8bc2-941ef090efae",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7215a363-83eb-47a6-bf75-ff65b9dcf95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08046841-5f18-44de-99c3-f4f3b22ef77c",
        "cursor": {
          "ref": "3ba34d83-26e3-4b9d-bb07-e294580206f0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eaa20f08-bf54-429b-9503-a083d3a3af85"
        },
        "item": {
          "id": "08046841-5f18-44de-99c3-f4f3b22ef77c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5ae5d0c4-3746-4ebf-968f-7c02c2dfd2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2ecb1f-65b5-4496-87b6-e2c042cb459f",
        "cursor": {
          "ref": "1f3c57ef-3769-4903-952f-0c1af10187e0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b66c704b-085e-4d44-9d91-425efc85000b"
        },
        "item": {
          "id": "cc2ecb1f-65b5-4496-87b6-e2c042cb459f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b66736f7-b05e-43b5-8207-8bc48128b922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebb18e1-663b-42b0-adc8-11eb7124ab1b",
        "cursor": {
          "ref": "afce9b4a-c478-4e1c-9954-d5564eb4fa9f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d6d48985-41ad-470d-abe6-dafedb02263e"
        },
        "item": {
          "id": "2ebb18e1-663b-42b0-adc8-11eb7124ab1b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "80ca7fbd-f094-4e8d-8310-69aacf7edb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c745c7d-1f82-4650-b6c6-cae7ec1c642e",
        "cursor": {
          "ref": "c0323a0c-f10c-4999-bfbc-3c4acf6c9623",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fff4271a-9253-4c15-8077-9c84c9b1c593"
        },
        "item": {
          "id": "8c745c7d-1f82-4650-b6c6-cae7ec1c642e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e78b4980-1a90-4dc0-b559-5df888068788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b8de02-0979-4fe8-ad7e-c3783391d288",
        "cursor": {
          "ref": "59c5e446-c05e-48c6-8b3b-f8df726d15ed",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cd13f3a3-1437-4db4-8c08-9be0b5ee34c5"
        },
        "item": {
          "id": "57b8de02-0979-4fe8-ad7e-c3783391d288",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3419d751-14c4-4c95-adc6-925da082710a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368f71bc-cd82-4ebd-8076-bed7d01a76f9",
        "cursor": {
          "ref": "fe6cbd5d-149a-4ac1-ab59-eab8dfdd7727",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dad90d93-f885-4231-9720-3476f57fe070"
        },
        "item": {
          "id": "368f71bc-cd82-4ebd-8076-bed7d01a76f9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0fd0f4a9-e7ce-445a-b694-0787dc0762a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4b03a8-89c3-4fdb-b151-dc88ed7b6192",
        "cursor": {
          "ref": "56504468-05ac-4b30-b611-53e81a47ee02",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5186cc5c-491a-4c02-a47c-49d75c6ee87c"
        },
        "item": {
          "id": "cb4b03a8-89c3-4fdb-b151-dc88ed7b6192",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "34cf5970-4496-4ed1-aa45-9fdbf0681362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c356a2c-ef28-4e30-9493-73408b9a9595",
        "cursor": {
          "ref": "24af9d85-110c-4aa9-bfd0-279225b5c0e2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f851b01d-78a6-4ec9-864c-9fa698c1e672"
        },
        "item": {
          "id": "4c356a2c-ef28-4e30-9493-73408b9a9595",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "55c37ba7-b352-4577-a333-3a12d12bee5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1f3d17-ba76-4e70-9209-ac951500d594",
        "cursor": {
          "ref": "692dca8d-ccf1-489c-8c4b-ecb6e987f0de",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "80fec3ab-a5d6-47db-9cc3-d009ec483aed"
        },
        "item": {
          "id": "8d1f3d17-ba76-4e70-9209-ac951500d594",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "44a7660c-64b0-4c05-baf0-0dbbbf7e7328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a613bb3c-62ed-41f9-bf22-cdbf86b0b71a",
        "cursor": {
          "ref": "26f59c60-54f9-417e-867b-26c92da9ea68",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "38920b22-aa83-4def-ab33-5ebf1e434549"
        },
        "item": {
          "id": "a613bb3c-62ed-41f9-bf22-cdbf86b0b71a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cc0d1e35-f089-4a9d-884b-1b880f72975e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17279eb-1b8c-484e-a547-6ffbebf664b5",
        "cursor": {
          "ref": "119e4f4d-093e-410c-95be-e854ad171b3f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a3699bc1-5232-4d56-9395-a37be85250a5"
        },
        "item": {
          "id": "c17279eb-1b8c-484e-a547-6ffbebf664b5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "56749cec-0f14-4837-a8d9-ae8d0772b608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05afc39-0492-4a7d-99ec-cd724bfd25e6",
        "cursor": {
          "ref": "95f677d0-5d84-44e8-8c4f-4fb2ff9d64dc",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5bb15932-1f13-47c5-94e1-c2482e6045b7"
        },
        "item": {
          "id": "b05afc39-0492-4a7d-99ec-cd724bfd25e6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e1d0c092-e969-473f-b68f-a07cc3ac827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce1e139-0eb8-488f-b504-657151505ec9",
        "cursor": {
          "ref": "8d786b73-81e2-40b7-9b13-a9366aee141b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d12a1357-d595-4666-9994-48f889366971"
        },
        "item": {
          "id": "0ce1e139-0eb8-488f-b504-657151505ec9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ff96f422-5cf0-4a7b-97d6-e611500399ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44ec169-dcfd-4bd0-9924-5fd61f8fd446",
        "cursor": {
          "ref": "03059a45-7ddf-4292-9fbe-722cb5ec6a0d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e6b1a1af-696f-4ac4-886d-a77d319578f6"
        },
        "item": {
          "id": "d44ec169-dcfd-4bd0-9924-5fd61f8fd446",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "33cbdfd7-4692-4e41-96d6-b39b3b8830a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51242a9d-6a72-4953-aa50-15bd91561e17",
        "cursor": {
          "ref": "7b7e5572-c091-4460-a51f-23b57b75f64b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1f8b3f8e-2b19-4c3d-880e-335dbb582157"
        },
        "item": {
          "id": "51242a9d-6a72-4953-aa50-15bd91561e17",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "70851ace-9db5-4330-8618-4ba02356cd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f762e2-e728-49a5-9a9f-e192134d9ee7",
        "cursor": {
          "ref": "65798069-114e-48f7-aa0e-5f87614c6181",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4230db5a-730c-4ba5-b068-90ac0d507a56"
        },
        "item": {
          "id": "e3f762e2-e728-49a5-9a9f-e192134d9ee7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a3f74ad2-e171-4f05-94c4-4fa4bb063efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb703f5b-2cbf-4cfb-b864-027cd4a6a989",
        "cursor": {
          "ref": "42042bee-7ed8-43c6-a399-37c60b07070f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8682993b-49c4-4b27-9012-779a4692a670"
        },
        "item": {
          "id": "bb703f5b-2cbf-4cfb-b864-027cd4a6a989",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0a5c351c-44f8-4d6c-8ca9-046267629557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a495d6-5248-445f-908a-3749ad862807",
        "cursor": {
          "ref": "8e4a7448-9b88-4bbc-91b5-de671bd75dd8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d7e15e4a-818c-4507-b8c1-61eef02da513"
        },
        "item": {
          "id": "c3a495d6-5248-445f-908a-3749ad862807",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9973d187-cec2-43a5-b14f-e1ca2eeb12c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1759124f-4318-40f7-911c-90521315d599",
        "cursor": {
          "ref": "65388868-6436-4b19-8015-1181177cf913",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c2bce5de-3d3b-47a9-b747-2479890ddb63"
        },
        "item": {
          "id": "1759124f-4318-40f7-911c-90521315d599",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "42aee2d5-472a-46a0-89e1-d59860a41c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a360c898-d1c1-4173-9895-a42f468e4bf0",
        "cursor": {
          "ref": "6c3a935b-0be6-4cfb-bd82-2e3e388e3157",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c38a8c45-9dd6-4ee2-98e4-0ffe59577994"
        },
        "item": {
          "id": "a360c898-d1c1-4173-9895-a42f468e4bf0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4cbc15fe-58f3-458c-8eb2-8e0301a1d59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfb5d66-6f74-43ec-9bdd-2ad352aced0f",
        "cursor": {
          "ref": "7bbe7421-bd12-4289-b580-35071128518f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0a2fcfdf-375d-4eca-af27-88e9c74ce710"
        },
        "item": {
          "id": "ccfb5d66-6f74-43ec-9bdd-2ad352aced0f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "caaf5c7f-26f9-4fcc-a36d-ea81ccf66452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247f2966-8fa2-40b0-b3bc-f7f2a07164a0",
        "cursor": {
          "ref": "0a762bb4-0871-4893-b676-d7374d1492ed",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "218fa7f2-caed-4a15-a5a2-3ff747c43269"
        },
        "item": {
          "id": "247f2966-8fa2-40b0-b3bc-f7f2a07164a0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4f5a53f5-2f89-4214-b364-3d5f7a6a0f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf3478c-1345-4483-ae32-928a67ae9677",
        "cursor": {
          "ref": "cd7e9a4e-faa4-41a3-8675-154085d31c24",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3a777fb8-b97e-4d2d-b834-11899703d81e"
        },
        "item": {
          "id": "0bf3478c-1345-4483-ae32-928a67ae9677",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "82d648b5-d35e-4fbc-a628-3b30284fe9fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e88c5a-729d-401c-b4e5-d9f2535957d5",
        "cursor": {
          "ref": "fea95c6c-bade-4577-a32c-295045cd0bfc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cb2036a1-8bd1-4794-b00c-898a0bbc6885"
        },
        "item": {
          "id": "93e88c5a-729d-401c-b4e5-d9f2535957d5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6b07fb67-196a-48aa-b3c5-2eef91c90839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b6f1c1d4-c5d0-4289-84b5-4d5d4d12c1be",
        "cursor": {
          "ref": "c293d156-e99f-4b7a-b4a8-ccd5ef463cfe",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "713513a9-218a-40fa-b698-fb75ecf20437"
        },
        "item": {
          "id": "b6f1c1d4-c5d0-4289-84b5-4d5d4d12c1be",
          "name": "credentials_issue"
        },
        "response": {
          "id": "457ab84d-7eb9-462b-987c-7edf3847e0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "eec9e77a-2c7c-4734-a2a6-d2fa8e4b00b3",
        "cursor": {
          "ref": "12504bcf-6c49-4adc-b99e-4b2b6881e73d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "275b47ef-0103-4947-8c47-8425120c9b17"
        },
        "item": {
          "id": "eec9e77a-2c7c-4734-a2a6-d2fa8e4b00b3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "992b8e51-add2-48d6-9234-c66e9d6eecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4252daf7-c984-4330-8e25-ef298e452462",
        "cursor": {
          "ref": "cbba0116-c9ed-4d2d-ad27-29ca2fbe4fa2",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "06a0aa96-0edc-4061-893f-c13806d4371f"
        },
        "item": {
          "id": "4252daf7-c984-4330-8e25-ef298e452462",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c7de67c1-92da-4ced-ae5f-06da41eb7148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3e6d9f95-0b39-4536-b5be-446df4b96c0f",
        "cursor": {
          "ref": "6a87d779-4b55-40fe-a667-4880970cb008",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bb0a75d6-1696-4ce4-8e7c-08175e1e4e28"
        },
        "item": {
          "id": "3e6d9f95-0b39-4536-b5be-446df4b96c0f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f0c00b87-e43d-487b-a3e0-8da5f7de5e0d",
          "status": "Created",
          "code": 201,
          "responseTime": 7806,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feb895a-f8b9-4c52-9df9-fc6c46247074",
        "cursor": {
          "ref": "72353d97-1222-4e9e-8f66-b54d56480f8c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "89a2e444-bf1e-477b-ae43-a0f22e63dc44"
        },
        "item": {
          "id": "3feb895a-f8b9-4c52-9df9-fc6c46247074",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e1f42d9a-bd52-4f1e-8921-563febfdb7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "30f2e6e0-7649-4caf-84d4-c2df5202450e",
        "cursor": {
          "ref": "da77ecbe-44ea-4df1-a555-6471c274b7be",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f0ebb7c2-79e7-49fa-9e05-04a65c510652"
        },
        "item": {
          "id": "30f2e6e0-7649-4caf-84d4-c2df5202450e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2499c3af-c088-4001-8e64-abdfb058f5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5567b6a9-bc08-4455-96b3-a4d97823f2a7",
        "cursor": {
          "ref": "2b1f328e-52b7-44e3-8975-eb23ded9cb5f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "665b26b3-2663-4907-83ac-869ecc27f7a6"
        },
        "item": {
          "id": "5567b6a9-bc08-4455-96b3-a4d97823f2a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d6ae4de9-57f7-4b1a-a17a-232695d4e8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2518e29-b0d1-4df1-bb15-59c17b67bf24",
        "cursor": {
          "ref": "5a957390-2487-4f19-9fa6-2cd548a0fc98",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e4b0b0b-325e-4c16-a610-6c0cb2311d03"
        },
        "item": {
          "id": "a2518e29-b0d1-4df1-bb15-59c17b67bf24",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4d1d4e62-f3a6-4a00-b1d2-0078e1f4ca3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31af5877-8cba-478a-b8c4-3ebcb86c8976",
        "cursor": {
          "ref": "3c3f6127-917b-48ec-b801-674273214f06",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d5c2244b-19a2-4fd6-916c-69f9edd2a68a"
        },
        "item": {
          "id": "31af5877-8cba-478a-b8c4-3ebcb86c8976",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "948b143a-9021-4f31-ab09-66dcfcc6afd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fade7a48-b1d1-4d2d-9090-93142305d6cb",
        "cursor": {
          "ref": "cdfcf86a-963d-44f9-99f3-e0e2be0c1cba",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "92452d57-818f-4021-94a0-3bda2ecb7f84"
        },
        "item": {
          "id": "fade7a48-b1d1-4d2d-9090-93142305d6cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f09c8cf-96d5-45e2-b2e6-c11d412cbe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0847cb8d-2a7c-46be-a5a0-a8eed3a4b8ac",
        "cursor": {
          "ref": "e0cf4d4c-7a21-4f95-9643-dddd7137dfc3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "92c66403-b98a-4b9d-93bd-8fe825220bc8"
        },
        "item": {
          "id": "0847cb8d-2a7c-46be-a5a0-a8eed3a4b8ac",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2c5df4ce-8c1b-47ad-a6e0-22a4188bf65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2013b793-f345-45eb-b689-9c94cdf36e58",
        "cursor": {
          "ref": "803b1890-9c1a-4cbe-a48a-a08a4fbe1416",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5ad4e078-fef5-4dce-890b-c04662652b16"
        },
        "item": {
          "id": "2013b793-f345-45eb-b689-9c94cdf36e58",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dd9d9561-2da8-45b5-a968-300d8e61d311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb242be-14e8-452b-8f44-5e931ad75a9a",
        "cursor": {
          "ref": "fc70702f-43ab-4322-8f3e-632ef440027b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d0cdac1a-667c-4df4-9185-85a4e09a4948"
        },
        "item": {
          "id": "4bb242be-14e8-452b-8f44-5e931ad75a9a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bb008b03-eb47-44cc-a4c6-6d4f907d055a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5376205b-c130-4d93-94f5-d1352022a3c6",
        "cursor": {
          "ref": "dcdbcb5f-0e7c-415d-85cc-1b8f9e99b7a2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "524ae3cb-8a06-4181-b6e9-3fdb2ebd6dcb"
        },
        "item": {
          "id": "5376205b-c130-4d93-94f5-d1352022a3c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "707c4a8a-dcad-41ba-ace4-49aaece68d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a873396-cf60-4da7-964e-a08dc2beea29",
        "cursor": {
          "ref": "785d4378-431b-4b5d-b1b8-94fc23436f37",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c428bf21-edc4-4312-9928-71e6006fe899"
        },
        "item": {
          "id": "2a873396-cf60-4da7-964e-a08dc2beea29",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "48751ccc-b8a4-4693-8970-d470bdd59845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00b0439-fc9c-4cf3-a187-0fa28e2c7452",
        "cursor": {
          "ref": "a6b7f941-34d6-410b-91fd-5cb9ce92df6e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f2188871-45db-49f1-8417-f042afceccb7"
        },
        "item": {
          "id": "a00b0439-fc9c-4cf3-a187-0fa28e2c7452",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a96b40bb-5600-4bb7-af3c-0d6620255bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589abefa-6d1a-49f2-8c9e-4dd8de45caca",
        "cursor": {
          "ref": "10036c5d-032c-49db-b6f1-01dca8884055",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b3004d34-4d88-446c-93ca-3f1d7494fc0e"
        },
        "item": {
          "id": "589abefa-6d1a-49f2-8c9e-4dd8de45caca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "572739c9-f3b1-41a8-b2a8-f9da0a415955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcb953d-685b-42c2-814b-c47187c2bfe6",
        "cursor": {
          "ref": "5dbcc2db-98ca-4393-8d75-5368ec4ad0f8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7f73b4c5-6a23-494f-a6da-eda9895fcf78"
        },
        "item": {
          "id": "2dcb953d-685b-42c2-814b-c47187c2bfe6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a7ea60a3-5ae3-4299-a3bd-984fd69f0e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2c5aab-2fa0-46a2-a55c-dc513aacb655",
        "cursor": {
          "ref": "5f6dfbde-1c24-4afd-839b-266955face03",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "40844453-716b-47ee-9d5a-a7621eea45f4"
        },
        "item": {
          "id": "6e2c5aab-2fa0-46a2-a55c-dc513aacb655",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1d825bf0-f1fa-416f-b337-e611b7ba7887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06062008-b4ae-4efd-ae61-79965c050fb3",
        "cursor": {
          "ref": "efbf029f-5994-4410-9f29-50302687e9b3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cadbc294-d370-4bd6-9cbc-38212e2ea6e7"
        },
        "item": {
          "id": "06062008-b4ae-4efd-ae61-79965c050fb3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "07afde96-0766-4ded-804b-28fc9d567cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5cd1aa-5fd0-49ee-94db-b21d25116b7e",
        "cursor": {
          "ref": "6829b217-e5c8-4267-99df-ecdbea4ceec3",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c59b9cb5-6c4b-44b1-815f-78ce2889883b"
        },
        "item": {
          "id": "4c5cd1aa-5fd0-49ee-94db-b21d25116b7e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8442a4d6-5edd-42a7-a2fe-3719d0d57df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6ffc9b-a8d1-4c02-b0a6-532cb73c4a72",
        "cursor": {
          "ref": "da758c2b-0153-4884-a046-13d70bb09dba",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "78e93089-1517-4482-ac17-2af90efb0460"
        },
        "item": {
          "id": "3d6ffc9b-a8d1-4c02-b0a6-532cb73c4a72",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "156ae28d-9d43-4878-9929-58b571799eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfef349-73b6-4881-81c6-abc000d0e6f4",
        "cursor": {
          "ref": "d4d2878f-1100-4ab6-b7a9-e19a724b43c4",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "95c1189a-3780-4198-bba5-cada45228b9f"
        },
        "item": {
          "id": "dbfef349-73b6-4881-81c6-abc000d0e6f4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c600088d-9328-4dcf-8cb9-c76e989ed46d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "60477c6a-a956-4b19-bb28-d56c1de8234a",
        "cursor": {
          "ref": "3c99e153-b70c-48d3-868a-aa814332f898",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d864ae40-6260-4c50-b721-2f833c4733d1"
        },
        "item": {
          "id": "60477c6a-a956-4b19-bb28-d56c1de8234a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3adbcfc3-d975-4337-ae1c-cc7769ca142f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df65e4b5-11eb-44bb-a5b0-572b573da077",
        "cursor": {
          "ref": "e5ab7833-d755-459e-8aff-a3ead83d9d44",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f0b1447d-64ce-44ff-9d0a-55a656668952"
        },
        "item": {
          "id": "df65e4b5-11eb-44bb-a5b0-572b573da077",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6209d41c-aa33-4003-b05b-036cf9236c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2d34ea-7e18-4d23-a660-b327aa6111ed",
        "cursor": {
          "ref": "259a4854-466a-4487-be7c-3da1d704012c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "551d213c-21d7-4f42-b5a5-b7e57c322dfa"
        },
        "item": {
          "id": "1f2d34ea-7e18-4d23-a660-b327aa6111ed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bfb0f0e9-8073-4e03-81df-5ef0c63b4840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc053343-be78-4e5c-a060-3586c9f8f8ae",
        "cursor": {
          "ref": "ee773aa5-e58a-4731-a511-292c9a051efe",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a560de18-67f9-4993-8b04-a86d4acc7225"
        },
        "item": {
          "id": "dc053343-be78-4e5c-a060-3586c9f8f8ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "45ad075c-1a92-4880-aaa2-8fc21a1aa06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7825823c-98ca-4532-b408-bf150f8777e1",
        "cursor": {
          "ref": "e6b1f62b-4072-45b7-9d57-1dc3276fed23",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "adcb4aa0-9d56-4ee3-b3a1-2ef636370b93"
        },
        "item": {
          "id": "7825823c-98ca-4532-b408-bf150f8777e1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e8368d22-f47b-4533-a196-85a11764d4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f156a9a-5c80-4911-8595-c5516b4d8775",
        "cursor": {
          "ref": "1beee1e2-276a-4402-9983-c7fbc930355c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "14b4e135-e298-4ad7-a5d7-b8d1f992abfa"
        },
        "item": {
          "id": "2f156a9a-5c80-4911-8595-c5516b4d8775",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "35110b02-fa1a-4eda-8cc2-ab40c1d054f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7022f29c-560b-47ce-8c8d-4eff08322003",
        "cursor": {
          "ref": "ddabeac7-ad59-4de9-a100-86c94f072025",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f4d71f37-2345-49a7-883f-b566db376281"
        },
        "item": {
          "id": "7022f29c-560b-47ce-8c8d-4eff08322003",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "25a1a16f-bbc8-4deb-bccb-54fcca01baf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f684e6f-f1e9-44e5-a580-c5591340a43a",
        "cursor": {
          "ref": "d7feacf4-ea82-40b7-8361-82836f508424",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dc5ae185-f25f-4e0b-948b-c446e054f198"
        },
        "item": {
          "id": "6f684e6f-f1e9-44e5-a580-c5591340a43a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19fe5b67-c052-4779-a2da-51c11415b2c2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7b3e9dd4-100b-451a-beb3-0e9e769ed917",
        "cursor": {
          "ref": "3daa3e99-3bdd-4a2c-af6a-524db7703cda",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c55ee313-e681-4169-87bc-a679f8ed9ddd"
        },
        "item": {
          "id": "7b3e9dd4-100b-451a-beb3-0e9e769ed917",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c7cdce0-3522-46fa-966c-6667c53dc8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea77a98-ae9c-411a-9090-e02abff0f9ae",
        "cursor": {
          "ref": "c05abe24-c6d6-4d06-af4f-b42dccb30ced",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "972bf3f3-7138-4f44-8ac0-a83f6f7c1e6a"
        },
        "item": {
          "id": "4ea77a98-ae9c-411a-9090-e02abff0f9ae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7537adb6-cc97-4aec-816a-b38eeea878e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7f4329-52b9-446e-aae3-d46b8d862f18",
        "cursor": {
          "ref": "f88da04d-5a19-4cda-a069-cf4f9315d50e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bfb9574e-5e36-482d-b646-fce46c5d33a9"
        },
        "item": {
          "id": "9e7f4329-52b9-446e-aae3-d46b8d862f18",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "faf8c056-a3aa-44be-ba82-94d428cbe0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cfa4b2-7e18-46c3-8805-a3e78289fcb7",
        "cursor": {
          "ref": "207ad6c9-899c-471b-8dcd-a6026914e703",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "491cd5cd-fc7c-4bbb-8584-67e5aa02e0bb"
        },
        "item": {
          "id": "33cfa4b2-7e18-46c3-8805-a3e78289fcb7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3e57364b-8c64-4795-b4ad-fed15c166852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f3dc9d-76c9-4aa3-818e-87b8e6de5188",
        "cursor": {
          "ref": "b45c49fd-11ae-47dc-9945-f4b5d64c637c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ecba2a81-45a3-4f40-b56e-240e3366bb0d"
        },
        "item": {
          "id": "c5f3dc9d-76c9-4aa3-818e-87b8e6de5188",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f86df8f9-2405-4d89-95f1-324158091c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e93523-15fa-4cb2-bf70-767c1dad022e",
        "cursor": {
          "ref": "ee34e15d-afa2-4e4b-bd29-18d7f54ee588",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b5ef5daa-8502-46aa-81fd-3e5b041f8be1"
        },
        "item": {
          "id": "98e93523-15fa-4cb2-bf70-767c1dad022e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31237dde-d3f8-4505-9ae2-c5f5d5dac066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701baeca-aa20-4509-91da-9c750fcf4f2e",
        "cursor": {
          "ref": "b82225c1-e7d2-444d-929b-ab28ef839354",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1208a12f-366c-461a-bdf6-406a0dfd82df"
        },
        "item": {
          "id": "701baeca-aa20-4509-91da-9c750fcf4f2e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bb92361f-e3f7-44c2-9656-309498a954a6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "00ca0091-0e5f-4250-b306-4345755c6023",
        "cursor": {
          "ref": "db8b8599-5fae-4993-8895-5ac640a65eee",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cf914f0a-69b7-408c-9ea1-0877af8af16d"
        },
        "item": {
          "id": "00ca0091-0e5f-4250-b306-4345755c6023",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a965e46e-c56a-4225-90f1-904c547fc163",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "60018798-b11d-40dd-9c47-15b4ac527915",
        "cursor": {
          "ref": "b6151a22-66bc-4aa7-b7d0-719016ff81ed",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2d0aeb45-e461-4dc8-bc4a-8b7f5bea2a88"
        },
        "item": {
          "id": "60018798-b11d-40dd-9c47-15b4ac527915",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7a9e65b3-0305-4242-87f5-48542bc5b975",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "bd24ae7f-b77c-4eb0-98ee-735280506c44",
        "cursor": {
          "ref": "cbc20fc2-1de1-4fd2-9b04-7e04c79b923e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bfe35b7d-ecf2-42c1-99ff-ff28ad7be750"
        },
        "item": {
          "id": "bd24ae7f-b77c-4eb0-98ee-735280506c44",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fc57045b-2832-4ee6-87ee-763ecc6c27d0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "25f6e059-5651-4ff8-9631-f5d4b20c3a28",
        "cursor": {
          "ref": "f3430117-980a-4893-934f-274a553ab6c8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "523fb81f-18af-48e9-9855-ea02a40cdf5f"
        },
        "item": {
          "id": "25f6e059-5651-4ff8-9631-f5d4b20c3a28",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "617f287a-40f6-47e1-b944-af07f6c1db7d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ee831537-a7b9-495d-803b-f710a983d235",
        "cursor": {
          "ref": "01aa9650-4718-46a4-b3d9-a2058ec971b0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7cabd32a-7b92-49e1-b4f9-96781027298d"
        },
        "item": {
          "id": "ee831537-a7b9-495d-803b-f710a983d235",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9a91d771-2c8c-430e-9e4e-8f9ab6a5b64b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "31ebada5-941a-4547-acd3-cc8b11640d7d",
        "cursor": {
          "ref": "cd1bfe61-1a1a-492a-a2ea-aca6c70bca22",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6a0b85cd-2372-41f5-aff4-a62da05ec481"
        },
        "item": {
          "id": "31ebada5-941a-4547-acd3-cc8b11640d7d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc080e1e-c72a-4d92-92c5-c7e3dcd8e84f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dad1120-2e87-41b1-ae0d-f78666a947e4",
        "cursor": {
          "ref": "7d73e0ad-7168-4071-9dcc-5af6160451de",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fdd1e5d3-572c-4433-a0c9-8516cf306ebf"
        },
        "item": {
          "id": "7dad1120-2e87-41b1-ae0d-f78666a947e4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b8af99cf-bfbd-41df-9cae-7cd75c40825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b49baa-98fc-4646-a008-b9ac92b26154",
        "cursor": {
          "ref": "f415056e-98d1-4070-a46f-6e82593f5331",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9f796847-dbb7-4860-9a63-77cf0479ffb9"
        },
        "item": {
          "id": "29b49baa-98fc-4646-a008-b9ac92b26154",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a22502b9-de0d-4576-9988-13576a43e7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdc30af-53e5-4dbb-b621-e5782bf262a7",
        "cursor": {
          "ref": "bf1eebc1-716c-4506-83cf-b5169f93e6b3",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a019dc2a-ae57-4047-ba38-6ef3c5a84d21"
        },
        "item": {
          "id": "efdc30af-53e5-4dbb-b621-e5782bf262a7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6ee23329-11cd-4471-abc6-856cdd97124e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef875860-a94b-4f54-9d73-80926757835a",
        "cursor": {
          "ref": "8f17ba3b-59e3-4259-be8a-0c3407262df6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6a901f83-d2de-4f7b-aed9-663f7c1f8762"
        },
        "item": {
          "id": "ef875860-a94b-4f54-9d73-80926757835a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bc77e627-0772-4de8-bf0d-96ad39418356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a80c000-f157-4732-94af-4be733752dbf",
        "cursor": {
          "ref": "d0685bfc-2f92-44c1-8901-883c3aea0acf",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "da6b904f-4424-4af7-820f-05d941e6eb52"
        },
        "item": {
          "id": "9a80c000-f157-4732-94af-4be733752dbf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3fe60494-38ab-48ab-aba9-5be5ea76aefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1e6a69-6859-4df6-bac4-7c5a3497bb70",
        "cursor": {
          "ref": "ac3d3038-18d7-4036-bff4-40c75ad4ed89",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ff8a0a27-20f4-414a-a73a-4e45c1dc6f71"
        },
        "item": {
          "id": "cc1e6a69-6859-4df6-bac4-7c5a3497bb70",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c4e6b535-6d22-4d9d-89c4-f1618cf2d98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f0c5b4-32b1-491a-9b05-65a1699f35f9",
        "cursor": {
          "ref": "9807cbe2-7f69-4ff8-be21-ef2e31ad77fd",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ad8e3aa-229f-4203-9530-16501883320f"
        },
        "item": {
          "id": "13f0c5b4-32b1-491a-9b05-65a1699f35f9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ff129c67-5886-4e8a-8456-b05ad598d040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f247bf-4fe7-438f-b418-c5529e735db1",
        "cursor": {
          "ref": "6de22b04-acc9-45f3-8c9e-d7b2d1bbe635",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b61dd3b1-bd46-4679-ad38-01e60f4e48c8"
        },
        "item": {
          "id": "b6f247bf-4fe7-438f-b418-c5529e735db1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b18b2a8e-3029-4d8f-a3ec-8b449b395edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c44ec6-61a8-4c55-b356-c170b682bf2a",
        "cursor": {
          "ref": "865189dd-b806-4b47-b451-4dced138faf8",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8ca984d2-db3f-436d-8b4f-dbd7907dbf42"
        },
        "item": {
          "id": "f7c44ec6-61a8-4c55-b356-c170b682bf2a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "edc3c1d9-65fd-4309-a9d5-33aca417c19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e334a91a-dd61-48fb-b70e-46d053c69a9b",
        "cursor": {
          "ref": "4ad1473b-4b0b-48ea-825e-7eea6a0c63d1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7119cf37-3e7b-4088-bd5f-47df53647e13"
        },
        "item": {
          "id": "e334a91a-dd61-48fb-b70e-46d053c69a9b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bef58a8a-aabb-4fc3-b96b-1d9b67eaa2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d876b8b-ff7f-4544-af21-f3de8390375b",
        "cursor": {
          "ref": "9302e986-2286-4d3b-bc18-f93fc42798a0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f4d2016c-b9d0-48dc-b301-f39ace655fa6"
        },
        "item": {
          "id": "8d876b8b-ff7f-4544-af21-f3de8390375b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "45f577ac-8f43-4e6b-b0cb-ede03aabe890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6840cab-a66b-49ee-8dd4-78ee97ed79b3",
        "cursor": {
          "ref": "bea7ee79-6ff1-4a8d-86e2-4b018c36474d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "880e1541-4cb8-4a7a-90f0-002a0e6159df"
        },
        "item": {
          "id": "c6840cab-a66b-49ee-8dd4-78ee97ed79b3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "91fe6789-6bcc-4079-bfd9-3c4181431714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a00251-a2ad-467e-a527-e8ed859893eb",
        "cursor": {
          "ref": "958c58e9-5b4a-49dd-a4c5-bcdf1570c2c9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "53039f49-532f-4ee7-97c6-0f9db1a0ea84"
        },
        "item": {
          "id": "91a00251-a2ad-467e-a527-e8ed859893eb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8063deb3-d128-49a7-bb1a-030410ca7728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dee2c6-4b7e-4fcb-8999-6093192bbcfb",
        "cursor": {
          "ref": "dfc65929-80a1-4f63-84fd-c5ad215d86da",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "217dee06-527c-4f34-93c0-93a83ae46c17"
        },
        "item": {
          "id": "56dee2c6-4b7e-4fcb-8999-6093192bbcfb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1795c714-8c49-4405-8654-252d876f6e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca99b641-a1e8-4f6b-99cf-adf095a9657e",
        "cursor": {
          "ref": "bf19e046-66e2-4603-b149-cac9b000e0b7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5fec17ca-3067-4a96-9d7d-709c1dc76d30"
        },
        "item": {
          "id": "ca99b641-a1e8-4f6b-99cf-adf095a9657e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "33b82579-8125-4998-839e-df4eb6c65f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f3c03e-d198-4268-a809-9bdb60d0c181",
        "cursor": {
          "ref": "f38f3657-23df-45f5-91b8-44b9f6c03929",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "30fbca63-c7b6-49df-85c4-d24bc657cc16"
        },
        "item": {
          "id": "f8f3c03e-d198-4268-a809-9bdb60d0c181",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "410798f9-e1aa-4bd6-b03b-7e184fde6766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76ddaa1-9330-477a-97a4-d71fb62c2c97",
        "cursor": {
          "ref": "fea1ea0b-5874-4060-a04b-7a3d87ca8725",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "abbebdc8-bb6b-4d25-92c5-21d32b2c2c18"
        },
        "item": {
          "id": "c76ddaa1-9330-477a-97a4-d71fb62c2c97",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ae6bd645-769b-43ee-8e99-246d51b14f72",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "15362a14-f371-4bde-94f6-3a1c141d7d08",
        "cursor": {
          "ref": "a271102b-68d5-45c0-8ac4-09e1f90411a5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cc8fd144-1d60-4f6d-ab0f-f8937a1da9d9"
        },
        "item": {
          "id": "15362a14-f371-4bde-94f6-3a1c141d7d08",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "24fce6e3-4efc-4dd1-838e-5ffbf9f2b201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d5f14a-44f8-48da-8d40-e4bcccb6884e",
        "cursor": {
          "ref": "bca59f11-0d39-4973-8696-cf470352d680",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2355622b-f0b3-4b4b-8149-aecc3f237007"
        },
        "item": {
          "id": "e5d5f14a-44f8-48da-8d40-e4bcccb6884e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d76a61be-9f03-4d59-ba9d-f4dc92b208ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba57d703-8c39-4fd3-b608-88a80d4cf07f",
        "cursor": {
          "ref": "56cc7174-c08d-4a43-9cea-acce9db41970",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a5f539a1-c246-4964-baee-0db0ad186da4"
        },
        "item": {
          "id": "ba57d703-8c39-4fd3-b608-88a80d4cf07f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eb73a70f-787b-4ba8-96d6-0f1d1804b54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df214ad3-4c2b-4a62-9875-8a96946d9f04",
        "cursor": {
          "ref": "ca7e0880-e2af-4619-9635-03acef3298e8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5c316216-1b8f-492e-afc3-e30f8a6af272"
        },
        "item": {
          "id": "df214ad3-4c2b-4a62-9875-8a96946d9f04",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "377d7a64-2afd-4626-9e9a-1394ce338745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75d3340-c090-4f62-8fc7-63f9ea95d874",
        "cursor": {
          "ref": "da1cd13c-22da-4133-9011-71de0788fc71",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f89ee68a-5cdd-4340-a60f-263081190986"
        },
        "item": {
          "id": "c75d3340-c090-4f62-8fc7-63f9ea95d874",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e75b0d1f-8a99-41b2-9b64-01992639c375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3647f756-314d-4c76-aa06-3f0ffcacde16",
        "cursor": {
          "ref": "30beeec2-9f8f-4709-8d65-c59a5d20c821",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a4eb51cf-7f37-4f91-a7fb-ec5ba4869c4e"
        },
        "item": {
          "id": "3647f756-314d-4c76-aa06-3f0ffcacde16",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ccd8b42d-5690-4b5b-a8cb-de17aef885f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3068031e-f907-461e-8bf2-9b17b3ceaab2",
        "cursor": {
          "ref": "fc87016c-613e-4dc9-8c2f-f4e7c4f43600",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3b6d51c4-9faa-42ef-9d63-f781c310e12f"
        },
        "item": {
          "id": "3068031e-f907-461e-8bf2-9b17b3ceaab2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4a2390cc-f22f-463e-98f7-469c950bbbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c18ced3-646d-4ff8-b7eb-0c8d02951713",
        "cursor": {
          "ref": "daef25e4-0068-4f83-b0f8-073adc2c6a10",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "10d78cf4-dec4-4683-b097-86b84d8d6948"
        },
        "item": {
          "id": "9c18ced3-646d-4ff8-b7eb-0c8d02951713",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a59f1a8-b30a-418b-9eb5-95b3828c21fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d810de0-27d3-4e71-8fdb-ec529df70779",
        "cursor": {
          "ref": "ef84d8fe-41a7-453c-861f-ec22b623c766",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5d286a8d-07a6-4c8b-b0bc-ed4035467a6b"
        },
        "item": {
          "id": "7d810de0-27d3-4e71-8fdb-ec529df70779",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d4dad30a-b8a9-4d0a-93da-952cdf4c9bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e0227a-71ad-4cd0-ba2e-2be0c1d9bac3",
        "cursor": {
          "ref": "5dc1fb5e-2a6b-44cb-b441-0918bd6d574a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b08b3052-6449-4bcb-9ca5-2a6f3e5b52d7"
        },
        "item": {
          "id": "e9e0227a-71ad-4cd0-ba2e-2be0c1d9bac3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "35be17e7-70c8-4a1a-b787-5fd340b9be31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d3a82b-9adc-4dd4-a029-fa1a2b322e45",
        "cursor": {
          "ref": "c6675115-dcfd-4742-9628-120ae47ccd3b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ba7888a2-2d5b-4512-9b07-f86360b5c3af"
        },
        "item": {
          "id": "34d3a82b-9adc-4dd4-a029-fa1a2b322e45",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d3e3b066-cfa4-4b19-8f22-6a90f3fb0601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535a47f4-646a-4e98-ae0d-311ce322d41e",
        "cursor": {
          "ref": "61305289-ca73-4602-853c-deba54427d70",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "573b299d-e3fb-4ab6-9ed0-7f68b1564332"
        },
        "item": {
          "id": "535a47f4-646a-4e98-ae0d-311ce322d41e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5ec4c26e-54b6-4465-b6aa-5035f7d9ece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f4faa0-f178-4dd6-bdbc-dfcbdf8abd46",
        "cursor": {
          "ref": "3296ce98-4e19-471e-8402-b95c9ca4481f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9f3ec1c5-ee15-47c7-8504-5154d93900c2"
        },
        "item": {
          "id": "95f4faa0-f178-4dd6-bdbc-dfcbdf8abd46",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "faaeff3e-b741-4e2a-a3f2-868f571a7453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759622a4-979e-495b-9a5d-adc46cb47572",
        "cursor": {
          "ref": "ac1147cd-8852-405c-8584-b6928f9aff56",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "138a411d-2d5f-4916-8448-a64ce21b5b7b"
        },
        "item": {
          "id": "759622a4-979e-495b-9a5d-adc46cb47572",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3da7d770-85e7-4961-bcce-9d42fac901c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b034b95a-87c2-49c5-9e5a-1b8f124d19bc",
        "cursor": {
          "ref": "c9d2ec14-7ab8-4c50-b566-944905bce01a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c564a460-cb5e-4911-ba96-81ec557417f2"
        },
        "item": {
          "id": "b034b95a-87c2-49c5-9e5a-1b8f124d19bc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "190ef034-be1c-4b74-83aa-c6288b780efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10ee0a9-cce1-4a30-87be-7fd3f69c526f",
        "cursor": {
          "ref": "b37fa3fd-5f08-4960-b28a-19c9d614ce77",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b27787f7-3bf1-4173-b8d5-072225239a2e"
        },
        "item": {
          "id": "d10ee0a9-cce1-4a30-87be-7fd3f69c526f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7021b106-7d06-42ab-a419-9fe389b43b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8472e23e-6aa2-47ae-ac7e-c759df394822",
        "cursor": {
          "ref": "340faa59-291c-4172-a66a-2253b4d4a736",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5e2d0e8a-ef5a-40d6-9ba3-234a3372373a"
        },
        "item": {
          "id": "8472e23e-6aa2-47ae-ac7e-c759df394822",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "02dc183c-def3-4919-b5de-7ec1121f44bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7aa47e-2483-480a-856f-b8a412a2231b",
        "cursor": {
          "ref": "8fc72292-c053-48ed-9453-d44ba8e7aca8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "065f905d-b0fa-4de2-b3bf-0108371e9819"
        },
        "item": {
          "id": "7a7aa47e-2483-480a-856f-b8a412a2231b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f3f6409c-6cef-43d6-a2f3-044ecedad195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d53a3cd-e0a4-471c-826b-dcefecfbbc2b",
        "cursor": {
          "ref": "19b36df4-8180-4193-b204-dc154db31875",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c0fac2f9-13a4-4d7b-8410-b6ea1812a3ca"
        },
        "item": {
          "id": "8d53a3cd-e0a4-471c-826b-dcefecfbbc2b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "80a79095-1539-4840-9e39-183b4e00e1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b575389-fe18-48e0-9a24-51eba8a24009",
        "cursor": {
          "ref": "cf98c12f-e253-45b0-bff7-652bcb107ff1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9e6c181e-2e8b-4c68-91e4-f0f0809b6a75"
        },
        "item": {
          "id": "4b575389-fe18-48e0-9a24-51eba8a24009",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7654965b-b235-42b8-b5a2-de6728636d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8ef617-48bd-4abc-949c-94d1d2ea02cd",
        "cursor": {
          "ref": "d9a32048-3bd5-4c89-8c0f-297e96ebd3a8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2893c452-3ef5-4e96-aa02-1c93e8a5b100"
        },
        "item": {
          "id": "1d8ef617-48bd-4abc-949c-94d1d2ea02cd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "92b488af-7b88-4561-a205-74aa7a9ab620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d21e93-1e89-4ce9-ae8a-df52ece915e2",
        "cursor": {
          "ref": "fa46cf64-118b-41bc-a360-7bb8fd6295e7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1cd7aaae-26d3-4968-9a1e-b26e52703283"
        },
        "item": {
          "id": "c0d21e93-1e89-4ce9-ae8a-df52ece915e2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "afef37ad-dcec-4c23-ba83-63f2e6fda4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0011a48a-001a-4a3e-9388-51a9df4a7013",
        "cursor": {
          "ref": "99615753-5dd4-46e6-89f4-7aba85679d12",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "68342991-4b24-4a6c-a7bf-620915b0ffb1"
        },
        "item": {
          "id": "0011a48a-001a-4a3e-9388-51a9df4a7013",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0b803600-e493-4692-b483-12a368ebeff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e769c681-1ebe-4eaa-9d90-c1911f977007",
        "cursor": {
          "ref": "fb51c3dc-d6f0-450b-b1eb-b2036837a39b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8f3d3091-1c7d-4855-998e-af8323db64f4"
        },
        "item": {
          "id": "e769c681-1ebe-4eaa-9d90-c1911f977007",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9e09b520-8a47-4963-998a-4af03c3143fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c30c2b-ea32-4896-949f-431ad9300133",
        "cursor": {
          "ref": "f016c152-6a99-4ef0-924a-d0e662609aab",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d13ecbed-4780-40c0-9d19-2c5d0d6eb2d0"
        },
        "item": {
          "id": "67c30c2b-ea32-4896-949f-431ad9300133",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "78fd81fd-7546-40f3-b736-701dfa7c162b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5e89a4-bf68-4545-8cc4-9c673600b3bb",
        "cursor": {
          "ref": "ed9f4f8e-cd0a-4f1f-b45b-cc54c9d91040",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e5f4b7d4-f435-44c8-bf96-7a0d2758999e"
        },
        "item": {
          "id": "ca5e89a4-bf68-4545-8cc4-9c673600b3bb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "22fa39d0-9820-408b-91bf-54420455e2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefa9bb2-357f-4746-bbcc-f26bb97f0352",
        "cursor": {
          "ref": "b6723909-ec74-4ff0-ac66-ac432334c758",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "208ceeac-6ecb-4212-8904-4654feb598be"
        },
        "item": {
          "id": "fefa9bb2-357f-4746-bbcc-f26bb97f0352",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4623ff53-70c8-405a-92ce-71a566fa0a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59de0431-25f3-482f-b035-d7a9fc02b422",
        "cursor": {
          "ref": "e2081e68-efce-4d2d-944d-c3edcad9b84e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2f906291-8344-44aa-ad73-b3c769fc7cf7"
        },
        "item": {
          "id": "59de0431-25f3-482f-b035-d7a9fc02b422",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "316901bd-b114-47a1-9d57-8ff37a53d451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4285b78-3ec8-4559-a360-f43c0ecc4106",
        "cursor": {
          "ref": "186bdad8-d9b4-4fb6-91a0-d6b34090e414",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1b64c8a6-cc93-4838-800c-31896c2fea53"
        },
        "item": {
          "id": "a4285b78-3ec8-4559-a360-f43c0ecc4106",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "462a227e-4c6a-4beb-a53c-f3c894b9184d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfe23fc-e669-41f7-8735-774bb3ea3bcc",
        "cursor": {
          "ref": "48660a89-42f8-45f4-b1f6-4eacfc241c4b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "34a14d1e-a337-4274-90af-8c6a9480c702"
        },
        "item": {
          "id": "fbfe23fc-e669-41f7-8735-774bb3ea3bcc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ae47f270-3427-4ec9-892e-2452fd08cfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1c67bf-3596-4733-ad2f-b590a565cb8b",
        "cursor": {
          "ref": "12f08ca1-e2f6-46bc-8e55-d3e0649d473d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "be28e18b-dca5-465c-8983-5db324594ec2"
        },
        "item": {
          "id": "ce1c67bf-3596-4733-ad2f-b590a565cb8b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f2dc685-22ce-4f43-8b50-d3e2ac21f1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ca51ea-8b1a-43ef-be59-c435210bcadb",
        "cursor": {
          "ref": "54fa51e2-595b-40ce-b1ce-aa7835caea8c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2b0e724b-d490-4670-b5d3-d6011b0d074b"
        },
        "item": {
          "id": "77ca51ea-8b1a-43ef-be59-c435210bcadb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b2c6cfc8-8d66-4357-b19e-1864667bcdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d737c9-f190-4c12-a4b6-aa8126ad3c6e",
        "cursor": {
          "ref": "c721153c-8619-445b-a97e-9c1c6c051a1a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c97146f-a72c-4fec-88aa-fc0fbb337c8b"
        },
        "item": {
          "id": "c3d737c9-f190-4c12-a4b6-aa8126ad3c6e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8532a872-f91b-4567-a92f-1c3891d836b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9768b12d-640b-4e18-981f-41fabb2113e7",
        "cursor": {
          "ref": "44d8daa3-d2d1-4c90-aa20-a2c588cdeb0f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fe92ccb2-6ac9-49ff-85ce-58b085694d71"
        },
        "item": {
          "id": "9768b12d-640b-4e18-981f-41fabb2113e7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "520b0114-2fd9-4b56-8ae2-e677bd4ad92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23e36ea-c842-48a5-a18b-96161476c543",
        "cursor": {
          "ref": "84c9d4a4-c512-484a-bce8-440d68641ce7",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "68ec5c19-f6d7-41ff-9dd7-899c25834f8c"
        },
        "item": {
          "id": "c23e36ea-c842-48a5-a18b-96161476c543",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7de03de6-bc2f-45f4-a2ca-cc3008c522df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da85e2a-063e-48dc-9f4c-bfc5b45bc9da",
        "cursor": {
          "ref": "01af6302-b012-424c-baab-bb3bed7d2d94",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "72f2f163-f080-4ab4-8280-eb41fbdeb2d6"
        },
        "item": {
          "id": "6da85e2a-063e-48dc-9f4c-bfc5b45bc9da",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "acce269e-2403-46a3-a0f6-160ac23131ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2250d58a-cdeb-48e0-b119-6a0c2de38f8a",
        "cursor": {
          "ref": "8a06e924-89ca-4165-b359-76ebae02ad39",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4b94d4f3-7536-4432-8899-727f782f9149"
        },
        "item": {
          "id": "2250d58a-cdeb-48e0-b119-6a0c2de38f8a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d37df270-7246-4e57-af83-568952e30ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae55608-da01-47d3-adc7-edeb10d0dd88",
        "cursor": {
          "ref": "7becee9b-55f6-497e-a978-732e73b2763e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3d07122d-40fe-46ce-b61a-02e3db6cf1ab"
        },
        "item": {
          "id": "7ae55608-da01-47d3-adc7-edeb10d0dd88",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ffe8e359-b699-403a-a84b-4abb8b28cfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf3326a-1083-46bf-9a12-176be752c8a5",
        "cursor": {
          "ref": "1b953a04-23ac-448a-ac5b-b39dfeac265a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "38b9f24a-6133-4ffc-8963-e768fb72c923"
        },
        "item": {
          "id": "2cf3326a-1083-46bf-9a12-176be752c8a5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1b17bab0-2e8c-417e-8403-5b5f9b801a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13076660-9f0b-47b0-89df-363c97d1d522",
        "cursor": {
          "ref": "90d4eafe-b011-4d56-9149-b188c0075cc2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "22b0ac80-6a8d-47cf-9fe4-6271270099ce"
        },
        "item": {
          "id": "13076660-9f0b-47b0-89df-363c97d1d522",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e032d592-62dd-4225-8b0e-415c9d24e735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bab746-c763-4666-b552-7d4029206c21",
        "cursor": {
          "ref": "098a182c-be83-4829-8d49-813d2bbea557",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a510e636-fbc5-4cbc-9037-8851a4cb2fc4"
        },
        "item": {
          "id": "31bab746-c763-4666-b552-7d4029206c21",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3ce66663-8984-4ff1-8cfa-96807519f316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b99ba8-daf8-494a-bd1c-0826855c4892",
        "cursor": {
          "ref": "b0000617-4b7d-47e3-aeb6-fc003846e228",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "67d8b0d1-e8e1-4a75-ac74-5e337085f9c9"
        },
        "item": {
          "id": "e5b99ba8-daf8-494a-bd1c-0826855c4892",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "896c47e1-f4a3-484e-81bb-670818624678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c6430b-557c-43e6-bb9c-dafe99224e7a",
        "cursor": {
          "ref": "aa323248-d39b-4858-968b-c4939417a749",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "62b73313-215d-478a-b729-f566427a9648"
        },
        "item": {
          "id": "d9c6430b-557c-43e6-bb9c-dafe99224e7a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9b977260-6808-4baa-baed-ca8ca63d76a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe295e38-5bbb-4f0b-aebe-2b160611917e",
        "cursor": {
          "ref": "a721e405-8c65-4eda-94c7-10bbc2539a5d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1452d5c8-d56d-459e-9944-59d342dd7e78"
        },
        "item": {
          "id": "fe295e38-5bbb-4f0b-aebe-2b160611917e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aca65195-2e67-45b1-8797-0b62e9c5c868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fe8293-d666-4158-aa25-d34e8b45cef9",
        "cursor": {
          "ref": "710ce79d-f6cb-4141-a966-456fc7d6fbb6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5d0c8c22-c2da-40a2-84a9-26c60d166d75"
        },
        "item": {
          "id": "45fe8293-d666-4158-aa25-d34e8b45cef9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "689f3e04-bdcb-449c-bbb1-84a31529dadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa56365-44f8-4c79-9307-461730f7a476",
        "cursor": {
          "ref": "98fc7add-93e2-43f2-a311-dbcd6ae2aa18",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dd442321-f4cb-4994-bb65-2996906eb7f0"
        },
        "item": {
          "id": "5fa56365-44f8-4c79-9307-461730f7a476",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a45d35b8-f068-4e6d-98ae-03f0ad4242d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c70118-919b-4712-a9ae-24726a01faa7",
        "cursor": {
          "ref": "aca6ee9f-f622-4df3-a957-ba0827f5f750",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aa43cdb2-cd7c-4cd0-9542-3cbc11e36c91"
        },
        "item": {
          "id": "66c70118-919b-4712-a9ae-24726a01faa7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b6040c84-53dd-416d-9702-db17b68ba01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c826c662-260e-484a-96e7-34819c09c334",
        "cursor": {
          "ref": "810e30e2-83fe-4873-bebc-b578e93045b7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c07f3201-db0a-4b5d-9abc-8a7e99c05618"
        },
        "item": {
          "id": "c826c662-260e-484a-96e7-34819c09c334",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8f8c024c-271d-473e-9700-3eae18dd8c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a3d869-ccff-4d95-83b9-69ec15567c47",
        "cursor": {
          "ref": "718bacaf-1890-4382-b6c6-a1f9b9b3b275",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "41eff351-9a71-4ab8-8cdf-d16e7c0381e8"
        },
        "item": {
          "id": "66a3d869-ccff-4d95-83b9-69ec15567c47",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4bc68461-0ac2-4ca1-98fa-850f68bf3f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d726ab-16c3-4ca6-b816-dea158e1035f",
        "cursor": {
          "ref": "dc96c71f-cd83-4807-b7ce-c9edc9ab9bb6",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "59bc5e57-7a61-417e-ac05-76308f053a4a"
        },
        "item": {
          "id": "d7d726ab-16c3-4ca6-b816-dea158e1035f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "92913a61-a939-424d-ae31-99c57418f383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6f8c3a-76a3-4ab7-86ae-80929a07828a",
        "cursor": {
          "ref": "60661deb-621e-4100-b1cb-d26c42c33fac",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f6922c07-5657-4f83-80a0-d732bb558789"
        },
        "item": {
          "id": "db6f8c3a-76a3-4ab7-86ae-80929a07828a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "71bf4a12-8ee1-49b0-b067-c6cfee6a941b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fa5aab-75cf-4b10-b955-29c495eeb6f6",
        "cursor": {
          "ref": "3d338738-2560-4d73-8abf-39c3aeeb5b9f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "50d4d703-e4fb-47f7-a94f-cb83466be323"
        },
        "item": {
          "id": "f1fa5aab-75cf-4b10-b955-29c495eeb6f6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c1d19698-a9d4-4868-8509-41dc11852aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0f137b-589b-44e2-9667-63136dab4ccd",
        "cursor": {
          "ref": "8c4a05d2-88a8-4aff-a575-921d79d754e4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "01ec006c-8963-4f68-8dbc-f6951394a984"
        },
        "item": {
          "id": "2a0f137b-589b-44e2-9667-63136dab4ccd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9084a4bc-6bb0-42f2-94ee-71e6cc12d65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b33786-8fa7-4793-be20-0870900b82fb",
        "cursor": {
          "ref": "fc37ca0b-0e2c-44a3-b485-088da69b455d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6f323b38-9a7e-4c9c-9beb-d481f28e669e"
        },
        "item": {
          "id": "34b33786-8fa7-4793-be20-0870900b82fb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "33cf498b-ca9a-45e6-9c32-5ce5171bb9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e20d23-280e-4262-b6e2-f212b1cf727e",
        "cursor": {
          "ref": "9c910b8e-1007-4675-8f71-d7e698260d12",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5cda1289-09f9-4179-b427-c4c7d3bbff60"
        },
        "item": {
          "id": "a7e20d23-280e-4262-b6e2-f212b1cf727e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "86b7268d-eec1-4326-bb3b-179b24d3ad4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfca455-d0ed-482a-b1d9-ecc9eb5d5398",
        "cursor": {
          "ref": "b20f673b-fd27-4a69-ae1e-faf00495f530",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fc3bdd6c-da14-429f-a6f1-0e9f56d6d798"
        },
        "item": {
          "id": "9cfca455-d0ed-482a-b1d9-ecc9eb5d5398",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ca1458a-dcec-464a-867b-37455931a04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca9407f-992d-4bc9-a96a-cf176f79f4b5",
        "cursor": {
          "ref": "cd0a4332-b376-4813-a37f-870afc22a2d5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bc25e1ad-d60e-4fa0-a33c-ff2652972c2d"
        },
        "item": {
          "id": "1ca9407f-992d-4bc9-a96a-cf176f79f4b5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "db0bda25-df28-4e5f-8964-641af49ba47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b473aa1-8e10-4e9b-92bb-764b99976018",
        "cursor": {
          "ref": "7a10134e-0a12-46c6-b96c-d98bf63e5fdb",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c33b8503-5109-4841-a795-06ec1841815c"
        },
        "item": {
          "id": "2b473aa1-8e10-4e9b-92bb-764b99976018",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bc206954-c3de-4669-bbea-673db1ade1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08193503-22f5-4f95-86db-4f8a0ae1f412",
        "cursor": {
          "ref": "7929b0c4-c317-4196-9ce7-7a5dd8943ffb",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7afb58ba-e282-459b-b229-d0c67345344a"
        },
        "item": {
          "id": "08193503-22f5-4f95-86db-4f8a0ae1f412",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "596a701d-ccc6-467d-b9ae-60c074c8e39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782ce0f0-eabe-40d6-8f4f-607ae7505f22",
        "cursor": {
          "ref": "fc8b1162-7f33-4396-8030-dfe79662b1b4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "596953a5-f283-4240-961b-26860f678bd2"
        },
        "item": {
          "id": "782ce0f0-eabe-40d6-8f4f-607ae7505f22",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "aa4fdf6e-820d-48d3-b67f-60b1c325c8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1408e4-bd2b-45e0-afa7-7387821e8b23",
        "cursor": {
          "ref": "55a73ba6-9c95-4bed-92b6-633f7b513b60",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0a733a1b-86f5-45ec-b6d4-0c02e4a5dd96"
        },
        "item": {
          "id": "5f1408e4-bd2b-45e0-afa7-7387821e8b23",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "80d17807-6a7a-4bf3-b7fb-4f642b32fc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cae890-0039-42e3-a09b-9f4a4aaa5622",
        "cursor": {
          "ref": "ad168426-f28b-4262-965f-1658538d4393",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7a4da57b-88e1-4799-9514-c034ead970b6"
        },
        "item": {
          "id": "d7cae890-0039-42e3-a09b-9f4a4aaa5622",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b7837498-b800-4a2c-8b6f-676847578c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39ad604-8870-4f2e-b192-d7734008b0ba",
        "cursor": {
          "ref": "45a942e1-3968-4bbf-b34a-9fde26eb491b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "84b3e582-6d98-4a51-8c9e-61e9638e55d3"
        },
        "item": {
          "id": "c39ad604-8870-4f2e-b192-d7734008b0ba",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9df1bace-f11c-44cc-9fdd-2ace80dd5845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22792742-9d8d-46ce-b146-05df411349d9",
        "cursor": {
          "ref": "f031f563-97ce-4e4c-9469-50ce6f01470a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4deadaca-1d18-4c38-9147-c7d7c79cdda8"
        },
        "item": {
          "id": "22792742-9d8d-46ce-b146-05df411349d9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6a95a79f-28ac-4a95-8cf3-786d4de78b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fa211b-fbc8-4063-9c49-b8dcb6c86934",
        "cursor": {
          "ref": "b7e66ec0-1e77-49de-973b-38972170d6e1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e9f499bf-3812-4dd7-9ae2-a3c5c23d6064"
        },
        "item": {
          "id": "64fa211b-fbc8-4063-9c49-b8dcb6c86934",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "444aee78-dcc7-4c09-935d-cde0cf952078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9a9b97-afbd-4461-852b-77117db22211",
        "cursor": {
          "ref": "9dea3248-c82e-46c9-bc6e-872a31cf5c97",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "791fc538-ba10-4dec-869b-3320ace2cfb6"
        },
        "item": {
          "id": "6c9a9b97-afbd-4461-852b-77117db22211",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "61929e26-212d-45dc-8287-ca9541efc093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6740e3e7-8112-4c19-8fe1-3ef8455c096e",
        "cursor": {
          "ref": "8fcf03a1-dbca-4d43-ac65-4855f999241d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "13b2eb53-b8e7-4aa6-806a-c7dbb1e8148d"
        },
        "item": {
          "id": "6740e3e7-8112-4c19-8fe1-3ef8455c096e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5fbcbb35-72d9-4e8e-9ef8-5cc76e126eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7713db4-e90b-40d9-81cc-0c0ab429189e",
        "cursor": {
          "ref": "401d67fc-12fd-4bf9-b14b-acea516adbae",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7fc39934-0c5a-4b0e-afdc-fe4639fd63a3"
        },
        "item": {
          "id": "c7713db4-e90b-40d9-81cc-0c0ab429189e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cc82151d-6110-4f3c-abde-32449d0c8449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ff976b-04a4-460f-a583-05fddc2c628e",
        "cursor": {
          "ref": "a0029f4e-891b-4f19-9af8-119dc6aecbfb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "daee0393-4b6b-4a15-9a03-484245d442d8"
        },
        "item": {
          "id": "f4ff976b-04a4-460f-a583-05fddc2c628e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "87748a81-2ab9-4d47-a8b1-3f5fdd34414f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4e2d38-e614-4a36-9799-3f9b267c7f44",
        "cursor": {
          "ref": "5248fc35-a654-4384-86d1-7c65ceec84fc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b51ae04c-55a2-443e-946c-60248a456c46"
        },
        "item": {
          "id": "2a4e2d38-e614-4a36-9799-3f9b267c7f44",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3fbab832-bf55-4ffe-9c99-667225cebcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235caaea-3c7e-44dc-9d26-76f20f951549",
        "cursor": {
          "ref": "cee84cd5-a22e-405c-9f64-7767c50b21e9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7253828c-bfea-4581-8e46-22c252a25019"
        },
        "item": {
          "id": "235caaea-3c7e-44dc-9d26-76f20f951549",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3b7a20bc-8144-44a5-9d1a-e4d873b71637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faad911f-0e5a-401b-9aef-636a64ca6c71",
        "cursor": {
          "ref": "b2a30555-9f9b-4baa-83da-93e02de2beaa",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0c993c17-5489-4e0c-8eca-6168a3d64093"
        },
        "item": {
          "id": "faad911f-0e5a-401b-9aef-636a64ca6c71",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a7cc313d-ea21-4fb1-a021-fbbf28b32198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e7cbdd-4b21-4003-8cda-00e931c9510b",
        "cursor": {
          "ref": "79faddee-f66c-4d30-beb4-daa31bd3e900",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "85641e3b-3583-4b33-8099-6e143f05d896"
        },
        "item": {
          "id": "73e7cbdd-4b21-4003-8cda-00e931c9510b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a9947787-facf-4c4d-b9e6-847f5664ebb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393bde96-602c-432b-9961-be01337b1be8",
        "cursor": {
          "ref": "495f4d6f-6f56-4a09-8e12-68284196b76b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9a8cb88f-3ba8-4d23-844b-84374a0b1062"
        },
        "item": {
          "id": "393bde96-602c-432b-9961-be01337b1be8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2cf0f75e-3c6e-4604-87a3-18001547e2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180f8f94-d1fc-413c-839d-bd248f519015",
        "cursor": {
          "ref": "e6d96fae-9b88-4575-aeef-0caa948330c3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8736b4bc-afa0-4769-9a0e-e9a66ea17c13"
        },
        "item": {
          "id": "180f8f94-d1fc-413c-839d-bd248f519015",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fa8b335c-b903-4177-8e93-c0b487ad3e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efe5a93-9259-4bb4-b99e-c864843e6a5c",
        "cursor": {
          "ref": "8c77d248-f975-4b5c-a48d-40c96db170cf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eff1251a-f1cd-4070-8346-2a598c692398"
        },
        "item": {
          "id": "1efe5a93-9259-4bb4-b99e-c864843e6a5c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "24db2dc1-e5b7-4032-880f-3ed23b55c06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3d0d2d-a182-44bd-bea2-ac4d8af060d2",
        "cursor": {
          "ref": "01dbd6e9-44ed-4417-bafd-9cad0b9ea84d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bdba1498-a955-4c89-bca7-508755483aae"
        },
        "item": {
          "id": "ea3d0d2d-a182-44bd-bea2-ac4d8af060d2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d7cb223-881c-4f49-a4dd-83d9e915986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a25b1f9-cb42-4b12-8944-38377cecfd43",
        "cursor": {
          "ref": "0563c939-fcb6-465a-9fda-d176594328a0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b353dba7-53bf-48a2-a28a-896c7c2e369a"
        },
        "item": {
          "id": "4a25b1f9-cb42-4b12-8944-38377cecfd43",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "476dec97-bbb7-4732-85e9-2c8387a14b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d36eab-21d7-4d6e-8c40-91d07dc42b8d",
        "cursor": {
          "ref": "89a32c48-5859-4ff2-b95f-b4c004688505",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "326e19ec-2e7d-4786-b4e1-5a526237ec0f"
        },
        "item": {
          "id": "74d36eab-21d7-4d6e-8c40-91d07dc42b8d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8e5bcde4-9e11-4bf9-b328-1dd15f5ac5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04497fd-fa95-483b-ab18-c2e8c57c2605",
        "cursor": {
          "ref": "cfed4fdb-fa45-4594-93d0-84aebd291354",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "28cb9732-1333-47b1-a4c7-0006f94703dd"
        },
        "item": {
          "id": "f04497fd-fa95-483b-ab18-c2e8c57c2605",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "81c86e43-1cfd-42d1-9555-5caa8ef2e0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d1e7cb-92ce-49b5-bbda-96cfa01ba2c4",
        "cursor": {
          "ref": "c55a313e-66f5-473f-9fad-2d9f4951422c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ac780ca6-f40f-426d-a281-b4bf8c223355"
        },
        "item": {
          "id": "d5d1e7cb-92ce-49b5-bbda-96cfa01ba2c4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ade316c5-aa3a-46e2-bbdc-bb19e4c6a959",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d2b35-5238-4ca6-8b9e-d921aa5652bc",
        "cursor": {
          "ref": "24f5da52-5361-482c-84f7-b110ff238827",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "018ba4d4-d714-4bd7-a3d0-7b4bd6126a41"
        },
        "item": {
          "id": "678d2b35-5238-4ca6-8b9e-d921aa5652bc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ba712a0b-7ed0-473c-83cf-c5f0028c0c1a",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d319a18f-a399-467c-ab3e-bc33a21dbaa5",
        "cursor": {
          "ref": "62e1b591-22b6-4339-8d5c-5243e64eabee",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "298d1743-6563-4b27-b147-387cf579fd69"
        },
        "item": {
          "id": "d319a18f-a399-467c-ab3e-bc33a21dbaa5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9539e9f8-f1a7-4058-8fde-7419e80cca39",
          "status": "OK",
          "code": 200,
          "responseTime": 2447,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3deadedf-65e1-46ad-af75-12224ba01cb0",
        "cursor": {
          "ref": "5a116e58-4a11-46a2-ae15-e5a84030107d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "842c0177-f0ac-44f3-934c-bf8e6b3a7832"
        },
        "item": {
          "id": "3deadedf-65e1-46ad-af75-12224ba01cb0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "df05a25d-27d0-49d6-a7a9-a90d3887eac6",
          "status": "OK",
          "code": 200,
          "responseTime": 2246,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1263ddc-f906-478d-8319-a1f88293d46d",
        "cursor": {
          "ref": "12ed8361-efc3-4d8d-bc8d-8b8e483b9b6c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef3f216e-7b0e-4f1f-a9de-c08472d22fe3"
        },
        "item": {
          "id": "e1263ddc-f906-478d-8319-a1f88293d46d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a08dc296-5ab9-4e6e-aa28-083f38496bc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1263ddc-f906-478d-8319-a1f88293d46d",
        "cursor": {
          "ref": "12ed8361-efc3-4d8d-bc8d-8b8e483b9b6c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef3f216e-7b0e-4f1f-a9de-c08472d22fe3"
        },
        "item": {
          "id": "e1263ddc-f906-478d-8319-a1f88293d46d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a08dc296-5ab9-4e6e-aa28-083f38496bc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2310ddc2-83d5-4557-811b-42a7f9883772",
        "cursor": {
          "ref": "c253629d-e771-4486-bbaf-e2c572648972",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1e328e5f-e9a0-4e70-89de-0bb58edb6a78"
        },
        "item": {
          "id": "2310ddc2-83d5-4557-811b-42a7f9883772",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1bb315f9-3c66-46e6-a1ef-a3ae27c6303f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7280e5-a55c-46f5-825f-f608837e9415",
        "cursor": {
          "ref": "9596cb61-52a5-42f9-8275-19526d1f107f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cfb18e5b-d66e-4171-96a3-dcc0e557d44b"
        },
        "item": {
          "id": "cd7280e5-a55c-46f5-825f-f608837e9415",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c5652b5-aa8f-4e5b-b9d2-12c05486edae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}