{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "81808529-cd9f-472d-aeaf-54a7ed6aed32",
        "name": "Clear Cache",
        "item": [
          {
            "id": "86259f7b-f0fb-4659-b265-049a0e87b896",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed74ddf3-672b-4ccc-9570-a7fb021bbd9f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b90b48d-5d1d-4e28-b23b-4b3f9ea3af0a"
                }
              }
            ]
          },
          {
            "id": "a437cf1b-ed61-4473-9f74-78d9f217631f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52bace96-5207-4fad-99d9-52f789c99d69",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a7277928-ad86-4513-a7cd-c559b4877189"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2fdeb279-c774-4a33-85bc-3996103c1e5c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b21c73d7-efe7-4566-876f-403b888d9a55",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d91b348-4f2a-4c2b-81c2-a5abd84c1b70",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01bf6f63-1ef3-457a-8b48-e746cf04634a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3822c80b-b3b8-4cdc-9d75-50d8c87f8b47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81bf5727-7960-43b1-ab5f-0dcda4f6973f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d9b23a3-7f3a-4643-871b-8c244a535bd6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "afcc3ef1-d8d7-4c26-92a2-bcd86c752b23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02f9e97d-e933-4849-92ea-91391ee82876"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebe5f320-aba3-45d7-83af-630a9c4f5bed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ab1056cd-583c-4976-948b-f25a0bf62d47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a77e435-ae1e-42f3-a150-adcde14cfafe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac4f3996-fae6-4099-9cc7-879c55108ccb"
            }
          }
        ]
      },
      {
        "id": "71b16f84-ba2a-4ffd-a489-31f4b7ba3cf2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4be18478-e265-43cc-8bfc-ee4f8018a7dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b55440b-479e-4cd0-b4d7-176167d81f23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a334fe3-b4f2-41a9-92be-be00dbe6a664",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8488d251-2651-4966-a17a-b6be7393491b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b91a391d-9023-4816-a8ff-343bdfa57df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f3d114-2497-486f-9092-4f858688843c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654b6152-7744-4d66-b38f-676a46f99d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ab662e5-a2c6-430e-b7c4-c760ce5ebf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df28e0bf-3224-42a3-9fde-42e567d80679",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497a5da0-e3a0-4003-94fa-c2c73ec024ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3899c5b-8dbc-4d70-a1a1-7b9f6ce3bc2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef9d2859-fcf7-4a32-8236-5441a6aa63ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d0aab40-49a0-470e-ac5e-90e902403bad",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbd900d-5147-4a63-a055-a622c8bb4a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf455df9-656e-4f63-b0db-3ea796b099ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269d1b92-6820-4d33-a120-26b3aa1bfec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3a1dbf-8d11-4a7e-8131-658f3a96ee87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8f5c5a88-0548-4a61-a379-0c42b23e9eef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "188e3521-f7cf-414a-84e5-d297a926815b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60f42e22-7c41-44d8-ad54-6b96a986746d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "48874124-b401-45a2-a80a-ba9f5b632279"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd0c7710-28b9-4a71-bd8c-442fd1aa862a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "57a031f8-8768-4083-a4a0-a1854d19d4fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b5db51c-bdf2-4968-aae6-3c7728f214dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cee23bd-5244-4970-b13b-517ca33262d4"
            }
          }
        ]
      },
      {
        "id": "d89fc8ab-7016-4753-8349-a4b1c788884e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "462dc0f3-6e5f-4329-9c82-1ea3f04a4ff9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bed3997-b7b7-48ed-8f52-73a3fe248b39",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0e21257d-6e62-45ef-9a71-d2fae7566c63",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7508f729-5b73-4014-9725-d5c93b3218b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa901a61-1283-4404-8923-8ed4fff0c8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72accd1a-8e97-4a30-a718-583f558e5d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "543aeaf4-be1e-4389-a71a-e38a1f392dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62856d2-0e65-446e-a8cf-5cf3a56fe4d9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d886c7a1-2af3-42a4-80a2-e628248312c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387d84bc-4695-4c6e-b7f7-eec2ca8a3130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ab6526-72af-413d-b967-714e18d6ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1bcefe7-fe4c-4c3f-8168-3501b19750a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591e9190-80bb-41dc-bc7c-18ca8a98a894",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c629964-0fcc-4ede-be47-d19ab3457919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0181cd-cadb-46dd-ad2c-aad7d62118f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e2abbd-dcdd-4877-a5b5-40de8ee59998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12b1c8ee-14a1-4e6d-bb5c-ba6a8ebfb8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf73d5c-cb82-4d23-be04-1496fdf42dfe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f54a90-17de-4dab-8a13-861f1223bb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc631976-c64e-4a3b-819b-d6389520de95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e63d502-a288-4c61-b608-bf7dc86de9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c633898a-1fe2-42b8-bce9-ee8de35d29a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014a5113-61d9-4c33-9eb4-7c44685929a5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c712b8c-59a1-41d1-84ef-f562490e3615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da32a895-fa37-4d3c-8f3b-c9f6b5557dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1354e6c-501f-4b75-b2b6-a5c85614fb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "075f2506-ea2a-49f5-b8d8-e68fc9176f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b65334-22ba-4ead-a421-194631a2a5f5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf84d68-5eb7-4b29-9a61-a9b19d03bbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40885a2-3078-453b-91ee-5af2cc481ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f717d52e-b111-47a7-aa22-4c1a6cdac327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e739ee5-3fee-4016-b30c-0fadf3a97ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786b8fc6-9883-44b0-b173-928b6064f965",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc09e86b-58ca-4800-a7cb-f753b1ef440d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbf45a6-4854-4038-83e1-c14e504e79dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a118655-7ed6-43e4-b54c-995ba41593b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e582d10c-1af2-4378-9f98-6b9a6ec0cdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f8327c-3063-4d75-ac77-fa8217048a25",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41f677e-c945-464e-8c5b-a69da4abd87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0aba4fb-4fe5-44d3-a4d8-d938e95afd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762d6bb9-3c82-44e4-b3ec-a4a62f71c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a71ca809-d11c-4fb0-a501-771a643e87a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2f7427-17dd-4a79-88a2-c06af2d9dad8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abae74d9-d89f-449c-9877-b282f43d034d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcedca7-d75b-4a47-8f9a-24a0b92cc596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65ec7a8-bf48-4785-94db-64ece299f2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f2c6b6a-f6e2-486c-9d90-253211fd413c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d51c95-0d0d-49e4-969b-95a4e2248b06",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c7bce2-8e9d-4a99-905d-fd3d750e37ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbcda40-1c0a-477c-8cfc-3d51709737d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a0cfcd-4430-432d-8b91-28c724dded2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb161f7f-2bfe-471f-a34e-a9c001982769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b426aa35-1d5a-422c-8c4a-37d587b55a58",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99888b7-a29b-4a0b-82e4-1417470fe8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc676bec-9321-406c-aad6-7271c298b49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45e07a7-e427-4ffd-acd3-8ac5121ecbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd688554-3013-4cbb-8546-0267d63456bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1e0b0f-46f8-4eef-9ce4-44386cabc416",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb87227c-0ce4-48e5-b0c9-1f5bb89c2d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2372fb84-a0ab-4b7c-ab32-a48f53b7706e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05901fc5-f716-4140-a545-75b766645921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c3bc28a-eb58-48c0-83a3-8eb11e22ee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ff36a7-abd1-4275-beb6-428607d079fe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c2ac27-e465-4689-a2c7-5b3e16976750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f92cbaf-6823-444e-9299-efb92fdcbd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f85bcd-7971-4345-8d2d-665e7467ca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "127d28f9-d42e-4e6f-b4ca-08392ae281e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a888dff-90e8-43d6-8448-ccf723424f55",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f39383-6056-4fd3-bb5f-1982dfd6d57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78014ad-4f34-4e7d-95e3-5e54945ddb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c88141-bc74-4daa-93e4-a2a24fa3d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21621836-e9d5-448d-ad29-add3938bb05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65506bf3-1cf7-4abb-b977-baad5b9ad28e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45673b9c-c4d9-435a-bc3f-70187da0c1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75323d44-634e-4b5f-8a46-2107dcac0086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7009e0ac-1f73-48f5-896e-9da8e297ca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0af2075-a2a6-4911-8713-a28629252063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721143f2-4d6f-4621-8544-caa007046d09",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05c9ac1-780c-481f-87d7-ca7da180766d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1cfcc1-55d1-4aeb-ac51-c12607197460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dab334-2711-40e7-be77-b4ee9c70571c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86368024-c5fa-4ec9-a4ed-806b40dc83f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a7ab2d-a6dc-409f-adb9-110d2f423670",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b92195-57b6-44cc-943d-934722ad5b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e7fed9-6c69-447f-ba90-53445d84e718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd4ae2a-4235-4293-b254-0003e6cec637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15a0900f-0825-429c-89e2-11016e78da3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2eb96e-45d6-40fd-a32f-e4e7b2f47464",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5716ff05-37be-4527-a1e4-ea93dd66c7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b93cee2-066f-49a2-a996-6426123921b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd50d8a-6ba0-4146-8573-eaaf6c76bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "62704f6c-663e-4b39-bb88-26b14b501a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1de205b-7d49-4b15-b967-9a07aeef26ec",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d931d4ac-652b-44e4-ab5a-af93cb384213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8926537-d1ee-4074-be46-b5a3d0fe9de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196ea498-e9e9-4e88-ba10-c73c3cabcad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "101a86fc-d8b7-44e4-ac88-b9980a243435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd845f18-60f9-47ce-b1a9-525d40078953",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9756fe60-defc-46e5-b632-b5bdba31fb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a7ee2c-0b25-41f4-b33a-6480a5305103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f1437b-efab-4240-8e3b-0f40f65ca2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8655830d-4cb4-4fd2-907f-302d812c81c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ae70c4-d010-43c8-bb9b-b1a24c804de8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f7a5f6-70d6-42b5-b38e-d95f3898ab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b9785e-6580-4792-8e8f-70b4d003f73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197e247c-bd11-4a9b-bca4-aa8bf417b85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "133b8755-7c37-4b3d-877d-929c9a202061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5343c20-192a-481b-b2c3-03fd87b88be3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118e2ebc-a50f-425f-a5f1-2d3b11e8f2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e042b997-3618-45a3-98a8-66bed33b33d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b567de-6bd9-4ec8-8fdd-9dc48f06b507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "417fd204-5fe2-4de6-b37c-8da28a365901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8295f34-f559-4cf3-8596-6986c5f715d4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99214307-ac77-425f-a008-f2cbdb09db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0f1721-f2e9-4ffe-9d8b-ca245c7ebdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86865247-2030-4b71-9acf-5b2b8dde4561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af8a640e-da20-4286-80f0-aa067eebda43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c174df35-af65-437d-ba51-02ea393f3020",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e250610-9053-4f60-be4e-06a6545a3d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f162c6e4-9b70-4e17-b5f9-6677225a13c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19c01bf-07f9-4b2b-8bcf-ff91f33e3481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d4bc70-7dd0-4f3c-967a-62c0dd088475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24426aa-a4f5-43b4-b8a6-2eb58a7c7eac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c315a096-846f-4b5c-b838-a3f7aa874979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7e6008-08bd-4239-bf36-eb0644c47f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e18edb-4519-4039-b957-b6a0143bf096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69652d8e-e4a8-4cf3-8bc2-805489d24d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b72b904-21bf-42e2-abe9-f152e412d9fa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19e4be1-b6fd-4c62-99d0-2ac9423be9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a0a71a-3cad-4e2c-bf27-4696e8718835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1161384-ac25-4647-bf9f-c2b70f867f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0df4c05-510a-4988-b6bc-ed5a2ccedff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81158976-a4df-411a-a644-90ed3586b7b9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ad452b-fd7c-47b0-bffa-19bcd321c8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939d9091-de5a-4e43-b111-2805efc28a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4704c192-d8ed-45c9-b9b7-f554d73b4c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "256f3833-fc98-49a0-969f-1b87d115e7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39c3037-584c-4171-b3c0-d2a757ec838a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eebe0e-342e-4b36-951f-77df06bcf055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3098acf-d553-4a04-95a1-a252b25cd2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9391335a-fb79-437b-ae42-503b798e7890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b53a15ab-3b6b-4fb5-a8f0-31c3318b0939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b49479-1f60-4a47-81e7-72c28818ac82",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8743935f-c13c-41ef-b6c7-8045f4072253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb57e90-3086-4aa3-a289-5bad0d09d89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afddf4d2-9f54-48c9-becb-f6b93828f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51684cfd-1122-40b3-ac42-5a95f2ae0539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b20af4d-f9ea-406d-bda7-f8a695328b2c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eee77a-24ce-47a9-a33b-ab5bac873c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a26f0a-ced1-4160-b988-539d75a42ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14989ea-8334-4074-ba8a-a5c1155d310e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3468e8-98b2-486b-a597-196271645d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024c3244-5786-421a-bdfa-aa763a0e6cee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad72ce09-891b-4f34-a792-30a4f11acd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037fec0e-62d7-4ae4-ae39-2adfff17f61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd69f5a-5af7-421b-ba22-4a35ad984023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d34a1a-80e2-4c30-9f2a-4206fdffd846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c929feb1-10ce-4150-aa41-dc6ce1174931",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea29f75-f6ba-43aa-b335-8bcb82c23612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfbc589-09f5-497a-9f90-ec8f7b74a634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d5ea61-c1ff-495a-9a11-fcacea38f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4efa52-fb0b-4f6e-8ae5-18a772cca756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350ded7e-66dc-4b24-a5f5-172494d06e64",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b77b93-9197-406b-9730-9821bf91f336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac477d5-2183-4cf7-b061-dc7ca090bb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f452bc4-480f-4c32-81a9-56c606592f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7860e0-3524-4aae-8044-95e64015b00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e954c256-7b78-48cf-a2f6-a016fd6875f2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce34c489-454b-400d-8921-a3f16656e9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346cb031-441e-4e4b-a4ec-98bc510fce4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f1f65c-e802-44c8-b58c-f3fef59f3ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "511ea7e9-1361-48b8-b935-474960ffbef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a81d40-837c-418d-95be-41a2fe549d7a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b0688-96b4-4876-a65a-275a7d3f0626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ae8647-f5af-4104-beb9-2a1048ef9ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404f214f-97f1-459b-873b-e1296820bdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0a271cc3-7f45-468b-b695-0b6cf5e5a778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33123ec9-c53f-4f06-b463-cefc9cd593d4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc7abc4-75bb-42db-8261-a5fe20dd4252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe503f6e-d013-4e4b-acc3-f6f93beb6969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889b9f8e-6ef4-4b97-b514-6f844d7f06f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "494b6bc9-98a9-4c30-821b-c7c05635eb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d86193e-51fc-421f-ae4f-3497226bc8d1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf85104-a91c-42d4-9302-e6053c43d12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23859a17-0e93-4dd3-8f1d-6286912de429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40d4eee-2f12-4108-a02c-6d63c1a5e624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45d05887-5623-449b-b389-b2a5ea29ad75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ea1e81-2c5e-4093-a77f-c9cee5960b5a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd986fba-40aa-437e-9e83-9e5ac9a8f469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81aa13d-2083-43f4-8dcf-04fd3b2162b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578c6072-3127-47f7-8cd1-0e3ba13315fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "772037cb-aff7-4ecf-83ad-f629d96beeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a6ab2c-06fd-4c54-a730-29526d18895b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a27712-d3d7-465b-8cb4-9039f7b5cf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29edeecb-aee0-4408-8976-896fc9fffbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94da177e-4d16-4526-8a28-a8ceaf6f0073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fabd43b2-6b0b-4faf-87ec-ca379da25652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad953dc-4cd9-4c1d-876d-db7886d99e17",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72137f3-6839-4738-93d0-865b370d5b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ae704f-12e8-4501-a010-4eeca7c4f9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bbf0c0-dca5-40b2-ad3f-5d7ad122f2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6449eaa9-26dd-46f6-a167-63e7888ebdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60c16a9-e457-46e3-95b7-48f0d4ea8ca5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f01f4a1-45b6-426d-a5cb-04312c69d51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60194d66-cf8f-4e2f-83c4-cdd118e19996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e95d47-0f44-4b07-910b-92f27d31c94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80b6c79e-0502-4d74-b5d3-498a9a6c3d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a234d82c-0c0b-4fd0-be94-676f5ac964be",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611d550a-4ed6-4aab-919e-2cb357010262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a20e92b-299e-4593-94a9-c329267b989d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a510e82-b625-45c2-b846-b4c065b844d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "816d7e08-7a40-444c-83b2-0df52c2e2657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d42d20-1522-4af0-bb22-32f07b9b1a1b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a40d906-a4af-4ff4-a97d-44ae2f8ed8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c48bc4d-5bd6-4059-afe7-58a8c099bb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049003b2-ac48-461e-9669-9f0d2c6bdcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "afa90c64-accb-4883-808c-63116d6631c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb46c8e-6018-488b-a413-e6383ff42bbb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1d9927-6bc9-42ed-bc84-c5ec9103c7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c412e4f-9bd5-4626-899e-c43c9769c0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bb74b3-4fe4-4735-a59f-52cd00642cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5e42ff-7ab4-4dfc-a69d-5843e09e643e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9087cf8-bb76-4fcd-a53a-0329b1f15c67",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbd1c94-9633-42ff-98a3-045468a594a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df40f847-71bb-4c4b-a6f9-ef7b27bd0512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43100834-bebb-4f9a-84bf-c6e2627e21c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8303649c-b35b-48f0-82ee-eb1252242690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f67835c-2ec1-4fce-bc59-ea50524dc93a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d396e595-e9b7-4fde-8d73-1fcc839c4e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6258c8f-f28b-4eb2-ac3d-60a231fea82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bca5e19-03e4-4dc8-b0ae-c8a4cfa9a227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c300c0a0-9e27-480a-bfc8-a7369a19e360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174e40bc-76c5-4e0b-b88a-1afb153cfa84",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1524c2-858f-43ca-bb7f-ca87b1cb4f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f73193-0762-4c59-bbf5-e63f155d00ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6ed814-b7e7-4ee7-800f-b540227d640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e755e68e-4b2f-4488-bd66-613a1a340a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a69eb3e-acfd-45d6-b435-0088e0907590",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1d82fe-2ccf-49c6-98d4-d808cefd79ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62d2364-49bc-44c0-a1ea-b52265231ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40edb88c-6500-4103-a2ed-10e4fb1625bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b0a69f-93ef-43cb-a1fa-0cda0fbce85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420fa115-72bf-468c-8831-8cec461ab46d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e0d368-9cf7-42af-b07a-6aff32e6b4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c33505d-cd91-4d8b-893c-4c92869d7397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63014973-6e5e-4325-9107-361c59ff4cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39bbb7ce-e671-41a3-b2d9-5daedc6d1017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ce6c84-8e5f-48ab-98b0-b3a6ce06f457",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38861ba6-5ba0-4e7c-8fcd-a9ec5b236800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2fbbca-e38f-4cbe-9381-c5760d3974eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5b8732-a01a-416d-8cf1-a3194219e100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d51f4ac-2e4b-4845-917d-538e9db9788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43c7bcf-82ad-46fc-ac56-6475236f5cc1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cab548-229d-4f14-82b0-3504a843bd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fc6cfc-45ae-4875-a5a2-e5b280177384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6922733-d717-41f3-90c3-d5e81959f467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd4777d-1d5c-4437-a266-8b3663e122bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9eb0df-50b8-4e93-978e-30212ea65496",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697e7282-d7f7-48e3-8c4f-4072592770be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf5cdd9-15ca-489d-97fd-346dca7876fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daecc13-f56a-423f-88ea-761988cef92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "667621f1-7f89-4d1d-a9f6-5f300bb183b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dfb159-d0e6-4ada-b389-1c249fff4f81",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5312ab-823e-4174-9b43-88112db477d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61850e1c-3a95-4407-b19f-73bc15705a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731b9296-bd7d-4245-9d75-9369cbb81104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94fa4b5-01b6-4212-a524-4ac1f213a4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f628ec-be37-43fc-98f4-abc2532f6cf8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9743be5-e440-426a-9efa-0de28a8486cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeba355d-2237-438f-ae50-4693e40e0477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39078ccb-a4b0-4fd6-a90e-a58d711c413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b66fe7-029e-4410-8c83-7fa0a7656f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c926bdb6-1ffc-475b-ab1a-a2cecde0e8c5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095cbfa0-21ab-4cbe-b403-b8b3ab2aceac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d34682-dad2-40ee-8feb-3f6c812c1dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5194cd-bf06-40f0-aba1-f50f21710a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47939c2b-8374-4d96-9418-a2e0568e02fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefe6d64-0d51-468d-ba96-6dd6fae66e0e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68adbc60-a6a6-4a93-9706-df7466912714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c1b6d3-f60c-46e8-9c6f-a63830bd909d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f06b08-57ea-4ad4-8470-d77f315dc42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9e179700-b041-4eaa-97f6-f3ed7dbf7341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95823717-cf18-4f0b-ae48-0cffe9455844",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf9df84-1e26-402d-9f41-478ed54b1a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d109eb8-7da4-45d5-84f8-3fbee6d25763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215ca5cd-a854-4065-a594-2abb6b60c830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86bc7c92-45b1-48da-bbed-0d302aa112e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0db03f-8c1a-4a8a-8808-078f3a3e18fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f3db2-6f53-4073-ad2f-62799d64978e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88c1c17-9e32-45b0-b57e-520eb5bbda72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ae983c-73f2-467c-9745-76c7fdd7c098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "832ca349-dcee-4613-b654-de64f6be9188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bc49e9-8a6d-4d27-9714-0547bdb311cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f9121f-b79f-4a1b-8dbd-e03845264ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab460d6-2d95-48d2-a8f0-5930203e3961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fed600-fc6d-4156-bf44-536637e9bb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce997983-ffda-4544-8e23-bf564590b9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f226d955-9fce-4b66-ac93-06116807657a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9fd278-d3a7-4a06-95c7-1cd474893b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315333bc-f2bd-4785-8a54-f92e2ea20e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf21fb0-144d-4f47-998f-72d5ae00682d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32d3d688-6eb7-4cce-856d-599bbfc59efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c335fa-3763-4310-b01c-68dafba64ac6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8b4edd-7002-4228-b1cb-5ce370531fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e30395-46e2-4d47-8ede-ac20e0f6d328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a35612-0e7c-47f3-967d-d706e0a04697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4118cd-ca08-4399-8ba9-151e13c81d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9aa479-bed7-4dd3-b1bf-79126e6fae85",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31020676-7bb0-43fc-83b2-d0133daea358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca4ce56-5cdd-4156-b33a-2f169f99cc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b1361c-a1e0-4d49-a088-9190fbc57918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db97652-5d3a-4570-b8be-efb989cba643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654a7fbd-9008-49d1-b7d9-0972e7dd21c8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453dec61-e931-4743-add2-b24ef5d7d1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1d6747-2345-4d67-bd4b-95ccf8d9250b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa09e45-5dcc-4442-8d86-aa6c2a6f4873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6175108-0b87-4373-b984-0a8a51f062db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81eb7b7-dd7e-4d88-8dc1-5d2a41a0e03c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b581fb1c-c754-4fa5-9330-65a3a003f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea68444-9812-4293-95a1-d3dd90fd240c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79746765-85bf-46eb-a624-02002a8bddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe0b18a-b3f1-413c-b83b-5b9ffd20a808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d25abfd-9daa-4b60-83dc-27544c5b7bc0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c866bfb-0016-479a-948c-b71bf94c7712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9b0b44-6362-4ef4-aea2-12dc0ef37f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f715f233-c520-4969-a1a4-ed30710d021d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1fcf75-8c3e-49c9-84bf-257af10946e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fecb71c-f654-48d7-8cbe-ed7904571ed8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e0caf5-8c7f-4f41-bc04-a2ad11323f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269736eb-4458-44b9-b3f6-087a641da502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed014c3-234b-4836-8eba-fe67b7325bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab35660-24c5-4488-b684-45fd39d8308f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bd7246-5326-4798-9571-8fd4b304e08c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e821b3-a3e9-4c5c-8c4a-e55ca4c58de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdcb067-3b89-4b1d-9f0b-da5af36e6e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dddc542-9ab6-4c37-9abf-4fc5f58a0d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4219b5e4-e6b7-4edf-8ae5-4c2b40bb7672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff7a188-24b7-4fd9-b483-7a48d262f9a7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691b6509-9c1f-4085-bd67-0847222f3cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddaeea6a-51ae-4e32-8ed0-1931c491d6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252ca665-f9ac-4cc5-b4ba-77de8cfe5247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "05dbfbbb-de1f-4032-be7e-5cf7ba08ff73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d837c36a-92b4-45ed-a5a8-85c9560c6c18",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a14fcd9-24bf-4629-ba05-2c43b42b3081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2c2004-6961-4b2c-86a0-2ddae659c4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef32cd1-91a7-47fe-8802-e49680f18edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "693a00f0-e3bc-4622-bb7e-fc6723c63a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4a863b-8389-400c-a66e-eb9864f1498a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50cfcd3-6ba5-4de3-9373-71d0dd4b804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e66b45-0405-423a-b44e-e1aeba0ea2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473442bc-a648-49d7-9236-72d70cd854e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e3a45c-45cc-455b-b6e3-2465f9f5f358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6465cdf-a4b2-41d1-8163-1c21021043c7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf022db-cb2a-4388-8630-49093fe3c22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cee9386-ab92-4df0-b141-bf35bf8111b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24944b25-c4f1-4649-89a9-31aa57836368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1235581a-f1c5-4937-a603-fb2cd1fb4b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629f6baf-4383-4151-bdd0-60ed20428a69",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da750f2-75f3-4372-8912-b3ba0968f721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96149c06-e187-4550-9d5d-7cfde532d305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6da0b93-7e37-41b4-bf34-9f31c12860a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89fac62-e852-43b5-8946-404007dfa692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b17b59f-32bd-42e3-8111-68f6950326bf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccb9abb-72f7-409c-9f01-2d02eb1119a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2649d708-0d79-4b5b-9119-b3cdc2be0c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90aabf7-6beb-4681-adb6-92907e5a38e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5030bfe4-4aca-4ba6-82a0-16673981b52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011ce400-70b9-4fc2-8418-15f34c1bee6e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cd2040-44cd-4bfd-a5e9-78046286de55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc9ca3e-6732-4ade-a772-f137d6cb552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4e2271-7b6b-4746-8516-02aaf33fb818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "370c0ccd-a038-459d-836a-58d9910f9991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5430da67-b162-4023-9454-676581ed1ca7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9aee51-cea3-491c-9fe5-229649498156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cc0532-b53f-46e8-9c94-d86bdbbc8f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bdf280-b3eb-4f7a-80a8-898836df81fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1100d29-a969-4e4c-aedf-a0ca88f127b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632bafa8-299f-4410-9ba7-5dfd0a0d3bfb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64bd6ec-dfcc-498c-83dc-2c9acf301d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca171df-4d1f-4f62-8d53-01659ca0713d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9855a5-c85b-4fc4-bcef-d28ac76475da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7233a5-efef-4e19-b65f-197eb97f39dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b128c588-13b7-4ba2-aebe-fefe40c74417",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00f28b6-7bfe-44f9-b55a-3f24558b7729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e910c475-5cf9-45ff-b256-7f2c22b411e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3344d15-cfaa-4857-8a82-89814cbda8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af24e97a-8a29-4b55-8f04-d4ae8daf95f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca242b2-98ba-43d7-b7d6-761b2ffdbd4c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcdd4b8-a791-4dc5-86dc-10f079680496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b7bb7f-b361-4fdc-ae91-3b1e12a1c993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fefd99-120a-4cba-94b3-e1ce7e124eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4815adf7-6997-42e3-ae08-8cda67535d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3666009-1331-4106-ba49-3e445c526198",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b6e58a-1496-4e77-aff0-7f19b9ddf832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e96f1d3-58dc-49bf-bd97-d41679cf80a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c60527-b369-4622-87c1-ac62a872151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00a6197d-6678-4b52-8313-c35331277f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8978113-2f92-42ae-806f-5b1c8b3d5d2a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b419178-2f60-48a4-837f-7e78e98a00f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bad73d-1db1-4ffc-8925-cc9b8d1364b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050acff4-472c-407d-908a-340b7fbc56cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b128979-18c4-458f-919e-77e6f0919db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d555bb-f48e-4fec-aa9d-12a904f2ebbd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c4df66-7054-464a-b036-96df45b29c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8b8564-3aa3-4bdc-a3e8-5d247aee2557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc63cea1-c25b-4574-82b2-b22ab39e28a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a74674b-edac-485c-91c8-5e60406922cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56f83b4-c809-4b31-b428-6411d3447fc3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a0090c-057c-4e9b-9904-bbb584242ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee7c21e-388b-4b93-80fc-94c7d6d4ebf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce63856-5909-4eb0-a3ca-6e8f887fe7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddd43c7-9db5-44fc-8c60-9ca98794d177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffe783c-63d1-401f-85c0-0e98531f9d69",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7144c279-f387-4dc5-8a8b-449389fc1dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc72d88c-0e02-4fe9-802d-cced91eaf2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9b9cb2-fdf0-4735-8b39-6aaa52c283c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3d27bd-a645-4393-b42a-e2bfdf7faf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63820a71-a1ea-46b4-aa8e-3906f8c305ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528b575d-ca36-4f89-9a9b-1658ae0c04a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d27c1fc-67a1-43cf-aec7-5ae8c0979a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4919224-dbb2-4683-acf0-ebd77ac636d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f48f7580-35a9-47e0-9119-5e8a6c51a685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f683a19-b794-4415-99ee-833d5dc13bf0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42889453-e553-435f-892e-371dd081dfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad5e073-315e-4197-b239-2636695948ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec035b95-5a3a-4f17-90eb-636f3066a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fea2da5b-dbfd-4405-bce6-e57cad5d6c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11f4624-0fdb-4c83-acfb-0ba45e25c981",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e56302f-e178-4cb9-9fba-2e98e6a05fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2c01f9-9198-4a53-b3a5-6aeb785bd88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93419eb8-2f87-40bd-a156-5a81185fde41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48480902-3f43-4e2c-8c52-3316e66cfadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174b0cf0-d295-4b84-81de-3ab339fbab73",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8f3d65-86a0-4e1d-9e57-3c8e07fefd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e18b17-47b0-418b-b6ac-e3f42f52ade8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa52c4a-353c-4ccb-b191-c4745feb9c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4e3804-e003-4fe4-8b3c-e0d15a81eaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a7318e-8bda-49d0-9fdb-1b677281a6bc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36ce341-9092-486b-b32e-f1c8b5d50aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f2477c-0d78-4f88-8a73-18bb2111433d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026da708-060b-49a6-a315-2a61d6b0d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2209c0-deaf-41d3-a1f6-4a84d8613777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee61690-a5cf-49f2-993b-04bbea6c387a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e459909-9a6a-46fa-949f-3a0034686f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ef3eef-e1d7-4b5f-a664-5bd54ff4edbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970dea9c-e05c-43af-824e-ef594ba57299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f250c44-f056-471d-bd31-dda5b21a14e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a63b5e4-c778-4db0-8477-5b74d8e60f8c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550c9168-6263-487e-905d-5bdd1dec8963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fb17eb-bd9a-4da1-8502-568fa8fd72c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70003dcb-5f8c-4462-88b0-aaed8a859127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77cecfae-06c6-461b-a876-01cf4cd3e400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96a6802-a12c-4516-adbc-af54169570d0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e297d5e2-b311-45f9-869b-3977a9b4c231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cb4668-0e10-4ebb-bebb-c9b3a6eb871e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7cd3b1-9a9c-4281-aedd-d6dd0d4d1d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9838a4d-c031-4fd9-a574-15c3fe677deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb60064-85f2-4f29-9111-5e2e57286959",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6175ea-9ae2-4c5a-9012-d7f6477f81eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca8a10e6-c48b-41e1-8648-75a19948c494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a30c596-3788-4641-860d-8684689d8d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a42406-f153-43fb-b63e-af96753d5743"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e7c7ce1-c011-4a27-9757-ae1f9902bc96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0ff92fb-fae0-46bf-acdf-464fdd7f6dd5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5126e071-a7b7-4011-a031-f32dc5222017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "447ac3aa-c0b8-4e78-99e6-7f5c877f259a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb410156-1cb7-4044-a11c-9eb4bb3ca2ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6815a09-d5e9-456c-a6c9-2b805fbd8cc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7ee86b9-3a47-47ba-bbc7-2b18d8ddc687",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4db9d6f8-666f-4254-be8f-eda3d762ef41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed69793e-9a0a-4322-84fd-e4cb99cbef2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92a7233b-9fcd-44a2-83e8-e2b1386f8314"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06c6d4b9-d7db-446b-a825-65690b8dbf02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bdcbe56-a104-4120-9dfb-2fb0f9bb50c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3d8b8a0-9e26-403b-803d-3fc48741d0f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2917bb34-32e3-4587-b972-2041ad8f4f8a"
                }
              }
            ]
          },
          {
            "id": "7d1457c3-c1fd-4036-9153-08d2a6d97d61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b82d960d-1a34-4113-8e0b-5e0db42b5df5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1e719035-9564-4610-9866-6f4b7cf71ce4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae94417a-22e7-42f9-9fa0-9c663c29f052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "522f6830-9d3b-47fc-bfa4-da6239dbae1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e532f899-6af0-4c01-a977-ed68b00b4b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723c330c-ad02-4727-9e14-810acb878da9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56bd62e6-8ee3-4231-a7bd-ec9e5ea671d4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d116baf4-d482-469e-a627-2266a90dbef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "389c969b-f790-42c4-8e3b-d0d35afce35d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3597cfc4-31fb-4db9-955c-4c5c41ed0a7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e9b8665-220c-430e-9aa1-8de58859d001"
                    }
                  }
                ]
              },
              {
                "id": "4e36f53d-7139-4b87-8e80-c19a83b3e4fe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ea678be-155b-4c44-b367-5b06467f1c6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8659ba8-0551-4efc-bc96-e13f4b9f80c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b05d2e6a-7655-4b2f-bc23-aaf688294468",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba9b5ac4-a61c-42ac-b201-850415f52b5c"
                    }
                  }
                ]
              },
              {
                "id": "fab50f42-4519-49c8-a921-15adbc96b403",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9edcf7a3-5f13-4750-a305-07b171df3d2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1867cdbc-8bce-455b-a7e3-49443c678d01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10ac127b-1e88-47b4-81f7-7434c53a7446",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7cfde06-0740-4fe2-ba8e-87675c63bc6d"
                    }
                  }
                ]
              },
              {
                "id": "89b8b2ff-f774-4aeb-ab83-c4821fd466c0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1a63460-3649-4cd3-9d6f-c2c9178a003e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6928c5af-8813-426e-a3b0-7b6f799fabf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a815ada6-06f2-477a-bb62-0768daef4bab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a40c70f6-eeca-41b7-8484-65624b9dddc4"
                    }
                  }
                ]
              },
              {
                "id": "b6ab1c2d-420c-4a5e-a24a-1220b76454c5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8db2816f-7a97-4772-98d3-ac4565aff7c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d9e6775-c875-4382-a54e-bfc8f5e25712"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad988b58-e963-4a4e-94c7-1dd9ad52fa7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "643eae9d-913f-4378-bf51-1e3970f9a9ce"
                    }
                  }
                ]
              },
              {
                "id": "a5ddf8c8-c56f-41ee-bc7f-76a0be77ec43",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26df4bfe-1766-4d77-83cb-cd49446414e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1176624f-d2df-47eb-af9f-828468a5ed8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c735132c-236d-4de0-931c-d5db6630e528",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "268f626d-1571-4890-9b37-030a7b905f6b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "914e64ee-b0ee-46a7-9a35-773eaad85dbf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "284f77d8-3af8-44de-8bb1-1f0bca64e2b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "63df99ca-0912-4d76-b82d-03b981f8333e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d82259b-00c9-41e4-9c61-020e4dd213c3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "320fc913-1b87-4ba2-9069-c62452480569",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "493fbee1-e71d-4a76-bd51-475250ef6ace"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a49199f1-93bb-480c-8324-2042307d01ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e863f2b6-345e-4631-b7ad-a81d5d8c1329"
            }
          }
        ]
      },
      {
        "id": "51287edc-edc5-4dfe-9f14-cde8116a858c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b8443e29-a628-492b-be67-850b636a7c89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98470170-e15c-4801-a33a-19f3647072eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "33436355-71a7-46ce-9f17-88344b4e77b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8b72b4-c3d2-43ab-bab9-dd4185fc815d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5116d845-b4fa-483d-be4e-552fd382c66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4c55c2-a9c8-491d-88de-64f218e8d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19d613b-a361-46ea-99f1-422c16a71461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260cea7f-9667-4cb1-b6c9-8e725b405339",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc25296-bdc8-403c-a9a2-99baf7e0fa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7944be68-2da9-4d81-a3a2-9f428bd44610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4c1cf8-3b5c-45c9-a8f0-3716c42df423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efaa6031-0161-457e-bcbd-083a2b0106ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc52e6d-8421-4731-be17-e39c5768e79d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa0d808-373a-4f77-815b-010cb8c5c6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec3c706-c09a-4df9-bd06-51051842b705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2019bda1-421e-441c-b2fa-aae742e1a5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a4d1c6-c4f9-4b10-add0-0b33d554d3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b2b6f4-b53a-4858-a537-404cbac142e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09b1ab7-73fb-4dc5-bd7e-a2969c467526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c843a2-3687-439e-9887-f7bca7d407ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f18059-be11-4984-b26f-8eca67f68833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe79825f-ddeb-4dce-8f84-587b98ae933c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f0271c-29cd-4ae2-a7a7-18c2658a59a7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d60ff-43bc-4c4e-88c6-2bcfa75d8ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2e56b1-4cbc-47a7-9214-d69789206678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da1fd71-39a1-4422-bc0c-92b8b171a4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5ec7d0-53f3-4868-b92e-aa14c5c532cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bd1634-767a-4f47-a126-2ee0593402f7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698948a4-5bcc-4140-91dc-847034c849ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef03ec9-9096-4ad9-b1b9-3841995dd08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e5e74c-0290-4c0b-8fba-c805800d83b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb2e139-31b7-42b8-8177-c0839abcd460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f38d77-2060-47dd-80ec-b6cb11730d07",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7784c43c-58b1-4ad1-a62e-1ea4f9cfc0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729b1b86-2ccb-4b10-9163-1439a72455a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765b6f50-cde9-431b-9710-735b541817bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "97de88f8-8967-43b7-b937-23db89b4e4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ee02a5-6926-42b8-bb51-e7271d285930",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801c3030-6794-4f72-842b-ae14454800ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ff565d-a67f-440b-8f91-89b21d248098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cc777f-96b7-4631-b408-2107fcc3a75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca43e37-83b1-45be-8f08-81a437a53f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25918cc3-048a-4181-b76e-e9f7e3bd6eb2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3225bf-db22-4cf6-81db-03aa006e8142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de774dd6-62f1-4556-9c03-babd083aa95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da00213-7cf2-42fb-b512-aa9e6336944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b8008b-933e-4230-945e-bea6acd1291f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8577311-31ae-43c9-8eac-0f12a0106edb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0848b547-2af0-4f3f-9159-c5bc27098184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c818a63-64cd-4360-bca0-7a1afea17d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847da634-d0d6-4c4a-bb08-9a74f6ce13d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "092c036c-fd2e-4428-b65a-0862fbb3bcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081c3b79-838a-4e11-957b-6be0c394cfb0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145df504-28d0-4849-a9d0-9f37315b48e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8914f3d-9a2d-4d34-b27d-034dbc2d4cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23331b6b-ca90-47f3-8743-4ca7c46d9ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "74e43714-b155-4805-b57b-03fbf9d1cb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c483b9-225e-4e29-8079-692790de2235",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fc6ccb-0ccd-447a-b0e7-c6f1267dd5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f9dc3d-0a10-4313-b08f-11fab1a69674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e8064f-9187-488d-bb93-954cc61c9938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "493b4d3e-f5c5-466f-b927-962000b36f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ebdbe2-0f99-41bf-90b4-068a520d50f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf50e92d-3122-44fb-8d18-33603b3b5b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152067cc-14f4-4de7-a19c-3d159b04bb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bd8a97-5ab8-4df5-8dbc-fd6d92e71a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58de9807-c5a0-43b8-8f18-0e6f10ecd35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45d9e75-cac6-48e1-a674-dbd4ff4b9709",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75666eb4-b586-4936-b84f-d8d5d0408a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03be6f38-a136-46f5-9eba-b06c645d1266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a99107-7ca9-4faa-a492-fc63d819da40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da6a65a4-5c82-499a-8ece-2dd84ebe4e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d06073d-af83-4622-9805-c421fb14194b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc15689-3dc6-4d9e-b2e9-7bf73d340198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e710533-402d-414b-acd5-c3fc3ccfcfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619c75e2-9d75-4d5d-bc0e-f8adbd9a05bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcebd9b-1066-47bd-aa45-a43f8d35e124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983a2c96-e96e-490e-9b27-10af946a2fbc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6b335b-b79c-4156-8426-832771b59d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97f33a3-53e8-49e0-8ff6-6d26bf8efad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7d1ba4-e595-4c57-b8fa-f55db1ec21b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8960696b-aa55-4611-af11-cbcb4161b14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450ee892-de15-461e-89b0-3131a4bb2a82",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc11893-8a6a-4976-bd2b-99f0a909a321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eeea875-68cf-4a04-a624-ca10f72fd1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a83190-e2b6-480f-913d-2df555f5daa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae99d68-7d6c-42df-846d-58bdde9f86a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba02b18-ee82-4305-a94e-7385df29c1fa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030d8bdd-8f64-41a1-be37-386dc1493fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0074f574-05eb-41cf-b358-4e21a280cf47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e622889-fd17-44a6-b857-74955b5a918c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e44a22a-e9e2-48e1-bbda-c46111e2dd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e41944-37ae-408d-a406-5404558251f5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6e796d-a630-4fb5-b6fd-1e868cfea193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a665cd-4518-47c6-a927-9eb57a215ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbd9751-1fd6-44b5-9c5f-848e71b7761e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f98fbfd-ba2e-4f40-b4a2-32e0bb2b1cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b0c207-8a97-4891-ba6f-8147bce8894d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89047df4-dc9d-4108-8860-1b1ce63bed9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3731d8e8-1cf6-4888-b693-238da535138d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429769b0-b6fe-4141-a97d-487fbe5d1fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c663c1-b195-41a4-9959-37c418ed05fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560f6148-c4cb-4727-ad80-06c47d4e8861",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6526f510-7a6d-4c90-aa6f-babb5557e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc9441b-512d-4ba0-aa4b-f6d410d8b808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6788310d-f221-4b2d-a05b-3bd177a6b5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b86809f9-be0b-4470-83f5-e3f0cdd8ac3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22331bd8-8a63-4ab4-95ce-c28bd6b9257c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb599db4-0770-43de-861b-7140f35e51c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667b86b0-153c-44fb-a0cd-8a84c82eed0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338f988f-825b-4f15-8fab-db9441dededd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "246f7ddc-2eb8-4424-ba6d-abb629cc84a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760ea4ec-02b8-468f-84f6-2aa5d0030a5a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60bdb3d-6f69-49e4-92a5-9c614b3fa7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6754bb-76c6-4b91-b2bb-b05660c55328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98afe3d-2dd2-4776-9b8b-ca7d8dd5bddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d47d218f-5394-4d5a-bb7d-f781ca18b869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bef093a-54fb-4619-bfcf-097803aa9de5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceca4ad5-2c94-4a4d-a2bf-4a01e8b2e4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5450cc-51db-4aea-a756-5f9c76f39b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fbf768-6927-4c51-9b78-51ad4b0d7272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c68574-8f4f-4271-b7a6-2daafcaa22d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a435f75c-cbb0-457a-ba8a-39bb2e377fc5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00e54eb-0d3d-4a23-bfc3-63bd6d4fc493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6cce9a-1ffe-46c2-bc63-9236362fc544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3fb95b-a43b-496a-9e32-f71861266e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5f74ec-a700-4282-b24a-6d6812488c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b175a00-5c36-4203-a257-ab85c3dd2731",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ec2ae1-3f02-4b5e-839e-72b08e3554c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5b3bd3-a93e-4b68-ae25-1c66763ceae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f334e5c9-f2e0-485b-878a-e340e5380a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fbb930-ee6a-49ad-8a46-42c52cdf4665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3a23a7-c9ea-460c-857f-c9d3e168fa69",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20b9633-47ed-412a-8bc0-e548bb9ed58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7602ef2c-171e-4702-8b16-61f2c10fbc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e83a85a-22e8-41d1-ad49-4b97cd38002c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c8c390-3c1d-48df-8473-e99e9b241f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e98ed1b-9626-4e8e-886b-03c7e5dd49ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aa1808-6d12-416a-8845-458e3214058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc881d4d-d7b3-4585-a092-9aa1426c5521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa74a42f-02c7-4a07-9e58-604a241979fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a92e99c6-820a-4f23-ba08-89646e232dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4e228f-cc31-493c-9b06-531df8204d9b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baa5110-aad4-4346-8f08-379b6eea3345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e077a68f-9106-42ad-ae1c-167e15353130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaa4c0e-6a38-4751-b0a8-a2674396742c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "504bcf52-413f-4be7-8518-2e80c7992309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a66d67d-3edc-414c-9c35-99998ed67ec2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84d4f92-021f-43e2-88c8-b5db210d638e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ef2aff-db90-46d4-8aa9-caf54f8446f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331e2cc5-91d5-49cd-be54-b676ce130273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f0ce6e-57ce-45d8-96a6-732062324688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed30597b-036a-4227-bfdf-e25a4b77403a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e5a274-400e-4a2b-b52d-035d907f2484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020bccd8-d0c3-4006-8ee8-89875ea25b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fa52ec-bc50-4aff-be1a-555f047f46cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ae7292-d71a-4cd7-9364-bd5118a4e586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bef15c2-fe13-41b4-8394-5077e09e8b66",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75bdef2-0d08-4d85-b6f2-1d42acae47ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8c3457-0e81-4a49-bbde-6ef0af275d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ddf07a-467e-4093-89ac-e997cc01f52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb3d0b3-35b7-4e04-9dee-b1a79e954fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ab82ce-fd38-4b34-bc17-4dead5feda86",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa4dc08-fbde-4b78-8d3a-4c87d77038bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068d4a72-9751-40f9-b227-490ad109e611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dac496-8d0b-4e3c-8b1f-26ed58533d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81832a9a-fd3a-4d18-ad17-735dc1d98e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8af8e0a-9ae5-423f-ac02-e590080f1b8d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5a5f64-1f53-4408-a9c6-a122242f66e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71d2a67-a8a6-47d8-b259-46971ce4e38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df23b400-580c-4a96-9993-3c36b9da97b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a99a198-0964-4103-bcd0-ce6c536ba74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db977ac9-a965-4c18-9f6f-721dc7f42d7f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8c5d8c-68c2-4640-b396-3da7afba83b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819f2e52-98e0-4b4e-aea9-3514d732fae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e39651-acb2-4207-8181-827968170142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7123a301-0276-4663-b962-4edb1bb0f0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179ffd9c-1a7a-456b-9827-d51fcb65d9c7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2418d7e1-c4ff-42bf-bb65-5f62814bab87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbea47e4-3aa0-4987-a26e-db16427029bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c626874b-e427-4398-9118-c668663441b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b14d70-5596-4dab-b094-9671ba7533f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba2c22f-b95d-46ac-be81-79978ae1a985",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c655652-a9ac-411c-9021-78dceb0a59b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5405b125-cbb1-481f-9c49-931969ddf772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b047e2-16f9-43d1-aab4-95975b434b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "091ad96d-daf3-45db-8b59-3fd87908f73d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6df74996-c38b-4183-860f-63aa3b4797d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1659d6dd-43a6-4856-b637-55111f24055b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e0e3e6-c396-494d-8e54-2e1817be488c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "714ba626-99c6-4a29-a804-1b5ca9a70f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbabc0d8-4c53-4a15-a202-22130eaedafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f648c02a-a5d2-477b-bbb4-17b0b4305a7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f3e0d37-39b7-4709-a643-d1844d195cc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27c985ec-43bf-4ee4-b7f0-d07f7dc241dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f2683ca-9876-48e5-896d-3dfbb6205226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce35aa10-dbb2-4b32-97cf-c5fa85c55fd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bd56484-2f52-42e2-abff-64709934fe5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4ee422b8-a537-4cd0-8431-7cfb99ac4342"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "047e6e56-3bf3-46c3-bdce-6b64f254148c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2145a92-dd0a-4439-ad52-436fce98e9dc"
            }
          }
        ]
      },
      {
        "id": "25ff6c41-a13b-48bf-8a26-fb6cf235c7c3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8ba4fbfd-f11f-4e85-b466-02ecfe6e0da8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0ad5d58-92c9-4ab2-a8ee-10165e263964",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e133838d-eebc-4699-871b-cfbed52d8eb6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43d3329-3b01-48f8-a8b2-2a1f3c92e402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a84700b-58f5-42a2-a592-78555177adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8e4a8d-2db1-4fc1-8b69-9c60ba6ef38d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f03b633-0593-4db1-8434-6e7397653fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eaf052-9dd3-4c7d-8395-4bc0ed4cc630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7a06d9-057b-456b-b4cb-ed878501bfa1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3f60e5-90f5-48e6-b875-ae79ec0773f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e610a5-bba2-4030-bf09-675483999256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2d3dfb-5e9e-4ddb-978a-963bc3b321d8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f795bf98-1daa-4fcd-85e2-42b9df4e7e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035fa769-3c19-46ec-b196-5119bfb218d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f7478c-6fa9-4ce1-b8c7-34816b6ae652",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6095519-9ca3-4159-985f-967372c60898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4928e7-b643-440e-a25a-745c98cd4c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0fd42f-380f-4a7c-a9dc-9d4668009824",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b041d00e-161f-43e6-bf4f-c7b548789ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f91e8c-1830-49a6-ab52-2ceb7ddf4dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e85b50-b03a-42e7-8245-72a2789f5b91",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913ab483-a689-4625-a4d9-08b40c60feaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64261437-58fd-471a-bef4-0ce0fe323219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba61ea-8daa-4687-ab5e-22a3492a7b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e91753-44ab-41d2-aaec-ab56f24e7d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d2cbd2-b140-4296-af15-00de45f61b0c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a95395-e0e3-4a7d-8ff0-fc48a60e525d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c4d929-7fa0-4d03-a7f1-d6f258d2cc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9708f89e-e0c6-4e06-b5de-3bc20f8dc79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82a9a21-210e-49db-a464-4f8dad47aba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531baa24-b3aa-45ae-8bc6-a6a523dcf333",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60259b3e-9d62-4696-bc86-2f5a15d224c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b343b6-3792-4f64-9aad-7fdd5d4e341d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812dc950-7684-46d6-8551-03e36f7cd912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813f8014-779e-4f87-b27c-bf0635973626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f21644-2486-445a-af37-90412c59a71c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d3bb8-da13-4b6b-8a7f-e7638bfd9d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad5ac29-5567-461b-b479-e0e6d6a372ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569d55fa-bb3f-4489-bcd6-b021037d401c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61df43ff-b402-44bc-8798-7e56d7cab874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351e885a-4a41-4dcf-8910-cf675500bd4c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc4acec-4ef4-4be1-912a-7aa33e6251e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6b34e1-af3c-4dcd-8146-279e71c08bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1782997e-692e-4af3-8710-0531096d394e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafe6d76-448d-4fcd-81e9-f5166844f6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbc8989-7a46-47b3-a193-2c431b01db7b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaed81c-5493-4594-9e8f-baa9e2cf54d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06fbe5e-37e8-4cc3-9b7f-58d00a818dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935b7d66-1e1c-4b0c-804c-5fd27a6f3ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40c4f03-1cb8-43b6-9e67-35d3a679ab49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e348e345-da85-4c4e-9873-17a0cbba194b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b88b60a-af87-49e4-ac6b-31e94cd3ccfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d90d5d-0bb8-4c68-8385-028654e9b42a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c1e3bb-f7a3-456a-b0d0-8e27c2bf88ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d60b82a-fe2c-46b8-8529-566ee09a9429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7a2e5e-a3fe-416a-a817-cff6f117cff1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac861dde-7e7b-4f0c-a4d3-de47661d426c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66719dab-215a-43df-8fcf-dbe1aedbffca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4090488-f74e-4efa-a68a-c4e547ecefa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6feedee0-08ba-49f4-a489-38998ad892d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d55ac0-82fc-4d40-9f5c-5ee8fe2094b5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74db1d20-5530-40bb-8cc6-1c0b1c808a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ed283e-41a2-4164-a5f6-ace30327e50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d85e8aa-da6b-4010-a608-dcf674280f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be730338-e357-4275-ba56-ebe1c844a571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26236597-1ec9-48df-a458-490bb5003329",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296f355f-b462-40d4-865f-8cca9ce27c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c06255d-1212-49d3-bdfe-5b85256b658d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793d99f5-c713-4604-835f-e8bc7627bfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeed393-b20c-4129-a59e-433b7cdd9e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25255b10-c1be-4cfc-aed2-e40cc7e6cc76",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ced45b-b07b-405a-807d-322427e89676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5105b1c6-a200-4e02-828a-52cbba618a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cc17dd-be4e-4fcc-b969-83c832f21d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8751d5-4e3d-4bfe-ae4c-d4b01c46e387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5788c8-d32d-4ea2-805b-a690694ebd1e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6275c704-aea0-47b9-952a-67578e4549e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a61182-bcd6-4674-b5bc-a8d4d4412d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84371e7-ca49-45a8-8e3f-2fb49bdb2973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097bbcad-dd4f-4152-8538-25cf22549d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9128dace-7c11-4416-b41d-20fbb7a04800",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f8652-5e86-401c-8536-1d8d640f4f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cad4f51-88e0-4e2d-b731-3fe541d6d95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b2f8db-f916-4b9f-90b9-93f1d407c126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d95276e-0cc0-481f-ac58-336b8a302b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7ebb50-1c62-4c9e-b41f-571eccf897e8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7387a6-9fa5-4983-8142-efc488a05553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56d9a57-0619-4ea2-9702-313664c840e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42dd566-3213-4d32-896f-204c36ad5171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea0d93a-4a60-4ab6-bb5b-e99dc07357b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4a74c9-885b-46a5-a708-a2e01c8df45c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e7b059-7662-4670-a2b4-1f8f26609aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7c4fed-2c6f-49bf-8dbd-2daa23288536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b6e6e8-fd14-4c26-83f0-6ea0a78ce335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63d44bf-1563-452c-ac88-9cd9e4ad0016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7750564a-68d7-464e-a82b-bbdd07ce8c45",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aad497e-8710-43bc-a0ab-17ae9d350387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73913a33-7e3c-4e2c-ac9a-53e03bd8626a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ca017c-b716-4e09-8f97-b5bf20271eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bb8c4f-8de4-4e6a-b8f3-891e5197d723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7212e822-c138-427c-b928-b5cae524ac39",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71426308-c139-4e8d-956e-7ef2cbb22f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa89694-e33b-441a-bba6-4702ac3fd11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66897a14-11c9-47b9-a086-6197a578efca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809c2026-207f-4d3a-82e7-e804e70b0d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ea4ab9-4590-4764-861b-2822767e77f4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d2e799-8a6b-4fb3-930a-4bda168976f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97335daf-68ab-4612-b1bb-0d2412cde5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6740c3db-65d2-4ee3-8acf-b27d9a5c05ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8357bd-7455-4a7e-8845-844617d070dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414cc7d8-c6b9-489a-9d37-f5cfeda57658",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311eefbe-d5aa-4773-aa7f-5fdb9ab075b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2c2e23-a85b-40ba-a7aa-e9224d149766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df16887c-cad5-468a-b944-8020d349be63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673e7f51-483b-4d9f-aa17-0ae76545f24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311877db-57a7-435b-9c64-ed00c6b61b2b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e903732-b2e9-4331-8a21-089b1a96d969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f530fb50-e4eb-4067-92b7-688a49ab3200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448ed0f8-c7c6-43a9-a901-7fd0572a837d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7804807e-1deb-4b6e-9999-0d8873624d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8527edb9-8dc7-4117-913e-bddacfd6df08",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1443cd68-7d54-4439-9831-89e30f48e842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c29988d-1870-4e49-ae1d-2afa6e1720de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09378199-55fb-4cca-9b74-2cd6ae027da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66de31b-df6c-4e1f-a6c0-2ce337ac5599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d166bb-4395-477f-8137-033bfa864154",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3371ea-ce69-4a40-8a3f-e9e2fb73afd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f577b260-588b-4265-b2f5-e1f0589fedf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecded4d-d4e7-4000-87f4-fc52021d7639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16835bf4-456a-42af-86d4-614836dad9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd41cdd-b8a0-4522-a5bf-fe8cbdcb0d56",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57210f6e-c0f9-4514-a2a6-4515e57caf5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eadd1b6f-1f8f-417e-9ef1-394fe1f15903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0b5f88-82fc-4569-be8e-4c03cabdbac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86e164a-0eb8-4ea2-9299-b705b9e09df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50570205-afa7-47bf-91cb-c2e97df10a80",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da7d617-551b-4041-ac79-43c0ec4f76d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54752969-06f1-4db4-8953-793a3375460e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e09ab8-c3e6-42ca-9fc8-77fd61750801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a66a93-75fc-4ca4-b89b-918ace83c9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727b2ea6-dbb2-4e88-931b-7ef9def81bfe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fcfddc-29f6-4faa-ad16-fed3118ff529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40149ea-416c-4a58-a8bb-a7324171f14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e27bc7-a142-4e4b-888d-c4441cf6cb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd92af8b-9e36-4801-8acb-214f13dc2fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f16786-0168-476c-803f-68384543657c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe72a28-a357-4bbe-9874-dcd7409bff63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc8af53-f121-494c-908b-8578ddfd5b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8f0c6d-b0ea-4bc7-bda8-7d2af39b4c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f745eb1-8964-469e-bf05-6a31e3fdf5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7634d9b-457d-4f30-be57-8fae1bec9735",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1521b2ba-ce53-49be-9311-3012e550e447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9dfa8e4-e3ac-4536-9324-1ff2aed722b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fa35af-e3e9-444a-a0e9-6a12be82f553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a065cfde-9ab2-4ca0-96b7-9ea208ed88db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66c16ba-5f54-4117-b086-c580d56a96fc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a040c6f0-ca69-473e-807c-e80534e369f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27c55ec-3eda-4d71-96ca-208467c7b7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377e005c-001b-4868-83c2-16de09d20e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab72fcf-bafc-4df8-95af-414b35c57602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee63eeb-6875-4aba-bfe6-83d8fbe34e41",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d863fad1-1ff6-42e4-9703-e3731f312f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ceed3a-a39b-4649-adbc-72bbf33e8891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0e4063-46be-4f05-9811-3486ca3d654f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9ffd32-b0d9-4d1a-a613-78fa294a3971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e20df8-40bd-4d01-af22-8ffdbf3644d8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbb4fd3-bea2-43a6-9ff7-8861c289f54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f3f37a-bbdd-4378-b779-b779c5d0a6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af7026b-c114-4c75-a47e-7d8ccc7bc24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208a7c65-aad4-49d2-b965-044edd700699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02fc4ef-104d-4201-bf5c-ed2c54a9d2e7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a51ba7f-16f2-4c4d-8f18-dbc3a14851a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec89b0bc-0e51-4b00-8047-001b91b4183c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75c8c53-baa3-4929-9269-b6f722039839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f45ebe-fcc2-43a6-a95a-a11acf4a3659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5700fed6-1539-48f9-8b28-1d0a5819df4d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a758bb4-e459-4f3f-9d10-48f62d951058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754719a1-8e26-418c-8649-0af63f0917b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62d4357-ec6d-4f80-9943-44dd922810d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0964f9-e5fd-4a21-8c88-0c46d9e77a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78276fd0-1daa-40e6-a5c4-8c1c95f765ac",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e07ce6b-6549-4f89-aa2d-c84dc9f4b3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb988028-e6c8-4560-a713-21f6faa6e0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d407416f-c62d-42f6-a3db-0cdd18fbf094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e729aa-4252-4f6f-9ca5-3ff6e9798b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb30833-0b32-456a-aa05-f85ef93de6a0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9870375a-8890-4441-94d4-40ceaddb4580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc1b770-b022-4184-80ff-252232355d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75737485-54ea-4c94-8ef7-132ded99fdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b834c94e-c9b2-4e57-8788-8e270e41758e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ad436d-112a-40b8-bc0e-ddb10be413d5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79a1214-7223-4887-954a-a3310d1306d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43288a1-8644-4f58-b2b3-71d1b42115a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848e2b2c-9aa4-4616-bca2-1008f9d2f186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f10461f-504b-4234-8e52-e845285bd8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d56344-27f1-4e2b-bdd6-e9bce11246f8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ad8f6d-cf05-4dd3-9dd0-895c82184bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a001eae6-61e5-4561-9ceb-a52b4d38d644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0ddfbc-4908-4276-b9cb-572a45e2c8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bc723c-9577-4da2-a3ca-494ea7dd0d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f212da1-5759-43d0-a2af-586c31105bda",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a0bb9c-795f-46cc-8dd2-390cb1f6fe63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abad90c-9308-4410-ad44-ab62074fcf81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dbc35a-e8ef-4eb8-a66e-f47bcb734a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77bf7fb-26b9-40e8-a0e2-5f94d735bb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d06e72-a31a-40d9-a368-0a6933c35843",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeab219-19ed-4084-84fa-d88ef206ac00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ca9a23-cbc2-4f8b-abf2-d9829399bdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945e5028-7edf-4540-adae-c9caa0838e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4b4ca3-1749-47ca-8acd-110f0c225852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8ba26e-3ef5-4b0c-81c4-93bcb74c0e6d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61a6eb5-7008-44eb-a078-0ad17466a8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcca29c-5201-44fb-a58c-a31c3defea14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95e8047-8519-4047-b21f-a45f70b385e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df23a26-ae4d-44b6-a9b8-a74567001edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56889bd-be20-4f4b-b48f-e4279e308b60",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffec9fee-4c2f-4c92-9b77-af91c2f0f1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea58215a-4e32-4bec-8d2e-958b1470c043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a652a036-422d-4f09-9865-524613f45bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c268fe04-1f63-4f5e-9a3a-2ff97a2a290b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0285c21e-8645-45ad-9499-ab1e63bac2f4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799d6475-4405-425a-8d17-66f50becd54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62af1ed3-5080-4968-92d4-082f316a5992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b2d449-7353-47c5-95f4-2d43e078d964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cb3eb6-a0ba-4c51-a799-0b50f89305ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731df35f-2cd4-4e22-98e7-aa15a24f8b2e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c557c9d-01ba-4c78-aef2-e0a90e104772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4628bd77-9bf1-404e-86ce-fe469f10fa06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb74238b-6da3-4382-918a-537186397ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3163479-dd18-4bc8-be81-ac4afe1bc359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad67670b-53bc-4eaf-99fb-ac04e7abccdb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f91c6d-3d37-4997-a3be-6cfa2ac62f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493248dc-095d-4925-aa60-7909912e8a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae25d1af-3805-45cd-9d95-01ac4f378c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d96b57-d497-41b1-a4a5-1eda21e52254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969b7141-b021-450b-bccd-53026dde12f9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f26bb24-057d-40f7-8d1e-401d56216310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f63f4c-ea9a-4ab6-91b8-ba6fa777dfbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5ef94c-0bb6-421e-8ab6-7dd4aa8e3207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afca3c8-a73f-4db0-807c-c1a4aa5826be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b26554-dc9a-43ba-b89e-e4668e00091b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d932224e-27df-4205-b76c-53105293a892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abad15b3-eba5-4617-bc02-f32e393aa1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1879cd6a-21ad-481a-940c-146398884665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfef09b7-63c2-4c77-a727-afd5dce1b302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d348f4a-6010-4804-9eab-81122348ba05",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e56813-33cb-4cdc-a7d9-a731722197ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb3507a-77e5-40bb-b730-0a42860ce15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924580fe-3d2b-4518-918c-e689b2475bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f50eb8-001b-4880-afa3-9e875a85e23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3a35d6-1e3d-4f0d-9c71-97cac74778e7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d8d2d9-26a1-4750-85d9-d0b651604392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecc278e-1cd0-492a-ae88-e5e0be56e987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45780bc0-d887-49fb-8b1b-cc282fb269a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ee0149-c26f-4431-a7c4-9531e5fe6e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34bc417-fe64-4f62-a526-e50f1288e555",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce9684-aae8-4c3c-b34b-fdfc45db6dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d7ca5e-eda6-4b80-97ec-f0f2de842d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0848c6a3-b999-48af-a71d-ff23c98ef790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68641bf3-5a27-47f6-8a58-48994adb8a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d7498a-244d-409c-b444-91c593ee1a81",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e691a7-db3f-42d3-8d9a-2a93474b5362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1fbf15-7765-45b3-b7e6-35f062b1329d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf2cf13-5d4e-4d78-a3cd-a8c5171449e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51aaf3a-ff08-4af0-bb85-8f98c4260262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328b236b-509a-4c14-aa88-862643280338",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e1ae1a-d317-468c-8acc-1463dcdbe89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ab769d-46e7-49e0-8d8a-45d4a76e669c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad207b2-f7a6-46d0-8e6e-62755f2f24a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983582ab-591d-483e-845a-84e386c13df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ce805c-057d-44fe-ada9-f2c7465fb984",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81386e2a-1125-4e2e-96fe-6d2bf8cf86d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50609c34-b254-4633-a66d-dccb34b38fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e5e61c-6955-4818-9cc9-65f462cf59cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2fa977-b25c-44d1-918e-0770756ae616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253f7e8b-d6fa-401b-a9fc-6dc89337a34c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575d26f9-0ec3-4ea1-b538-90964f8ae0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2932ad1d-0c0f-4e31-94f5-57b8ae3f987c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da087f4-c463-4d7e-907c-bc4588410f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afddc8e-8c10-4c5f-b6f9-e384e966b865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52b1989-7bca-409d-b0e5-5e9389fa45d0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842897b4-d3aa-485f-8ac6-ae2ec64520dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3fe61f-1f1b-4a89-bbdb-2fbe20fbd63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8274016-395e-4e80-b137-7766c8f6909f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fd3e2d-ca30-4e90-96c5-dd5d8d872f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e478306-ce00-41f4-b3c6-78c2c1d06097",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ebe054-0b7d-47e8-9d14-8996dacfe8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c0653a-1cd1-4e44-ade4-0aea9f41748c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5776df4f-b17b-4d57-b222-0b48283910f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbaf052d-1c10-470b-825f-b273533a40c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f2af75-45f2-4630-8623-f46c90987123",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6b83a9-7274-4cbc-8cfb-a90971bd5227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe03a9b1-94ce-49a6-a696-1e7a7f935c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51efe2e3-ad68-41e3-bdd6-19dee622ebed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef617f0-137c-4e49-91f0-c19ad6d5ca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f23f389-c915-42f6-b757-bb07c942a518",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67775196-07f4-420f-97eb-135d1006d1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2185d457-1b38-435d-b34d-9e38837db485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a395fc82-691b-4b30-8c7d-d387a141f9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf5cb02-8974-4801-9b9a-69a2a061d227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07094c80-7167-4410-b7a6-05d451afcb4d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91eb2c0e-3e2b-4c46-8642-a888753b58e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1189b654-38c9-4c94-99e6-db2a93e5efeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c470394b-907d-4eb5-9dc8-c30039912f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fbded1-1c17-4a19-a4a4-3b473fa830c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094e7ab4-f394-49af-8552-723c88251db5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73aba936-23ba-4483-bc76-80b31d4c5828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "709f1a10-4c73-4ae4-b228-db63f4f29fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92f4248-56e6-4ca0-9299-782d298c7260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7764c72a-8de6-44f3-bccc-48a245d5243c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594be7b5-dce2-4031-a0a2-a05e145cd02e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7106f277-9117-4894-9f4a-a9f480398cdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a19f615-5512-4493-914f-eed7ccc58404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce097c7b-5343-4c3d-80b9-d0e2a1203b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c8ad43-dd35-4843-9baf-157a021ad00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb98e2f3-06cf-437e-97a6-cf84e04b74c7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d30ac4-bf5a-4d66-aad1-1be9fd0969a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0793750-42a6-4f02-8728-e447ddee32a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bb6ca9-29b8-4f71-a1f4-06dd579b8418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7703cb65-92a4-442a-8c01-90d6018aa9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd4f84e-1e85-467e-92bd-c7310d56f6ab",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f691a3-ff70-44a6-b7ce-d23b5a18464d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b26e465-8388-404b-b0a2-dfd0cfdb1bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fa04c1-f44d-48c3-8346-5a69185dca8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a938b8-e222-4c9f-910a-473e6fbb635e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2685614b-ebc3-496a-95af-d9d9a09b1d8d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4afcee-4df9-46cb-8261-95119371a9ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a764be9-f002-4a4a-91ac-6a7710dfc2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3150ee-0470-436a-b695-97e0fb31b8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89147839-4d73-4f94-bc72-f35cbb4db827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55eb0205-bbcf-4fb6-88b5-d1b4489db69a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eced247-6c81-44b8-b2ae-348010a0814f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0de1066-7636-4828-abc6-cf8197cd4408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd9adec-7153-4cf8-811d-89b70e66ddf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3c1fa6-999c-4c09-acd1-fb5a357e386b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e736bb24-1d0b-4aa9-885b-bca40ed08711",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ce6300-d835-4942-a232-2581de29dc27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635c3481-1ba3-4bc4-a303-877b092ff7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf93b27c-7ed3-4193-8e2b-19fd787ccf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbd16f8-4635-4479-ad56-bb8a4f722052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1af0c5e-9680-481a-b839-15f0ac861069",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd481fc-8065-4aed-bea8-5f7fcfacfc34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce9d25c-4596-4b3e-a641-22e5d84736f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642982b1-391e-4c8a-b167-445e7bc2ad12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a9ed12-7850-4ee3-9b1a-d35d6f45b5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e002ca-6e71-490d-9db9-421800f18de6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1033b3aa-dfac-43d8-b4f2-e54e5ce7e6f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c7373b-4a8e-47c6-beee-a9404f7d1b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5bc42b-8358-4366-822f-2bd6dc3f1414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25280a6c-733f-416d-9cdc-dc3cf3ef5de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e4a5ca-c923-401c-b3f2-773aba9f9fb2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661d4208-0c6a-43ba-be82-d9b46c04c3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481ad6a0-9c0f-4407-9cb7-ee80e30f5c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c7b017-d096-439b-9a5f-b50686f3469f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42f1c93-8dd4-4b3f-9f7f-288fb58fc93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9041502-0de4-43d9-b98d-7930e0e24ed5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b787190a-2a81-45ca-bb6c-e88180774ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b922239c-9e47-4e86-abaa-3a418738da8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbf821f-f766-440c-9217-94ccc217f9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f80c297-a7ea-4e00-bfd6-b97c490bbf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edae33c-8025-4bd6-82da-f5abd5eb1876",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d66fd39-606f-4217-9785-0edf6418a180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f7f4b0-f09a-47e7-ad61-ad28d9f62c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7051f24-17e3-44e5-82fe-2e5a9ac18307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f913da36-f119-47d6-bf2f-d112217e9c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752e6744-db4f-40e9-a4c6-f37facd1a1be",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2d4a4b-b93a-4e6b-a668-d507794dbadd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a825af3e-9dcf-413d-bbcb-c1f05aaa0d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a4d23a-d5f4-44ba-90fb-7a1846e70513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d56083-61ff-42ab-8c5f-dad9b587b3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399b99cc-c5ed-4923-9225-421341b2a6ac",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6890dd-f6ba-4578-97c1-482ea3bbe294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48587bb6-24a5-4d62-b30c-9b4719663e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb8f224-e83d-4996-8846-203a5844d4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7680a7e2-2256-4c72-9ca5-2088eb85af87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d09def9-9962-41a6-bb5e-42ab9e3c9883",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f60c76-8a9e-4c63-a567-d397951e08b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb2a47a-21e9-4628-9e83-86e35aab73cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa14538-b757-4505-abb9-6d10dd31382d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a886f7a-04dd-43fe-b5f1-52fe037b984b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97393e90-9c01-4d2e-b208-60a736e5d46b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0380a4-835d-432a-967e-a9361d3a17eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dca226f-1097-49c6-a216-604b3f623b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355ae3ee-9438-41fb-a1f0-ec4d783f1c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e52c90-fbec-4004-a892-971533a86036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa99bb8-09d9-4634-a35d-cc0c103c417b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0d755a-fb83-419b-8fa1-2d6c8e26066c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89dbf99f-9ff9-4180-9850-57fe6e11eff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a06712-512c-482f-8df1-c5133c2988c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516dbd58-a5eb-43a9-b7af-fd2466ec9fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ac19d1-65a3-4f38-b83c-17154a7d4125",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f86acd-db9c-4c4b-b52a-2e28e915eeeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd6ea57-8b3c-4e12-aa17-7581b3569f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3871ffcf-edbe-47f3-9b15-bd76dbcb7012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ce4230-9304-429e-accf-566b398092e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b892e933-269e-4f18-b6c9-514a1ab6cda1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194aa3ad-3492-43ae-b0a0-9d8b516bf4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15557d1d-67a7-452b-8e6b-f9c7c464b44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248d5f99-907e-4ae6-837c-7342c4167c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d42fe9-4086-4e8a-b3aa-f7a2f2b411db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11b9450-81ff-4527-8954-941f459dd0ee",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1623a6-590d-4aa1-bc6f-0f670732b480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3de3a72d-6f5c-4679-893b-5090d26c44af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628763b3-2188-440a-84af-9d4690d52f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5b73c6-a565-4561-946a-f840b3c00cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21050fca-b2f2-4c15-a623-79bc726dbfa8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4501c51f-a414-4ee9-b7c1-32d06ee2a106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c237bb8-9159-49bd-ab98-3d351227a9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e363ec-5b62-4aa1-ad9c-6f7bf60b6e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a006ea-d80c-4de4-8be9-5462d54ed2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adab607-ad96-471c-9366-2277f1ec77dd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a980789e-5c81-4124-b913-412bbc8aeac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16f914b-1aeb-4a9f-a69b-96a842cba146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753239f1-6d72-4f09-aa07-24a5aec7b3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febbdf2a-6746-4a84-8dcc-97994d870b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef298d1a-e961-4521-abb6-8d2c48e3fb7d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae074968-6801-484e-9cde-98d2921603c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd46947-2aa0-47b8-a87a-8de97248d32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e505cd7-792a-44b6-b109-ef023ab16b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b908174-eba1-4eae-b379-52ddd7c79e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387c632f-b8fd-48a9-818f-7f8e20f4143b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c26fe4e-fba7-4b7b-a434-63594c278769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b21bb2-f003-4891-a99d-2c70676baf20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa775d0-1b19-4471-a33e-fea03cad7ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc728fb-ae2f-44f4-96c3-a85c9b538182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc4c53c-8b27-4106-ae25-88619de0ec58",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dcaa3f-fd1f-4d4d-bfee-397e4ca5abb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f637160-9cc1-4aa7-938b-eb9fd8290fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5d77c0-d0f6-4be5-a0c8-254f79db0c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ff8667-238c-4395-acb9-99a2a7062946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023787ef-6975-46ca-a891-ff9e73b5211b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473f8eb9-18c9-4868-9c81-4caff02dec84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8434d7ca-a656-478d-8641-280881b0aff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05be3bb0-9ff5-4069-9003-117f71c5f449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837cba82-b3da-46f2-93b0-34d4e50aa00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d191684b-5ae4-4784-8f3d-35fcff1f7ed2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c898a0a2-17d0-4f72-a8de-e52e0226693d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a47c78-45a1-4098-9fc0-5059c843c54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ee4245-af0a-4a90-9faa-26027c9478be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a17786-459a-4043-9364-07a471502023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1570e22-27bc-4a02-b429-f309b457222e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98450a5-ed47-483b-befb-f7283b73b04a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201d32b9-e6ff-4490-a9b9-91b2b722a10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebcb76b-a691-43fe-be24-46635324b6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336908c3-e151-446a-bd84-b1c2e4ba5d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2f2244-7dfb-4134-8933-f6ac30008aca",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b25e63-1717-4e79-a947-1a7c804d5538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1560902d-7b41-4725-a00c-1cb7d4f15747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1512a1-ef1e-497a-b63a-fbf2672bdeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed1386d-def9-4472-8a0d-e1f947a5d290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f5974e-0a93-4be2-b8f5-84142f5db5d7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3271bb30-1e9b-4b34-b52d-ce08c04abe21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24dcaf54-fe11-4743-899c-9157dda7e3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aabd533-b24c-41c4-a196-3bfdf58a37bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ae0031-d673-4026-94d1-f748829342fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbf0367-387e-4bea-8901-e900bade354f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b02e1b-5fcc-42b4-bd8c-446e8217a277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5737d10a-a6da-4b74-acd8-945d457cb398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac96a359-c472-4468-a65b-49b9e7542223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0738ac05-a0e1-4635-b5ac-3c1d583cbe97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb6675d-f3c5-4e7b-90d0-361fc5119433",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb82d917-dc8f-4e08-8c9a-272511c7217e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6632354-b93b-477e-a595-df926976cb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41750cd8-cf4b-49a5-9897-fd809947fdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0476ed06-58cc-4fed-8e6f-4cc314036ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96969aa7-9120-49bc-bc6f-37512ef74d6b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a847ef6-717d-4245-a1dd-7e4787de22aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f3efd4-6347-4af6-bb0c-474cc0756cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45a7dc7-a677-4b1d-97f3-036e51052af5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8a7535-0e81-48f2-a83c-072d98f3cf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95befe63-2d5a-44bd-9a98-7ac4384f7e02",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198c8af3-8082-4efb-9942-b6907da2de7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95680d85-c807-4114-8c9a-b8281570670f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af09b4f7-50f6-4634-97e6-afa6a39ae40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772e077a-d071-46b2-a75c-a6495f29c95e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8e62062-f153-4d30-bae6-2a8a65ae1dc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d99af6e-1005-49ea-be4a-124c96f30a7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7221ad5-4942-46de-a247-103624586572",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d732f5ff-5ba2-494a-87d9-6396b3adf2ec"
                    }
                  }
                ]
              },
              {
                "id": "0382cf75-5fe9-4a51-90b9-be1c26e62789",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "977c0a56-bada-45c1-b010-122eb71c020e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e0c469-b196-493f-9786-1119d3761909",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3346620a-74fb-426a-8da3-d47b13fa601a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fbb368-376a-4f81-8004-934da67a7429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8f0d2a2-5a3f-45ba-a92a-427772ff109f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c6bfcaa-26a3-4b7f-b290-9688b4a241f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b6f9bdc-9bcf-4b19-b7ce-ef76821cedfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6847c796-026b-414f-838e-2ac7ea3fa182",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3109742f-7675-45df-a4d3-88f94afc0150"
                    }
                  }
                ]
              },
              {
                "id": "640117cd-c102-479b-b3fc-01b872765071",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3f60dca4-234f-4118-b99a-56356df01423",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e775810-a928-4c47-b38a-2688eb18eec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "35c8d80d-30d7-47d9-8669-d4e566c17b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c880eb-fea5-4738-95a0-dfa29169301f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ed73b9-8e49-4c77-b4b4-899a5f82f49c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c59ea9af-c771-4617-b59f-1b98d4038993",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6ac4094-97d6-45cf-aa05-3b4606fd5651",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db317cdb-2c90-4c6c-8d7f-9e70edeb1511",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e92ee784-b63e-454e-9bce-61043acb39a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4e144e1-bbdb-4338-abfd-9b7d5db8012e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73a4dde4-c4a0-4dbc-bc4a-a0d62db7c902"
                    }
                  }
                ]
              },
              {
                "id": "b45aa154-8adb-4e48-9f0f-2048ee559fa7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f52e0bcd-1808-4556-acd8-daeb9f0ef9ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8216942d-f9b4-4a76-8e73-7fd1a1b95754"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6c5ed48-8423-4fc0-8736-5747856f7816",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c439db00-a795-4230-926f-835e5a8e2f45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d045275a-ef08-486c-9463-68439cff3b8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "033049cf-c257-4892-a318-7dc5fb0e47fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ae5947a-735c-4c6f-b587-9e5dc2e3b012",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ad6c4f8-0c44-4207-b1be-96003e62cd39"
            }
          }
        ]
      },
      {
        "id": "d63673ff-cb66-4533-89e1-dc758370864b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fdc9d406-ab7b-4a7b-9143-5c4f82ca45f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35fa23e2-3991-4e8c-a9ce-af738c0457dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4ebca4f-74cc-4067-b0fb-dfa44f981e97",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f58316-1582-486a-8196-6c2f791e7c01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a7d6801a-78db-4e7b-bd4a-dd5d503cc5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0345d344-0e98-4951-a319-5079ee0c2693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72627147-a2ce-4c81-a546-1c62a59c2669"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4bd037b-677d-48f8-ba0a-6d19794cd4cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "546b1f40-4140-4882-865d-ac40f91653e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16a0bd14-cefe-4ba3-9991-4e772a98f6ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b64af9ec-2dc3-41d2-9b49-b1a96c8a006a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8898a268-79e4-4594-91ca-bc51b28aeb82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2093c0af-2c11-4793-98c0-44c937939a0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c662574f-0d54-4268-8671-cdc3892d0a65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a202607c-f144-4a55-90c6-a51e6e8f3421"
            }
          }
        ]
      },
      {
        "id": "5614c27d-03f6-4d4e-b86e-056fbc80e497",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "506eb5d8-3edc-409c-a6d9-2a09b72b0588",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a27200c-5dd3-4d0f-9bba-30868adde65f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a31dcd43-63f0-4330-9a00-680fa0f82b9e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468a932d-8391-474b-92eb-63528d13f714",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84999b47-1f0c-47a0-8ec5-f3f5992269ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e67735-9e8e-417e-b5ce-1860f90b6e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac56609e-a785-41ff-9751-8cf2a9b8a1cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68e29a35-5b3f-4661-bf8f-2c92602934b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b74c3cd-aafd-475f-97ed-a48faa401afd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d4df8d9-a176-4c67-91a8-ebeb802f741a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05eb26a1-5014-4d3c-bb2f-6c1b39d5a693"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cbbfed5-a63a-4d8f-8a02-e8d26e1c50f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2885a199-b5a8-4db6-adf2-028c7afa6146"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f39e0fee-3d04-45d4-b362-a22cd23e1762",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b110f3f-0bea-42e8-ba62-2d431057b0b3"
            }
          }
        ]
      },
      {
        "id": "7363f50f-3cd7-41f1-adfa-17715e3c6ca2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "33ba60ac-c5d1-4a73-92fc-6800f85cb2fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85f195b2-fd50-4158-a1a4-e2dc96e86875",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18c8d5b2-4d2f-4e9e-ae04-0322589785ed",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71481221-cf69-4ecd-b153-ba68c0fba8ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b967d14-a8a4-4505-8bf9-5b40afa6e8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607e61b7-1490-412f-bf4c-ec24ad3ad613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72137e61-d8d6-4fbf-96a3-5ea24bdb9220"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0520d8c-9c55-45ea-93b3-e041dbcf8b20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76ede5b2-b697-4d1a-884c-09463d3671bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64fc8503-3cc0-40c7-aafc-6b534857372a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f21b05b-8a22-41de-8d5a-b1bef50c0940"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfefd1f0-2f41-4736-859b-8f3d13f1ed42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9cbb8b1d-8cac-42ab-a57e-2aa243c2fbfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91555c6e-3d25-4d37-a2b1-90695e7b1130",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7153846-59d6-40c6-b455-5dd7070320ff"
            }
          }
        ]
      },
      {
        "id": "17c9e314-14ea-4aec-8ca8-cd408daff2e1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b14733d6-0be4-4e2e-a6bb-0f721fd96a56",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9824c6c8-2d5a-4e69-85e8-702c8ece9898",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e60c7c61-c6ab-4b41-bcc5-38dc502b808a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "700b15d9-7cf1-4276-be59-de5613656b6f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b773a6dc-7bc0-44c1-99dd-249558225111",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.345238095238097,
      "responseMin": 3,
      "responseMax": 254,
      "responseSd": 22.84323423554853,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720399228752,
      "completed": 1720399238670
    },
    "executions": [
      {
        "id": "86259f7b-f0fb-4659-b265-049a0e87b896",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dfcb2902-ae88-4365-8e0c-66dfed7ec440",
          "httpRequestId": "f36e48f6-570b-4743-9ebc-8a57440096a8"
        },
        "item": {
          "id": "86259f7b-f0fb-4659-b265-049a0e87b896",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6a2a86b1-af51-4d62-98fd-4a4074384847",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 0
        }
      },
      {
        "id": "a437cf1b-ed61-4473-9f74-78d9f217631f",
        "cursor": {
          "ref": "7047abad-b158-47c3-a35e-19fc15b8df65",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2daa7526-5681-43b1-a1dc-f1206265b8a0"
        },
        "item": {
          "id": "a437cf1b-ed61-4473-9f74-78d9f217631f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "626f0832-f73e-4505-a437-73cba2276029",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "9d91b348-4f2a-4c2b-81c2-a5abd84c1b70",
        "cursor": {
          "ref": "63bdcc38-df4b-406c-971c-59dbc72588eb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e482d962-8fd9-4504-a1e1-73c29a54d9d5"
        },
        "item": {
          "id": "9d91b348-4f2a-4c2b-81c2-a5abd84c1b70",
          "name": "did_json"
        },
        "response": {
          "id": "60ec95ef-e650-4ce0-b9e2-4efb8705038f",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a334fe3-b4f2-41a9-92be-be00dbe6a664",
        "cursor": {
          "ref": "033fb9f8-5c07-45b2-9439-e93d69d8d938",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4bb78af8-4e5a-4376-ba7f-f73e558bc0b8"
        },
        "item": {
          "id": "1a334fe3-b4f2-41a9-92be-be00dbe6a664",
          "name": "did:invalid"
        },
        "response": {
          "id": "76b7078d-49e1-47fa-b867-0fac39e62c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a334fe3-b4f2-41a9-92be-be00dbe6a664",
        "cursor": {
          "ref": "033fb9f8-5c07-45b2-9439-e93d69d8d938",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4bb78af8-4e5a-4376-ba7f-f73e558bc0b8"
        },
        "item": {
          "id": "1a334fe3-b4f2-41a9-92be-be00dbe6a664",
          "name": "did:invalid"
        },
        "response": {
          "id": "76b7078d-49e1-47fa-b867-0fac39e62c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f3d114-2497-486f-9092-4f858688843c",
        "cursor": {
          "ref": "e16d5125-2003-4bd0-8a36-5da54694f925",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cabfc762-4faa-4798-9131-45f907c7041e"
        },
        "item": {
          "id": "94f3d114-2497-486f-9092-4f858688843c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c5164596-d544-41f1-95e2-0795b07f63b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 155,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df28e0bf-3224-42a3-9fde-42e567d80679",
        "cursor": {
          "ref": "559827cd-9ecb-445b-b84d-6220e9b3bf15",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4119aba8-0d8a-42e6-8465-300dded8a635"
        },
        "item": {
          "id": "df28e0bf-3224-42a3-9fde-42e567d80679",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fc88ca4e-5891-405b-bc9d-494429ba927b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0aab40-49a0-470e-ac5e-90e902403bad",
        "cursor": {
          "ref": "b6a3a337-27e5-418f-b329-5ed634d9eb89",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b6bbb10f-f017-4fe9-8c17-71ccfacb769e"
        },
        "item": {
          "id": "0d0aab40-49a0-470e-ac5e-90e902403bad",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "74598a46-6028-4ef4-afba-04e58690b6ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188e3521-f7cf-414a-84e5-d297a926815b",
        "cursor": {
          "ref": "885ee487-717b-40de-9800-636013b5aab6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "624fe724-8152-4c10-86c1-0d2f4041637b"
        },
        "item": {
          "id": "188e3521-f7cf-414a-84e5-d297a926815b",
          "name": "identifiers"
        },
        "response": {
          "id": "12bf4f6a-8b29-4853-a6a6-33dcaac472f1",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e21257d-6e62-45ef-9a71-d2fae7566c63",
        "cursor": {
          "ref": "d51e7eff-bf98-49c7-9959-7b498e196574",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9d9e4ee4-3505-4be0-bd2e-d8a7a2aa07df"
        },
        "item": {
          "id": "0e21257d-6e62-45ef-9a71-d2fae7566c63",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c4b86398-8a24-4971-a950-4c49234b13f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62856d2-0e65-446e-a8cf-5cf3a56fe4d9",
        "cursor": {
          "ref": "7888bd10-31fa-4ee1-a0da-d1d99d0a7fec",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "acb8ab7a-f088-4602-b7ce-ef4c245d235f"
        },
        "item": {
          "id": "d62856d2-0e65-446e-a8cf-5cf3a56fe4d9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c4c111f4-fbc2-4f2b-87fa-31747ab951fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591e9190-80bb-41dc-bc7c-18ca8a98a894",
        "cursor": {
          "ref": "3d7ad676-a212-4d66-9133-971217ce35ce",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "16cdb5e4-3db2-4973-9708-df2db65be3fc"
        },
        "item": {
          "id": "591e9190-80bb-41dc-bc7c-18ca8a98a894",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "889e1759-0672-4641-b3da-159390f4899f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf73d5c-cb82-4d23-be04-1496fdf42dfe",
        "cursor": {
          "ref": "eae387f8-fdc4-4c3b-b3bd-a219b29844e4",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b64d74b9-25eb-42f8-8e94-6fdf77e69574"
        },
        "item": {
          "id": "eaf73d5c-cb82-4d23-be04-1496fdf42dfe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "79d87ad2-4d48-4074-8c75-86579e9e16b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014a5113-61d9-4c33-9eb4-7c44685929a5",
        "cursor": {
          "ref": "0c1605ec-c533-49d2-a745-328d836d814a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7f67bfa8-cf5b-4777-a9f7-29a8f470f30e"
        },
        "item": {
          "id": "014a5113-61d9-4c33-9eb4-7c44685929a5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "34c6aebe-0f94-4630-8bf8-abee205296f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b65334-22ba-4ead-a421-194631a2a5f5",
        "cursor": {
          "ref": "28cbcf3a-ae92-4310-bbba-fd02e8c6598c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "90b92ade-fad8-40bd-8b7d-80b4db7c2f1b"
        },
        "item": {
          "id": "48b65334-22ba-4ead-a421-194631a2a5f5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2fb7f2aa-8d73-48bd-8b1a-e137442a07bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786b8fc6-9883-44b0-b173-928b6064f965",
        "cursor": {
          "ref": "52b2eb01-c948-4c37-be61-57a9169ba6cf",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f4956767-5df9-449c-a460-752ed9f0a81d"
        },
        "item": {
          "id": "786b8fc6-9883-44b0-b173-928b6064f965",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d1452449-ce3e-489a-b4b5-097368408682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f8327c-3063-4d75-ac77-fa8217048a25",
        "cursor": {
          "ref": "dc11c88c-2b22-4410-95c0-60326f70a022",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5a2f6ad6-cc52-4c3f-851a-db2555fea32f"
        },
        "item": {
          "id": "e4f8327c-3063-4d75-ac77-fa8217048a25",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1d99fb19-5e63-43cc-93e6-f6010ccab46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2f7427-17dd-4a79-88a2-c06af2d9dad8",
        "cursor": {
          "ref": "1a1ad723-0c14-42fb-93a6-9697c2183b3f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eb4487fe-2ccc-45d2-a010-88f117c31629"
        },
        "item": {
          "id": "0e2f7427-17dd-4a79-88a2-c06af2d9dad8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "279ed0e6-8968-4bd7-b90c-56c456067071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d51c95-0d0d-49e4-969b-95a4e2248b06",
        "cursor": {
          "ref": "40769e13-f43c-43d2-b497-875266400168",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f7bf2cba-1cb2-42e2-bd98-244703da205f"
        },
        "item": {
          "id": "58d51c95-0d0d-49e4-969b-95a4e2248b06",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0c11268e-6c8f-405b-bd17-78c28618b374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b426aa35-1d5a-422c-8c4a-37d587b55a58",
        "cursor": {
          "ref": "5a7c53bf-bbd7-4e02-8c4b-972ea131c04b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6c90c77d-b8af-4ea2-8ea8-2c23b5dd5895"
        },
        "item": {
          "id": "b426aa35-1d5a-422c-8c4a-37d587b55a58",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9f6103d6-e4c4-461b-bcd6-c365968466dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1e0b0f-46f8-4eef-9ce4-44386cabc416",
        "cursor": {
          "ref": "490a8a08-f379-4868-aef4-2ea8ee48b10a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3624b7c1-75f5-40aa-a588-23a48815c81c"
        },
        "item": {
          "id": "6f1e0b0f-46f8-4eef-9ce4-44386cabc416",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b4d6629e-08dd-48f7-9fb3-6f39521a4c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ff36a7-abd1-4275-beb6-428607d079fe",
        "cursor": {
          "ref": "b0a9dd21-63ed-4420-be1f-48c849380f6e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "17ca7bd4-b429-4b8c-adf1-249cbea15613"
        },
        "item": {
          "id": "e0ff36a7-abd1-4275-beb6-428607d079fe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8267cb65-3f82-406a-b1a8-8f2d49eb283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a888dff-90e8-43d6-8448-ccf723424f55",
        "cursor": {
          "ref": "4ceb3fb9-7787-4838-a964-6c321ced6882",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "873b6d98-7538-4d30-8ed6-8fc326176707"
        },
        "item": {
          "id": "5a888dff-90e8-43d6-8448-ccf723424f55",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ec867c59-ddb3-4c27-b085-5fa15c003697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65506bf3-1cf7-4abb-b977-baad5b9ad28e",
        "cursor": {
          "ref": "d88c77f8-8a6a-468b-a1f2-eca7edd63c1c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "37a41f09-a7fa-4bde-ae09-015273850bc1"
        },
        "item": {
          "id": "65506bf3-1cf7-4abb-b977-baad5b9ad28e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2041efae-3d48-480e-badb-0d44245ac2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721143f2-4d6f-4621-8544-caa007046d09",
        "cursor": {
          "ref": "8346b0e9-c774-4a50-a234-e40b30e81242",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "aa72fb8a-710c-4cf4-abb4-7a4e0465660b"
        },
        "item": {
          "id": "721143f2-4d6f-4621-8544-caa007046d09",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b487e6dd-c006-40e5-a380-58513cbe10f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a7ab2d-a6dc-409f-adb9-110d2f423670",
        "cursor": {
          "ref": "7629acf3-17d2-4735-964f-f0011864bd1f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d0c1a1f5-4d76-42b7-99d0-9ccedc22dc07"
        },
        "item": {
          "id": "e0a7ab2d-a6dc-409f-adb9-110d2f423670",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c5bfe70b-a32f-4e2f-aed1-414abf369130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2eb96e-45d6-40fd-a32f-e4e7b2f47464",
        "cursor": {
          "ref": "ad59c27d-0e1e-488b-8a4b-12f4b798077e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d6da1822-4a9a-4116-b43c-92a11ce79388"
        },
        "item": {
          "id": "9b2eb96e-45d6-40fd-a32f-e4e7b2f47464",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f3439e0b-78c1-4822-b2d5-7c7247eb3dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1de205b-7d49-4b15-b967-9a07aeef26ec",
        "cursor": {
          "ref": "efbb3a9f-f2b3-4028-9212-22605eb84c94",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2cf5c11f-69dc-4ffd-b2c8-61d60ee0e26e"
        },
        "item": {
          "id": "f1de205b-7d49-4b15-b967-9a07aeef26ec",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b38df64d-19f3-491c-8abc-1bb2f3cc5414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd845f18-60f9-47ce-b1a9-525d40078953",
        "cursor": {
          "ref": "3f0356f8-e4a1-4544-a85e-c5acefcd641f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6c903b9a-fde2-4384-ab6c-ef69f3220af2"
        },
        "item": {
          "id": "cd845f18-60f9-47ce-b1a9-525d40078953",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "53d829de-3582-4a13-99e3-b670c4a940aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ae70c4-d010-43c8-bb9b-b1a24c804de8",
        "cursor": {
          "ref": "58a0cf90-e54a-490d-94a9-1e713fcf095f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "63540b35-1737-4c44-b9a8-45156690c6c3"
        },
        "item": {
          "id": "c8ae70c4-d010-43c8-bb9b-b1a24c804de8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f79986ce-ed4b-46f6-8e35-0b7522a4316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5343c20-192a-481b-b2c3-03fd87b88be3",
        "cursor": {
          "ref": "16e47ca1-9fb5-467e-bf7d-33a97631ca91",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b6c26bfb-eea2-4eca-b49d-ce2b0e78ebe1"
        },
        "item": {
          "id": "c5343c20-192a-481b-b2c3-03fd87b88be3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d2c14ce0-c217-4462-bdc7-cf987d5587a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8295f34-f559-4cf3-8596-6986c5f715d4",
        "cursor": {
          "ref": "7214119b-8da4-4057-9917-cb3f4b82ad21",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fb4e1033-a15a-4f0e-9977-9bdaec19aca8"
        },
        "item": {
          "id": "e8295f34-f559-4cf3-8596-6986c5f715d4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3d1031b9-4fdf-4683-a907-87ea6cb05f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c174df35-af65-437d-ba51-02ea393f3020",
        "cursor": {
          "ref": "7ef44f5d-a639-410d-a0fe-58febea38947",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "be43724f-460d-4fcc-9351-2914ecfd6ee0"
        },
        "item": {
          "id": "c174df35-af65-437d-ba51-02ea393f3020",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a369d93d-1e47-4bfc-9dc8-89debe2b39dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24426aa-a4f5-43b4-b8a6-2eb58a7c7eac",
        "cursor": {
          "ref": "0574055b-b0a1-4111-8388-0f4352c33164",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "24dd169f-c7c5-4f21-a12e-43e488b77ead"
        },
        "item": {
          "id": "b24426aa-a4f5-43b4-b8a6-2eb58a7c7eac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8f2eb2bd-492e-4e6f-9bdc-e050278a58ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b72b904-21bf-42e2-abe9-f152e412d9fa",
        "cursor": {
          "ref": "a3d8e45e-5762-4506-bd7e-8d3747a2abc8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3b2a98c5-81dd-4c0d-a85f-fe44d83e8105"
        },
        "item": {
          "id": "9b72b904-21bf-42e2-abe9-f152e412d9fa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "756790b5-c1d9-4ee0-be9c-4937c07ce076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81158976-a4df-411a-a644-90ed3586b7b9",
        "cursor": {
          "ref": "6303832a-a9fb-4646-a5dc-5427385f8bdb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "72eb8404-d00e-4795-a0d8-51274211dd05"
        },
        "item": {
          "id": "81158976-a4df-411a-a644-90ed3586b7b9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8d8beca8-b1e2-460f-ae7f-b91878c2c0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39c3037-584c-4171-b3c0-d2a757ec838a",
        "cursor": {
          "ref": "204921c7-c52b-4c6c-9610-5bf8bae8f351",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6738481a-6b01-4720-a502-fa8a5b8849e1"
        },
        "item": {
          "id": "d39c3037-584c-4171-b3c0-d2a757ec838a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6fd8a5e8-543c-46fa-80b9-fdb64d43fd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b49479-1f60-4a47-81e7-72c28818ac82",
        "cursor": {
          "ref": "ae70e867-167f-4480-9362-b4c3a1a30301",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "017b6c6c-a4a1-4de2-85f5-6acfbd3423c5"
        },
        "item": {
          "id": "f1b49479-1f60-4a47-81e7-72c28818ac82",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1d2e1a7d-8297-4cb5-9911-89847e964719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b20af4d-f9ea-406d-bda7-f8a695328b2c",
        "cursor": {
          "ref": "1ac9273f-ecd5-4bce-913c-a52056317270",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "75f19e4c-351b-4aac-b3e8-03caf4d467f6"
        },
        "item": {
          "id": "4b20af4d-f9ea-406d-bda7-f8a695328b2c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f0d682b8-df99-45f1-945a-4902cd1507f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024c3244-5786-421a-bdfa-aa763a0e6cee",
        "cursor": {
          "ref": "6da12628-2740-492a-afc4-2a701eb093e1",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "654b5961-c530-431f-9c54-d8fc5de1713c"
        },
        "item": {
          "id": "024c3244-5786-421a-bdfa-aa763a0e6cee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "eb50bc3e-66b9-4f18-a8ff-244ef120148c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c929feb1-10ce-4150-aa41-dc6ce1174931",
        "cursor": {
          "ref": "670d46b1-bd98-40a2-b596-e6d282c03c6c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "97b5215d-c8c8-44d5-b749-cfdb57cba73a"
        },
        "item": {
          "id": "c929feb1-10ce-4150-aa41-dc6ce1174931",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8d73e9d2-0f9a-4400-8810-e2ae2a8c8ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350ded7e-66dc-4b24-a5f5-172494d06e64",
        "cursor": {
          "ref": "02010ed1-b283-4ab2-a8e3-d136407ada68",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a5043586-d8f7-4856-a1ee-c599016b2150"
        },
        "item": {
          "id": "350ded7e-66dc-4b24-a5f5-172494d06e64",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7dcf1735-08a1-44de-9dc4-928e99f215ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e954c256-7b78-48cf-a2f6-a016fd6875f2",
        "cursor": {
          "ref": "dc3a85d3-923b-4a67-81f6-554d6c482504",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4b816d9d-6e56-413e-aae8-81163e1fa8eb"
        },
        "item": {
          "id": "e954c256-7b78-48cf-a2f6-a016fd6875f2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "67f41156-1d1b-4eef-baa0-8d9d567e76ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a81d40-837c-418d-95be-41a2fe549d7a",
        "cursor": {
          "ref": "e0e42552-7554-42de-a16c-a182340cadcc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fcf3fbe0-1a0a-43d5-973c-c68ee1b8f932"
        },
        "item": {
          "id": "78a81d40-837c-418d-95be-41a2fe549d7a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f509b4a4-5cbe-4449-a134-1ae2ad48a27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33123ec9-c53f-4f06-b463-cefc9cd593d4",
        "cursor": {
          "ref": "975f7c07-03c8-4f50-b15e-91b955c67528",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "212fdcd3-b32e-46c3-b588-b57675d64977"
        },
        "item": {
          "id": "33123ec9-c53f-4f06-b463-cefc9cd593d4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a6bb20be-b88c-4cf6-858d-a69f3b0632a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d86193e-51fc-421f-ae4f-3497226bc8d1",
        "cursor": {
          "ref": "de1fd96e-aa64-4484-a0f2-b48d688c400f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "55511eec-54f1-4d24-8104-48bd893fe1c1"
        },
        "item": {
          "id": "6d86193e-51fc-421f-ae4f-3497226bc8d1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9fe88be5-513a-4954-bb22-3fb66c1de97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ea1e81-2c5e-4093-a77f-c9cee5960b5a",
        "cursor": {
          "ref": "85956fd9-5db4-4149-9fcd-9e6e5bdbe435",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7bf57519-adb2-4dfe-b0b6-a32dc14f6825"
        },
        "item": {
          "id": "71ea1e81-2c5e-4093-a77f-c9cee5960b5a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1886f224-835c-49ea-96da-ffde5bd1cb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a6ab2c-06fd-4c54-a730-29526d18895b",
        "cursor": {
          "ref": "50392c3e-fd12-4b3a-93cc-1b766d2bbf21",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "71b25e3e-8049-4036-81aa-6ffd646aba18"
        },
        "item": {
          "id": "86a6ab2c-06fd-4c54-a730-29526d18895b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6b883ba0-5558-429b-a123-a2842088a330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad953dc-4cd9-4c1d-876d-db7886d99e17",
        "cursor": {
          "ref": "f4b40aa7-eeba-4e45-bc26-075f19fd11a0",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ff382fd0-0b51-4cfe-b437-03d68aa47417"
        },
        "item": {
          "id": "3ad953dc-4cd9-4c1d-876d-db7886d99e17",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1fe22f60-7438-4ce0-abb0-7b8689cb2dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60c16a9-e457-46e3-95b7-48f0d4ea8ca5",
        "cursor": {
          "ref": "8b401276-0d6c-456d-8727-2a2e598d1362",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "663a0ae5-5d53-4574-9101-1119a1b64b6e"
        },
        "item": {
          "id": "f60c16a9-e457-46e3-95b7-48f0d4ea8ca5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b3db4218-3eb0-4c1d-af3c-81bf7068e517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a234d82c-0c0b-4fd0-be94-676f5ac964be",
        "cursor": {
          "ref": "62687f20-0800-477c-8fd6-7ac0ff2313e3",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f3ab4ae-e5c4-4216-b120-27c66d9a635d"
        },
        "item": {
          "id": "a234d82c-0c0b-4fd0-be94-676f5ac964be",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a6708094-f732-4af1-807e-231623799219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d42d20-1522-4af0-bb22-32f07b9b1a1b",
        "cursor": {
          "ref": "e6fd6466-5328-4812-8806-00114ef93aff",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a19f449c-c82a-4fd9-9aa9-fd6e713bffdb"
        },
        "item": {
          "id": "20d42d20-1522-4af0-bb22-32f07b9b1a1b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a402df0a-b46f-4d1f-b8e9-e86d843741f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb46c8e-6018-488b-a413-e6383ff42bbb",
        "cursor": {
          "ref": "c781719e-7435-43d6-a62d-f2f85b68c347",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "afe71295-254c-48b3-b305-896cdc38e95c"
        },
        "item": {
          "id": "6bb46c8e-6018-488b-a413-e6383ff42bbb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ed76913e-a110-4347-a63b-cf1b1c59b784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9087cf8-bb76-4fcd-a53a-0329b1f15c67",
        "cursor": {
          "ref": "3fb874ba-b83b-4c4c-a570-11d6f858134f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "446470ff-5156-4ea1-ad68-cee508d75222"
        },
        "item": {
          "id": "a9087cf8-bb76-4fcd-a53a-0329b1f15c67",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c8253279-6828-4379-8734-abdfd15af2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f67835c-2ec1-4fce-bc59-ea50524dc93a",
        "cursor": {
          "ref": "7dc42c34-11dd-4610-aad6-7016021de206",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d82e232a-16dc-468c-940c-af05ad80bcfe"
        },
        "item": {
          "id": "1f67835c-2ec1-4fce-bc59-ea50524dc93a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6e01f707-bc7e-4e44-8575-65d251ae71dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174e40bc-76c5-4e0b-b88a-1afb153cfa84",
        "cursor": {
          "ref": "118690fd-64f9-4c13-96da-5f99d1bf9efe",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "afbb13bd-fefe-44b6-95d6-d4cd2333f615"
        },
        "item": {
          "id": "174e40bc-76c5-4e0b-b88a-1afb153cfa84",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b5955fad-2168-4d39-88d6-547b33dd259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a69eb3e-acfd-45d6-b435-0088e0907590",
        "cursor": {
          "ref": "53f5db42-e32b-4dd7-8955-8c52cb3cf1a1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d53a396a-224f-4977-9812-faeee9f9a5e6"
        },
        "item": {
          "id": "7a69eb3e-acfd-45d6-b435-0088e0907590",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d61cbf9e-424f-467f-8050-2357f2563f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420fa115-72bf-468c-8831-8cec461ab46d",
        "cursor": {
          "ref": "53d9e599-810a-4961-887b-81f691ef3a51",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8935db2b-5331-4e3f-ab60-818856ad176e"
        },
        "item": {
          "id": "420fa115-72bf-468c-8831-8cec461ab46d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3277d34b-c31f-4da3-8266-dde60ac3ed88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce6c84-8e5f-48ab-98b0-b3a6ce06f457",
        "cursor": {
          "ref": "99f2009d-cb58-40f2-bd3b-680246bf8e18",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4c8b0eac-5b97-46fd-89ce-5092596a00bd"
        },
        "item": {
          "id": "79ce6c84-8e5f-48ab-98b0-b3a6ce06f457",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3d32d0c1-16cb-4c48-8d18-d67caee4499f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43c7bcf-82ad-46fc-ac56-6475236f5cc1",
        "cursor": {
          "ref": "d35c8cb4-9094-456c-b24e-fd9b7a77047d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1a3dc5a8-60cd-415b-a0d9-74e7ff5355c3"
        },
        "item": {
          "id": "e43c7bcf-82ad-46fc-ac56-6475236f5cc1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "14dd720e-3e55-4d27-bd68-7667ecccb0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9eb0df-50b8-4e93-978e-30212ea65496",
        "cursor": {
          "ref": "80cdc0e2-f084-4507-bc82-0b290e02c76f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f329800e-5a6a-42a7-b4c4-d8dfdccf5367"
        },
        "item": {
          "id": "6d9eb0df-50b8-4e93-978e-30212ea65496",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e5e23878-f2d2-4cc7-8068-e9e0cdf0a5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dfb159-d0e6-4ada-b389-1c249fff4f81",
        "cursor": {
          "ref": "86b467d0-0c59-490b-bedc-48461856231d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "74980149-6cee-4813-8750-249bcd07c66d"
        },
        "item": {
          "id": "10dfb159-d0e6-4ada-b389-1c249fff4f81",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3f0b3cd8-6c3f-431e-9ca3-fab29ea356b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f628ec-be37-43fc-98f4-abc2532f6cf8",
        "cursor": {
          "ref": "12f098d3-196e-477b-834e-b00b85e0f799",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4eb80a93-cc09-40e1-b3d7-ffaf314041be"
        },
        "item": {
          "id": "e2f628ec-be37-43fc-98f4-abc2532f6cf8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3a3abb50-a0b5-401e-ab50-1d1ed4d65942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c926bdb6-1ffc-475b-ab1a-a2cecde0e8c5",
        "cursor": {
          "ref": "d5f46d3a-91ae-4469-a2b8-3387c154ddbe",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2830d0ec-c4d7-476c-b23b-2f980e10fbc6"
        },
        "item": {
          "id": "c926bdb6-1ffc-475b-ab1a-a2cecde0e8c5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "852b97b5-f415-4743-966b-0dc24b1280a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefe6d64-0d51-468d-ba96-6dd6fae66e0e",
        "cursor": {
          "ref": "7348a03d-fcf6-4e15-bcc7-c02ab9898410",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "813cd5e5-99c6-42b0-9627-03c4ba034b2c"
        },
        "item": {
          "id": "cefe6d64-0d51-468d-ba96-6dd6fae66e0e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d9240400-c569-4396-a678-293be5ace96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95823717-cf18-4f0b-ae48-0cffe9455844",
        "cursor": {
          "ref": "e764cefd-6fe3-4a2f-81ef-57e39f1e0be5",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "db35ebfe-a885-41e1-990c-f21dd7c0acaa"
        },
        "item": {
          "id": "95823717-cf18-4f0b-ae48-0cffe9455844",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "084b11f2-8f17-41fa-9ce3-593505ac027a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0db03f-8c1a-4a8a-8808-078f3a3e18fb",
        "cursor": {
          "ref": "571a40c2-bb21-4190-a52a-23f0d57075aa",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "00ece52c-bec0-4f38-8b32-c46866314972"
        },
        "item": {
          "id": "2f0db03f-8c1a-4a8a-8808-078f3a3e18fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "80458a52-4fd1-49fd-a2a3-006350c50cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bc49e9-8a6d-4d27-9714-0547bdb311cc",
        "cursor": {
          "ref": "a915163c-284a-46f4-8fc4-4997799c2755",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "038feca9-7742-4066-ac95-f3485a4b1546"
        },
        "item": {
          "id": "48bc49e9-8a6d-4d27-9714-0547bdb311cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3f12c36b-12e8-42aa-ab88-72f873637448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f226d955-9fce-4b66-ac93-06116807657a",
        "cursor": {
          "ref": "2bb2b471-8fea-42e9-a369-6e1ef9cc69cb",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "04515149-9c93-4b86-9948-56727191ea75"
        },
        "item": {
          "id": "f226d955-9fce-4b66-ac93-06116807657a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "843b919b-1cbc-44e0-a220-7731479caaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c335fa-3763-4310-b01c-68dafba64ac6",
        "cursor": {
          "ref": "ac5f980b-40c1-46a8-bcd8-3e1a921a79a2",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f6eaaf4-1d7a-4be4-a538-75c62913c515"
        },
        "item": {
          "id": "34c335fa-3763-4310-b01c-68dafba64ac6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dc5ea8b0-eed7-447d-a7fe-412411efc5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9aa479-bed7-4dd3-b1bf-79126e6fae85",
        "cursor": {
          "ref": "3e796338-1527-4354-bc5f-7bd5635c7e55",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "38c0b655-5525-4aa6-92d7-d8692d8bcd28"
        },
        "item": {
          "id": "aa9aa479-bed7-4dd3-b1bf-79126e6fae85",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "96f61496-7bea-4fc3-a531-e621bfb63df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654a7fbd-9008-49d1-b7d9-0972e7dd21c8",
        "cursor": {
          "ref": "4542c224-4ce1-446d-ae9c-37a541da9723",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "34bd9b20-182d-4dfd-8a6e-0bfca37918e0"
        },
        "item": {
          "id": "654a7fbd-9008-49d1-b7d9-0972e7dd21c8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "948737d5-e670-4736-a8a8-415fc2c7379b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81eb7b7-dd7e-4d88-8dc1-5d2a41a0e03c",
        "cursor": {
          "ref": "c81de0db-b639-4d83-9670-f11472ec822d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4d184ecf-f039-445d-88ac-9c359f2e0d66"
        },
        "item": {
          "id": "b81eb7b7-dd7e-4d88-8dc1-5d2a41a0e03c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2d6a6bd7-db04-4ec3-81fc-ea374a05dc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d25abfd-9daa-4b60-83dc-27544c5b7bc0",
        "cursor": {
          "ref": "7242bf3f-ea29-47a6-93e6-5b58c739a73a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0905a767-5900-495f-8535-a683135ce3e5"
        },
        "item": {
          "id": "2d25abfd-9daa-4b60-83dc-27544c5b7bc0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c0bf2e81-23f8-49e1-8d33-f418bd39a612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fecb71c-f654-48d7-8cbe-ed7904571ed8",
        "cursor": {
          "ref": "7b396dc0-cf11-4680-a856-f59efffdcfd7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e3ae1839-dfb2-4cb0-b0d4-0dc5a83a53d1"
        },
        "item": {
          "id": "1fecb71c-f654-48d7-8cbe-ed7904571ed8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "919c21f9-816c-4633-b669-f420a7751153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bd7246-5326-4798-9571-8fd4b304e08c",
        "cursor": {
          "ref": "bc44d0db-ee73-4eab-90ba-b28491288f9c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0e824b4d-d5fc-4aeb-9490-902cae528f9e"
        },
        "item": {
          "id": "51bd7246-5326-4798-9571-8fd4b304e08c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "74d1b8ed-ce9c-461d-baff-45de8420805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff7a188-24b7-4fd9-b483-7a48d262f9a7",
        "cursor": {
          "ref": "c8a44e03-66a6-4e00-bc06-b0a17c08e7e9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "84d73fe4-3dc7-4ea1-8914-f8b5e0be350d"
        },
        "item": {
          "id": "eff7a188-24b7-4fd9-b483-7a48d262f9a7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e2831368-6199-46e2-92a9-ee74e58c9dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d837c36a-92b4-45ed-a5a8-85c9560c6c18",
        "cursor": {
          "ref": "4fe756d2-736c-4a5d-b0e9-f382af433f62",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ba9d11df-02df-4940-a80f-fd6cc1766692"
        },
        "item": {
          "id": "d837c36a-92b4-45ed-a5a8-85c9560c6c18",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fc07357c-de85-4f5e-bcf1-ef214e677737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4a863b-8389-400c-a66e-eb9864f1498a",
        "cursor": {
          "ref": "ca3bd775-7fb5-48f9-bb86-b0d7e327f234",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a53a3620-5c6b-4686-a6b7-35eaedce6e05"
        },
        "item": {
          "id": "7e4a863b-8389-400c-a66e-eb9864f1498a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5a1ebd7b-9b4f-431c-adbe-175af82da36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6465cdf-a4b2-41d1-8163-1c21021043c7",
        "cursor": {
          "ref": "67b0e38a-868c-4cc4-9b97-05c3791d451e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "913f48ea-e447-4be2-86c9-d2d838e8d4c1"
        },
        "item": {
          "id": "e6465cdf-a4b2-41d1-8163-1c21021043c7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b1fa6b0d-5e18-4e51-b4fe-b0e9fe3dd6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629f6baf-4383-4151-bdd0-60ed20428a69",
        "cursor": {
          "ref": "298053f3-0301-4045-955b-5a9eefdf57de",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99ea285d-4923-4763-afc7-a832af38386e"
        },
        "item": {
          "id": "629f6baf-4383-4151-bdd0-60ed20428a69",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4c62d891-c6e1-45cb-94f3-577d6aae6a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b17b59f-32bd-42e3-8111-68f6950326bf",
        "cursor": {
          "ref": "4f11fd9b-813a-4130-8d83-de8447f53ab8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "322936bc-fcc0-454a-ac1b-724e9639f9c0"
        },
        "item": {
          "id": "8b17b59f-32bd-42e3-8111-68f6950326bf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f9f775a4-efd5-4e5b-97e1-4a8aeb42d9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011ce400-70b9-4fc2-8418-15f34c1bee6e",
        "cursor": {
          "ref": "ec7e21e0-d187-4bdc-96a7-badda57c6004",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3cf5260e-4445-4e9f-88eb-566b4c7a992b"
        },
        "item": {
          "id": "011ce400-70b9-4fc2-8418-15f34c1bee6e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f3818828-d7ee-47a8-bb44-9b1ad08110ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5430da67-b162-4023-9454-676581ed1ca7",
        "cursor": {
          "ref": "1a6e7277-a307-4158-a77a-2900f17390a5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7fdc4278-3934-407a-a6b7-c27ff2b1a712"
        },
        "item": {
          "id": "5430da67-b162-4023-9454-676581ed1ca7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d87d51e7-6990-429f-811c-1020088de21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632bafa8-299f-4410-9ba7-5dfd0a0d3bfb",
        "cursor": {
          "ref": "07395b79-dae8-4f0c-8a47-a19245753edb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4014d499-6655-4d08-b2ad-0ef265d284a7"
        },
        "item": {
          "id": "632bafa8-299f-4410-9ba7-5dfd0a0d3bfb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7ce6e1c0-e3c5-4053-a1ac-a0ef5a13de6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b128c588-13b7-4ba2-aebe-fefe40c74417",
        "cursor": {
          "ref": "028e5985-d567-451d-8a77-0d93b96eb713",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "79ca8d22-43a1-4464-a30c-1bec66f917aa"
        },
        "item": {
          "id": "b128c588-13b7-4ba2-aebe-fefe40c74417",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7f5a9e0c-c808-404f-b5c3-b2f7367626eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca242b2-98ba-43d7-b7d6-761b2ffdbd4c",
        "cursor": {
          "ref": "1ee8d134-8ae1-428f-b53b-4f0851a9d937",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "90fed34d-93e7-4a43-a4bc-9ef2c2ab901e"
        },
        "item": {
          "id": "cca242b2-98ba-43d7-b7d6-761b2ffdbd4c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9f314d27-2879-4c22-95f8-a6892a3d9276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3666009-1331-4106-ba49-3e445c526198",
        "cursor": {
          "ref": "976ff6c1-e5f6-4621-8fa1-7c587005ae0f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "579bbc35-4386-41d9-b3d6-ca50526861db"
        },
        "item": {
          "id": "b3666009-1331-4106-ba49-3e445c526198",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "39cd7699-e895-49a9-a2f2-a20604fe7f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8978113-2f92-42ae-806f-5b1c8b3d5d2a",
        "cursor": {
          "ref": "f61eb45d-5818-4594-8c42-a18023762802",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8cec7f94-fb5b-4d4d-8af9-55b1a3040c18"
        },
        "item": {
          "id": "b8978113-2f92-42ae-806f-5b1c8b3d5d2a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "98624949-9382-4168-bbb1-7abd7fb64179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d555bb-f48e-4fec-aa9d-12a904f2ebbd",
        "cursor": {
          "ref": "03e88fef-3b39-4bad-897c-c78831193dcd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ce27091-086b-44d6-a609-eb620c8793c6"
        },
        "item": {
          "id": "68d555bb-f48e-4fec-aa9d-12a904f2ebbd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3d18f434-01eb-4dd7-af9b-591d0e625b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56f83b4-c809-4b31-b428-6411d3447fc3",
        "cursor": {
          "ref": "613cab51-4c9f-40af-9bc2-1793654416b0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7c759ed6-1af1-4e06-9ff4-c53707ed20f2"
        },
        "item": {
          "id": "f56f83b4-c809-4b31-b428-6411d3447fc3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f9fe9a8a-40b4-4d16-b717-9a7dfe05762a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffe783c-63d1-401f-85c0-0e98531f9d69",
        "cursor": {
          "ref": "c1c664fd-9e62-4482-a36b-a74357573614",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fdb15a7f-70bd-433c-9da6-a9a55ba4fe1f"
        },
        "item": {
          "id": "3ffe783c-63d1-401f-85c0-0e98531f9d69",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8f42299c-47da-4645-9c29-f9ae07d7798c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63820a71-a1ea-46b4-aa8e-3906f8c305ce",
        "cursor": {
          "ref": "bef9f371-8b0e-4de2-affe-81cf640981c5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "de977a85-c3ab-4d8f-a768-fc879d40ac46"
        },
        "item": {
          "id": "63820a71-a1ea-46b4-aa8e-3906f8c305ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "83fb3743-95c0-48c7-b5fc-a63cddce2942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f683a19-b794-4415-99ee-833d5dc13bf0",
        "cursor": {
          "ref": "d2614a53-40a7-4e75-8c78-eaa121443a79",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2b3be359-f13c-4c7f-8b45-db5da5f21ca4"
        },
        "item": {
          "id": "0f683a19-b794-4415-99ee-833d5dc13bf0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "40f5098b-6acc-4f06-a3af-b7155aabfb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11f4624-0fdb-4c83-acfb-0ba45e25c981",
        "cursor": {
          "ref": "96f55419-75cd-45b6-a85b-e11732a83c32",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "764789bf-ff9a-40d3-919d-a5e2e8811f65"
        },
        "item": {
          "id": "f11f4624-0fdb-4c83-acfb-0ba45e25c981",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f05c4616-36d2-4216-8f65-3c301a27be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174b0cf0-d295-4b84-81de-3ab339fbab73",
        "cursor": {
          "ref": "fa033a24-258e-45ac-ab22-065963e1f81d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "79184969-ec36-4522-b4ae-661346e5ee1f"
        },
        "item": {
          "id": "174b0cf0-d295-4b84-81de-3ab339fbab73",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "94d46d3a-d28a-4d31-beb4-fab910cbed1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a7318e-8bda-49d0-9fdb-1b677281a6bc",
        "cursor": {
          "ref": "da208477-51a7-4ec2-9a59-b08a8d2cfe5f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0d4619eb-4661-4a1f-83f4-4a9143a48c9f"
        },
        "item": {
          "id": "f3a7318e-8bda-49d0-9fdb-1b677281a6bc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "65751df7-d4ef-4031-ace3-ea1ebf599c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee61690-a5cf-49f2-993b-04bbea6c387a",
        "cursor": {
          "ref": "57c6ef7c-fb93-44da-9eac-24ec27d7f9f5",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "110517dc-fad0-44aa-b153-e0ad4ad1f555"
        },
        "item": {
          "id": "0ee61690-a5cf-49f2-993b-04bbea6c387a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e678c9eb-6217-4f21-b9e8-8308a6445c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a63b5e4-c778-4db0-8477-5b74d8e60f8c",
        "cursor": {
          "ref": "26118067-c666-4bb5-a621-b5d0e876cc21",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a5173967-dc6c-435a-a781-6330bbe7dd2e"
        },
        "item": {
          "id": "2a63b5e4-c778-4db0-8477-5b74d8e60f8c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1139b026-9ec5-411d-bdae-3568342caf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96a6802-a12c-4516-adbc-af54169570d0",
        "cursor": {
          "ref": "75fbe1ea-836c-4d9a-b8e8-584336ebbb98",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8276ea77-669a-45ca-8b69-92fb29b37bac"
        },
        "item": {
          "id": "b96a6802-a12c-4516-adbc-af54169570d0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6392d307-308c-47f5-8004-4d29cc6cdf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb60064-85f2-4f29-9111-5e2e57286959",
        "cursor": {
          "ref": "17c39255-ebfc-4a62-b8a2-7836230e15a7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "572e18c4-4d5d-43fd-9d92-b7e08ce638f5"
        },
        "item": {
          "id": "1fb60064-85f2-4f29-9111-5e2e57286959",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a2015562-00f3-47f9-b1be-b656f9fc2d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ff92fb-fae0-46bf-acdf-464fdd7f6dd5",
        "cursor": {
          "ref": "ee332a99-c80f-427c-b652-acad4039dab0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "44fde03b-8cc7-4df4-b04f-e571596bfbdd"
        },
        "item": {
          "id": "e0ff92fb-fae0-46bf-acdf-464fdd7f6dd5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "36f89cd9-ac41-4e52-9039-96be40b30e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e719035-9564-4610-9866-6f4b7cf71ce4",
        "cursor": {
          "ref": "42086fd1-3e32-451a-86fd-35a78fbf2496",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4b547cb1-6b51-47c0-b354-49a44c33052d"
        },
        "item": {
          "id": "1e719035-9564-4610-9866-6f4b7cf71ce4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "00cadc32-86c1-4ec7-a0fe-17bab8aec0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "56bd62e6-8ee3-4231-a7bd-ec9e5ea671d4",
        "cursor": {
          "ref": "4e940bae-6234-4d30-aabf-2277a9a22c6b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "361ade1c-3e82-4047-bd7c-ed5a82ccc131"
        },
        "item": {
          "id": "56bd62e6-8ee3-4231-a7bd-ec9e5ea671d4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "01b5030d-7c50-4e00-a647-d614d0231d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4e36f53d-7139-4b87-8e80-c19a83b3e4fe",
        "cursor": {
          "ref": "8a6990df-f8e0-42be-90f1-f5f4289e9c15",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "94eabfa3-2ccd-455a-937f-2067d50b07fe"
        },
        "item": {
          "id": "4e36f53d-7139-4b87-8e80-c19a83b3e4fe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "24eead25-42aa-4139-9af7-123650b9b7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fab50f42-4519-49c8-a921-15adbc96b403",
        "cursor": {
          "ref": "ad9ee27a-8490-48f3-806a-2b199b7d4458",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f1a57ca-44b7-486a-b8de-aa8d274fe080"
        },
        "item": {
          "id": "fab50f42-4519-49c8-a921-15adbc96b403",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "37ec8ea6-f7c2-4c32-a259-58c30d76af21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "89b8b2ff-f774-4aeb-ab83-c4821fd466c0",
        "cursor": {
          "ref": "3b918e48-a124-4ce2-9e65-0ebe285b97e7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "734bde63-bba5-4477-be5b-7ea34c99e16c"
        },
        "item": {
          "id": "89b8b2ff-f774-4aeb-ab83-c4821fd466c0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b032be42-34e4-464e-816b-b37103207c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b6ab1c2d-420c-4a5e-a24a-1220b76454c5",
        "cursor": {
          "ref": "ede66e83-8ae2-41ff-99ed-c72e636aeda7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "09bd2316-ca17-4160-9045-232f92cb7ba0"
        },
        "item": {
          "id": "b6ab1c2d-420c-4a5e-a24a-1220b76454c5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f6bdf300-5f50-417c-8532-a8b5331baada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a5ddf8c8-c56f-41ee-bc7f-76a0be77ec43",
        "cursor": {
          "ref": "60fa142a-454e-48b3-b554-5ef6ab3d2ee1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e6587e42-9928-495c-90ec-6065c18d652e"
        },
        "item": {
          "id": "a5ddf8c8-c56f-41ee-bc7f-76a0be77ec43",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f5614ca3-dd0f-4f78-971c-a68a0f73e052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "33436355-71a7-46ce-9f17-88344b4e77b9",
        "cursor": {
          "ref": "848f9cba-ac1f-48d9-9593-f27dd96818b9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ad1ec86e-09c2-48c6-b548-c603315f2b2e"
        },
        "item": {
          "id": "33436355-71a7-46ce-9f17-88344b4e77b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "90aae4ce-4d84-4fb5-95be-ae865458849c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260cea7f-9667-4cb1-b6c9-8e725b405339",
        "cursor": {
          "ref": "cae1f26b-a5ec-402b-9b32-97c5941aec71",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "494fb651-e86b-48aa-acce-2beb48cebe6e"
        },
        "item": {
          "id": "260cea7f-9667-4cb1-b6c9-8e725b405339",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "08785f72-156f-4a7d-9e01-fb173b19684d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc52e6d-8421-4731-be17-e39c5768e79d",
        "cursor": {
          "ref": "f5246099-bf41-495f-8b77-b54ee0d0adc1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1526b9eb-87b4-4784-b1d8-4315d1078aa0"
        },
        "item": {
          "id": "bbc52e6d-8421-4731-be17-e39c5768e79d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f9c4f67-e484-42d0-82d3-b7b834061e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b2b6f4-b53a-4858-a537-404cbac142e0",
        "cursor": {
          "ref": "a04f14c9-2980-4347-bb99-7c8d8b395ee6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6032d139-be8e-4ba6-8856-d52e55c6fd4c"
        },
        "item": {
          "id": "47b2b6f4-b53a-4858-a537-404cbac142e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2da0a9c2-77b9-49f1-ae8d-802bfa1116b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f0271c-29cd-4ae2-a7a7-18c2658a59a7",
        "cursor": {
          "ref": "1257a773-3fa1-4be6-b22e-d4d1ba3c2b0d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a8c82c95-b1ae-44ff-b897-6ef769bbfd06"
        },
        "item": {
          "id": "34f0271c-29cd-4ae2-a7a7-18c2658a59a7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "913a356d-fa7a-43d6-81b4-006605aba4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bd1634-767a-4f47-a126-2ee0593402f7",
        "cursor": {
          "ref": "e214aa8f-47e4-4942-aa3c-aa3af2426f2b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4b34512c-b946-41ec-949a-85a655c13ba9"
        },
        "item": {
          "id": "d9bd1634-767a-4f47-a126-2ee0593402f7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c7a840d8-0ad1-4843-ac8d-036fc94f3f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f38d77-2060-47dd-80ec-b6cb11730d07",
        "cursor": {
          "ref": "adf4c28d-aaf3-428b-96e5-b8e8c27cfc8b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3b626330-8740-4b78-8fb3-f0541231238c"
        },
        "item": {
          "id": "b7f38d77-2060-47dd-80ec-b6cb11730d07",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b1781a17-3056-42a7-9456-6c7f9db4c48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ee02a5-6926-42b8-bb51-e7271d285930",
        "cursor": {
          "ref": "9c2044a3-9b3b-479f-a783-ba9c3f60e42b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "67f62655-35f2-4241-8848-e194551ddd7e"
        },
        "item": {
          "id": "a2ee02a5-6926-42b8-bb51-e7271d285930",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c5edafca-8466-4b98-adfb-af71be9e981b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25918cc3-048a-4181-b76e-e9f7e3bd6eb2",
        "cursor": {
          "ref": "38b20ea0-0147-4667-b1f9-cd2be89335d8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e5084ed5-55a6-4266-8b93-9efaf93f34fe"
        },
        "item": {
          "id": "25918cc3-048a-4181-b76e-e9f7e3bd6eb2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d51920d-6d6b-4037-ab07-de60165cd1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8577311-31ae-43c9-8eac-0f12a0106edb",
        "cursor": {
          "ref": "2a1b3a65-413c-451a-a0e0-4a1062180565",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8d211785-65e9-4f97-9a05-37b4c8369323"
        },
        "item": {
          "id": "c8577311-31ae-43c9-8eac-0f12a0106edb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6e0e724b-844a-4107-a74a-dab3da2eb0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081c3b79-838a-4e11-957b-6be0c394cfb0",
        "cursor": {
          "ref": "322496c2-fae0-40d3-8c8c-d9f212368ae5",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8664c4bb-cc75-41c1-abd8-000035c7dab2"
        },
        "item": {
          "id": "081c3b79-838a-4e11-957b-6be0c394cfb0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "85a2a074-5328-47a8-b717-98686e27803e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c483b9-225e-4e29-8079-692790de2235",
        "cursor": {
          "ref": "3cbf5ad2-84fb-432b-9752-b48dcf3d39ab",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a1da4f09-34cc-4804-aa44-e8ec6ae29cb7"
        },
        "item": {
          "id": "00c483b9-225e-4e29-8079-692790de2235",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e902d46e-11f7-4c8f-a76c-064a94519117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ebdbe2-0f99-41bf-90b4-068a520d50f7",
        "cursor": {
          "ref": "d10e70fd-ab22-472b-a2b9-3e2a8510965b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9a746564-c030-4a5c-abef-25039029f7e0"
        },
        "item": {
          "id": "83ebdbe2-0f99-41bf-90b4-068a520d50f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fd947e7f-7102-46e3-8634-b8ef1f5e6fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45d9e75-cac6-48e1-a674-dbd4ff4b9709",
        "cursor": {
          "ref": "51fa9e54-65f4-4c04-a166-e05f43c7e6a7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8369214e-ec46-4d59-bc27-a34190875a2c"
        },
        "item": {
          "id": "d45d9e75-cac6-48e1-a674-dbd4ff4b9709",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7787c3a-bc76-44dc-9ef2-df22061842d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d06073d-af83-4622-9805-c421fb14194b",
        "cursor": {
          "ref": "04e8b4c8-4436-42c9-86b4-65c7ea15db48",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "eeb6a755-3c57-400b-b20a-b38812c5d025"
        },
        "item": {
          "id": "1d06073d-af83-4622-9805-c421fb14194b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c20deb2-79fd-4863-85e2-9887443390ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983a2c96-e96e-490e-9b27-10af946a2fbc",
        "cursor": {
          "ref": "c10f620b-14df-4bfe-9b71-4da8cc0ec191",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4a3b1c79-72a9-4b6d-a195-129690940cb3"
        },
        "item": {
          "id": "983a2c96-e96e-490e-9b27-10af946a2fbc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7723b123-aa9d-4865-b9fd-5108a636c4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450ee892-de15-461e-89b0-3131a4bb2a82",
        "cursor": {
          "ref": "f535cb5a-a6aa-4f8b-a70b-a625cdc735e6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bb9a46cd-77aa-47eb-bad2-606008e0c272"
        },
        "item": {
          "id": "450ee892-de15-461e-89b0-3131a4bb2a82",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ab7d495c-6abe-4415-96de-7ff3f14fafe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba02b18-ee82-4305-a94e-7385df29c1fa",
        "cursor": {
          "ref": "72b7307f-64e9-47ac-b7bc-28eda2137358",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cac5a07b-5d86-4d11-93ee-dd8a232a36ba"
        },
        "item": {
          "id": "2ba02b18-ee82-4305-a94e-7385df29c1fa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5817a975-e2b7-4467-b5cb-eb35d8fa8b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e41944-37ae-408d-a406-5404558251f5",
        "cursor": {
          "ref": "aebff7f6-70ca-4753-865a-963b067fbdf9",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d14b11bc-36f2-4bcb-a4f2-437e4a55bb9d"
        },
        "item": {
          "id": "25e41944-37ae-408d-a406-5404558251f5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6d59e9ea-ff28-4710-aa62-91cd022d66bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b0c207-8a97-4891-ba6f-8147bce8894d",
        "cursor": {
          "ref": "9cead064-1a4c-45df-9875-526f060ef472",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "044833e8-4af5-48a6-92a5-cd618186aeef"
        },
        "item": {
          "id": "05b0c207-8a97-4891-ba6f-8147bce8894d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "35dd083b-2a92-4f7e-98c6-d9c5d1aa263b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560f6148-c4cb-4727-ad80-06c47d4e8861",
        "cursor": {
          "ref": "ca9e4ea7-128d-48ee-8093-19e76d3da4c4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2d3ec69e-7d9e-4ef5-ab07-37839ce269b7"
        },
        "item": {
          "id": "560f6148-c4cb-4727-ad80-06c47d4e8861",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0c05ae23-5edc-429c-9979-14c29690a189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22331bd8-8a63-4ab4-95ce-c28bd6b9257c",
        "cursor": {
          "ref": "b99e9e25-2a07-47f4-9821-7f04b964284c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c16c7b65-b249-4c53-9920-cf8080f4a5f4"
        },
        "item": {
          "id": "22331bd8-8a63-4ab4-95ce-c28bd6b9257c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f241b7f0-c2ae-4541-acee-e12f430c40c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760ea4ec-02b8-468f-84f6-2aa5d0030a5a",
        "cursor": {
          "ref": "dc54776f-5fdf-48ef-a679-007ffa8ce2bd",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "29d93569-a28c-4ac5-926e-a4aac0e22ea3"
        },
        "item": {
          "id": "760ea4ec-02b8-468f-84f6-2aa5d0030a5a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "605eb38e-c390-40b6-95b0-40df67aa2c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bef093a-54fb-4619-bfcf-097803aa9de5",
        "cursor": {
          "ref": "2e7d5d48-0e2a-4979-8170-a1ab56fe14e9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0dc90bf4-049d-4097-b229-a802ca41557f"
        },
        "item": {
          "id": "9bef093a-54fb-4619-bfcf-097803aa9de5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f314f62-cc97-42c1-9988-054f11fefa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a435f75c-cbb0-457a-ba8a-39bb2e377fc5",
        "cursor": {
          "ref": "0448331f-a8eb-4b8e-b59f-d423f9b478a2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2933430c-4756-43b9-aa00-e71795dc698f"
        },
        "item": {
          "id": "a435f75c-cbb0-457a-ba8a-39bb2e377fc5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b10a4bf5-ab2d-411f-83b7-e048740afe99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b175a00-5c36-4203-a257-ab85c3dd2731",
        "cursor": {
          "ref": "3fb7203b-0933-48b9-b65f-11a0347b4c53",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "80cbeba5-b973-466b-a38d-cb1ea2126bcc"
        },
        "item": {
          "id": "3b175a00-5c36-4203-a257-ab85c3dd2731",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2ac2efa7-065c-4989-85dc-3c41ad70340c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3a23a7-c9ea-460c-857f-c9d3e168fa69",
        "cursor": {
          "ref": "5a10b42d-a75d-4036-8126-bef507d729e1",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ad8eb2ee-d359-46b3-a713-ad4ada99eb5c"
        },
        "item": {
          "id": "bd3a23a7-c9ea-460c-857f-c9d3e168fa69",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "12496c81-d7e1-4141-8223-b24424e45fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e98ed1b-9626-4e8e-886b-03c7e5dd49ba",
        "cursor": {
          "ref": "3bfe679d-c853-4733-838f-694c6f9b4314",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f3358853-582e-4f4a-8cea-d223b1f16d97"
        },
        "item": {
          "id": "5e98ed1b-9626-4e8e-886b-03c7e5dd49ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "64bbc593-cbdb-477c-bd33-6cc37b9fee97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4e228f-cc31-493c-9b06-531df8204d9b",
        "cursor": {
          "ref": "30c54b28-c95e-4c02-9c92-f2eb34674531",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "208e40ec-6a33-4251-9bd3-ec2f706ba56c"
        },
        "item": {
          "id": "0f4e228f-cc31-493c-9b06-531df8204d9b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4805ab47-44ac-439c-a560-53e21fe4b467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a66d67d-3edc-414c-9c35-99998ed67ec2",
        "cursor": {
          "ref": "a0470041-5eac-4e8c-99a1-9104631c9269",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5df02c6f-1467-420f-a753-6708a0be2df3"
        },
        "item": {
          "id": "9a66d67d-3edc-414c-9c35-99998ed67ec2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "750e789d-184c-4192-afe3-2f1f589b3643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed30597b-036a-4227-bfdf-e25a4b77403a",
        "cursor": {
          "ref": "b3257e2c-f1cc-4cfd-ae61-f45b595dc663",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "57fc6e24-6315-432b-9889-3b2c6240abf0"
        },
        "item": {
          "id": "ed30597b-036a-4227-bfdf-e25a4b77403a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "81ba1c00-5202-44ef-bd0e-2ec2787ac73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bef15c2-fe13-41b4-8394-5077e09e8b66",
        "cursor": {
          "ref": "7b42e0b1-26c2-4bb6-ac89-c83ff24cde89",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "627eb5c4-e241-4359-b260-61b33e5f6a6c"
        },
        "item": {
          "id": "6bef15c2-fe13-41b4-8394-5077e09e8b66",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4bdddd18-697f-47be-8c1c-0ef8d9f33c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ab82ce-fd38-4b34-bc17-4dead5feda86",
        "cursor": {
          "ref": "ab6789c7-6be5-4a35-8e30-3c4d9a99af3a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a9501a13-b410-4bc1-a3ee-9004c40157d0"
        },
        "item": {
          "id": "f3ab82ce-fd38-4b34-bc17-4dead5feda86",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dcd813e6-361b-431e-905f-b91392b36103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8af8e0a-9ae5-423f-ac02-e590080f1b8d",
        "cursor": {
          "ref": "01269ca2-9a67-4767-8de3-4a1176db9f6e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a7ba8fcd-7800-4bb0-aded-f469f5ac89c3"
        },
        "item": {
          "id": "b8af8e0a-9ae5-423f-ac02-e590080f1b8d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ade1527d-be27-4676-9e57-9deaa73ab21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db977ac9-a965-4c18-9f6f-721dc7f42d7f",
        "cursor": {
          "ref": "94b7f7c7-8542-440f-bb53-660f328a9a34",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8fe7cb2b-9d3d-43f3-86a5-c65b23e3337d"
        },
        "item": {
          "id": "db977ac9-a965-4c18-9f6f-721dc7f42d7f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8c0b83e7-0b23-4b48-abbd-3997c2aca1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179ffd9c-1a7a-456b-9827-d51fcb65d9c7",
        "cursor": {
          "ref": "dcfff4ee-ea35-4dd8-80ce-7d36bc881557",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7d469652-c165-4001-abae-625dfc9088d4"
        },
        "item": {
          "id": "179ffd9c-1a7a-456b-9827-d51fcb65d9c7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6957474e-ec0a-41c2-a250-4a6720b8dfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba2c22f-b95d-46ac-be81-79978ae1a985",
        "cursor": {
          "ref": "9d66920e-61a9-4503-b200-85f38e5c7654",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "98876b42-e662-41bd-a8bf-0b058bf669e2"
        },
        "item": {
          "id": "3ba2c22f-b95d-46ac-be81-79978ae1a985",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a8bfa06c-5419-4fc9-97c3-13167bc7a929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1659d6dd-43a6-4856-b637-55111f24055b",
        "cursor": {
          "ref": "b62947f8-d124-4485-b5ef-67d228cc3d47",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a90b8d20-2ccf-40f1-a8bb-f5631a8718b5"
        },
        "item": {
          "id": "1659d6dd-43a6-4856-b637-55111f24055b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "67083882-5e26-471a-8a1d-950c2326f460",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e133838d-eebc-4699-871b-cfbed52d8eb6",
        "cursor": {
          "ref": "de6ebf30-af90-4058-8e8f-0ce52fb7db90",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "90258af0-2ca4-4a2e-af44-acae596c0366"
        },
        "item": {
          "id": "e133838d-eebc-4699-871b-cfbed52d8eb6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "66b6ae86-f358-4c83-a60e-cb04ba23e296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8e4a8d-2db1-4fc1-8b69-9c60ba6ef38d",
        "cursor": {
          "ref": "604b6b1b-0600-4c1b-ab6a-b6ff546e2e62",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0b0a374f-5dc4-4cfa-9115-50f41b3beb49"
        },
        "item": {
          "id": "4d8e4a8d-2db1-4fc1-8b69-9c60ba6ef38d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "243d9940-d512-4e79-82c5-45f3cf59e9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7a06d9-057b-456b-b4cb-ed878501bfa1",
        "cursor": {
          "ref": "cbc8a0c5-b898-4bcf-9806-2eb9105bc652",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ed8a6f0e-2d04-424f-b45d-5562bac7dab8"
        },
        "item": {
          "id": "bf7a06d9-057b-456b-b4cb-ed878501bfa1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d0d3837b-649f-4a8e-bc58-0c35986a7663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2d3dfb-5e9e-4ddb-978a-963bc3b321d8",
        "cursor": {
          "ref": "12261cb5-0b8f-45e3-8a84-f4a0de413689",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "13ce6859-f772-486f-aac4-c9fefe8fadcc"
        },
        "item": {
          "id": "7c2d3dfb-5e9e-4ddb-978a-963bc3b321d8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a0edde7c-e06b-41b5-9e79-00b50bc732a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f7478c-6fa9-4ce1-b8c7-34816b6ae652",
        "cursor": {
          "ref": "114676d5-f334-46cc-b760-51770d21491b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6b8db425-b678-46af-977b-e72380371872"
        },
        "item": {
          "id": "97f7478c-6fa9-4ce1-b8c7-34816b6ae652",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "27f9f650-556a-4082-91de-1b7f0363b2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0fd42f-380f-4a7c-a9dc-9d4668009824",
        "cursor": {
          "ref": "2609f63b-e1a7-4a22-b1e8-0d41f8dcd834",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "02f9f7f2-2199-4f8e-a89a-bfe6c6a492e7"
        },
        "item": {
          "id": "5f0fd42f-380f-4a7c-a9dc-9d4668009824",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f11343ef-a0e9-446f-9c5b-d47161162133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e85b50-b03a-42e7-8245-72a2789f5b91",
        "cursor": {
          "ref": "a54702f1-874c-4605-bb1a-8eda453f13cc",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "edb48cb2-4650-4b98-abbb-e3eb0a285f5b"
        },
        "item": {
          "id": "81e85b50-b03a-42e7-8245-72a2789f5b91",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "998bfdd1-b007-4a42-b624-a7ca47924088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d2cbd2-b140-4296-af15-00de45f61b0c",
        "cursor": {
          "ref": "e4ea8b13-5dd1-4635-872f-c611c863ed55",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "776ac9de-0339-4982-9c67-53a678ac31ac"
        },
        "item": {
          "id": "22d2cbd2-b140-4296-af15-00de45f61b0c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ebaf572f-4ddf-4587-8371-4f18a01149e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531baa24-b3aa-45ae-8bc6-a6a523dcf333",
        "cursor": {
          "ref": "aaca6dd2-349c-44b6-bbc9-46f0eb41e284",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d50a8910-a582-4a85-9220-8f9c04e846fd"
        },
        "item": {
          "id": "531baa24-b3aa-45ae-8bc6-a6a523dcf333",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "08179e3b-b1fa-49b0-9143-b9a0bd97820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f21644-2486-445a-af37-90412c59a71c",
        "cursor": {
          "ref": "5a8efb17-b0cf-4beb-bcdc-a79628512d86",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "661a3220-448d-4273-b397-cf3c5f6f1a07"
        },
        "item": {
          "id": "13f21644-2486-445a-af37-90412c59a71c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "884a74e5-03b2-45e2-8972-3b2ef4ad5ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351e885a-4a41-4dcf-8910-cf675500bd4c",
        "cursor": {
          "ref": "6d1ded73-1180-4a9e-9206-ea2a93bcdd5a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c803d829-421b-4242-9ac2-37f97f277b4d"
        },
        "item": {
          "id": "351e885a-4a41-4dcf-8910-cf675500bd4c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b81774f9-dedf-4dee-b24d-b8fff2499c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbc8989-7a46-47b3-a193-2c431b01db7b",
        "cursor": {
          "ref": "0b121761-7889-497b-a21b-76598534d975",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "824e90c8-1d49-452c-a1a7-de97afb16169"
        },
        "item": {
          "id": "ffbc8989-7a46-47b3-a193-2c431b01db7b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7ea549d0-5ce4-40c3-9c87-fc37085dbe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e348e345-da85-4c4e-9873-17a0cbba194b",
        "cursor": {
          "ref": "e2161d36-4ebd-4aa7-ad81-5c8f7b6b57f3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "28241713-f772-4d04-8404-5110a6493cfd"
        },
        "item": {
          "id": "e348e345-da85-4c4e-9873-17a0cbba194b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "85f9ebb3-8768-415d-9731-39f7e3f07122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7a2e5e-a3fe-416a-a817-cff6f117cff1",
        "cursor": {
          "ref": "6fe4bac0-3d78-46ee-921e-44c25920460d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "45893783-eae2-403a-8028-fa69b9293974"
        },
        "item": {
          "id": "1e7a2e5e-a3fe-416a-a817-cff6f117cff1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c5809ef1-ebc6-423a-9baa-961cb9599363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d55ac0-82fc-4d40-9f5c-5ee8fe2094b5",
        "cursor": {
          "ref": "02c0bdd3-26e1-4a03-91ba-db5cc296cf01",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dd91564c-4625-4220-af89-b22a5740d4d7"
        },
        "item": {
          "id": "b7d55ac0-82fc-4d40-9f5c-5ee8fe2094b5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7c088860-1e6b-4a9d-830a-4639235dc5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26236597-1ec9-48df-a458-490bb5003329",
        "cursor": {
          "ref": "c9026e62-0ca8-4ab9-ab78-61d330311046",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f0bc15c0-9b9d-4cac-b180-ef9934c89a80"
        },
        "item": {
          "id": "26236597-1ec9-48df-a458-490bb5003329",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a69ff9e5-a01c-4608-99a9-561f7511f024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25255b10-c1be-4cfc-aed2-e40cc7e6cc76",
        "cursor": {
          "ref": "0513aeb7-c9d1-47d3-9930-c90e7c9edf86",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6db3e3c3-288b-4c9f-9459-093f03c92810"
        },
        "item": {
          "id": "25255b10-c1be-4cfc-aed2-e40cc7e6cc76",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fd86a75d-a889-42a7-b34f-f57e2512eef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5788c8-d32d-4ea2-805b-a690694ebd1e",
        "cursor": {
          "ref": "9e2bc3fa-1811-4eb4-8329-108c0e759d2c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "68c2eceb-dbc9-4a9c-882f-698f2223bc0f"
        },
        "item": {
          "id": "dd5788c8-d32d-4ea2-805b-a690694ebd1e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cef76fc1-ba92-47ce-a8a3-758c8b0b3398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9128dace-7c11-4416-b41d-20fbb7a04800",
        "cursor": {
          "ref": "d46f20cb-9857-4689-be26-bd59842872a2",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b6c25364-54ea-4ece-97f6-3ea486655284"
        },
        "item": {
          "id": "9128dace-7c11-4416-b41d-20fbb7a04800",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "83cb6647-dfbc-469f-82f8-40593e352fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7ebb50-1c62-4c9e-b41f-571eccf897e8",
        "cursor": {
          "ref": "11628ace-b09e-4c64-b6d1-b881706bfde9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b2637f4c-87a8-46fb-ad96-e0dff24a5ddb"
        },
        "item": {
          "id": "6b7ebb50-1c62-4c9e-b41f-571eccf897e8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8063ed62-3f25-4f6a-a15e-74e1147d4149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4a74c9-885b-46a5-a708-a2e01c8df45c",
        "cursor": {
          "ref": "a96b0d21-0376-4997-8bc5-fa22ee81cadc",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "851f1585-f1ba-425c-9ddb-d48ee3159be5"
        },
        "item": {
          "id": "7c4a74c9-885b-46a5-a708-a2e01c8df45c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ca0fc412-da68-4d91-b2ef-47cea85ffd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7750564a-68d7-464e-a82b-bbdd07ce8c45",
        "cursor": {
          "ref": "d7d583f7-b40e-401f-ab10-e09dfb2c8dd5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "29dde1a7-7e8c-4826-b00e-f2f24d65c74f"
        },
        "item": {
          "id": "7750564a-68d7-464e-a82b-bbdd07ce8c45",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ca3a588d-01b0-4e24-a822-6d554805a8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7212e822-c138-427c-b928-b5cae524ac39",
        "cursor": {
          "ref": "11926325-b541-409f-809c-fcb132ce8f39",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "17c91f10-514a-4786-a51a-3d0c7ed089d1"
        },
        "item": {
          "id": "7212e822-c138-427c-b928-b5cae524ac39",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0c7d7b65-b78b-4cca-ac71-3f3d54f27ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ea4ab9-4590-4764-861b-2822767e77f4",
        "cursor": {
          "ref": "27c2affb-fd21-4703-913d-823f25b5e6ff",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "26bd2894-8e63-44f9-8b76-931fb5c72b67"
        },
        "item": {
          "id": "d0ea4ab9-4590-4764-861b-2822767e77f4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "886d22bc-845f-429b-b2bd-af259b208703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414cc7d8-c6b9-489a-9d37-f5cfeda57658",
        "cursor": {
          "ref": "9e91e1f7-1197-4aea-a830-4d5f73a4a095",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "894db12c-c785-4a13-b30c-47230dc55c13"
        },
        "item": {
          "id": "414cc7d8-c6b9-489a-9d37-f5cfeda57658",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "46708b06-d531-4812-bb62-c54149653ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311877db-57a7-435b-9c64-ed00c6b61b2b",
        "cursor": {
          "ref": "c89dc15c-509a-44a8-a2f8-722aa9348bb8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dc17581a-dbb2-466b-bd86-b2107495051a"
        },
        "item": {
          "id": "311877db-57a7-435b-9c64-ed00c6b61b2b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e6023dee-b2f0-441e-a29b-13dfd201e1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8527edb9-8dc7-4117-913e-bddacfd6df08",
        "cursor": {
          "ref": "6d6c9148-4754-4afd-904d-2ddde6bc8cdb",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dd4dc2d6-5aa9-4599-a457-1f29570aa1b0"
        },
        "item": {
          "id": "8527edb9-8dc7-4117-913e-bddacfd6df08",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3f9702b4-96d3-497d-857d-d2f25101e035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d166bb-4395-477f-8137-033bfa864154",
        "cursor": {
          "ref": "a0d36b0e-45ac-4c07-a1c0-1643d8b33d30",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8db27a34-d9b4-4751-abba-8744d14ff6c5"
        },
        "item": {
          "id": "c6d166bb-4395-477f-8137-033bfa864154",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "45c00460-4a66-4e7a-879d-e2eae0867f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd41cdd-b8a0-4522-a5bf-fe8cbdcb0d56",
        "cursor": {
          "ref": "26754553-45da-44c6-a284-1ef73ce9b50b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c6127f47-4869-4102-959c-7fae4584ec37"
        },
        "item": {
          "id": "8dd41cdd-b8a0-4522-a5bf-fe8cbdcb0d56",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "45668229-a35f-463d-b884-05937df25f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50570205-afa7-47bf-91cb-c2e97df10a80",
        "cursor": {
          "ref": "10c772d8-36ae-4bb6-9755-99ddde831f78",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2cf09285-72d0-40c1-a668-572c1e605826"
        },
        "item": {
          "id": "50570205-afa7-47bf-91cb-c2e97df10a80",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6676030e-a10b-41d8-8c80-8f886a74aec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727b2ea6-dbb2-4e88-931b-7ef9def81bfe",
        "cursor": {
          "ref": "67e414f5-920d-4a42-90c4-315eeb56b911",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "31053d68-66e0-492e-8ccb-54f26ec3f8e7"
        },
        "item": {
          "id": "727b2ea6-dbb2-4e88-931b-7ef9def81bfe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "43ff0a2e-dd9a-4698-95b2-1775b3a4d56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f16786-0168-476c-803f-68384543657c",
        "cursor": {
          "ref": "75f5386a-c018-464a-9fc1-402890b5fce9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f95fc4f2-050a-4897-a00a-e4a1d68b6a75"
        },
        "item": {
          "id": "b7f16786-0168-476c-803f-68384543657c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dd5e80f6-ed2a-4970-99c6-96e667871fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7634d9b-457d-4f30-be57-8fae1bec9735",
        "cursor": {
          "ref": "87acd1c4-1d7f-405b-9fb8-1dbf6a57cf18",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dd31373f-3ca9-4885-99af-3c307f793047"
        },
        "item": {
          "id": "d7634d9b-457d-4f30-be57-8fae1bec9735",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ad6591c4-cae9-4f48-883c-da3db1cb8b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66c16ba-5f54-4117-b086-c580d56a96fc",
        "cursor": {
          "ref": "b4939d87-422f-4f29-ad0d-4a11cc75d8d2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1bb67c7d-593b-465a-931e-b8e452341940"
        },
        "item": {
          "id": "a66c16ba-5f54-4117-b086-c580d56a96fc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "50eeb12e-489e-4c10-8cb1-9cb1e25b02f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee63eeb-6875-4aba-bfe6-83d8fbe34e41",
        "cursor": {
          "ref": "b0c473d6-8269-4e7b-a24f-5512d68fc0c2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4a74ea06-8770-4588-afb4-d1313e196631"
        },
        "item": {
          "id": "dee63eeb-6875-4aba-bfe6-83d8fbe34e41",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a4a051e3-f761-445e-b451-9a655513735a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e20df8-40bd-4d01-af22-8ffdbf3644d8",
        "cursor": {
          "ref": "a2196ef8-0e93-4fc7-8545-af177c738628",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7e4db94f-e3e9-4360-8ec4-dc95a68d4d28"
        },
        "item": {
          "id": "e0e20df8-40bd-4d01-af22-8ffdbf3644d8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6301c4e0-963e-4e52-9e3e-fc63b1b8bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02fc4ef-104d-4201-bf5c-ed2c54a9d2e7",
        "cursor": {
          "ref": "2e04250e-dbdb-433e-9061-933f4c2c17c0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8a172036-0ba4-45da-b147-6b55775cce49"
        },
        "item": {
          "id": "f02fc4ef-104d-4201-bf5c-ed2c54a9d2e7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "78e69c48-4dad-47b4-85e1-37c6f4d20842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5700fed6-1539-48f9-8b28-1d0a5819df4d",
        "cursor": {
          "ref": "8fde656d-e279-4b3e-a657-13032d6c4117",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "771b1e40-14bf-4a1e-a8da-e9f9e2562567"
        },
        "item": {
          "id": "5700fed6-1539-48f9-8b28-1d0a5819df4d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "df8824ba-5867-4e22-9979-5206dfdd2a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78276fd0-1daa-40e6-a5c4-8c1c95f765ac",
        "cursor": {
          "ref": "1a3eda47-8112-46be-be33-00e0a5d26aef",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8fbdd7f5-6b0b-456b-ab70-815e72385228"
        },
        "item": {
          "id": "78276fd0-1daa-40e6-a5c4-8c1c95f765ac",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cef1b05c-d72c-404a-bcb0-834ce51c982f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb30833-0b32-456a-aa05-f85ef93de6a0",
        "cursor": {
          "ref": "bb9a4e5a-b025-42f1-b0d5-44c09b2ed00e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8e08c017-13a6-486a-89f3-ba9f9c5ce9fe"
        },
        "item": {
          "id": "beb30833-0b32-456a-aa05-f85ef93de6a0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dad01d0c-22c6-41ac-babf-ba028b034421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ad436d-112a-40b8-bc0e-ddb10be413d5",
        "cursor": {
          "ref": "56f33f64-4a00-42bc-a7cf-7c675c1454ea",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "adaba04b-c50c-4d36-b560-a268410f0144"
        },
        "item": {
          "id": "70ad436d-112a-40b8-bc0e-ddb10be413d5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9336e6b2-f18a-427c-afec-6918cbada49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d56344-27f1-4e2b-bdd6-e9bce11246f8",
        "cursor": {
          "ref": "e996aa75-390c-4178-93aa-6e8c885b851a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7f944ed1-cc83-4cf3-bb4d-e449cc186e92"
        },
        "item": {
          "id": "33d56344-27f1-4e2b-bdd6-e9bce11246f8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6474587d-b4b1-4350-a128-9674d8a9833e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f212da1-5759-43d0-a2af-586c31105bda",
        "cursor": {
          "ref": "ff809389-a968-4077-9346-f779aca1584b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ef642f6c-478e-4563-a3af-f8218be0012a"
        },
        "item": {
          "id": "9f212da1-5759-43d0-a2af-586c31105bda",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "076aac70-0107-4f7b-8775-29bfe1e5a48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d06e72-a31a-40d9-a368-0a6933c35843",
        "cursor": {
          "ref": "2f435cfe-733d-4d66-bfcb-50854f4d719e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "018f5f7f-64c8-4839-83d1-91f116fb34a2"
        },
        "item": {
          "id": "f9d06e72-a31a-40d9-a368-0a6933c35843",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "913833de-5459-4322-8dca-043b8791bf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8ba26e-3ef5-4b0c-81c4-93bcb74c0e6d",
        "cursor": {
          "ref": "efbf644e-8e56-4186-8569-5a6e49a4a6d4",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9e6f3e4b-c1e8-4d7d-80c9-4a9d861f3c00"
        },
        "item": {
          "id": "fb8ba26e-3ef5-4b0c-81c4-93bcb74c0e6d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fdd78748-c5cc-4424-8233-6ea34c5fa9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56889bd-be20-4f4b-b48f-e4279e308b60",
        "cursor": {
          "ref": "1092ab3d-e484-491d-9980-d997a48c5714",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2db11051-a433-4821-bb8e-6d59a31d63ae"
        },
        "item": {
          "id": "b56889bd-be20-4f4b-b48f-e4279e308b60",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e4f82a5a-4f37-4d02-9d14-070f5c5bf955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0285c21e-8645-45ad-9499-ab1e63bac2f4",
        "cursor": {
          "ref": "410c342e-ad35-48af-8d17-af02f1237053",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "df868be4-b7b7-4809-b3ef-32fd4eb95855"
        },
        "item": {
          "id": "0285c21e-8645-45ad-9499-ab1e63bac2f4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "716f88e0-7d38-4695-b640-feb899c91c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731df35f-2cd4-4e22-98e7-aa15a24f8b2e",
        "cursor": {
          "ref": "a0dd6dc4-ee09-43b2-bc46-625f2f844280",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "85fe8828-b076-4335-b935-d2536737ff0d"
        },
        "item": {
          "id": "731df35f-2cd4-4e22-98e7-aa15a24f8b2e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "63f63a34-8864-4c44-8874-58a759f0a481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad67670b-53bc-4eaf-99fb-ac04e7abccdb",
        "cursor": {
          "ref": "57309214-ce01-49a1-abbb-29eee25ba8e7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "114d702d-e3ed-4dc6-8612-df7a4e1be102"
        },
        "item": {
          "id": "ad67670b-53bc-4eaf-99fb-ac04e7abccdb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "08fd8899-260f-4923-a566-d307bcd92f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969b7141-b021-450b-bccd-53026dde12f9",
        "cursor": {
          "ref": "4c82df49-0b44-4082-9350-3894353d9cc5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9e0e250c-32ca-4327-9615-e286cfcebca3"
        },
        "item": {
          "id": "969b7141-b021-450b-bccd-53026dde12f9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7b6aba1b-ca15-4923-8b71-dac8ca1877c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b26554-dc9a-43ba-b89e-e4668e00091b",
        "cursor": {
          "ref": "99aca248-d40d-4c36-a4da-ae354fe13c29",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "86293c4e-b038-4cb0-9aac-ba11f9611bfc"
        },
        "item": {
          "id": "c2b26554-dc9a-43ba-b89e-e4668e00091b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a07d2bfa-5b54-45ef-90b7-e52664744dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d348f4a-6010-4804-9eab-81122348ba05",
        "cursor": {
          "ref": "2c8ff00b-52be-43bd-b93e-338fe6a7c5d4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7df3a8ee-d248-431b-b24b-af467d69e8d8"
        },
        "item": {
          "id": "3d348f4a-6010-4804-9eab-81122348ba05",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e41f62dc-b6aa-4b98-a37c-15956881b9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3a35d6-1e3d-4f0d-9c71-97cac74778e7",
        "cursor": {
          "ref": "905ef1e2-5e20-4d1c-a9f3-67460d472375",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fbc5858a-a369-46be-9c77-3f5690d04524"
        },
        "item": {
          "id": "8a3a35d6-1e3d-4f0d-9c71-97cac74778e7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0fe11bbc-c562-43b7-b41f-935e76fc8c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34bc417-fe64-4f62-a526-e50f1288e555",
        "cursor": {
          "ref": "cb103c4a-72ed-4238-b405-225ce7c873ca",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3c9c395e-231d-44df-82f9-9affbd550f4f"
        },
        "item": {
          "id": "a34bc417-fe64-4f62-a526-e50f1288e555",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6a0d1d85-cdd5-499e-a60f-cf06b00d84a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d7498a-244d-409c-b444-91c593ee1a81",
        "cursor": {
          "ref": "06ec438f-c358-4053-9318-64126b2000e7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b5673d5a-90cc-4216-adda-15ec89ca4516"
        },
        "item": {
          "id": "85d7498a-244d-409c-b444-91c593ee1a81",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dccde6f1-ca4b-4242-8a84-d5cdd2918e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328b236b-509a-4c14-aa88-862643280338",
        "cursor": {
          "ref": "784598b0-e97b-40a5-9185-bfe1ae5c8834",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "14f9fec7-b146-4a97-bf66-ee65a2e2f18a"
        },
        "item": {
          "id": "328b236b-509a-4c14-aa88-862643280338",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "51bc0cd8-161d-45b3-9e91-cb4b2a51e873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ce805c-057d-44fe-ada9-f2c7465fb984",
        "cursor": {
          "ref": "8a197421-4d91-46c1-af66-36e5a299ea66",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2db0d0f0-4f63-4f96-a6c4-d0c02f39874a"
        },
        "item": {
          "id": "b4ce805c-057d-44fe-ada9-f2c7465fb984",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6e7b5e1f-bdd0-4cec-955d-496f5b890fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253f7e8b-d6fa-401b-a9fc-6dc89337a34c",
        "cursor": {
          "ref": "6f987b21-7160-4dd8-ae9d-d951d68162d4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e3fd16fe-9900-434f-b5f6-c269fa14ecfd"
        },
        "item": {
          "id": "253f7e8b-d6fa-401b-a9fc-6dc89337a34c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e4231288-0d50-4c12-be27-5adf5e6722b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52b1989-7bca-409d-b0e5-5e9389fa45d0",
        "cursor": {
          "ref": "b6701b19-93bb-48a3-bd44-3c9d52bdb659",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0d7ce4a4-62b2-43b7-aab1-6f2826ece48f"
        },
        "item": {
          "id": "a52b1989-7bca-409d-b0e5-5e9389fa45d0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "97657715-b1f0-4a94-a148-fb0ccaff20e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e478306-ce00-41f4-b3c6-78c2c1d06097",
        "cursor": {
          "ref": "cbfb8295-6d92-42bd-81ab-0f4b703657f1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0a26876d-6ec9-4cb8-825d-aa916059c900"
        },
        "item": {
          "id": "5e478306-ce00-41f4-b3c6-78c2c1d06097",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a43f0cef-71ca-4321-b38a-a5c7d625a299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f2af75-45f2-4630-8623-f46c90987123",
        "cursor": {
          "ref": "93610692-b57d-4de3-b999-7f75487f47fb",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c180c597-4d69-4815-be78-1666bebec9ee"
        },
        "item": {
          "id": "01f2af75-45f2-4630-8623-f46c90987123",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "feecc739-2eca-4575-819f-72d95b62a976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f23f389-c915-42f6-b757-bb07c942a518",
        "cursor": {
          "ref": "4d2f716d-363c-4530-9b52-20ad364b10fe",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "771fbd0e-4784-4174-82c7-c47040c3234c"
        },
        "item": {
          "id": "8f23f389-c915-42f6-b757-bb07c942a518",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "feac1a99-7d41-47a1-84d8-c1397a3cca90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07094c80-7167-4410-b7a6-05d451afcb4d",
        "cursor": {
          "ref": "07b7e857-9ea6-4a30-b2df-fa59d222bc63",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "da397658-80d3-4795-9075-5cea001d6edd"
        },
        "item": {
          "id": "07094c80-7167-4410-b7a6-05d451afcb4d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "acf27ac0-eead-4b38-becd-4c8b7421b9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094e7ab4-f394-49af-8552-723c88251db5",
        "cursor": {
          "ref": "c1962d25-5389-45ca-9faf-82adb353cdff",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e89751a8-7646-4972-9ad2-f5346353e1a0"
        },
        "item": {
          "id": "094e7ab4-f394-49af-8552-723c88251db5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9956cf59-ee54-4706-9543-b42bbdeeea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594be7b5-dce2-4031-a0a2-a05e145cd02e",
        "cursor": {
          "ref": "e6ec4d39-c7c3-4c32-b71b-e05a96b0f24e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "86714601-f215-4271-a9d1-3b65170232da"
        },
        "item": {
          "id": "594be7b5-dce2-4031-a0a2-a05e145cd02e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "76b49b10-a066-4e82-9c74-c720a2436e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb98e2f3-06cf-437e-97a6-cf84e04b74c7",
        "cursor": {
          "ref": "3a629ffb-d779-4041-bcdc-0a25b90e995b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9b3f777a-c76f-47b5-aa89-d1393c588579"
        },
        "item": {
          "id": "cb98e2f3-06cf-437e-97a6-cf84e04b74c7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "38768b5e-cb41-4411-9a81-50cfc4b6f132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd4f84e-1e85-467e-92bd-c7310d56f6ab",
        "cursor": {
          "ref": "4772851f-27e2-40c2-bf38-ff92cce58d7b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b92e58eb-21a8-495e-aa47-72d1946f4a04"
        },
        "item": {
          "id": "9fd4f84e-1e85-467e-92bd-c7310d56f6ab",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "074b41dd-ce1d-4020-a3af-0b0bcf611881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2685614b-ebc3-496a-95af-d9d9a09b1d8d",
        "cursor": {
          "ref": "5b9ca384-6b25-4eed-aee0-51d8c8ba75c2",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2a515554-1eb4-4882-bd8b-7e75258e576e"
        },
        "item": {
          "id": "2685614b-ebc3-496a-95af-d9d9a09b1d8d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "831381d3-5ef1-4eca-a18a-2a959da81688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55eb0205-bbcf-4fb6-88b5-d1b4489db69a",
        "cursor": {
          "ref": "4871fa4b-6133-4316-b5ac-baee2a0dd37f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0f60577d-0ddd-4af1-9057-99e14ad0d62e"
        },
        "item": {
          "id": "55eb0205-bbcf-4fb6-88b5-d1b4489db69a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8c71cdbe-1396-4d30-a3cf-390627440cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e736bb24-1d0b-4aa9-885b-bca40ed08711",
        "cursor": {
          "ref": "b28dd9aa-c68f-4afa-957f-6ce2826f203b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6e147b21-ad4a-4f77-a917-c9f40932e600"
        },
        "item": {
          "id": "e736bb24-1d0b-4aa9-885b-bca40ed08711",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "86e01a23-157b-49d6-b204-4bd926864ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1af0c5e-9680-481a-b839-15f0ac861069",
        "cursor": {
          "ref": "e1b6eac3-b147-4cdf-989c-b8a00e701d4f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0ce42d87-4118-4128-9862-eea262544bfd"
        },
        "item": {
          "id": "d1af0c5e-9680-481a-b839-15f0ac861069",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "087f7bc5-ee11-4bfb-aaa1-0305c0cb61dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e002ca-6e71-490d-9db9-421800f18de6",
        "cursor": {
          "ref": "e75a42b9-2c95-42ab-88c1-553c88e35ab4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0d43fa18-069d-4cf4-9e5e-f61ec13fabea"
        },
        "item": {
          "id": "a2e002ca-6e71-490d-9db9-421800f18de6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "88129bbc-c8a2-4723-9f0a-eab39c50ea5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e4a5ca-c923-401c-b3f2-773aba9f9fb2",
        "cursor": {
          "ref": "18b9413b-bce9-497e-81af-4f531d01a953",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7850d309-184e-4972-b5a7-9254b18cdb22"
        },
        "item": {
          "id": "c2e4a5ca-c923-401c-b3f2-773aba9f9fb2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9e0f74de-11e3-4118-96b0-671f42c6d304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9041502-0de4-43d9-b98d-7930e0e24ed5",
        "cursor": {
          "ref": "db385812-ffde-40e5-be55-34b961b01e49",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dd15b6df-ebbe-42f7-bb1d-8d4dc871ae62"
        },
        "item": {
          "id": "a9041502-0de4-43d9-b98d-7930e0e24ed5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "63f5a086-31b7-4fa7-a2c3-7d93dc3ecb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edae33c-8025-4bd6-82da-f5abd5eb1876",
        "cursor": {
          "ref": "2c5a2971-a8df-460e-9738-cacbe9f3d646",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3b017808-eaf1-4bf5-91de-662f94791634"
        },
        "item": {
          "id": "9edae33c-8025-4bd6-82da-f5abd5eb1876",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "076fa359-bee4-4c46-99ae-200c0125b4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752e6744-db4f-40e9-a4c6-f37facd1a1be",
        "cursor": {
          "ref": "0817ffea-4488-44cd-af15-2714bafbca77",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d5b65086-0f53-47aa-94ad-df3334094595"
        },
        "item": {
          "id": "752e6744-db4f-40e9-a4c6-f37facd1a1be",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5d90dc5b-e11b-40da-9673-1c4bf0de0f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399b99cc-c5ed-4923-9225-421341b2a6ac",
        "cursor": {
          "ref": "fc39bc32-514b-4ad8-aa5e-de8d1577a5d6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d8108954-933c-4d1b-96bf-3a3419ddaabc"
        },
        "item": {
          "id": "399b99cc-c5ed-4923-9225-421341b2a6ac",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "56841c0e-3d88-4c8b-b801-787edbd2eeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d09def9-9962-41a6-bb5e-42ab9e3c9883",
        "cursor": {
          "ref": "738a2140-4ae9-4af7-9e12-31dbd0aaff9c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "068dda5c-0b81-438c-ac71-c056c3c1ce41"
        },
        "item": {
          "id": "1d09def9-9962-41a6-bb5e-42ab9e3c9883",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "87246fa6-536f-43f8-a958-21eb4187f5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97393e90-9c01-4d2e-b208-60a736e5d46b",
        "cursor": {
          "ref": "b1703cd6-2483-4954-8231-99555d475547",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7493b6bf-de5d-4a10-968e-cf4a5eaa05ac"
        },
        "item": {
          "id": "97393e90-9c01-4d2e-b208-60a736e5d46b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "602048b4-e7ed-4b83-a0e0-2e7886061064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa99bb8-09d9-4634-a35d-cc0c103c417b",
        "cursor": {
          "ref": "71ee0d29-433a-4841-8da6-d74997916693",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "354c8e61-ef57-4ef8-ac69-80608a5dbed9"
        },
        "item": {
          "id": "aaa99bb8-09d9-4634-a35d-cc0c103c417b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8de26bdd-643c-4da7-bea5-0787a059dade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ac19d1-65a3-4f38-b83c-17154a7d4125",
        "cursor": {
          "ref": "707aec9c-afce-4313-a4fa-b9ba04e4ffd3",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0de33a49-244e-42c2-9ab0-034acc8139c6"
        },
        "item": {
          "id": "06ac19d1-65a3-4f38-b83c-17154a7d4125",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ca4424b6-3ed7-4ada-ab30-73b0f039f533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b892e933-269e-4f18-b6c9-514a1ab6cda1",
        "cursor": {
          "ref": "9afcef33-150f-43fd-97ef-4a988f7b84dd",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3bbf3989-fac7-427b-8876-97c71aa8d067"
        },
        "item": {
          "id": "b892e933-269e-4f18-b6c9-514a1ab6cda1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "970769fe-4d3a-4cb5-8884-e4a7866d82b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11b9450-81ff-4527-8954-941f459dd0ee",
        "cursor": {
          "ref": "8e744223-dd46-4ea1-9004-26aad890a111",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d416b4e1-4e91-4eb8-8e43-b2c75ac07c92"
        },
        "item": {
          "id": "c11b9450-81ff-4527-8954-941f459dd0ee",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1a4894eb-6298-49af-9aed-6d4c6a8a7b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21050fca-b2f2-4c15-a623-79bc726dbfa8",
        "cursor": {
          "ref": "d857401f-752d-4557-bb6f-19c9d878615c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4ad3698e-0fb0-4ad7-b8d8-08c1eb06fdad"
        },
        "item": {
          "id": "21050fca-b2f2-4c15-a623-79bc726dbfa8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "573cf5bc-b39c-40ee-b3b2-35dd898c158a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adab607-ad96-471c-9366-2277f1ec77dd",
        "cursor": {
          "ref": "2cdc0102-b91a-4fbb-badc-118d84063c9d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d51d1976-57ce-4403-ad4a-a8410b29bf5f"
        },
        "item": {
          "id": "2adab607-ad96-471c-9366-2277f1ec77dd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "71b39906-bd14-4575-b2b0-4259d8bc0cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef298d1a-e961-4521-abb6-8d2c48e3fb7d",
        "cursor": {
          "ref": "c311ff38-05e0-4e79-a829-8cea4b97e585",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c092193a-9a69-4f8d-985a-32364d1b3e48"
        },
        "item": {
          "id": "ef298d1a-e961-4521-abb6-8d2c48e3fb7d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f15e328e-78ad-4a38-b78a-c079aa1fb15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387c632f-b8fd-48a9-818f-7f8e20f4143b",
        "cursor": {
          "ref": "5992ae5c-b91b-46f6-93a5-d1e8312c4d29",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7eefd2ec-e7dd-487b-87ba-8fcfc0f0d329"
        },
        "item": {
          "id": "387c632f-b8fd-48a9-818f-7f8e20f4143b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "052b2b6f-0f84-4eed-8213-a148bc35e465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc4c53c-8b27-4106-ae25-88619de0ec58",
        "cursor": {
          "ref": "dc8f326a-5535-468e-ad74-00a6b5b819d2",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e47bac0b-bdd7-4361-87e5-ec871588d911"
        },
        "item": {
          "id": "ffc4c53c-8b27-4106-ae25-88619de0ec58",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0fb8ecd5-2c4c-4901-b72d-3ed726db23c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023787ef-6975-46ca-a891-ff9e73b5211b",
        "cursor": {
          "ref": "dc0ece66-7ef9-4730-badc-9e70be62fe4b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0c074938-d1fa-441d-a4bf-8c942917c43a"
        },
        "item": {
          "id": "023787ef-6975-46ca-a891-ff9e73b5211b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3634262d-180b-4e5d-a4e9-76197fe5d330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d191684b-5ae4-4784-8f3d-35fcff1f7ed2",
        "cursor": {
          "ref": "40045afb-2f68-40d5-9a36-812ea35090ab",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "993df6bb-1817-425f-bdb6-8a886e330a35"
        },
        "item": {
          "id": "d191684b-5ae4-4784-8f3d-35fcff1f7ed2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fb1aa335-dd9a-40a1-b26d-d01fff05d3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1570e22-27bc-4a02-b429-f309b457222e",
        "cursor": {
          "ref": "fcec333a-6e4e-47b6-bb8a-b61a7483b476",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f6de29a5-c560-49e9-9bb1-461ff870e243"
        },
        "item": {
          "id": "c1570e22-27bc-4a02-b429-f309b457222e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "925e1ef3-0966-4c23-8b0f-e7c228308a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2f2244-7dfb-4134-8933-f6ac30008aca",
        "cursor": {
          "ref": "6d80a814-170e-4965-a90b-16a36f20ff68",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8a474920-d089-4897-be22-b75e062c0466"
        },
        "item": {
          "id": "7b2f2244-7dfb-4134-8933-f6ac30008aca",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa492aa5-080c-4287-bc82-135395698ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f5974e-0a93-4be2-b8f5-84142f5db5d7",
        "cursor": {
          "ref": "cb4ba0f1-c8b2-4c08-94a4-85e03b6e221f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cf79965f-486d-4168-8188-d63a440b4bad"
        },
        "item": {
          "id": "55f5974e-0a93-4be2-b8f5-84142f5db5d7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8e362441-45b2-4bf6-a3f4-e3190dea4602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbf0367-387e-4bea-8901-e900bade354f",
        "cursor": {
          "ref": "21be983e-1276-4263-a0ab-4bfda5e9ef37",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b5c5da9a-8ba1-4dee-b093-2f7541132a81"
        },
        "item": {
          "id": "dcbf0367-387e-4bea-8901-e900bade354f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a3134a00-bec0-4372-8caa-c8694d48cc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb6675d-f3c5-4e7b-90d0-361fc5119433",
        "cursor": {
          "ref": "fffdbaf2-3741-437b-b3ae-e21397c51b20",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4a03ed2d-c85a-4765-83e3-549b69672a1e"
        },
        "item": {
          "id": "3bb6675d-f3c5-4e7b-90d0-361fc5119433",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ab4a3306-9a6d-41bb-bf63-1b0e1c2f5cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96969aa7-9120-49bc-bc6f-37512ef74d6b",
        "cursor": {
          "ref": "38e80c83-0dc6-4b1c-86eb-ccd047a915f3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8c64cc67-4868-4445-b175-3b807c105b9e"
        },
        "item": {
          "id": "96969aa7-9120-49bc-bc6f-37512ef74d6b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e454563e-9296-4c57-81d0-8b6e59db7b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95befe63-2d5a-44bd-9a98-7ac4384f7e02",
        "cursor": {
          "ref": "8384045b-f818-4711-ade5-5a74f6829f15",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "650590ab-3b96-4937-b8ad-b630ccd0be2c"
        },
        "item": {
          "id": "95befe63-2d5a-44bd-9a98-7ac4384f7e02",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4dd9211f-e5c0-4a94-a84a-7b1a3dfd32dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977c0a56-bada-45c1-b010-122eb71c020e",
        "cursor": {
          "ref": "baf2dea4-adc5-4707-807c-76435279227b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2958c604-e5c3-4837-8fe9-86f7b94d38ef"
        },
        "item": {
          "id": "977c0a56-bada-45c1-b010-122eb71c020e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3b6e8374-f8f9-44cb-96d0-99d0205fcb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f60dca4-234f-4118-b99a-56356df01423",
        "cursor": {
          "ref": "ac566ef6-4f8b-4ca0-8975-ecf6511a0eed",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3423cade-6784-4815-8c99-9f0ad5d7fb09"
        },
        "item": {
          "id": "3f60dca4-234f-4118-b99a-56356df01423",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a5c4563c-8d3f-46a8-8ca4-8b34abb2223b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "a6ac4094-97d6-45cf-aa05-3b4606fd5651",
        "cursor": {
          "ref": "f7299b13-96e2-4bd9-9f6a-cdbe7f7228bf",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dbf81451-6dd7-472b-b34f-e88f622e1474"
        },
        "item": {
          "id": "a6ac4094-97d6-45cf-aa05-3b4606fd5651",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cf65582d-84db-44d7-89d2-28a7e661a6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "b45aa154-8adb-4e48-9f0f-2048ee559fa7",
        "cursor": {
          "ref": "990fcc8a-eeec-4799-a3bc-31f3f9118e90",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "319c7a2d-9753-4759-994a-3dd6f74e46ab"
        },
        "item": {
          "id": "b45aa154-8adb-4e48-9f0f-2048ee559fa7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "166f8410-3dd3-4f8c-b37b-33d9f56b894d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e4ebca4f-74cc-4067-b0fb-dfa44f981e97",
        "cursor": {
          "ref": "2dfc2b08-cc00-480a-b128-d33c799c3d3f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1e5071d5-2509-48e2-bdc1-297bbb42382e"
        },
        "item": {
          "id": "e4ebca4f-74cc-4067-b0fb-dfa44f981e97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "375540e8-9030-47fb-bb4d-9cbb7be733c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ebca4f-74cc-4067-b0fb-dfa44f981e97",
        "cursor": {
          "ref": "2dfc2b08-cc00-480a-b128-d33c799c3d3f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1e5071d5-2509-48e2-bdc1-297bbb42382e"
        },
        "item": {
          "id": "e4ebca4f-74cc-4067-b0fb-dfa44f981e97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "375540e8-9030-47fb-bb4d-9cbb7be733c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31dcd43-63f0-4330-9a00-680fa0f82b9e",
        "cursor": {
          "ref": "171b6d99-f11b-4a42-a515-64bdbd2eba3a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "42acc7b5-808c-4b7a-b5ee-003c1ae08be1"
        },
        "item": {
          "id": "a31dcd43-63f0-4330-9a00-680fa0f82b9e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5a87bf74-a150-48c7-8f70-b676bec2fdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c8d5b2-4d2f-4e9e-ae04-0322589785ed",
        "cursor": {
          "ref": "20f752f4-3eef-496a-9f46-162ba44a1c06",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "54c79016-9a02-4407-8ba0-cead4128d92c"
        },
        "item": {
          "id": "18c8d5b2-4d2f-4e9e-ae04-0322589785ed",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f9dc3f59-021f-4c64-b921-2c8b7bcf84b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}