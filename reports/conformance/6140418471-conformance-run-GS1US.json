{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2334c914-726d-41fe-afdd-40b0346b04a4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dc4628e3-976e-4beb-9d52-bb679a789baa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c24376fe-c5cc-45b2-8544-e5189dee352c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9da0a82d-26e2-42be-b126-b9fbf4fe6ffc"
                }
              }
            ]
          },
          {
            "id": "7fc0bff8-2343-4ad7-b3a6-8540fecc19ef",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ba0a15d-dcbc-419a-adfa-bfcf847d80aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fadf36a9-87f9-465b-828f-e35a111377f2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d4760afd-28b4-4637-bdfc-f870154f54fa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4d8e14fb-6528-475d-b5be-40aeb738bc59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c881897-60a2-4ecf-a9c9-4b04f1f83474",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3c3bbdf-f89c-4b5e-a616-3b1a504ad50b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5aa1055e-18b1-4754-be09-f69d50d93838"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d297fd0-51e2-41a4-b77c-fce550671d4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3c12393-8de1-474b-be72-2e7f09e0deac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f73c700-8c6e-469e-9f03-82f5889bc819",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d209af2-2fc3-4964-a071-d66811954891"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68d905c1-079b-4f4b-9fb4-8e472bf9a5d8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ce738ed8-8a74-41a3-8fda-ab77802b43db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f39d40d3-6496-4162-b6c9-7febe76e4793",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f409c6e-0fbe-4e6f-8658-b1cf5d29f39e"
            }
          }
        ]
      },
      {
        "id": "2f182318-3e48-458b-a16e-a9a8fb93f883",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9a8f5652-a90f-485f-846f-989ba69b597b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa19dadd-45a0-43d8-8457-e56f0382030d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03ac94c3-5641-4e6f-9153-29174195dae0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21828b1c-d4e0-426f-ba6d-6375cfc18763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca5ab139-2249-4b7f-a501-f0727014d562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760e910b-3590-4ec7-b296-9fab6b7f1176",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d268c97-3a21-4fb6-a82e-40f43e209c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbe79139-ef27-407f-9754-0e1652e8f3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887526ba-ea0e-4828-9659-74262fcb0102",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9f94c6-e37d-479d-b4ed-698074ba87ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8080b8fd-4723-49ea-9d30-02a198cce9bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "779a1e79-a121-47b5-9cbc-1f888a00e233",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60527f9e-801c-478c-b2d8-59d3cb567fd7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a971784-e7aa-4d86-a96d-6ea9e9245859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67bd8228-7ce8-4530-92c2-57848b72b9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2becaa5e-789d-4952-acb5-c7b5f30dbce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27ddae3-7046-4556-81bb-b2b4714eb60f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef58eb61-b391-41e2-9274-4b89728d5c6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "baf58ac2-b03a-4e3b-b53f-bc404de20a9f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc8f8be4-bce3-419f-91f7-4236db1dd500",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8f507f02-8820-46c0-b91b-b4d8ab25dcd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5111941d-d249-41b5-b2da-d16c51b89605",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9b3f7b73-bafe-4d9a-b698-6faed9db2b7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c805d62-37d5-4697-b7d0-a3489b495504",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6fd8f03-84cc-41c4-847e-b4fee5a3e7b2"
            }
          }
        ]
      },
      {
        "id": "0f984a05-da33-43ba-a239-e5cc80138ac7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "77c6aa4b-1824-4e31-a129-40f67d6a1b43",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf947e13-3dd8-480c-a0f6-99e3811000c9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "037cfee4-7b46-4e14-ad69-1d5982a123aa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0574f76-45cf-41e8-a5bd-d233d1b3fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea099b06-0eea-49d4-ba36-6c4223b47e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadf56ce-3a05-4cca-8e98-12cd1e3cea92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41a40b3e-5b78-4985-ae44-eb5602d7b76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c397a68d-e454-4723-92b3-4d7d1198856e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0605cb62-944c-43d0-a71b-27fd83ec9cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67acb14f-c31d-481d-bc02-916abc03ccd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6002f8-2dd7-4e63-ba9c-e5955355eb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f00a8e92-3941-4a00-83d1-9aea685387da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b799bed9-65cb-45f0-8787-1cf7fec79204",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962d2572-d9ef-446c-b331-ecf04359b4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f107f6-b626-4787-8ef1-6e39af894817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0846a30-9e07-4991-bf9c-dac5c479cb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcf19bd2-29cd-4bde-9d73-f71cdf14d74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f078a3b-e27b-433a-b979-d3d366af7b93",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40a1171-98ad-4405-8dd2-a840a1dc76d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318fa4ae-44f0-4495-bead-a9d2dedb59b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acabcbd-d474-478b-94cc-fc66c2c9b477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d16fecde-795f-46c5-8747-b9a41704f76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594ee23f-ee75-4053-954d-68a8be567690",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46715b19-d896-41c3-9e7d-99c2df54134e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb81cf7e-c336-4d74-a49a-a6f5307053de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8789fd-18cc-41f5-ab41-5ade2996aa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0ef0df0-3a4f-4fdd-96fa-459438d0fdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5704a679-ce61-4839-8459-e3674ab51fcb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07bbcfc-c5e1-40af-8115-c5e3edb2828c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac44f9fb-721c-403f-bbad-02a45e17897f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1e92db-ed4d-442b-ad96-e7c205d203ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d35bda6-334c-4204-ad4b-ebf40cb7fd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce35df2-53ad-447a-95db-7416c3cd119e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf3ac74-100b-4786-96e5-5bc1e740491a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04eaedb-ed15-4991-b1b8-f21317219abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b52d60-91ae-4530-8e2a-6505de5f549b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e615e1eb-e76b-4853-acba-2e24e12a4625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317819b5-0857-4f85-920d-8b4eb3092643",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27df99f7-a3b9-4f51-9922-616211b97930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7805ae0-80c4-40db-8320-473bf86b4950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743de86a-abaa-4d79-b633-6672aab09648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "696aabda-233b-46ac-a75a-f3da9b3c49cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008f84ef-2003-4d09-8d7d-61236fae04c0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3708dd-07b7-4060-8088-f1f67ce023b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd4b339-f4bb-47a2-ad14-21bc0ee4c9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1962220a-5170-48b9-a4fc-631cd5a4295a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fd321b7-9dd4-4b1d-b74c-8c5ee834300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fd88cf-8355-4738-b02e-379031edc2b6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e756ced7-675f-46c1-a721-57be3209f082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295e4f8d-1d15-421a-88d2-22c3f3317e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bd155b-738e-4f58-b4a3-d42a497c13d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7e6a7f3-4b3c-4e07-b12a-305e95ee68c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df54fd8f-e84f-487d-8074-d7f22113de3c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bb20bf-7d50-47f4-ba4a-4b82f0a0cc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0520d3ca-39f3-4c05-9978-a2b01341798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3312b1-cada-4584-80e9-c4fbc93c3ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11779d82-acb3-4e4a-8d10-a71ebed8a632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0091529-39c3-441f-835f-3b061099e4f9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362f2e13-61e4-47d1-8815-8d0250887fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122911cc-2708-4f1d-a069-e9bd318944c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c132220-77d4-43de-8d79-3952cd3bb08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "061ce819-eb0c-4d81-9f63-dca4c004d2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b34107-1820-4e50-880b-17087f613636",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23725566-fbbc-402a-b2d0-540490c2cc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15f6784-e0b9-460c-a215-3e90833ee89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a719687-f620-4905-a493-22d6358fde07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94bd1345-bba7-4fcb-8798-69e53b344610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3c89b3-090b-4981-b6ad-4b7a8a5dbf93",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3527d5c0-fc87-4114-ba54-c6716da3df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efdf8b2-d5f1-42ca-bb9a-220d9c837474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed245ded-db89-42c7-bc10-807f7a576421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79517759-662d-4d21-bb65-8e03986d2119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9fdaa7-b02b-45d2-b020-f01c885cb932",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80765c6e-2797-438d-9c85-fb7d75173f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd554733-43c1-4d77-b0fb-9decd83cd640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f72a919-cbc7-4f24-a4f6-a408be72b6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7e2fe0a-c3b0-44a7-8e92-362ee5d70753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07b8ee6-ec2c-4f66-a9b0-44b912a6eddb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39948c7-1055-4db1-966b-c79ff91d89bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac403ca-ba35-4b1e-b97f-fd5f019387d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0332fa6-92c9-4e95-96ae-9bfc6980beb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f770289-66ee-476a-bf25-a437f106385d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446df0ea-a035-400e-9bf7-44e1d821841b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f3cee2-5cf3-4a4b-8a46-f65db8321f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22789994-80d2-4cb6-a40c-0113cf0cf630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e455f510-4234-4cdc-850c-8e3a649a21b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "109974ca-3915-4041-8796-15a38165f2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c72554-4bff-4e82-ab30-c1298efa43bb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b39074-9434-494d-ace7-b62d50cc223b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513b93a5-6f98-492e-b09e-6aedbdeba276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b09339f-9e40-47dd-b3b0-cd534370faef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac0b259-2d6e-4879-b9c4-47b975ff01f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba456eab-cb7e-4cb1-b598-272ca1cb277a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9106b4de-c8af-4011-a299-958f0b7f2ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f96a04a-291f-43f1-adcb-6e1144083826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b44234-549b-4a41-a2e2-2f8452d508bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45cf1f3c-91b1-4b04-96f1-165610c22d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4316e196-1226-4a7b-b071-4fa8ed945d59",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98504bc-c229-4aa6-a443-f3b837141fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4424239a-784e-4a59-8484-a7ae5390080d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e661d50-c841-4367-b753-01c8973d11a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0aede1-76e2-4ee3-ad41-829bb12db031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdaadf5-e51b-4071-ab1f-c36436196311",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a7dd5a-827c-407a-bfa6-b641d3746533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66041ff-d98b-4f1a-8f8e-335490b39b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba18125-2a89-416c-8226-e5ae993c509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87fd9ddd-6aa8-4c19-a487-b08e47f0e3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1534feea-035e-4d28-ba83-f1dc2ebd1137",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5236bf6-8de6-4555-bfb8-986c64e8a521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702ce0a4-2ce5-4990-9287-ed76f1acfa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3410ce3-b83e-492e-a7ec-b2096f4f6b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1127aba1-bf58-4f0f-94e9-3759849b90ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b589087-00c4-43b1-8e95-06bed8f059ad",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6adc89-a283-4570-a8dd-3ff9e0161b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7264a39-bc9c-46d2-a3d8-1777c77d6313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594da2fa-cd73-4553-8fe3-bbd3082b05f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9adc60-96e5-48a3-8387-3ab1a0aa8a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc819df-48b0-4e46-9984-8829c5048037",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f013afa-4e4b-4019-a8f5-61ea037fdb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87597722-5964-44ed-827c-3262b7c8969b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dade8edb-81d2-4712-a41d-0c39049b58d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "033e804a-e50e-4766-b387-44e554b5eec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2003a963-dfac-4b14-9a22-f10de410de23",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e6a231-5a03-4710-b22a-eb1abb2b8534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c604d120-17c1-423f-8a19-02080a4d475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8faf9d-e0a9-4e77-9f6f-38f3637364b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "039fbe03-b460-4890-914f-7fb40e2291eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b4f048-8c5f-4426-bbd4-0c1fe43031f3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ae8e64-51e1-49bc-a501-9b4984b59ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73062521-fc58-4695-bccf-c12af7a5c5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e201bdd-f79c-4436-8780-a154e9716285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80fe876e-6ef6-4fb2-8784-e4ec5da84a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdac7f28-5d8d-4912-8f60-894bc48e193d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a5d69b-fa6d-4be1-9d26-32025b7652ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a3bfa2-9985-43d7-a3eb-af66fea4a77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebebad87-4679-483d-9371-c8cabf82baca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f01dc2-b779-4247-a135-4ead5d5a71c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d376c27-4d1d-44d9-9e73-d1143cd4b47c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e326e6-795e-4c4f-9bab-ef2ce4fe136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f5d391-2e83-4389-8225-84edac992faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70dce94-4f32-4c1f-96f1-c7bf7ac165c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3593bc-cced-4c5a-b09d-f37c9e701ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022e4dd9-ab16-488a-a57c-6dda50c320b9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fcadae-155a-46c9-8990-0a071810bb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d65b94-ddc8-42f4-b95a-cd87bbc1c08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba70f1f1-b178-4579-8cf2-4b8faf78d036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98bcb0d7-7e46-41ca-856a-1df74a1ecedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f69de9-986b-4b30-af63-ee2de84594b4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376f4577-ccd9-4237-bcc0-7482c696ea1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a68246c-6b10-4686-be75-070ff74a6ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cb101e-1585-4d1c-bdf2-32ef014529bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8b158d-22f4-44cc-92d6-ce68b9057a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9ca58e-0266-4744-934e-2f13bcb12707",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803e1781-e9cc-40c8-9c1d-1d7e785bb342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd4e982-9764-4b1e-8086-ecc088bce51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccf82f1-58ef-44e6-a5dc-ed2c3f309515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2a437d-8ff9-49d5-806c-3c84dee4e324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13839474-93f3-4837-886b-732693f894b1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0e388a-8ee1-4c66-94d8-d7f5a5939644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd0b471-8a44-48d6-a0a9-5812c9317e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c919f615-bb5a-4665-b296-75f6717e5294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e9f7b7-f69c-4033-a45b-6236f8a089eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dfc1ab-15ef-4e8b-a3b6-3d18af7b1157",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30f91d8-0c6b-44ce-812a-2a8d4924cc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd97ec2c-3f89-465d-bf83-b13fbc809071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d3b69-8a97-47ff-a473-713a44b06487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28716e0f-5c3e-40b3-a8c5-28072ee556e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa32e2-7811-4391-948a-5d1d30a90474",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf7bacd-9455-4712-8369-b9d4d0ce8b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fce91c-1f9e-404f-a6a7-7799f20ce0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35e658b-9b03-4d0e-9949-470523cf628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed6db06-e2fa-4107-848c-24c751889c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0035a9-e646-48fa-b130-b6912fb71107",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa30dc5b-7a41-4dbb-8962-4f84d2ffba8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16e4676-90a8-4925-87f0-ac45cf44d2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3086fb0e-5e79-4d5e-ad77-7fe768ebf362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "48bdb7a5-4ffa-45e8-8c6e-ec701d115e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014e00ef-1aff-47ef-8511-3ae4129bb299",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9f2958-80e0-4ad6-bf2a-d18227b69b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be1bed35-abc7-44af-9dac-f9e44fe26887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128e2efc-9a73-4f62-99d0-e11879d05e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "672b40cb-3843-46ff-b26e-f4c3ded07e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc26a5f3-b87f-45a9-82d6-b797b2f5f652",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c64aefb-1d28-42ce-9c51-c6fbb669dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57db186a-01cb-40dd-9e97-56f7eecf9517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcfb863-0aa1-45c9-8075-4e15f118d297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37f216e3-75b7-4044-a506-c8bc5a38f9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da496268-aef8-4558-8d21-6e60768a8072",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30363a7-1d41-4723-be18-2ca3f624db23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0241b83-b072-4c2e-b5a3-a02db0496e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21120d02-7d99-4d2e-8765-2d13505d49e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6df43b30-9d3c-4edc-9871-2e34830ac67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021fc72a-ae09-4984-ba7c-67525b590722",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a585dc7e-da04-4b3c-8a12-9ce1611a9af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621ade9b-1111-441b-9847-b2e1bfc11662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194ce7ca-99cc-403f-8e4c-d2c7eb072b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cfce65-9f4b-45b1-b249-d67208a7dca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb11c7d-476e-41b0-9f2e-4dd87a719ec0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5b7ef1-5313-43d6-a63f-406e2f2228aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b4d3cf-3fb7-4283-90db-316e6f82f62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea64b99-1401-4298-a2a8-0861a56a8ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c23f6e4-0d12-4720-833d-1c739a5a0b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10e2178-87e0-4731-9930-83f6ffb1f782",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2778642-5311-4a5d-8c4d-e33aedb31c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95aa39b-031e-4ce2-b6c9-cb09eac89ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c7f264-3d5b-48c7-a727-40436c2e6503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01ba031-f7c4-4f6a-bfbf-dc31729dbf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfedd2e1-3046-41dd-b0d9-669eff3a3aee",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7c1246-86da-4021-acc0-31e5aa850ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031c12be-f143-4e9b-b78d-ff4d6466c0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a6b5ad-758c-4ff4-8087-cdba54dc1326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2880d96b-0876-45a8-973d-c7a9bb82cc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ae5d6e-4cbd-416f-abc6-b62352a69d88",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df96a42-1af3-417f-8582-726401fced76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38523523-3249-4b17-bf76-97f023c59342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f69437-9c7d-4020-af6b-1c7dd6b94d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b482d4f5-138b-40c9-ad44-8d9764b5fcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7cb83e-9aa3-4040-a660-e0e6b98fa7da",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e4b69-f47d-4905-8843-b281ead0ad37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46a5a48-306c-42bb-b49d-d2bcb0c030d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b41ec5-27a8-4fa2-8133-8de6ad1fdf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cfb7b8-52da-4a3b-a56f-9fb1bdfad833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf22b7fb-05f7-46e3-b059-f637c53819e1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55c1098-7198-40d1-ab93-47260b381c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e5d748-0bcc-47e3-9e50-349e24d3328c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447a7bd6-02c3-43fb-a7da-4c20a3bad541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c200c11c-3769-4428-9c3d-86d8cbbdfd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc137c2-bcdb-4a5d-b250-ff299a82c92c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17ba8db-ce95-4864-a124-8473dbcab495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f451488d-94db-4325-b387-f662e4956e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe64b70-929b-4d59-8bb5-99df37e117a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1569168-8fdf-4a4a-9d02-501f263d056c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26466bb7-6912-4cfd-acf7-e44373a8cfd4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff1c40-4764-4812-8197-4369212891f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4fe027-eebe-443a-bfb8-2a0a35b237b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611f2779-d30f-4cac-980b-855302336769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a3c67c-3ca4-4f04-9920-fa0aa02e7aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f7104a-78e4-4bd0-bfc9-6fc0a240bb2f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fce069d-bab8-41c1-8981-ab3c670654af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f7b80b-50e1-44ce-acb5-0c12051e9ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72fadfc-e66a-40dd-bfe7-1d312878eee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7546406e-61f2-49cb-bc05-7c13318190fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3eb974-eb88-4e15-b452-58afc30fa66a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3c9b7e-417d-4671-8cca-fff7527e2a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c093c222-1a3d-44a2-9052-640df92b2e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3ed7a5-1fa5-4b3e-96fa-7ceae9e3ac5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56a392d9-f742-4ba7-8f21-e3d965586464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda116f9-241a-4b25-a21b-7ced94509202",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93f18f0-dd30-4c5e-a793-c61ec360872e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5091ba17-ced8-4b37-bb58-b23bee62185c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46000318-d022-4ce1-83aa-f031e799b942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c37732c-5181-46e6-b67c-b87bee2f0510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ec4cad-459b-4be6-a567-c8be8a1323f9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc755d10-c50b-477b-b366-c6d1972613f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952b3ccd-6820-4c9b-9eed-ee8942db51ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7bd3ff-d616-4121-a71c-e77e1232c466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f7abcf-bc4e-4004-9ab8-d7500d96768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1e1293-ace7-485f-9466-6374f06d6340",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4be26f-393e-413f-bcf1-3d62f3b758f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d88ca6-8ad6-4ef0-af3f-b02e870c2bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccb0f9e-b7ba-4c98-8340-f70da7419e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18224f7d-f612-49db-bd1f-9f7e849d071c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7ea2ba-0c6b-49aa-a297-04cdde8f134a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeaef08-e4cf-4021-9b8c-b030c50cba3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04062084-3212-4611-884e-16f45cdf6c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdd9d30-157c-4509-9a06-508d47f6a2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2afe617-e76b-401a-abdc-20e32911a1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260c7d62-943c-48b8-bc98-5a6fd3674ae3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48f9543-5c02-4e3f-bd08-1592f95e68f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fc3a31-ef21-489f-b68b-f5f746cb98aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1c646b-baaf-4931-9895-05c76d7458c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb60102-4fa6-4372-86f9-ebd7e9b0217f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eeddad-4204-4325-8d7e-4aa7a3577467",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eb1035-2011-4d88-b50b-16310c6bd48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b128a0d1-4ffe-472a-8fde-9e55740d8519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b6fe9d-156a-48bd-a151-d027c1f14c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49fcb6e2-e5d0-4b1b-8eed-320f173a46f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ba13bb-3993-4aaa-aafd-d833035cdc5e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06fe6f8-3068-4ccb-8649-a9e0b6c4f2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967ef5ea-0704-4648-8092-6d894518233b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c9e5e7-9bca-4f96-b431-313af14e928f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd11d83-fe54-4fac-808d-0dab604ad0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c014db3f-8a47-4d50-be30-71fd03fb27d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b7e712-9648-456a-9144-40d113a9066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c6ed83-a935-4856-add2-041b4aeeaad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9542dc1-8fd5-4ddb-8d67-0630bd974a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8de94a1d-c151-464b-882f-9ec7a2b1f389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b6c903-30b8-429b-97ae-718fb35bdc9f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1182c6-4e19-4345-a34f-e7de0a23e115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389a520f-9379-434a-bb2d-9a3fb7afd7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ddadd5-dadb-4fc8-8722-d137a7f73cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c93dee5-f64b-479e-bb95-73ed456b9a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c26516b-de6c-4727-a961-482d9e4d6a91",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e701364-0cdf-44d3-8ccf-cc06f4bae9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d643bbc-c1bc-4038-9f3e-764f14bba7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d49251a-69e5-4b87-b177-5fae4d520f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed621203-76c7-478d-ab27-5b14d90630aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02df18ec-5f0e-4a87-917a-08cafa5281a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e4b47e-ba3f-4f09-a406-79f00298d82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbff573-8ed9-42fe-8bd0-c8c584d004b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf37a36-6ef1-457d-82f9-f6d6b604c7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "07a55549-d13e-49ba-9e64-dfd00c274bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236b1617-621c-4e3a-91dc-b246c2e7ac61",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4670df17-7428-4b48-8831-1b3b89747c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad3b987-e977-43fa-8126-871e0aee8f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e58f3ec-4599-4ea8-af86-a6680d2d06a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e53d6d5b-6ca2-43f7-af01-a65f3de403b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93553eb7-8b2b-4f55-89c6-14f7acf17cce",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb332def-6ab5-4399-8d1f-468b027f3250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4240cc1b-bf90-407d-9546-e5f8f285ed6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02184dc5-0db7-45fd-aaa7-739f95e57d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f3c806-cb9b-4513-8139-d2de14a095a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8c6a05-eb86-4851-ac94-5212a450a62b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2f3e06-ca40-4a62-8247-5c778aa98405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b001fd4-d667-4839-90f7-51b9f08054d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682babc8-d80e-43eb-ae87-dd8124ac1144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0fe202-5ed0-47f7-a44e-378c07a13a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c185f81f-27ee-422a-a9ea-d9ffde183068",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ad9ddd-1839-41bb-bdb7-ee9068c3acac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35276d29-4a98-4293-b25b-e8aae8ce5907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d962595-6943-436f-b421-5ba89a5a9dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87e3de88-d359-4731-89c3-0666ab408e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db0ae52-ff48-4577-a4d1-cc401723446d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2515ef47-1a26-4d0f-8265-6f2311e29554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c04f51-01a9-441f-939e-fa9f081b5fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860040d4-31e1-4765-bbf8-12a60a8d7798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5d3e37-94c0-4808-a631-bbfbcbdde037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7628ddf7-d9eb-442a-8cdc-e77e10ecce50",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f359111b-5e77-48dd-9648-a03e258489b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a4e993-04c8-416d-bfcc-7179711395ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aeef6a6-791d-425e-b907-06ff374b526f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa08d847-75b1-481f-a033-b25bf0ce030c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ded8d3-7677-49fb-a962-307a137091fc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d0d12-6049-44f1-aaa6-57af3fed6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155f9ab3-318e-46a5-9bbe-7597ff510967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af641ef0-4e6f-4c7c-80f4-7c723a5b6568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd81a157-a727-4058-a54e-b361e491eaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c176c4-ace5-4434-ad4f-9b94f4d478f6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1fb799-e1b0-4d73-aee1-5c67c1606390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e994c36-f993-4bbc-98a8-9a2360c155c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a7756b-31f0-43f2-b719-917d2ea44c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "731def50-6363-4184-b904-747d376f612e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5abac5-786b-4805-b70b-8aef83acd27c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc482ee-1f81-4221-afc1-1908d173ba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871dcb9f-0ca2-42b0-a7d8-214aede0c0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575961b8-380b-4cf3-95c4-e9d8714c4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc3a7b7-c5b6-4e89-8552-94495b65b3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388e24fe-6cd9-4251-b15f-3abe5dc5313d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b671ea-0626-431e-b14f-482e562087d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7362307-dfdf-47d7-a601-fcd7e633d212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f745d02-1b34-4fc9-a42b-52a575e43b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44c80a53-c964-4741-9fca-f5c8d33d4432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52afe71d-fc61-4456-8cd6-001e44613f74",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449a7e03-80f2-418c-9f11-03620f590d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c3ee33-29f6-4b78-bc93-850986e40919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e178dad1-9280-48cb-b88e-e9f5c7a12b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a09d1578-52f5-4c31-8363-867e0ecd7a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8191895d-fae8-4690-95b7-3729d125bd75",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c70f08-ffd3-49c5-9f32-72b64f5f65cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3613678a-fbef-4c59-9bb8-981743366db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dc8e07-358b-4444-8fbd-2680014e6b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b60386-66a2-4003-9b3e-112490cfe1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04955f8-c9b3-4138-b38a-4bff59da1841",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b592706-d5b6-46c5-b8cc-c80cec32f78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526212a2-c4cf-4a54-89a3-66d4490bf9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dc5291-934e-4efa-913f-5b856278f7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1df37fb5-1b9c-4661-b58d-9f509333e540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86182e74-8e28-4ddd-b300-4555c5c57810",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d163812-4249-4cd0-98e6-c171e819f3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c19855-d31f-4f34-bbfa-b8ba2496af4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87500d1-0cd7-44fc-8aa3-ddc1439b6b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b462e27-9be6-4d81-a080-9f855638b5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1522dc1e-f8cf-4760-a993-8d843e31ac82",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e360ceb1-d616-4904-a60d-be0a6468aef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049ba70e-cf96-4d4c-aab4-d5b412fb491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8113c133-3f5c-4715-9c09-58ca3d5b81e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc15fc4-340c-48e6-8e1f-2d45b466d75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f12b25-44e0-46d2-aea6-3a35a35baa20",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b92d48-1471-4c65-9570-f5c67560ba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eee3080-1e6b-4d4f-ab11-4a33f1656e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6bb603-d333-4184-8b04-090535236ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d7f0d7-e3ee-47b2-a4ab-97cb5b325000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c45b67f-3845-4adc-812a-1741e5126628",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6ae398-4aec-464a-9e49-ee20d3b9680d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f21ce38-cd81-4cd9-a44d-c658f91a94d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2f502c-075a-4734-9d72-2a8eccd7f278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e97be0-102d-403b-a3e4-81ff2605fb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ad5b38-5cfb-45df-aa28-c740e1fb55a5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb805d38-c5aa-418b-8ae7-1486aa4262a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda09748-a8ea-4063-8275-ccb443d5249a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b13de23-40e9-4f26-ab30-2a7d4b8591f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc29b6d5-57b9-4f5c-9273-19ec17a218a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d65b4-6f32-4fbc-8785-ced8b478be54",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e179aa7-515d-4fee-9db6-8400108f5a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db085392-6022-4dc5-a029-e3ded3b25d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c473b21a-a6e5-4bfa-a980-3bba29c9e4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e6f3e6-1ed2-4ce1-afb9-17be218ae8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b0a7b3-e84d-4b80-9d0c-802c0237ab47",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6881ab-e87c-41ba-8189-5cfff7408b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80ccc0a-f66d-44b8-b177-2a3ad1468110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf34c28d-a506-4888-a48a-06761d12e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12f95ef2-0697-4f88-a625-a03325b51b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce023e9-bfdc-4e58-b40d-4a5c617e8ccb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e27f5e-92ad-4a51-bc98-426f32373351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59702d4-55d4-4272-a554-7288e1668f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ffb3c6-242d-49e4-9b09-7167a1fce683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "078e762f-dba5-4b90-a917-fb287df5b889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076ee4be-7640-402d-ab40-3cd756629b6e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba5e665-7b43-40de-9a20-f4cd0e403a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cec11f-e075-4076-af0a-45a921ca66bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ac704e-2bd7-4968-9276-1cc57e018eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9baa003d-5e7c-4a4c-b51e-db9a22a9ad44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddf2339-0942-4a00-923c-8f86901497af",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a02e5e3-386e-419b-8860-d52c858740ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787523fd-594c-4722-a9cc-dcbac2042cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cc15be-8e18-4718-8339-244c24bc74b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1429fd0-5bd9-4f80-9e78-557efcbc1595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76827f7c-99bb-456f-b353-d950074f9d64",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e43098-9a79-4f7f-83c3-48e6684bd52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3b2569-5804-49ac-aa85-0a003d9fbcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c11473-df65-4883-bb7a-af51cc9bf699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bb02b7-2a0e-4b54-918a-22a81f799645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bc31ff-01f7-4465-b848-acd7fe886a7c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbaf798-6c57-45e1-a9b5-87e299856d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d816f3-6b8e-47d8-abe4-a7007137613e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dcf662-4a6c-4716-baa1-6572bfa9dc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08d7260a-93ce-4d6c-b88a-8e6f5e9cdce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c02c54d-9655-4f6a-befb-1deb39c8fd3c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365a846a-1424-46e8-8744-c8230ce9e491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0b4222-eac9-4727-b941-acf2b07f9c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546be62a-f8bb-41f0-954d-3e93658417fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d66f04ce-6f66-41e4-8b66-3428e36b4b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402e4720-c55a-4391-aff9-3330b71c7c07",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0a058a-a7dc-460a-b175-5cdd658e19dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7bd946-cbf8-419b-bfc5-bd61781d9f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2490fb-95a5-4f33-b105-21b3d23366c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95749545-f897-4185-90e7-aef6333dcdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1017222f-054d-43b6-be83-654a0090ffe1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c9924b-1e74-428a-a245-ca6dfe893697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f9efa6-ac25-4863-ba9d-47bacb4c45b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a72c83-3f9d-4208-b2b4-673fa27a434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8e51b3-2acf-4365-bfef-c6e4eb39f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecd14f1-d60c-4a3a-99f2-1a35a229a9c7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66955487-980d-40cf-8b22-402c692e46f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a571dd59-5abe-461c-b836-0c378a796145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2aaeab-27b4-404a-8da7-7644b0e11cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c39b5711-7ff8-4f31-ace5-b50410229d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a01c6a-4f54-49d4-bba7-b26df2a52648",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540096b2-9fbb-41ff-9bbd-5df3fea40553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ec4296-04b1-4ada-96cc-9d97ce76f2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d574bef-babc-40b7-99da-b5927fb96a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf9d5a9-7994-452d-85d8-6b4c2fee075c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0fcda8-682e-4ae7-956c-93dc0738bbfd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83ab55e-1b59-43ba-8ced-10d2a778e29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28576bdc-ddcf-4744-a3e0-fc87cd5493a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6c02dc-ee9f-43c2-b1cf-ae068e7d555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4f2d20-fe2d-4fb5-ab7c-394c10f8fe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49aa6f5a-34d9-4a9a-be7d-a97a00ba02b5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64af53d5-f00b-431f-aadf-45a3549080bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bc9e3a2d-1ae7-4456-928c-bd65b1679b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5a938e-8c56-49ba-8070-0b19a4fada73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "23f1e77e-eede-49d3-b624-ebe3a7584a75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8d4e7ed-ea1c-43dc-8109-40ff0df759df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7502940e-559e-43a7-be7c-75ab32d1b68c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bba60f0-c5e0-4cf4-b8d2-dc8a5c2ba2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f7e8a70-ab18-4371-95f6-b8c1e1472096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017a1006-f8a6-45c8-9721-a0a6496fc9bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1a5aabb-61e7-4df2-89d4-509fbe1a2067"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1865adaf-9b33-4e8f-9a27-de4a8911ba95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30a9410c-e82c-44c1-b10d-40c797426f85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e81a096e-a796-4b99-87f0-3208952445d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34f998ea-4971-4a54-8caa-e3ce1c2e5389"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5e8c914-5831-4778-9dec-fae353a3de1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ac2674e-5c07-4686-9ab3-ffc77fbab6de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9a7ebcc-1244-4186-bc23-cf4d68d423b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0283ae0a-52bf-4053-9f95-4e1dd5eaa78c"
                }
              }
            ]
          },
          {
            "id": "d8c3500c-c5e5-4fc7-aa44-1451b8fca715",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a0c6c979-5b0d-4d16-82a4-c5ae8743e242",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55206f7a-3149-4111-a46a-ffd359613cec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fccb3b6e-b6e2-47e6-970e-d6eccdf08d1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4096cb41-9dc5-4012-9e61-71257ef2231f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9091d44-d0bc-4fdd-9994-8d4720a3e876"
                    }
                  }
                ]
              },
              {
                "id": "cbb5d432-03cc-4c19-b52b-a33b14103e5e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c8a7123-7e19-40ef-b3ed-b4368a5b7f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1498d05-0301-47bf-a428-f72108ff34f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e4f8ae1-2836-4e23-950f-d1dd2bc23a20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51e25c55-b3c3-40d9-bfb6-2decab71e997"
                    }
                  }
                ]
              },
              {
                "id": "62e1981b-cd2c-44ab-aabc-6d660a14344b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc774cc9-e640-436e-89b8-b80aaaa4fa36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f45d388a-a081-43c4-8056-a925e7d01e05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "689beabc-cd50-4847-a371-e7ba825086a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2cf5ed22-951f-40d2-aea3-743bbaf83e33"
                    }
                  }
                ]
              },
              {
                "id": "1278cd33-5d63-42b2-a364-c4caa9b693b2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9217ab21-926d-4a85-8b51-b7ce02645501",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89782468-30c9-4420-b667-0c616b07b7a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "748012da-9ea4-42a5-ba94-e9fa39f10483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "825d92cc-4c20-4f70-acd0-d1d37d9ea512"
                    }
                  }
                ]
              },
              {
                "id": "a7e2ed9c-0c18-4778-b613-24d1e081693f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57e7ad36-34c2-485b-8a51-946b7b218da3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de7abf73-eac8-47c4-9dee-28ffa0c494b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e21e187f-de58-4f26-b09b-f62eaed67d2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f7eb6089-a3ba-46c2-a960-07b254061744"
                    }
                  }
                ]
              },
              {
                "id": "b3a05991-f205-4c28-a991-3062d56dba00",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3eef91aa-761f-4eaf-9341-45cc225d66e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22b393a4-4ff8-4105-b837-5b38501932ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d48a4e8-375d-4982-8992-342699103bb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7fab99a-1c6e-47ce-bf61-bd4fb93f7ba1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc5263ca-a191-4358-9547-5d531d0e4302",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6c2308e-a26b-4098-b420-d3822e9a6baf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "88922155-5e16-4e9e-9b92-58d76e9bfe19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1411200-7c53-4f4b-8255-0ff43a5f8f8e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7f5da42-789b-4851-bbe9-2614ea257bf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4a438603-0711-48cd-bbba-f2e988195e00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2f5f195-7d5e-45f5-9a65-535a32494ec2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9879a07d-82ad-458e-89c3-26263a1e5538"
            }
          }
        ]
      },
      {
        "id": "8144147c-a3ad-4d14-8117-1490559cb4ce",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4ca40f67-d88e-4639-b952-1136d8067b27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15095015-187b-4cb7-8995-4de2e122824b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7da3aa06-92da-4b1a-be0b-f892650e1463",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bd6ce4-26bc-4244-b888-271011b2d995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d39633e-b702-4523-9bb2-53f8df26fec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27904173-e8bb-423c-917d-7c60bc54e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb360e83-bf16-4fe3-8bce-5e608be1564a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d14edac-e170-444b-9189-732135273772",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a7f5b3-3e19-42c7-83f8-d719d680bdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7438d174-09f4-4056-b5d5-0229ad3e5e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7233c278-db9c-4dc8-8880-06309e0a6a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a450e880-4017-4bed-a6eb-c42d8389c5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f33dbe-6c04-4745-a30e-e415d543de07",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a12ff7-e8cf-4598-833a-571cc7a8d878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0466b4-a2b6-4e04-b205-6ac94b9a7feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fa5716-8a78-4a24-8503-430df775b9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f91706c-9619-480f-abf9-01ee9db55f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c478d0-df80-4450-96f6-2c0118eeb9a2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f94ea7-179a-48a7-94e2-cb014b4a8682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb12815-c6dd-4d0e-9664-5cce3158033a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9ce265-0b41-4a5e-b944-ac6c8e54c8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3133526e-3dc4-4c3a-92d4-90bbe5dcb1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a094887-5c7b-4894-ae3f-347c1f73c83d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b22036-1a55-4480-ac4c-12366b74d600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e22947e-6ea7-4309-9248-9bb2684e0b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c076f2-f11e-4c75-af1d-3f9666ad3eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db64abab-bfb9-4d90-a308-0f43e2aa16c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd95617a-1ca8-4253-a036-60391bcd3687",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bae822f-caa0-4400-a0d3-8fec0fc8469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b15956-45a0-4c8e-8baa-4db1b635c4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76245863-f753-4d38-b37a-48ab12191673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "704e73e1-5b14-44b6-abdf-2688c6713540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bde58e6-1d08-4ea9-a3b0-8bd8b737a236",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fe9b87-cf87-4a20-935c-616f59cf7acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a72984-df47-4e43-9d18-c6cb1045a77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54efb966-9263-4bf2-8063-a161978115e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dea9e57-f64d-4490-b0b7-496361f7d639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d619ba-ece9-497a-8edc-27ff95cceeaf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3634b6b0-b161-4687-8393-568a8c9ac201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131e3928-58a4-421f-b699-0a9058fc7118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9ae37d-23b3-4770-b037-5070769b0e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7a346c-6e9b-4bf5-bb97-95a43f9679c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac9d915-d01f-4aa4-ae61-3fc917e8cbc9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2311a47d-4ebb-4abb-b7e9-48131a3d027e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0fb556-8567-40f0-8121-488822318e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c817b2e5-ff91-449c-ae87-7f2d405ce467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe6ffdf-d16a-47f6-90fe-7530135f53df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6223a76d-87d4-407c-bb25-2c37b4c5ed0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387590b1-4843-45cb-b1e0-b99eedc0d905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0572bd56-b765-4ac7-a955-4330856567a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553f22cc-32b6-4903-9edb-dff084459406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00793552-638e-45ec-9684-b8c3ded518fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec28d71-99d0-41d8-85cc-9a6955e1ff9b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b29317-ef4f-4c0d-8e0b-2d4d2943234e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e29785-cfde-491e-9d02-2f031a821819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b1b26b-33e8-418d-9367-67d48e3821f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "de777e28-ca6d-4346-bfcc-c09846ba0272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd35eff-c4a8-430e-bc39-ba118ce99b8a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91322e58-14f6-4573-97ab-7ca71bb6d96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc4c710-1c2b-436c-9653-18d933ddebed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d90da5c-394b-4156-9a76-b132fbf4594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da94998d-6e5a-4aaa-9fc9-7c5e7826979e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07de2fa3-9841-462f-aee9-75b349ba8faf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1401f89b-1f13-4d14-b0fc-36cd344c7f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8fe6ff-e129-4c94-a03b-c8cf79d57b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e826f8-78d8-47cb-8de7-472d6c845163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42ff84f-9145-48f8-8230-ed09c5b193b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fceea1-78bd-479c-9838-91ca47154ee9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456a26fa-e13c-48d3-8981-9911780687d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2079c065-7328-4494-a193-2a1ec50a5a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b17104-e868-4307-a22d-ab3438af2f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e714a2c-e539-4a02-8ba6-efe7f6309ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ec2a72-eb5f-4208-ac75-1e64ae1c1666",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654fa04f-ac7a-4379-bd04-a49d0a8bef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d752045-4502-41bb-a5f4-6e545aa1de60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd58a4c9-bf2c-4015-b446-47b0f6461530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a3cbe3-5388-4c4a-9c40-2653b36d2f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be70229-57d1-4bb6-aab2-4158f729ba78",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe76fe3-1ca1-4296-8f16-4b679cf50d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac0d50b-b7c4-4e0e-a437-dd8e1df7a263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e412482c-ee8b-4d6a-af64-fd54f24ca8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "179323bd-bff8-4c3e-8771-b22bed568584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b953f906-9586-4cf9-96a5-cca5732a8610",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5ac8b2-1fba-4172-a5b9-1472d4d0cefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf3e5aa-e6cf-45ac-b01c-3d0dc696adc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3024e3c0-c24a-4e32-98de-f8b8a620507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "78dd694b-5dae-48d1-8376-72b5b47892e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75201e7a-2c64-4552-a79e-0e38931463aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf291b5-9109-4f9a-9420-3a3d45c9b352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091c89d8-ecdd-4cbd-ada1-b18c3eeed49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcc5138-6440-42e7-af8a-3f02b353d9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fed7aff-9d72-4f5f-a925-cb3f42495e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0b8d4b-d290-45c5-a3e9-1ec2fed2e055",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0b9889-746c-4eaf-b861-3b22a5f0d47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e8edd0-a140-489a-880c-ea909758b079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98409d28-7c0f-450e-b889-f5158ac7845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea994b5-8d19-4060-972c-36bf9ffd5d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee70157-e6e2-4e48-b4e6-778f67836bdd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdfc101-3fa2-4f3f-99e5-17ba58f869ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b45d291-20b0-4aab-b986-ad090850ac58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedc2aa2-acde-4748-86ce-9e367e12faf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b0722c-45c2-4330-9034-997aa6cd6465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3f259b-1111-469c-9b33-00829c5fd821",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f927477b-2c37-472c-9f4f-1e40f8a808ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9c9f1c-750c-49c7-a3e8-d95203501c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34336fc3-63e2-4136-b156-052c78d12b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10571955-546d-437a-a9e0-c1069b9b861a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a8785b-53c3-4edb-9704-cadcb9cdb61d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39492a9-2fcc-4922-8228-95c7e36f6393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27860b46-5c03-4f03-828b-fa2a302d14d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e518fa-e50c-4f1e-8ecc-31e5f915f95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6534188-1532-4e27-8297-512d2a707f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f124f0f-c619-421d-9df6-a0aef9255880",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbdf48a-1505-44e9-b140-1b0e9b6cdfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9add9d73-f041-426e-9e1a-b19a3c95945c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56391a3-1d35-4238-bb1c-f6325f2b490a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee5fefd-0976-4ebd-9d76-b535365264ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0377cf13-9691-4574-9753-df940451da63",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a56954f-e58e-42c8-a11b-ff259f227058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52b54c6-c649-4abf-83b9-5f82043ba497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb248fd-621d-4fdb-ac64-6025dc3baaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1083ee-98a8-43bb-87b9-da039d0e830b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d895ab7b-f9b1-4e50-b1dc-5c8896eb06d6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4416bc7-77d0-4127-bb92-7f86be1e5d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8efe07-ca91-4f57-ac64-42e2d070c477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d5b7ff-b410-4c76-a32b-d2e1892952e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "383f1216-b362-4261-8b3f-b7c3ebda8f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bb2188-87f1-4107-8eae-1aa3708e0cec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c715d9d8-e44f-4ab8-9243-a13a990267c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b263c413-5e65-4ef8-8736-2bebc1f741b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfaefe5-e0f4-4de1-a66c-f9610a87c2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ea851d-f0c1-4d02-8a16-4d5904e12cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42457446-34b3-4ee4-978e-2de48ab9f6d9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4bffa2-3720-4044-adea-d3437d16ae7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d739d8-4ff8-469e-b9a4-77c7f58bc9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c5e267-a5e3-46cd-8d91-1e738708bc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "474aac25-c027-4054-9500-89285341142e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aae09de-6f80-4073-8dd1-b4ba918a40c1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443a88b7-d773-4b37-bed6-cc6e790066a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db41c1e7-4bf4-40bb-8d2c-6135480d184c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1435eaf-f598-4570-820e-4d7d7e19e71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4061166-34dc-489f-aa75-a4d526b427aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b20b7c-83c3-4290-bc26-fb485b7cc090",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be849d1-d885-477a-adc2-1eef22a1a8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede73168-aa96-4ee4-897c-86702c1e39ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6f707c-f5fe-4c01-9d88-b9d035ca541b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18106509-bf80-4a4e-bcff-210489dd4aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16501eda-f7e5-4b2d-ba55-fd556ae66a76",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2efa66-9408-4682-b6cf-de41b14ec6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed215390-344c-4650-8040-1b15585ff19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fe314e-f550-423e-97c4-343fdb680394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b46cd8-ce1d-4edb-acd6-d3675c85cce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d3ec56-5e2f-4788-81b4-78a2536007d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8fa778-d2e7-4070-936f-05041d106274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c293fb9-5df7-4096-856c-40d0d89c5085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12887a1-4214-4750-9e98-73dc41a50a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b381f7-459e-4485-bc81-e3804967804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b24ba4a-3329-4b10-8ca0-94da315e561d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d73f3f-c0fd-4199-b080-a16c804d78ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a388e7f-5341-4e39-b1bc-d3d9da13bdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee996af-d783-4c42-88c5-2498411e0c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13170eb-6168-42b6-90ff-85597d689f21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53e50254-5c3c-4f11-b4cb-601b986d0be4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b0972aa-91e8-4758-a1e9-e4431cee230d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71124558-2482-43df-8fbc-f819d93c3e28",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6daf52-68e9-4a60-86af-8f9f81194c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bad3c24-0b87-4ca3-81b9-34fb3b2568ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "480c6803-23ca-41b1-98bf-2689569fed09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65debebe-8fe1-42f0-9e38-e27a8b359871",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1badf18-2421-4546-9fbc-803977c02db5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6101bc7f-d561-4543-80d1-8d2bda4e799b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "237aa23f-79a4-4b62-a6f3-129b4cd162b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34435539-456d-4591-86d1-33aa7968d641",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "899b8756-749f-46f9-a193-c7407a5b8b22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3435aa3b-2aac-4322-8c8f-2a31aad93651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fac9f402-92d8-45fd-aae6-4e8113b4b5b8"
            }
          }
        ]
      },
      {
        "id": "b702d327-b193-4192-96fd-64e7fc2b07ed",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d7b74bdf-5bf4-432c-82c2-68758bacee01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bfc36ed-39df-49ec-9810-1a8d865d3a7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a97144e4-f781-4902-aa95-910e9e05cc28",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9acc6b6-90f9-4ea2-8397-1d9e72555e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b43219-3ac6-49a8-b524-d92dabbfcd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9fe7bb-35b6-4fd7-9440-b67f0f403600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "432e366d-aa93-40e0-9dbe-463a3a58633b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efe997c-f4df-4d7a-9e58-d576062ab4a3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12051d59-ea3e-4aef-bab2-b8a4a0fc296f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853d43df-6a06-49bf-a72d-3e1a2d594c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de4738b-249b-4d3d-8cb4-623169046278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3b7c85-1964-4eb3-b8df-34df30a50d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06ef205-ccc7-42fe-9a03-c51eae99b92e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391391fd-1e42-444d-9663-6625a34295c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b48e46-84d8-41ab-a359-ecafcee2472d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4538c133-1952-4007-b4f0-f31392f8f5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "456d3986-d716-448c-906f-eefbd1d4df19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02402f38-1a08-48e6-88d5-7bc5855b59ae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9b541e-5130-4ea4-bd88-21b3998814fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c722b6-f492-4f01-8e40-4a8faf32e8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874ede06-64d3-4f34-bbba-cc17579f3ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6d62d6-be33-49e4-8d6a-62e800ce3b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fc689c-bd13-47db-b7f6-ee9419c0db7a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65675bc9-26f5-4692-8c56-5d2ddfe4c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2376c991-1462-498d-85fd-f84675ce7f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bd2ee8-917d-428d-bddd-8f104088558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6305e524-37ee-4c6f-809d-937a60cd5591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5cc106-86fa-4b07-a310-606b10ecbf18",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818f60d7-8b63-4ae4-9bfb-b343f690c887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de4b643-fdf1-454f-bb85-b05abe1d2f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd81c8e5-824c-400b-8415-48d5855268ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eac63dc-77a5-4f26-bd64-19917dbab413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8a45c0-09d2-4a1a-b404-60cfe5eb94df",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9bd3f-9cbd-43ab-a7df-5b8efa37047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42e3051-3ac0-4d11-9469-8058aced5881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6224b2ba-dece-43d9-9cf7-a3c73c1efb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0856ed74-242f-4732-ae86-26e3b7035542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7bf203-bcb1-4d75-ac82-7f38dcaf38f8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f107e58-7ca1-4277-929e-3a16687240cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f8d273-5776-459b-bd6f-c64566dfd544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506d45e6-6892-4409-9f90-af6832b35971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1d0312-5714-4b1d-9a81-e3eaa30e883f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb98feee-2573-401e-b416-7841577fbbbf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e403c39-be47-410a-a37d-8f1324666d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc7df9e-09ea-43a8-ae0e-b6719ddfffb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efb6fb6-9cec-4da0-83ea-78dc9db58102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4041ec-f8bd-4c80-bb0d-e03a25b9749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dc9825-b8fe-452e-80ac-be3f7c1c0ffc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f83258-763a-43bd-b866-b0c903fb2a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42375b8d-884d-4dfd-8864-cc333cb82c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e63084-5804-447f-b4b0-67e79824c94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5adcb9-3a37-4ad0-9c1d-ebfe34ed73c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d49eb85-7dd0-4912-9b2e-fb932f21227d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91e9d85-8ffb-4eec-aa5d-8543d072d515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b681ea8-de17-421a-a84e-842cd9563034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56a774d-54ed-4859-9c24-00fc8b588ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "63927367-d959-4c36-8b84-6b1a0e204cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9dc2a2-6899-4e2d-9d55-4ae198215af8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1f102d-6820-4952-b322-7d81c4cf55b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc2d3d5-fd5e-449e-ad70-4a5cb9593465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4074b0c-5d68-4f4c-bec2-29767d8abbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14724e64-62a9-44b3-bc13-67c7482ce2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e207bebc-51b1-4925-867b-35ae6f1ae9da",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55484a13-66e8-4671-a816-59cc60f6eccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfa1fa5-3562-4f71-8ada-f89e159fa1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565e4711-c8cf-415e-afde-2082888a28c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b82dad3-9712-4a4d-a62d-87649ce01428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec6fd99-b40c-4642-9ba1-ca3cdd2acc3a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b2f8e1-b9e3-4a0b-8430-397bd964022f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b266ee-f640-498b-a4e0-a3ad559b2b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674ba642-7a0c-4e6e-a258-3f9c64137153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d29ba1-7b83-4c5e-a966-997c519c3b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e70f33-d230-48c5-99bb-79520e983b77",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ee26eb-5738-4248-a477-37ea4a3e5d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66a0d7c-1cad-4f16-8b9f-f53991992042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ba1ca2-ab3e-4e09-8015-b1375f7c828e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ca50d8-ee97-46d2-9fe5-6979d1e37b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ceb426-af9f-448e-ae5e-5c3b1c6c7dbf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530f64db-cb4b-4d63-8657-7e22f0fb62c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6ca38d-7db2-415b-902c-df7cf2064c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7f7758-cf5a-42e5-af4f-716459a1b416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b95946-2ad4-4fda-b233-f4027c26358b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f8a803-d790-436e-9e23-286d45c29d4f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665aa5ee-9ae9-4b4d-90f9-a0a562b21008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c792197f-0d5c-47f5-8dd6-8a1ec22c3db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d845a27-d5a5-4899-9661-225092e4f978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f335ae18-d8da-4f54-b914-55fefcd01c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d04655-a7e6-40a7-b4ba-11c0f1db66d1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5ac120-b15f-492b-9620-f09b632c2837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c604e94-3fb8-488c-b43b-71bb42eb0338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6a5525-b454-430a-a470-360ae5571254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d526aeb7-e6bd-43e2-b972-93c68f120490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db684b4-4852-4302-9d55-60ec991194a4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a23abb9-60b1-4b2e-ace5-f281f3d431ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3659b8c-0e09-4d39-9796-390e3d9605d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7134beb-d488-4feb-9eea-ef215fe6e0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a657de-27d9-4ea5-b543-3a28839e05ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f2da53-15f3-4a40-aef6-6cb9223c0bdc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de13275f-6064-4734-a1f2-7ad78f7ebb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a7ba7b-2961-40af-8b8e-8fe3e84cd6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66cb423-54aa-4e49-85a3-5d910c7e10e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58639869-8039-4693-9517-e16ff910554e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aea2a9-d468-49b1-93d1-4523927e2910",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07dcd46-95d6-4e51-aa93-54b6fb7c934a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fcbefb-2abe-49f2-a640-165ee4eb0116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd487e5e-2d2b-4f14-b273-41eb274e2cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132f9a87-cff7-4f4a-9d54-c71e1dcb7232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e39b64-0a45-4ce7-9725-1862b7e26218",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e854c0-3f6d-45b5-824b-fea3b1c629ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2914c6-5735-46ac-a9c7-ec405c0ada9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63651a30-fe81-47ac-a8e0-34d135a3ccfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ca3ea1-14be-4277-a17c-1a85e8584b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a878f3-8cb2-4405-bda7-71cc07e0e94f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e1638a-4030-4ee0-9891-42a26050215c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426c8faf-dbb3-4cd6-aeab-f5e1ec48937b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a41ccb-86bc-456e-a345-21b9ace1503a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc27063-a79c-4574-8bb6-ee22097720b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d297843e-7db8-4882-b2b0-9526ab09dbf4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7946d96c-3dbd-4243-8ae1-1601cca4dda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bb4ce4-6bca-47bb-a6ea-207e86c3755c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf413a8-2ae2-4424-9649-4da759fef670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6ab90e-7d38-42a1-bd42-42b0551536b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3630910-a246-4bd2-9c2b-c30125705e9b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e193d66-2883-4237-b934-c1b0a612abbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d13c8a2-4679-4973-bb31-91d4761e328a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8284fb-ab0b-4783-8fec-68a431982fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1407272d-9fc8-4f6b-9666-1dc9e1301c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e768911d-d0e8-4d49-a48d-6042ac34df39",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22ba1af-1719-464a-a403-ba9434cf5ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f473712-fc71-4c82-8af3-5e959f3b5c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f8406c-74a5-4772-adc5-63aa809f58ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "394bed27-8594-413b-8d13-1a9c2215c78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aadade-9b2e-4d77-bbb5-78269959d6c7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237ec8ed-9bf2-438f-b2ac-1ecbb98fc439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8be3017-5b42-429c-9bcf-a52f2c8495da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a65023-ecaf-48e5-98fb-440035dab943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd7f0f0-0d88-4225-87d3-7087eeb8af01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094d8cd1-a016-48c9-8996-3aaf5774f705",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6d2794-5674-4678-a4c3-ca4649250ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5335ee-9ae3-44dd-a454-6b98dc10a858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ace7fc2-e350-4838-8503-7c06cff9c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84eb5c28-dd00-46e3-ad4c-f01ee42d99a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac24a2d-4338-4288-ba35-d049628b40f7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f0e0a2-562d-4dcc-bece-af8669155fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b02b81-cbdc-42d3-aa1d-c4c5fb79a381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d564be7e-18ed-4e3d-98bd-638319b51a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8827f13f-2c6d-4529-baf1-a7aeb0128492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38714aa3-9d0d-43dc-b323-88774f4929f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4185a00f-652f-4c06-9163-2a1768f96603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a941f372-d4bf-4b3c-a591-3890be97634c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63485b8c-8c4b-4f10-b361-1c8f8b90784b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8351d600-e671-4c95-a41c-9d85e2941f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ba78d3-f6f3-46ee-a682-7832e1122c34",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af145a-2caf-48dc-92c4-01c6697c8032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67fa0dd1-4d23-41aa-9aae-4e10b47db224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3088fb4-1149-4014-9d3a-91fd15fedb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0b3c64-e25f-4d50-9cc5-dc3477ab23c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e68022-41f0-4e92-b246-8d12d4372175",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78816f60-85ba-46c1-b0c6-d3a99fb73d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fbd05e-af47-4fbb-a9f6-1d0acd2157ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3290b965-50af-47ba-b1f3-7c5a952b24e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db7318f-221a-4e78-ac6c-65fe8897a423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3c76bc-676f-4745-8e69-8e6b31bed885",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cdd917-6a36-40ac-abc7-ddb1b5a3ad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8256463a-72e6-47e4-91d6-70c5ab2de71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bbbf03-49d2-40a0-852a-52319fbc8064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6a38b8-df02-4d73-854e-8b0e15ecbaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b877de-2b14-4ef5-be97-de85ade54dba",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d9a5e5-e414-4f9a-beac-25d016788971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5dc544-482d-41c2-866a-fe42471c98c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead76efc-1d44-48dc-a08b-ab0d678a9f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f85c50a-4736-4cb8-8644-9272a7db8108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b141e5dd-7084-4030-9e87-89137abdb0a1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7807cbf-bfdb-415c-98d9-d1408d103de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c771d632-2635-4c77-895e-a7686243e7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1997a35-a0ec-488f-a11d-b4d73c4f6c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c232517-7188-47de-8943-b186e0820c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4015bb-1a51-4c57-9415-4394690b4f0e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9be500-ca60-4387-a94c-14de587e5e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40b7edf-2898-4391-88eb-81d822ccc9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b154ad7-3b18-45ea-85a9-1eb75b6d91e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55445478-216e-49e8-b54c-998b0c4f93e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2265bc-f883-4966-8a61-e91b27c220e0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88540913-d0e2-4699-be0c-f8c93d6dc565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bba4218-ebcc-41a5-a187-eed70924a39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ad3041-745e-4113-9c74-4afb0c3b309a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d22a2fa-c3e7-4487-819d-2dfd0ccead16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "408fe924-c41a-4190-8c1d-cb80e1fcc870",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46468550-cca5-4279-ad94-9f581f016202",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8b2799-fc02-465a-848b-c97d56d3fbf5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5186ac-656e-4dbb-bede-a9088ee968dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29730812-2d27-4ae1-b784-3c3b0ca14068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05441cca-7dbd-45e3-84e0-65e979e43eb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b8de23b-14f7-459b-bfff-e3352757c7c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02facbc6-ca2a-4f7b-86a7-544c5bcaa5e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4974bdf-1358-4c0e-9228-49cc653f037d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53ddfa1a-8a43-43e2-812f-8e3bed1a426d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5cd8c2c-f6ea-44f1-9330-7d7475f05429",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "699dda17-b6d4-460d-87fb-9d8f332f3e27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cb568e4-64ab-47e5-b356-e4f3522183cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc87e782-f3fd-4bf5-a61e-06224f41fee0"
            }
          }
        ]
      },
      {
        "id": "8df39311-62ad-4e9c-a86a-44105154b885",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "397ba3bf-4f7a-4939-a2e9-cae733ab35b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3445776-31af-4705-970c-e4f5df27e1af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f4147035-bed3-477d-8a2e-1cad9da086c1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ba1c22-63fd-42f8-8400-28527c7bfdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b56540a-a047-4983-9267-470fc2f4842f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf882fd-4ac2-4984-b488-46c03f6947e6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59cfcf3-afee-4bae-9241-2d88cc5f3a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bba198-e964-4a2a-a2ed-acd916c72a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bc3c72-d9ac-47a0-a778-a20d36381d30",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3123192e-25fb-428a-889b-319dd8ff702c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cc44f1-83ad-4169-b577-ccd0adaa7504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d64dc7-2840-41fd-b169-ebdd8c2feb5a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d6be3-4d54-435a-9d64-7ab5be642fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013cb3ef-07fa-4073-8ebc-13473ae89149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6406966d-9afd-4c71-bbb7-9c21387f1e9b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1cce27-6aa0-4b96-a11d-f880f417ad70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b31b59-c858-48b0-a19a-280232af902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a129943c-7e25-4011-898d-7968e5993b67",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b54922f-7e64-4200-a76b-f47ec63571fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d42ef61-bcf6-4673-9371-165dcf0a2ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c74ab50-2dfb-4e9e-9920-6586440d137a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e815afb7-30b4-4844-8ebb-8ac7b1e75b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8004ed5-c2c8-4367-ae77-03bdd6d353a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef6eb03-ec58-479c-866a-d5375a844ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbe01fe-5630-49f9-a55f-8de9384e61a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb42a7e5-6f31-40de-aecb-f04c480661ec",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704c7e11-a797-42b4-8b20-39e106ec5a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e15e484-75ff-47fd-b384-a31e9bbfa578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f538a89-5161-40ea-b8e9-10f46786d5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd223923-c259-4a64-ab52-01c0595df835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cad799e-d741-4554-9ecb-2a80566bd3f6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92dee82-be1f-4297-898a-bbec362efe92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a56938d-4a09-4606-b1e2-13fc5225981b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e42ce3e-893a-4148-b972-03befc07756d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507b3671-34ac-4286-903a-f5421716f78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca85a5e-0d0b-4e3d-9c5b-9633f8bd051b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a535a71b-7478-4452-ba64-88be5a94b05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c738ca-ac2b-4643-a71c-0e941658cff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc9a912-0271-4c1d-afe6-13474f7cfd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee2cfcb-2a22-472e-8299-39d9ef63a14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6330f45-d547-473a-b16d-83542c7f8e2e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d9be85-f6dc-4fbb-b4a2-5fccd004be06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddbeaca-c88d-4f7a-b916-457373a2ea09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651933f9-4699-4619-97de-88b40dd27707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2292c6e0-aa40-4121-a3ea-10960b8433be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4baf66-abbe-4309-a8c3-2d0db31f0e79",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deac6ac7-ca06-4416-9eb9-dd82bbd2c2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47f41bf-d677-42bf-a106-7e5ce626b2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33c6129-8085-4211-b3e2-530c6df8ffad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0db7b4-c148-48fd-ba75-0f34afba6251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a7d507-f0a0-4b39-b710-196aabd370c0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da997cd8-1767-4a41-8efb-8fb8fabd14e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb7dc174-8e9a-4d7c-a759-19d3c3badf08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdef922-2fa6-40ce-9998-c871f25d6c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e531be12-b865-43dc-9331-fbfec43226f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc30ac2c-46d0-4e36-9731-2473ffe6baa5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ce8aba-f1ab-4c38-a316-57bddd34e3c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e5843a-a23d-46d6-b306-6b651f58b2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb547a9-6326-4e51-8296-b932f3f40e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82555632-ce27-494b-9e24-cefaaab04a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8cbbbb-d2c7-4f07-ae5b-c6e8d9d33322",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc20cca-5ed7-4a11-93a2-a4c450cdb0e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec89a3b-96b7-45d4-a4b5-e3438a9b88bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1f0c8c-9415-44c8-916a-46580eb4655c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a507cc9-4a53-42ff-9c4e-c32386f71597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7041aa83-fc74-4320-afbd-0100b90e6944",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f972012-4551-46d8-b8ee-91c3635c8464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf298ea5-f32e-489e-bf92-7836aee37e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86ea2ff-b9ea-4ee4-9c33-bd376c4a6ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e06d9fe-e31a-4083-9304-3ada503af648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc7120a-9077-436f-ae74-f6e1608462e7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec3794d-33d3-4a71-80b1-0751d5f109ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90329b6-9a11-4124-a8e8-abcaad7685c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71080f0c-24cc-4d58-ba4a-aa161d6433b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c19dc1-aca3-4880-94d5-9d583f5370dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae0b3ba-ea55-40f3-90f4-d21550715e35",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f132126-46f4-49e9-ab54-e94caa1e3d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2825e84-a943-4444-9015-e2298f390152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21ee064-4ce8-40fb-9bbc-a6a931de445c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ca1aab-51c4-418c-8b33-5d3be242cb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7418463b-459b-4d03-a242-2867c88cd8f3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0122c5-a16d-414b-8c44-acd48c27e1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a820cb7e-1bd3-4b38-8ed2-5ea8b666712b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3b6aaa-1a47-4cc9-b8d3-67b97e429abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31493fd8-c1d7-4e7a-ad4d-799b399c4930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d95c256-3eaa-4df1-bf47-ebb2536acafd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb287ba-ee8e-4ad4-b416-c65890b2a364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9a7ba8-3a0b-4e59-a385-bba348ca0350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28896d7d-7ff0-43ca-9290-9343963ea613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcc4135-4fd3-4975-8f44-879739d52390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a041c4-8656-418c-b223-100df97c2bca",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240a868f-f8f7-4ccb-80f5-5ba342158811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1429e587-76d6-4f6f-8f24-a1f2cb9eefa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3a4bf2-159b-4bea-87d9-265e9f8f598f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cceaf7b-d878-4510-98dd-9a28d75e1c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dad832b-d9ae-4f05-864a-3dccf84d8156",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016f61db-0ce4-4243-9325-b48e22af5e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5474a9-2c75-451b-b606-032827aae51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db0b7f2-16ef-46a6-b0e3-8f11f5af31f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b190019-ce9b-4158-b6e2-92f739592a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefe9e14-ca71-486f-ac3d-cdd4ccf1d392",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0660d38-45af-41b9-a4ff-948535d56b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010dfe3e-8af1-4b3f-bd08-c4a1a9e0a1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04fa28f-77e7-4e84-abd4-68f51a58221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4484637-2995-4e0b-b33a-2d93d8d73bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7107b46-9514-495c-88aa-fee6147c6de1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785282c8-7bcc-4378-9bb1-117361909d9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30787ac1-f7c4-4c63-a61d-f8e1a005c2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7238eb49-5419-4f8c-b451-d8f58d2d6297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce1059a-5cca-4554-961d-9c44dc2b1c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220345e0-8c1e-4f03-ae43-012fc5b2e849",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514a0d5b-381e-4a61-88ae-89da14589865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3343371f-0641-48cf-9179-8d4b8927b430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70de78b6-b7e0-45f3-a043-0dcd263d5500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3b511c-4a4e-488b-a076-3db18a71e755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445df73c-f7ce-49f2-bf65-455a7a83c584",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4c39e5-26c7-487e-89c1-8332a72cd934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61960b6f-df60-4c55-9b8c-0be788238de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3baa6e-5a78-4fa8-8b57-93e1a6b3f765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb513cf-d35c-4828-80c0-c9173bd362e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66197131-28ff-431f-812f-efefb1063a39",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0de406-2b8f-46e5-9fc0-b8e058b967d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5892818a-46b9-4b74-a65b-018bc17b3788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9d8596-ed4b-4728-9688-8e9ed3f63a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d317c4e-757c-402d-81e2-38f0a330fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021e93d5-8e26-4ad3-a3c0-3d05669bdc8e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c12fa6f-2f2a-4d97-80de-8dcc45b4a1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3a040f-1216-475a-9ceb-83c34f428596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670441d6-acd3-4ece-ab19-1369c2024bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114d5dd0-5537-42fe-92ce-e2a25103d095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337d9b75-dcbe-467f-8524-d54575f0f8df",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad6de03-fe92-497d-a1c9-2ed5afa73498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f94ef1eb-363e-4671-9d81-94ab5c8408a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74665069-e0c7-424c-9c9f-7965fb7b8bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe9f787-5ca3-4eda-b6a4-4be65665e32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5342a9-83e9-4cb5-89dd-7a8fde784a5c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b18ae14-55dd-40a7-a088-10bbb7ff4e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bdd7a62-aa59-48c0-b831-2086f5b3aef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d52184c-718e-425c-b8f9-90684bf60a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4979d1-0639-4940-856b-9a49b2332fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43107a4-9783-4219-86aa-d1255e623722",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed38822-173f-4f87-b88b-c9731297717e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4db826-b6c8-4d58-9888-a19152840197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d544ac-3860-479b-bd3a-ff7d55b153bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d5a014-b3ec-45fb-8e12-21eb4c60d05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00035742-416e-4bbc-8274-1185dda82b4d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa4411b-cdd8-4e8a-a9b2-83cdb780e35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94fe44fa-b620-4bd4-a91f-07a2e1fef8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03327efc-22b8-4569-b89c-20dde079cc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a105e36-c34d-4d50-a41a-cfd070167c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a78f08-1ac2-4510-a921-deec0d46c995",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198a3455-d0bf-4074-ba23-49b32e83befc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd44a118-7302-40f1-af5b-f60372efd402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d19b858-d0a4-47ef-bd1a-d5ea267bb5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47371130-506a-4bd3-8294-c90a420f06f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c51e09-ba8d-458d-a135-065f7e71d73f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78646f8e-111e-49be-8fd2-7f3be0d14aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7838459b-ed16-4f9b-ab41-88ba9dddaf6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b9273f-53ba-4832-ab45-b95cb6a68221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c04ba41-34bd-4a81-9297-f68adb0fa309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afb6239-12e8-43cd-b209-bff3097b34cc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eca71d-238c-41d6-83f7-cd61b3d1e280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd835fb-4d07-4126-b55f-9a5419653c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e084d0cd-6cbf-43d8-93db-d5eb1ac012b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62e92ae-65e0-415f-aaaf-b5af08d33cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035b2996-e099-4e7a-9945-b95b88bf081f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fea2be-b6ed-418c-ac88-5409b0102ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7bd03f-979c-40d4-882f-7087b1388d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faad711-fba6-4216-ab96-58fa6451c640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef0f623-19f8-42c0-9759-71b31942cca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe7ba58-84b9-4729-a0ae-4fef50aa3357",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78665743-cde1-4b33-8781-357799db682c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e4c082-319b-4184-9db2-3d67069516bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf1c395-35ea-40d4-af56-5e8d57bfc29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b6fff6-5be6-4fe7-b1b6-c7882152d56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44354464-0493-427b-83dc-0ac0204273fc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec0ebdd-27e4-48aa-84be-be40e524562b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384163c5-ae87-43a1-a040-0ae8cd7c1861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcbf2dd-e744-4c96-94a5-41a202dd5319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8462fc22-2882-4155-b70b-4c42a59519a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1525496f-3943-430d-864e-ec1760dc1f75",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216f9f7b-404c-45f7-b0ee-d1f7716698b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea1fcb3-8d00-442d-b538-feb871a1b279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90752c7-f276-4f5b-a088-ceebce344a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef80e856-001d-48a2-a1de-20c2a99ec22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7eb83e9-b7c1-486a-8e8d-672891921363",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f3cac3-2fe2-42e1-9842-75d58ceeb6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a60152-efdd-47d5-9dfa-3b54d8480f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380d4b3e-c70e-4ca5-906e-e727d7a7bf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecaccdb-f93d-4cc4-828b-78325aacd48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f632d4f9-ff08-4f6b-b7d7-093ac2d9f74d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c50750-a4fa-4eae-b60c-d44a5b960e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8eb2776-161b-46e5-ae9a-96263129615d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e492812c-5df7-4b15-a25b-a50564a783c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d27048-544f-49bb-926e-61cd8b395e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b199db-d443-43e8-9400-d63e1896ed14",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f189a93-40cf-469f-abdd-36657ab657c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3a1734-6d7c-469c-9c7f-34597dc35ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca963e3e-e8eb-43e9-a103-ae56d782cb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b749c5ba-fc71-44af-a27a-b6a6743cd8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08da8031-a571-4deb-ac4c-99948ff831e9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626135b1-915d-4959-a7e9-1908c6397439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fbc3ed-88cf-414e-8af6-855dd506fe85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe573b3-516a-45e6-acdc-2a4e44047c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdcf9fe-cc53-444e-a659-c12e52e9401b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1967fd93-0219-4e74-a206-e19849b9e20c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9390731-ae20-4e51-845b-2ba274a0f2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32485ca-9939-444c-ac88-5fb006d7ab8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b947f46-0c85-4652-ace3-4a1539435371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b439d70-79dd-4138-8727-55509397e951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bcd9fe-fbeb-4d4d-abea-693efe8e5a17",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db329fa7-7cd2-40da-80cd-48289bd34cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5070c4a-466f-4f8c-87d0-6c6fbf297d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a06fd2-c636-4e98-aa67-9a6acf685b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfc2749-8653-4066-8488-35472b8c65ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6b6588-e9d7-4fee-8580-3b4437fbbbbd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c66a59-b60d-4142-bb52-d363bf3aff7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cea399-2ad0-4980-892d-4d7134c8761d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd01ede-b809-43df-82cd-b6ce9c6470ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f10540-0a9c-4b00-a5b1-50d05157cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98545c5-e3c4-4e10-a8c1-c3ddb87e1840",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae4b76b-bf15-42c2-8bde-b081709ea44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e28d379-723e-41ff-8a6a-1f8babc5a9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611ae147-a8d2-4893-a651-6c7add546476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b655cb-2571-4a0a-bd53-6610c1ad44da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e81c96-5cf6-4a53-a4be-8fb75d801685",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c6a629-32b9-48d9-af93-89a6b7b9ed88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e282ca-d735-4db9-8d5c-c97e6f22d608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db5e1d6-0e64-4fc2-8d95-c30acb957058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d814bb30-5313-4b5f-8db4-1d620f8c4453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125a5787-c3ac-432d-9c84-f8f75a01397e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043565e1-100a-4ea7-bfe9-21060abbeb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ad5c09-53c1-4291-9a52-4bc01d45be4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1941f471-ff09-4b48-8fb4-e5740eae2bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115614fc-b32c-43f4-a27e-e77f0d0098e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7fae89-a7ba-4800-82ea-69764adfdea3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efc89b1-6d7f-4a5e-bf5a-cb00c5514bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df50e66-2013-4be3-9ec0-e389c568adfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac052518-1ec1-4c6d-9851-7b2ff9346a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27927e33-9c2a-4891-90e5-5556d94ac989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8a0e64-c28b-4a0c-bf11-3d84b6a00297",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c534e2-3e79-4ca5-8b5d-3b46071d4d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af679875-1966-44d1-9a43-7e9b16e2f6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ee1e74-587f-42c9-b7bf-6d2adfb65e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b485de2b-e3d3-400a-bb96-def38c1dca82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3774f75-3f23-46fa-8424-d06abec725e2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d036b14-9738-4140-ab75-19a1284bd861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c844f38-3ad0-47fd-84fe-844fb6523501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f4912f-5858-4c50-b24e-e30173694dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adba2cf1-11e1-4e09-bbb0-56c319967cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff046dd-f5b5-4046-a15c-f907702b6dc9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd159561-b045-4875-9d21-21a99852ab7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97289081-1ba9-4072-bb16-8198c48c5735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72591ed7-551a-450e-8efb-0bd76b062360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4a2b6d-bcb4-4dbd-8024-18f33c00b5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790f200d-89c9-44e9-956e-0ce0ee9c4a8e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f15b4ee-adf5-4aa4-9ce5-b59748a28bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc04d928-58d9-4c6f-9f81-129bad55f2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1521d9-a6d7-4f0a-802f-3f8a2bda624c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fba50d-d865-44df-b79d-eb0d98eeae8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15378e9d-d746-4ecd-bfe9-129c8ec9629d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d6ed5c-2c8f-4e13-af54-35387e0a6c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b6ad0a-d014-4940-a7e3-997eb2b54963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdaff3f-d917-4518-b8ab-81ce657d43b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d569d9-35c4-4fea-9b45-6cd813e74b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fa91fd-8411-465b-9548-cb8c32b398e8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fef5b17-8092-4aab-b407-af5a61347f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7140368-7836-4b36-a7e5-92d89f228dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f63ef2e-7a33-4e66-9edc-11052248ad67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fddcdee-4fe9-4e11-bd1a-61698e572ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b02578-d02e-4eed-97be-008fed91060a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a22c1c-4bcc-4c36-8533-4fe46511eb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bf7341-412e-4e73-b969-53b1b530b272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e786e270-84b7-41d0-892c-368212257d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bd8621-1ed1-4c0c-a4eb-2ff5d28f5cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bda586-ed72-486e-8dc5-f9501bd604c8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd3270f-cc7a-4807-a3f0-041da4bd750c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100d2db9-1450-4e22-954b-d2b27d4cd5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0998c40-cdd6-419f-a639-fd575bbcd196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e511c17-ce1f-4ce4-af88-ae79053ff6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc0b8db-ea4a-44a0-b344-dcae2b951fd8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ced654-6bd3-4b55-b879-38911a9cd218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7c2ea7-a8e8-413a-829e-98f8ec807df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88dfd3b-731b-4644-8302-467fb9361076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da16346e-76a4-408e-bb11-f91d935d1349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73846fa5-e0d3-492e-a79b-1462b11b5e2f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795ab320-8404-460c-8a87-470500b7f890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488577f5-f69f-496e-924f-1b34288cc3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08f984d-a188-44b8-a2ca-93e94cdf1aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e95485-1d19-4290-b7c1-7b4a77eadafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0304e70-2449-4eec-9fbe-f65bfdb4d654",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1bd00b-640b-44c1-ae9c-0169cbd790ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b457bdcf-4c24-408e-bdd0-dfd669520f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b41da99-e212-4b7c-abea-97a88c8254ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cfc38c-269d-4cdf-8eb5-2e1a60bc7fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9261e126-84df-44fe-9832-3138f495f041",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df407360-18b6-466f-96c3-115d81b5fcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a09a15-d8ca-48bb-9eba-bfa13f1ab126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7179e7-de2a-4490-ac5a-8528deef9161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d29d975-e627-49b8-83ce-20ab91dfcc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40069594-b971-4e5b-bc04-4c0576137ad3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f5f582-3e46-4e74-ab2a-52bbd34605e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f5e362-4aff-4c07-8f97-80dabfe9ad95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef50f42c-0ea1-438b-8dd5-728db1fe7ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2d2423-d1b5-4b2a-8d88-4500e677d003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f19b832-b93d-440a-a0ef-b8bfd2bdbc1b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fd46ab-9ec9-4e3e-96fb-d1677258c555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce23ddc6-8fcd-431a-8eac-7c7c3c996ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7235bb-51f1-4473-9d2f-299a17304de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acd2bab-6644-4521-9f15-a7a40b4d57ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d591078-955d-4885-b5de-1bdbef25a547",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b7fdea-e2a9-497a-afcd-d1e59c396939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "771095f9-5c50-4604-9fa4-6f704b7576bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873d98be-76b5-4b78-9947-9bd8c8014590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b8ab94-c21f-4605-baec-167cbafb2ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21714bd7-00e0-4152-bfc5-f308388d5599",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b59014-99e7-433d-9939-aeefb6d2d2c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8e7c84-3e27-44e2-b814-8a56fe7093d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cdd681-1921-4e3c-b84f-16b455fa11ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2085e636-99f8-4827-ab02-ea2ffd75e107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dd4009-a3e3-4b57-abf7-6cbdfb4d5ce3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1553207-be16-4d46-a178-0c9b39610f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da1be4d5-b7be-4b61-b00f-320d805ae2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24490a62-e51d-45f7-816d-7070d90c9c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd90bbf9-cda3-4b9d-b4a0-1f4794a0b344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcdf994-af69-48b3-9e11-b0c996e5a1d4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fae83f-e0c1-48a7-806c-731414d3fee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e37181-1af3-4480-b165-975017948bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2188b6a9-7708-4283-8ea6-7e1656c3a2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6099489d-288a-4cdd-b1ec-8c9c36434678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea2bcd7-43b3-4ebd-82a4-911e3c1ca489",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001abe64-9ee6-4531-bb52-bedc78f7a6c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ddce21d-5dbd-42c3-a698-016f83db6651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e52cce-7c8c-4194-af49-f2b3256acb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e38f55-5603-468d-ae05-a94e0df88235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b5baeb-8234-4b9e-8817-6dff484fad07",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe98a8d-061c-44e3-bd49-37c3462cabdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0688917-3df8-4725-97cd-a65c9a8c16d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbba5d0-b265-4974-b54d-7bd03467674f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1e41ee-9328-4d7c-86bd-144b524ff0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1977db-0058-42ad-8fc0-74e26ed16283",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adc01e7-01c9-4994-b756-2c28932db190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f198de1-defc-4b3e-8749-d48abdc606ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdc16f1-e105-424e-8462-d0974c2e5231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b75748-ec2d-4329-b9e6-77c87afc743f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fa75a7-8220-42e8-af01-88484ab7cdf4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0281dd72-1b7a-4487-b40b-65da075ab569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd754e16-a6ed-46ba-a56c-54882f1f7b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c75ea52-1634-49d3-b785-f417792ba40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cefef3e-12e1-4475-88a7-374e44ecdd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada65458-8df0-43fc-852c-56116228fb99",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c265066-c0e0-4ef7-b8cd-f029d49a7407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344a559e-d40b-461c-b939-b3a2359b9f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da1d19b-bebe-4240-8650-28c831bac8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6beccbc3-05d3-4b73-a417-3b067c88c5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8c0163-d55a-4012-88cb-90f7fbff2f0f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e317bfb4-d87b-40f5-98ba-32a78fa5731e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad371fcc-304a-413f-b301-e79868f16a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443e5497-eac6-42b2-973f-b11197af0b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808e1a4c-8df6-4f70-a4c3-20e4591cc803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e581f877-ac6d-47de-bd7e-634bc569968f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58feb7e-a716-4939-88a7-326d759d0ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "370b9534-e343-48c6-8dec-956d7cd38020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64805550-64b2-4338-bc23-4830b0e22bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d20a58-bafc-44fa-8382-7b9f093f8f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06da0270-33d0-4df9-a796-1f26f61716c6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53502bd0-b453-4394-b34d-455d220eb7ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336838a8-cb16-41af-83b7-ea681d7ec200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191e457f-fe57-4fb5-90d6-1378c06a5d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f43c2ea-a0df-4938-b3d2-cfd993f917b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca30393-0f62-4322-94f3-0ffe609f75b2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfc557d-7f5f-4dc0-a83d-3c0daf0b8be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c0eade-0138-423c-8fab-4b15cd53e732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "898284a3-21db-443a-8200-be4334781b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e5fa76-6c2a-420c-a38d-bb5624769db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8a0556-4321-4e07-bcf6-99abd06a6684",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bb4a1e-258a-4b80-ae14-e5a65f5a696d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b79f7a-59ae-4709-8d17-bc7ec251cb39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca065323-3578-420b-b6a0-b3d3c573a75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc71661-4a6c-4f9b-9542-466669d3d642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54e722c-1b85-48b0-9784-7d5a7c69611c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fa3b47-90be-45c5-8388-d4414561ef34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b06226e8-9571-47c5-b3b4-76a6e2fe8681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c2675f-e1a5-4d3c-aaae-5b7070e0a70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1e5b79-de53-4095-b908-f743ffd72e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dd7f16-7c94-4adc-a8a9-0de4e94abb2c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1604b79c-0166-491b-8834-56d3279500c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67224001-e096-4398-a103-7904b44931c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2c8db3-747f-4fc1-8c21-f9df4f561f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15dcbe4-f7e6-4a23-af85-554ac5a24f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb00a277-9df2-4bd0-9723-fd85c5f5158e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a0fc68-afbe-4e2c-b302-3ac491ab89a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca66169-38fd-4a3e-a51d-85f1154b6a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ea1890-1ceb-4e52-a25b-3170925f6428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efda05b-ddec-45a9-9935-61d71b14fae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa5c347-eeee-4d25-b80e-1c11f248b10d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d10725d-b8f4-4994-9440-01fda9420017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de266d1-a827-4f16-9bd6-e40ed79c26a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23532fb3-5696-4682-9c61-53d91d22b0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2d431f-58ad-470d-9c79-ee0fa2602b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79658fff-5b2d-4d1f-ad6e-b1ffcfd64be1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9388171-000f-426f-82f0-3950e5370e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209b61d3-b82c-4e40-9cd9-341a09d87993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f01aa09-3970-4ca7-ab84-97307388971b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90e10f2-c16f-484c-a966-d5c47b1b2f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea6a40e-63af-4626-a1ac-ee8911c31852",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34804660-f11e-4d43-b49c-b4d8f8216fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a48d67-c6e1-4b64-9a80-1dff0133c865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a615cc1-900a-40c1-a9e5-647716764c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c3de13-d6f5-4d37-9453-75fd9bee87a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69265729-fcf4-420d-b9aa-5c6441e8f98a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac9b8b-ed26-4d67-9752-e8dbe2f6a181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be9dd827-bba2-4245-900f-425478918c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a241055-bb6e-4695-8d7a-3234665abbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2b00a4-630a-4997-b4f8-79246896ca61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f4bc5d-d0c6-45b0-9f98-6c8242321bef",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7137c2-b000-487b-9749-43722ffa3eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa6c1bbb-0deb-4358-bd4a-e372e29f1708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1db633a-1270-4ea3-9176-2292b5ca1bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531b71af-34b3-4d5e-8f24-77de94531129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145858b7-e180-4a9e-b3f6-2663b359bb9b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8418b6-b2a0-44c9-90c3-117ded503a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bdabd20-41d5-4354-9ff2-a261b51f480c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a54bf-4a6d-4791-9362-81d8f125621d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9347b5-c616-4910-a2c3-93c9060f1887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8168dd5-0f9d-43e8-88fb-6fe5226a0f15",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729b75fb-cc11-4a31-9f79-9965fad5d279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff7b006-5f47-485d-b300-5f6893ccf945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de1165e-b82d-45b7-9140-3a1c721d93b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3a2ad8-c631-48bd-8299-2347ce43cccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f90e2ce-b36a-46d0-aa46-259a85fe95ac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f4ac37-600b-42ae-acf9-18563ada2ee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1feba9-e31f-4dc5-a552-bc4630c267b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271260a5-5d9f-44b3-894c-a29450a0badb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d16c25c-e784-4df8-817a-4268e9014797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b0f621-49e8-4685-a385-d9be57aac2fa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49ee6eb-81c0-4dbf-aeec-e9b5aed2d625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa801411-c51c-49b4-afff-5a1c1f6b4e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ac78c8-d105-4f59-ae72-81c8790d3492",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da184d1-6a00-49ce-8053-caa6d50dcd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf2cbeb-a540-42e7-be1d-38e15d9fac60",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d1673b-36b7-40f2-9063-11df2b11f337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6758ae4-b11f-4134-9e97-0c3714e0a086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0305c9d3-dbea-4635-84e1-50c3036e8749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf9d51a-e390-4d44-909f-4cd3fd7b7c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711fbb71-776a-470c-b804-2507316fe810",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7898b0-9c92-44ae-8c5d-620f4d02818c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8c1e76-195e-4c21-b932-aba21800486b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88361be5-11ce-493d-9e59-737bc974372f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f36e44-f565-4200-ac40-d3de145ad7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a936cc-5276-4308-a139-0d64f6edbad3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25330577-340f-4eee-a578-8f5b2a070967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d221e987-aba5-45b9-8382-3a886ec324b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c83ede6-14e6-4a4b-89e6-6fc24a43bd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5083bc-e516-4c4a-9f43-3768da06ccb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5967c3dc-aed2-4595-8772-c9557c604043",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c327e961-e3f8-43ae-9091-865e10b99b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a49148c-2d96-4b2f-bfac-dd7e4e45b9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed9cb0a-0439-4a4a-b2d0-961bcac0ed6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f859213-8b73-4df5-aaf5-78db387699db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ed987f-c2cb-4014-b242-39ac753c2447",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1e4182-7186-4e37-a873-175ba10d5f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "891ca4a3-107b-4848-8004-6008bdc3912b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cc7aba-81d3-47b4-a5cd-7d641a5b7b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bcb8bb-1dad-46d3-97ce-4eca9ea8dd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce4f2e7-2551-484e-9c72-d4347a31ed93",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e64b2d-3e54-44ac-a535-c8734ad38aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe7c3bd-124f-4a58-8ad3-2e66cd7ece86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb02fda-8be4-42c6-923a-fed545568fdf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14afeea4-2ee1-48e8-823a-cb2bdfb3f48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee1a1ca-12fc-4a7a-a29c-de17d3d91af0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c22eaff-986d-456d-aa23-9e78e45b4427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fda3581-22d2-46fa-b184-f1e24472fc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c11948-fd6a-424a-b336-7569b2114e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fadd14c-1199-4c5b-b541-48a9f6982eb2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c21a5869-60a8-44f9-bb04-8d4e34dc19a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37f999f7-61d0-40dd-9e82-5287b8bf60b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0715078b-8eea-401f-a65a-cbeb27e24d0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd292c12-ebb8-47c4-ad5e-24eef259a764"
                    }
                  }
                ]
              },
              {
                "id": "5e15dce4-1774-4e6b-93fd-ac337fb73c65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de16210f-14b3-4a75-9822-d8ea84a8b9b5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7342c8ea-67d5-431a-8822-8749007c71ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d422c0af-6578-4b7c-9f04-7f654fec7650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca178b23-2393-46dd-89c8-681d9ac80e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40fe4dc5-4d93-4c44-8631-0081fc353604"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6e9a317-d10e-44ca-90b3-cf8b180b6045",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72f5383b-80cc-422d-a5c9-36dd354a951a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2397740f-4e6c-4f44-98bf-866769fcf5e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e3e7b17-15f2-4632-85e8-2e6386cc33ef"
                    }
                  }
                ]
              },
              {
                "id": "1de46774-f52a-4a33-bc0a-ab94402020ee",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "682533bd-52e9-4dc3-b61a-9176b39cdb79",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e11e5b9-225c-4b4d-9508-c6d564b196e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "404aed8e-fb8a-4080-bab0-bff28201ec41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51155880-3456-4adc-abab-e075e1fe3042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72c8958-107d-4e06-82da-376baa1fb206"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "318e1745-bf87-43af-9afe-caa3a7643448",
            "name": "Positive Testing",
            "item": [
              {
                "id": "719b3309-44e5-4786-8df3-41538b8316a0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38b14d8f-0b86-476d-9a8d-42b415dcebb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b942c2b9-88ac-40aa-8f80-95471e9ebb66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72aea1c8-0a4c-4acc-8e59-798a9e1325c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de0bd690-490b-4183-a207-4487175a6d7f"
                    }
                  }
                ]
              },
              {
                "id": "5f672821-2156-45be-9b98-d53f5630c7fb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4782ea22-cbe8-4fe4-960d-81e8b0499f56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "56b94e84-a95a-442e-9154-8cf0d7847f78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae992b8b-1d6f-41e1-9eff-47dd19ae700b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30c53780-f8df-4a3b-8991-0f1af7883a0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04df52cd-291e-49ec-beec-ac0a6c37ec8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d11c08dd-5f98-4555-b08d-4b9fee20c49d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adbba57f-0987-40a3-a292-6ff4e3bf96e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21303ec1-0ae1-45a1-b098-83f7e5b83cc4"
            }
          }
        ]
      },
      {
        "id": "ee094421-66cc-47a2-9f3f-29a67a1c6597",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "68ccbb8f-200f-4538-b817-c627d1a0869f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b4749b0-f5e1-483c-8311-512e3af5928d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "785080c4-a753-4f1a-93d8-def61046b715",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1b29aa-305e-4007-a216-e2a6d8918cb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3faaf73a-57d1-4dde-8132-a853611de7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0454692a-936d-4dee-a037-01852675bef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c70d7eff-6588-4e87-bfbe-3d075d291b75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "356f4899-792c-4319-a1b4-4f591fd8babf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ba8477a-4972-4ce7-b8cd-2d964499420f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f18538d7-d553-4a65-81a0-8419d18da5c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cda3e5f6-a01c-4da1-a99f-fbab6e5f971e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ea3dd2d-71f9-485b-80dc-ea459a93c88e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1dc9cd51-4063-4b05-be6e-b6e667f66ba8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b82af0e-f943-4d54-a279-c239ab10cd5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94286278-b86a-40f0-8e0d-9aa44bb41a0a"
            }
          }
        ]
      },
      {
        "id": "38c1dcc1-26f1-459c-baf8-935a0e3b87da",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a7871acf-0e00-4236-88fc-232b737ecc23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae73224a-3a96-48bf-b803-55a84f023c0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8348e75a-acd1-4530-b31f-567acbc082f0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bb8864-49ff-4c8b-a679-1b54587bb5f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe1b1cad-0226-4a93-a45a-716b7054bd93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9379fbbf-2d4f-47a0-a72f-d0e98cba7451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef3368b9-9dbb-42a3-bd0b-befb7aa11090"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b506946e-0820-47d5-985a-67cdf820c64c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e234752e-42a6-43a6-83e8-2c686131e56f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e0da12e-be3d-4c11-a60a-3d07d5d2b2b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2b3dac9-93b6-41c7-9228-96cc90ebd10a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0912297f-0498-461c-b863-6c737435e54f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a200c0f-7ebe-4707-b1f9-15f75218fa52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06747c5b-4c25-42ca-94c6-237f8b7cc1fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42c6d7f6-e5f3-4d32-b7c5-5ee0948b16ea"
            }
          }
        ]
      },
      {
        "id": "0ee233c1-7dd4-414e-aaa0-a3bb0554cac6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8572bb7f-0a08-482e-9b7e-e717fcb0ec60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2619ada-da6a-42bf-a038-b0e4eb9bf922",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4dbb6ea1-ea7d-4046-9091-ab24c1898e8a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2dcc80-a678-4d73-bb5d-dcff30d617dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f53788b-91b3-46c0-9651-c1ef684be766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ad4e4a-12ef-4f54-a63c-edbfaf0a9020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffb5ea6c-99b2-42d6-967c-3ef41460cf8b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d50dadf-b8b9-46e1-a25a-1568f467f0cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "804916fb-697c-49d3-b7d7-3892923cc5bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b7f26f4-3cfe-4043-921d-226cff265e44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "595a6d13-691d-4230-9124-02849eefadc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "635ef8e1-41e7-4b95-ba77-dd014f36a520",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e8702f57-52b9-4bce-b82f-7921db6a639d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b730a42-9104-4868-8d5a-e09cbce03498",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35e60086-af8f-46ab-8cde-eb11d8783bf5"
            }
          }
        ]
      },
      {
        "id": "9e785e8a-8d7f-499f-8e19-2147db3c406e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35daaf78-a407-472e-a9c6-9225e786980b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acad282a-5625-4a14-98b2-5de51bf74b31",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b0e71204-72ec-471a-a8ca-471049993cad",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e519627-8b8f-40f9-93e7-4e82bd116c21",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93a22699-f5ca-4759-bbcf-3811ea78afb6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 80.64788732394369,
      "responseMin": 10,
      "responseMax": 4403,
      "responseSd": 355.98392108773885,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694392392045,
      "completed": 1694392426604
    },
    "executions": [
      {
        "id": "dc4628e3-976e-4beb-9d52-bb679a789baa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "07547fda-37c4-4ff8-8711-7a055282d619",
          "httpRequestId": "849fec37-01ff-447a-b4ed-87180a80b088"
        },
        "item": {
          "id": "dc4628e3-976e-4beb-9d52-bb679a789baa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b2f5dc0f-00a7-437c-bb5c-d886da0906d4",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "7fc0bff8-2343-4ad7-b3a6-8540fecc19ef",
        "cursor": {
          "ref": "b55f33aa-d8bd-4b75-b917-ac750cc0224c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f36a9560-278a-4a24-bff9-fc212e56f6c2"
        },
        "item": {
          "id": "7fc0bff8-2343-4ad7-b3a6-8540fecc19ef",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aa28d9fd-4600-402e-b53f-14a06540d903",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "3c881897-60a2-4ecf-a9c9-4b04f1f83474",
        "cursor": {
          "ref": "66417f1b-a064-4ae5-ba99-0047cfad03c2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "03f35f48-1cdf-4cea-8a7d-e8e02db4b90d"
        },
        "item": {
          "id": "3c881897-60a2-4ecf-a9c9-4b04f1f83474",
          "name": "did_json"
        },
        "response": {
          "id": "bf91a540-a756-4837-af81-53dbf92a9496",
          "status": "OK",
          "code": 200,
          "responseTime": 318,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ac94c3-5641-4e6f-9153-29174195dae0",
        "cursor": {
          "ref": "8d56a9e0-7f88-4d75-afc0-86f4a173c7cc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6448c91a-9b37-4d3a-99a1-99f7478448e0"
        },
        "item": {
          "id": "03ac94c3-5641-4e6f-9153-29174195dae0",
          "name": "did:invalid"
        },
        "response": {
          "id": "b714982d-2663-497e-8b34-b151483a6fd2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 698,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ac94c3-5641-4e6f-9153-29174195dae0",
        "cursor": {
          "ref": "8d56a9e0-7f88-4d75-afc0-86f4a173c7cc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6448c91a-9b37-4d3a-99a1-99f7478448e0"
        },
        "item": {
          "id": "03ac94c3-5641-4e6f-9153-29174195dae0",
          "name": "did:invalid"
        },
        "response": {
          "id": "b714982d-2663-497e-8b34-b151483a6fd2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 698,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760e910b-3590-4ec7-b296-9fab6b7f1176",
        "cursor": {
          "ref": "9fd54c79-abfb-42d7-90c1-8e3e6d011257",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1d9e06d9-9599-42be-94b6-6b5326441599"
        },
        "item": {
          "id": "760e910b-3590-4ec7-b296-9fab6b7f1176",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "65b039d6-691d-47a3-8aa0-f108f4c39ac6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887526ba-ea0e-4828-9659-74262fcb0102",
        "cursor": {
          "ref": "ff5c3e80-d039-4e20-9a84-c92005fe23d1",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d0cc3112-2470-4899-81a7-83f9696efec4"
        },
        "item": {
          "id": "887526ba-ea0e-4828-9659-74262fcb0102",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7cf85aaa-a839-4ef9-8d8d-6c8fea56661f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60527f9e-801c-478c-b2d8-59d3cb567fd7",
        "cursor": {
          "ref": "0c583529-d34a-419e-96d7-0ddb5aca5e68",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4798b6b3-774c-4277-89c0-6633618e252b"
        },
        "item": {
          "id": "60527f9e-801c-478c-b2d8-59d3cb567fd7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "49d4b7ca-b573-4fc1-b469-08ca369c0156",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf58ac2-b03a-4e3b-b53f-bc404de20a9f",
        "cursor": {
          "ref": "ca904a43-66ad-4593-a04b-afd0f902166a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f07c12c3-ba00-4ea2-9597-c01c43cf75ea"
        },
        "item": {
          "id": "baf58ac2-b03a-4e3b-b53f-bc404de20a9f",
          "name": "identifiers"
        },
        "response": {
          "id": "176e06ed-c61c-4056-85df-bcddfe01056d",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037cfee4-7b46-4e14-ad69-1d5982a123aa",
        "cursor": {
          "ref": "4d84aa65-10a8-4742-943c-35f2716e8924",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6888b2a3-a237-4370-bc24-0c98bc8c983d"
        },
        "item": {
          "id": "037cfee4-7b46-4e14-ad69-1d5982a123aa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a4e71e55-54c9-4dd3-894c-daab657fcc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c397a68d-e454-4723-92b3-4d7d1198856e",
        "cursor": {
          "ref": "426a8e9e-a91b-4c0d-9f48-4ac1ad497482",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8c975ec7-920e-4739-b4f7-14bcdaf3cbd8"
        },
        "item": {
          "id": "c397a68d-e454-4723-92b3-4d7d1198856e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "41bf86b7-d021-4a52-b6b4-85da1d64111e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b799bed9-65cb-45f0-8787-1cf7fec79204",
        "cursor": {
          "ref": "f5a744b1-fe65-4d40-898c-f7eae213d459",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "84b78818-d6f1-469c-a29d-5e948aca3e79"
        },
        "item": {
          "id": "b799bed9-65cb-45f0-8787-1cf7fec79204",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "afcaba21-2d85-4b78-b843-24a601a9950a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f078a3b-e27b-433a-b979-d3d366af7b93",
        "cursor": {
          "ref": "f6c7213d-4917-4a4e-b541-0b883b6c1570",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0e006c0e-5ea8-4998-a2f1-79d56322c21b"
        },
        "item": {
          "id": "2f078a3b-e27b-433a-b979-d3d366af7b93",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5ccc6dc3-a2b9-49bd-98c9-849d17120a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594ee23f-ee75-4053-954d-68a8be567690",
        "cursor": {
          "ref": "8efc2366-fe91-493d-bdf6-e8534a5f1ba0",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c579d0a6-d357-45ec-80c0-be6d6ca95c83"
        },
        "item": {
          "id": "594ee23f-ee75-4053-954d-68a8be567690",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "181d189e-f95a-47c2-ba15-e79b79d15dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5704a679-ce61-4839-8459-e3674ab51fcb",
        "cursor": {
          "ref": "ef76e43f-86c0-4c9b-afad-ea5728faa15e",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5338a899-d506-4a7e-b4e1-e828a85e5154"
        },
        "item": {
          "id": "5704a679-ce61-4839-8459-e3674ab51fcb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "021d246d-14ee-4b5d-81dd-df8cef3cc903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce35df2-53ad-447a-95db-7416c3cd119e",
        "cursor": {
          "ref": "f6ff892c-de21-4de1-9b1a-694aa4c42478",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f72c7d7c-87d4-4e7c-b359-c56cb392a4c6"
        },
        "item": {
          "id": "1ce35df2-53ad-447a-95db-7416c3cd119e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7062cb46-604d-4849-9c22-e09f5fc6be9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317819b5-0857-4f85-920d-8b4eb3092643",
        "cursor": {
          "ref": "329e184f-f13f-43f1-9660-2c4612aee2a1",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "acd539f6-3bbb-47fd-bb5b-fa3fc1b35c7b"
        },
        "item": {
          "id": "317819b5-0857-4f85-920d-8b4eb3092643",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f5e51467-e73d-4aa9-bb07-b0ce95fd4dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008f84ef-2003-4d09-8d7d-61236fae04c0",
        "cursor": {
          "ref": "c9beb665-49b4-4f59-aa46-83565074b32d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d74d595a-2fee-44e4-9ee5-4b5ca17adae5"
        },
        "item": {
          "id": "008f84ef-2003-4d09-8d7d-61236fae04c0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "be10bf15-ec3e-435a-97ce-2ac5ac536f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fd88cf-8355-4738-b02e-379031edc2b6",
        "cursor": {
          "ref": "36a22fcf-c916-48ae-b500-7e633c9136ca",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6d43a131-4c99-4dbb-8c3d-ffab8971c9dc"
        },
        "item": {
          "id": "96fd88cf-8355-4738-b02e-379031edc2b6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5a189882-2fcd-4159-bd66-2fd6c80f2981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df54fd8f-e84f-487d-8074-d7f22113de3c",
        "cursor": {
          "ref": "6ccd07c6-11a7-4195-9ad9-43baa6fbdc54",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4345ee2c-586f-460d-a950-877a3071a57b"
        },
        "item": {
          "id": "df54fd8f-e84f-487d-8074-d7f22113de3c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7d3aedfa-9268-43c8-ad7f-0f777cc2de1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0091529-39c3-441f-835f-3b061099e4f9",
        "cursor": {
          "ref": "607c8c39-43aa-47ef-b481-daca07fb3169",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "47da618f-cb02-4663-8a00-f929cead0402"
        },
        "item": {
          "id": "d0091529-39c3-441f-835f-3b061099e4f9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "731db1a0-392b-4f0e-b065-a22f366365a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b34107-1820-4e50-880b-17087f613636",
        "cursor": {
          "ref": "b6c2288f-0c3d-4a01-b11c-e8c00e37d317",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "35fe6f58-bc6d-47ab-94f7-58c29cd3f1d3"
        },
        "item": {
          "id": "79b34107-1820-4e50-880b-17087f613636",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "66f06d86-aa28-4099-ab7f-0611220342aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3c89b3-090b-4981-b6ad-4b7a8a5dbf93",
        "cursor": {
          "ref": "9b9741ee-b712-48f8-8c9f-25ae2e7e51f5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "67a5b99b-8e94-4c75-be67-9eeff0958f96"
        },
        "item": {
          "id": "2c3c89b3-090b-4981-b6ad-4b7a8a5dbf93",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2634f3ce-da44-4e51-b37c-ed7feca038dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9fdaa7-b02b-45d2-b020-f01c885cb932",
        "cursor": {
          "ref": "ad64f087-2e4f-4b18-945d-890dcf5e8948",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1c746b4b-c0ee-4af0-923c-a95656db8aef"
        },
        "item": {
          "id": "2e9fdaa7-b02b-45d2-b020-f01c885cb932",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ca6e9770-0ff9-46b4-b485-827808da74f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07b8ee6-ec2c-4f66-a9b0-44b912a6eddb",
        "cursor": {
          "ref": "be3ecf4b-c36f-40c8-bf9a-8a4ea361f787",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9215484c-4603-42ae-97de-7680a121bec3"
        },
        "item": {
          "id": "a07b8ee6-ec2c-4f66-a9b0-44b912a6eddb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d86863f5-8cc5-42a9-91a2-8304b4cc52ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446df0ea-a035-400e-9bf7-44e1d821841b",
        "cursor": {
          "ref": "fd98cda0-4e76-4143-98c0-6600ef56fe51",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "732c2ba6-b98e-4c33-b9ff-41575162d3b9"
        },
        "item": {
          "id": "446df0ea-a035-400e-9bf7-44e1d821841b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fd2be8e5-1353-4095-98d3-e9194eaf0315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c72554-4bff-4e82-ab30-c1298efa43bb",
        "cursor": {
          "ref": "722d3540-b0d0-43de-92bd-e8ab83011312",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4b9e8504-3ee7-42ae-aee0-1302b08f8521"
        },
        "item": {
          "id": "12c72554-4bff-4e82-ab30-c1298efa43bb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3fca18c5-630d-4601-b325-507ef602f96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba456eab-cb7e-4cb1-b598-272ca1cb277a",
        "cursor": {
          "ref": "53aa1699-8d36-48cd-a531-6fa50f445696",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e61f6e0b-33c5-4a18-a0f7-9e42becc38a5"
        },
        "item": {
          "id": "ba456eab-cb7e-4cb1-b598-272ca1cb277a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7c77ac0a-cb73-45f4-bb3a-20d0a4ed72b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4316e196-1226-4a7b-b071-4fa8ed945d59",
        "cursor": {
          "ref": "889368ca-8a67-4b79-92de-add53c9a3f70",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fe5a489a-3b7e-427b-9557-f74bbac08eae"
        },
        "item": {
          "id": "4316e196-1226-4a7b-b071-4fa8ed945d59",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "842164f8-4161-4829-929c-d3d0c973cd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdaadf5-e51b-4071-ab1f-c36436196311",
        "cursor": {
          "ref": "f101da54-29ed-4485-b15e-56dd76b63bce",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "70447871-f895-4340-9f3e-fa906ff8894d"
        },
        "item": {
          "id": "2fdaadf5-e51b-4071-ab1f-c36436196311",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ea079d61-0f99-42eb-affd-00cea2aebc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1534feea-035e-4d28-ba83-f1dc2ebd1137",
        "cursor": {
          "ref": "731a5bd1-90ef-496a-a387-22d8c7c855ba",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7ef6bfa0-5954-41e4-aa47-5bb9509fa8fa"
        },
        "item": {
          "id": "1534feea-035e-4d28-ba83-f1dc2ebd1137",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4553e697-17a9-40fc-8e7e-7a1c79a31ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b589087-00c4-43b1-8e95-06bed8f059ad",
        "cursor": {
          "ref": "b72c93bc-a620-402f-a614-437ce15d3d08",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "82f112f1-28f4-42b4-b76f-30b6f6c43550"
        },
        "item": {
          "id": "9b589087-00c4-43b1-8e95-06bed8f059ad",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1163daaa-a56f-4b9f-8113-318b7b8c485d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc819df-48b0-4e46-9984-8829c5048037",
        "cursor": {
          "ref": "9e5f9ee6-6db5-4e24-bcfe-8a74884faaf8",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c3f91fba-83a6-4988-acae-c2f14c273f01"
        },
        "item": {
          "id": "5fc819df-48b0-4e46-9984-8829c5048037",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6438d7bd-6540-447f-804c-1259a247bf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2003a963-dfac-4b14-9a22-f10de410de23",
        "cursor": {
          "ref": "5aaa873e-f323-4416-ae6d-3fbff718943a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "24f80227-2cbf-4692-bb09-49c5a333e361"
        },
        "item": {
          "id": "2003a963-dfac-4b14-9a22-f10de410de23",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f53e61ec-07d9-427c-be4e-b1f0f74ce8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b4f048-8c5f-4426-bbd4-0c1fe43031f3",
        "cursor": {
          "ref": "44a38cd3-f0cd-4830-bf69-977a3fc69afd",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0b12c0f7-a6d6-44b4-9318-1fb376adfc2b"
        },
        "item": {
          "id": "64b4f048-8c5f-4426-bbd4-0c1fe43031f3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ae0df7b8-dac6-4658-89fd-d5369fe6ae55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdac7f28-5d8d-4912-8f60-894bc48e193d",
        "cursor": {
          "ref": "a51ef381-4391-4731-829a-73d2bd9874df",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7e1f1ca6-107d-44b3-847b-2116ed6dea6f"
        },
        "item": {
          "id": "cdac7f28-5d8d-4912-8f60-894bc48e193d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "db911d50-7573-463a-b746-162c0471dfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d376c27-4d1d-44d9-9e73-d1143cd4b47c",
        "cursor": {
          "ref": "26fc1eb6-ffe0-4c75-8246-8dbd3f46e19e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a6094d7a-bf3d-4cb6-ab94-ba696fcd4a0d"
        },
        "item": {
          "id": "2d376c27-4d1d-44d9-9e73-d1143cd4b47c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a50bc99a-98c7-419a-9e03-b71db9a071c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022e4dd9-ab16-488a-a57c-6dda50c320b9",
        "cursor": {
          "ref": "438484ef-9129-4f13-86f0-9c32f731fe13",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e285424b-62cd-4603-8b5a-9cda9edc5ecc"
        },
        "item": {
          "id": "022e4dd9-ab16-488a-a57c-6dda50c320b9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4d48cf9d-c691-4d9c-b1fc-4945d31b53c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f69de9-986b-4b30-af63-ee2de84594b4",
        "cursor": {
          "ref": "f8663b70-4bdc-4b8b-b94e-40dc1b11ad4c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "898bad0d-a021-40f5-926f-e1770f8e1962"
        },
        "item": {
          "id": "47f69de9-986b-4b30-af63-ee2de84594b4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c4fd76d3-5d61-4d42-9f2f-09a9eaecd36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9ca58e-0266-4744-934e-2f13bcb12707",
        "cursor": {
          "ref": "78892ac2-7e6c-4b11-9ae5-da58d532a4c0",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2bebf01d-deef-4982-93c9-37340e8f0f7d"
        },
        "item": {
          "id": "1b9ca58e-0266-4744-934e-2f13bcb12707",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "534e2d97-e85e-4820-8355-c5b13c1083b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13839474-93f3-4837-886b-732693f894b1",
        "cursor": {
          "ref": "f435a6f5-bb63-48d9-852c-eecc0e990bc5",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d7d1b6ab-2c27-46fd-8c5e-2b27aca046e4"
        },
        "item": {
          "id": "13839474-93f3-4837-886b-732693f894b1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ef2a0194-269d-4e93-80fe-0094a62ca9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dfc1ab-15ef-4e8b-a3b6-3d18af7b1157",
        "cursor": {
          "ref": "d16db034-958a-4961-9260-7298892122cb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3418c0b4-f5b4-4e65-a08a-059c955b376c"
        },
        "item": {
          "id": "c4dfc1ab-15ef-4e8b-a3b6-3d18af7b1157",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "de2fc272-afe9-44f2-ad75-3eec4b9f4337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa32e2-7811-4391-948a-5d1d30a90474",
        "cursor": {
          "ref": "302f645a-c22e-47d7-9b91-b83e6cc01b37",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "00498929-0074-47ce-b79c-603eb727b0cf"
        },
        "item": {
          "id": "44aa32e2-7811-4391-948a-5d1d30a90474",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "71ad07ef-8636-4e7a-9743-95818e36f756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0035a9-e646-48fa-b130-b6912fb71107",
        "cursor": {
          "ref": "866de18a-7f58-4978-8c5e-0ea38fe497d6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "350bc0e3-2d4b-4e8b-9a20-b5af7753b3ce"
        },
        "item": {
          "id": "5f0035a9-e646-48fa-b130-b6912fb71107",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ff8c628e-253b-43d4-8699-39d676877ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014e00ef-1aff-47ef-8511-3ae4129bb299",
        "cursor": {
          "ref": "44990c6a-a1ec-4c13-a515-01ea906c8ac8",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "63380e21-e1c2-4d89-a225-dd2d83f611e4"
        },
        "item": {
          "id": "014e00ef-1aff-47ef-8511-3ae4129bb299",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "91e2395b-8286-46a3-af03-a8df8f5d21af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc26a5f3-b87f-45a9-82d6-b797b2f5f652",
        "cursor": {
          "ref": "5ddb8adb-6521-437b-9821-287a01494143",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f0c469f9-a5fd-401f-9df4-819d73c2a917"
        },
        "item": {
          "id": "cc26a5f3-b87f-45a9-82d6-b797b2f5f652",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1df5db7d-0041-4d85-98d5-9ac5ec5e1c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da496268-aef8-4558-8d21-6e60768a8072",
        "cursor": {
          "ref": "a005c97d-5889-46eb-8ae3-002e3c36267d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "25af8507-0b34-446f-89e0-569d6bd174ad"
        },
        "item": {
          "id": "da496268-aef8-4558-8d21-6e60768a8072",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e33618a0-cab0-4aac-871e-eb5adca82150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021fc72a-ae09-4984-ba7c-67525b590722",
        "cursor": {
          "ref": "6df709c6-942c-46d0-9163-f7aa360cbdbc",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6986bdc6-90d4-41ad-bc32-c7172a5ea304"
        },
        "item": {
          "id": "021fc72a-ae09-4984-ba7c-67525b590722",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e0b1525f-84df-4a8e-a154-309b72dd1a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb11c7d-476e-41b0-9f2e-4dd87a719ec0",
        "cursor": {
          "ref": "d4a3f3ea-538e-4023-86a8-7704864110d9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2c4b6cf5-cc55-4162-9cb1-08de850c6125"
        },
        "item": {
          "id": "0bb11c7d-476e-41b0-9f2e-4dd87a719ec0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dc34c1d9-dfe4-4c5d-9726-61d33e3ae736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10e2178-87e0-4731-9930-83f6ffb1f782",
        "cursor": {
          "ref": "72f82cea-20db-4155-8056-43115acb6af0",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7a3e8951-ad62-40e8-a106-0c7baf2623e7"
        },
        "item": {
          "id": "a10e2178-87e0-4731-9930-83f6ffb1f782",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "04c063ce-503b-478a-a078-c4915420379f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfedd2e1-3046-41dd-b0d9-669eff3a3aee",
        "cursor": {
          "ref": "c694defc-c663-42a3-b37c-eca6126ba4ec",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e059ed9e-0f09-4345-af28-9435c6a4d514"
        },
        "item": {
          "id": "bfedd2e1-3046-41dd-b0d9-669eff3a3aee",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f501e7a8-8dfb-430a-a50f-749584dd96a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ae5d6e-4cbd-416f-abc6-b62352a69d88",
        "cursor": {
          "ref": "47c68331-eb4e-44ad-b258-af85b49cfe1a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b46a3aaf-f500-4ed8-b9f5-e250da0f11f5"
        },
        "item": {
          "id": "79ae5d6e-4cbd-416f-abc6-b62352a69d88",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7d3131f7-1888-4202-ade4-8ff929f4a4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7cb83e-9aa3-4040-a660-e0e6b98fa7da",
        "cursor": {
          "ref": "754694b0-85c8-4283-9d87-eba20e1b757e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b1a750b1-c2ff-4c69-ae58-94a39168f960"
        },
        "item": {
          "id": "3e7cb83e-9aa3-4040-a660-e0e6b98fa7da",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ca8c4f74-e9f8-427e-82b6-8c266ee18517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf22b7fb-05f7-46e3-b059-f637c53819e1",
        "cursor": {
          "ref": "66349bc4-8706-41f8-9db0-2226fd5ceae4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6ac11c3e-402d-4b97-888d-c3f481b055b5"
        },
        "item": {
          "id": "bf22b7fb-05f7-46e3-b059-f637c53819e1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1bb13451-f96d-4053-90eb-89198adc20e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc137c2-bcdb-4a5d-b250-ff299a82c92c",
        "cursor": {
          "ref": "b565e328-948a-4bbe-b8e9-6f723b7cce72",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "87e9ec0d-4ae6-4aa0-9ef9-df6f12e0cd7d"
        },
        "item": {
          "id": "9fc137c2-bcdb-4a5d-b250-ff299a82c92c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ebc4b31c-6ede-45be-93bf-155f0f8cb1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26466bb7-6912-4cfd-acf7-e44373a8cfd4",
        "cursor": {
          "ref": "b3afb994-a8a7-4335-8868-86638cbbf8f1",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1df470fa-df1f-4b71-ace9-32e3f9fe60ae"
        },
        "item": {
          "id": "26466bb7-6912-4cfd-acf7-e44373a8cfd4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9dd37a84-41cc-4467-9a05-e70367ee2ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f7104a-78e4-4bd0-bfc9-6fc0a240bb2f",
        "cursor": {
          "ref": "e0db23ed-ecdb-482b-97b9-bf7836550f03",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6083eb0a-7ca3-41f3-a6b2-e6b2c6e1f1b0"
        },
        "item": {
          "id": "83f7104a-78e4-4bd0-bfc9-6fc0a240bb2f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9ffad6d2-33b7-42b2-9694-d0e6dff9d973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3eb974-eb88-4e15-b452-58afc30fa66a",
        "cursor": {
          "ref": "8da1db0a-9612-42fb-94d8-b6878639a78d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2c94f0c3-d8e6-46b6-93b9-d87fb5c4b226"
        },
        "item": {
          "id": "7c3eb974-eb88-4e15-b452-58afc30fa66a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bdf9da5f-cb1f-4799-9a79-b0fed83a65c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda116f9-241a-4b25-a21b-7ced94509202",
        "cursor": {
          "ref": "9566db77-20da-4809-bccd-05a73ea92229",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b8fc4598-5860-475b-9714-307849d7ef5c"
        },
        "item": {
          "id": "bda116f9-241a-4b25-a21b-7ced94509202",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a601eff0-cc97-4981-b92b-2a5d5c72de77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ec4cad-459b-4be6-a567-c8be8a1323f9",
        "cursor": {
          "ref": "3857e051-88f9-468c-9ad9-004a20398102",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d946a3e3-5d6b-429d-815c-020a05af8ee5"
        },
        "item": {
          "id": "99ec4cad-459b-4be6-a567-c8be8a1323f9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4068081-f6de-4bc5-b31a-da907cbcdbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1e1293-ace7-485f-9466-6374f06d6340",
        "cursor": {
          "ref": "fc240dd1-b352-4609-803b-3818c9c0c35e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "53415d33-3dd4-4bfc-bb95-7a4e75b56c23"
        },
        "item": {
          "id": "ca1e1293-ace7-485f-9466-6374f06d6340",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "317bc971-5fb5-4038-8a49-38f7c9e35451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7ea2ba-0c6b-49aa-a297-04cdde8f134a",
        "cursor": {
          "ref": "92791516-e16e-4e3e-880f-a91db48616f9",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0bccf8d9-f7b2-45f8-b548-3dc54c56bc08"
        },
        "item": {
          "id": "1f7ea2ba-0c6b-49aa-a297-04cdde8f134a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d962332d-2516-4cfb-92b1-1a0351889359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260c7d62-943c-48b8-bc98-5a6fd3674ae3",
        "cursor": {
          "ref": "3b0d3948-b268-49e6-b877-6d6ec8e38f4b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2a0630d8-60ac-4b9a-b579-e10a3f27cf53"
        },
        "item": {
          "id": "260c7d62-943c-48b8-bc98-5a6fd3674ae3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "52df9946-70fb-4444-9591-6b0f680117dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04eeddad-4204-4325-8d7e-4aa7a3577467",
        "cursor": {
          "ref": "2d3d8380-fbc9-4c0d-a97f-282fbd1506ab",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ad330fcb-287c-40f6-8954-ad0e5c3d5002"
        },
        "item": {
          "id": "04eeddad-4204-4325-8d7e-4aa7a3577467",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "67572231-ed52-4f1c-8787-e8e709bd1c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ba13bb-3993-4aaa-aafd-d833035cdc5e",
        "cursor": {
          "ref": "1d9db74f-5293-42f2-8929-3330a8ba94c8",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "30a8dfad-0729-42fc-9190-a8bbf14872bd"
        },
        "item": {
          "id": "b4ba13bb-3993-4aaa-aafd-d833035cdc5e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f5ddccd8-e6a0-4811-b162-3478da78be09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c014db3f-8a47-4d50-be30-71fd03fb27d9",
        "cursor": {
          "ref": "884f070b-2e3e-4ed7-810c-d08b89c60bdb",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f1d6d5f6-44aa-422e-8ee0-8d40d538ada3"
        },
        "item": {
          "id": "c014db3f-8a47-4d50-be30-71fd03fb27d9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "97692f58-7d60-4176-b958-9e7b643d6456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b6c903-30b8-429b-97ae-718fb35bdc9f",
        "cursor": {
          "ref": "305b33e5-6c18-4f67-929a-d967c5ed3ee3",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "712c46b2-fe52-43fe-95a7-359383e9c4f2"
        },
        "item": {
          "id": "13b6c903-30b8-429b-97ae-718fb35bdc9f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e0b9c5d8-28b4-4995-a31b-91edcc34b2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c26516b-de6c-4727-a961-482d9e4d6a91",
        "cursor": {
          "ref": "8c201a29-7a93-412d-b56b-0bfe19eb4031",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e843c506-d96d-43a5-bc62-999604db5c54"
        },
        "item": {
          "id": "9c26516b-de6c-4727-a961-482d9e4d6a91",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ec012c20-25f8-450b-8553-7e1ccd4c1cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02df18ec-5f0e-4a87-917a-08cafa5281a2",
        "cursor": {
          "ref": "44ad773c-a047-4ab7-b27f-55b54608ec2a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8922ff10-6b85-4732-8b9a-c2d0b973e0e0"
        },
        "item": {
          "id": "02df18ec-5f0e-4a87-917a-08cafa5281a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1b9e6858-5deb-4b04-b47c-083e4eb49157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236b1617-621c-4e3a-91dc-b246c2e7ac61",
        "cursor": {
          "ref": "1c3fa561-a53f-4647-8dfd-06907a7209c9",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e91252ef-97d9-46f5-8cab-c519fa676e9a"
        },
        "item": {
          "id": "236b1617-621c-4e3a-91dc-b246c2e7ac61",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8ac1aa5b-767b-465f-aae0-8d18baff530a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93553eb7-8b2b-4f55-89c6-14f7acf17cce",
        "cursor": {
          "ref": "bee3078c-fc2a-4d06-b886-297e2c8c2cdc",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "08375ef8-926f-48a3-bd24-3abda943cebe"
        },
        "item": {
          "id": "93553eb7-8b2b-4f55-89c6-14f7acf17cce",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d74dc774-e9f3-4bd7-9e87-96709d10b776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8c6a05-eb86-4851-ac94-5212a450a62b",
        "cursor": {
          "ref": "6a673dd7-3630-40b5-a9a2-b38991fb9e39",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bac39734-ce9b-442b-b9ea-d8396b4dbfa3"
        },
        "item": {
          "id": "4d8c6a05-eb86-4851-ac94-5212a450a62b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e71d279a-7380-415a-9855-c933806fc57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c185f81f-27ee-422a-a9ea-d9ffde183068",
        "cursor": {
          "ref": "1c66a3d7-16eb-4a7f-9f33-6ff7e287f86c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5edfa2a0-1fdd-4663-a34e-69b710bdc419"
        },
        "item": {
          "id": "c185f81f-27ee-422a-a9ea-d9ffde183068",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8d3e66f7-b129-4cc9-9371-99fe0e884d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db0ae52-ff48-4577-a4d1-cc401723446d",
        "cursor": {
          "ref": "11ca86e1-cbf6-4a50-83a9-57bbf7367d6b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5db3ef1b-589c-4d4e-8bc7-8d153eee2a68"
        },
        "item": {
          "id": "7db0ae52-ff48-4577-a4d1-cc401723446d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "395a6598-f6b4-43e6-97f0-ef10002e85df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7628ddf7-d9eb-442a-8cdc-e77e10ecce50",
        "cursor": {
          "ref": "6a65c95e-c599-40fa-8094-3cd23f526a90",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9f848667-8a5f-453c-95d8-74e94f001c57"
        },
        "item": {
          "id": "7628ddf7-d9eb-442a-8cdc-e77e10ecce50",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2f69ef2f-b4a6-4236-abf2-2a1a1cb736e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ded8d3-7677-49fb-a962-307a137091fc",
        "cursor": {
          "ref": "395f1e9a-cdba-4640-ba0d-aa1b02658990",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8f1b1609-9921-4c41-aa37-839c882d50c6"
        },
        "item": {
          "id": "c1ded8d3-7677-49fb-a962-307a137091fc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5cad6aa4-406b-420a-96ff-5eaf1e94d881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c176c4-ace5-4434-ad4f-9b94f4d478f6",
        "cursor": {
          "ref": "11ff5a91-efda-4ba5-9d15-bd77ee0a720d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "92f8b058-1ec8-40e0-b8df-634d06841582"
        },
        "item": {
          "id": "f9c176c4-ace5-4434-ad4f-9b94f4d478f6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f47a327e-59ac-4a02-b08f-f5c6012e1bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5abac5-786b-4805-b70b-8aef83acd27c",
        "cursor": {
          "ref": "623b74a6-7f66-4d6b-93bc-3fb18fe8af8a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "762f709c-ecd5-4af4-9204-221952ab2d9a"
        },
        "item": {
          "id": "fe5abac5-786b-4805-b70b-8aef83acd27c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cfebd594-44d8-4b72-abdf-b0fed839bdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388e24fe-6cd9-4251-b15f-3abe5dc5313d",
        "cursor": {
          "ref": "1c88cd9b-0933-42e3-b496-9987ab169b6e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e159fa94-908b-48e0-a0be-7aa07de39428"
        },
        "item": {
          "id": "388e24fe-6cd9-4251-b15f-3abe5dc5313d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "00d8a830-bc9a-499f-a1c5-33bbd953a1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52afe71d-fc61-4456-8cd6-001e44613f74",
        "cursor": {
          "ref": "4105adf5-20fa-46cd-ba7a-b5e71ad51f4d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "40492945-0012-4a99-84d0-f3d707c06983"
        },
        "item": {
          "id": "52afe71d-fc61-4456-8cd6-001e44613f74",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d5a1493a-0fb4-47f8-8307-19908d8dc4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8191895d-fae8-4690-95b7-3729d125bd75",
        "cursor": {
          "ref": "a6d5d931-da5b-49e0-97cf-d4aa90f3edfb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e142db4d-3d15-4b96-b2b1-45f25ba8ab7e"
        },
        "item": {
          "id": "8191895d-fae8-4690-95b7-3729d125bd75",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "94919bff-43ad-466a-8983-2153c8812d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04955f8-c9b3-4138-b38a-4bff59da1841",
        "cursor": {
          "ref": "244b4322-4bdb-45d6-984d-b2fd23e970e5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bac62d52-47e8-4cc9-b667-5ae40879ca93"
        },
        "item": {
          "id": "e04955f8-c9b3-4138-b38a-4bff59da1841",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eb11ce55-7035-48ec-a680-a3609f4ebcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86182e74-8e28-4ddd-b300-4555c5c57810",
        "cursor": {
          "ref": "bba0e9a4-26d8-4fb4-9660-0f4c525719cc",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a71c297b-0ffd-44f1-8af5-9b1a0d976b3e"
        },
        "item": {
          "id": "86182e74-8e28-4ddd-b300-4555c5c57810",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1419f6cf-6a6e-46f4-be79-c86758b526e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1522dc1e-f8cf-4760-a993-8d843e31ac82",
        "cursor": {
          "ref": "26a21c9a-1770-4283-8878-6f58bfb56b53",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8d034c00-b42e-4ac0-bb74-51a7f2503ac3"
        },
        "item": {
          "id": "1522dc1e-f8cf-4760-a993-8d843e31ac82",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d639cadd-9b07-4fc6-97b8-7572d1f874d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f12b25-44e0-46d2-aea6-3a35a35baa20",
        "cursor": {
          "ref": "d67c0249-e2f1-423d-a4a9-ebd988e83351",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6a2c3bef-35e1-4c42-ab31-0d386db85438"
        },
        "item": {
          "id": "e9f12b25-44e0-46d2-aea6-3a35a35baa20",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "39037cc9-1be5-497a-b449-f98fcc722245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c45b67f-3845-4adc-812a-1741e5126628",
        "cursor": {
          "ref": "1a23e0e0-fc0f-48b5-b9f2-714b70b210e3",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7f678104-9a74-4cc6-91d6-572333cbab10"
        },
        "item": {
          "id": "3c45b67f-3845-4adc-812a-1741e5126628",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b8145e8d-8c08-4127-8770-d989c1dd9133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ad5b38-5cfb-45df-aa28-c740e1fb55a5",
        "cursor": {
          "ref": "fc6f7ef1-12a9-4bc6-9a5b-0f6bf695ef1d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bdd77be6-3df3-4dec-8b5b-ca744a5810a9"
        },
        "item": {
          "id": "84ad5b38-5cfb-45df-aa28-c740e1fb55a5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "40ffdd55-65b4-431d-8074-58a1a094635b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d65b4-6f32-4fbc-8785-ced8b478be54",
        "cursor": {
          "ref": "831b490e-8cc2-428e-baf7-9071e1c6a7e9",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cb9cc0ea-282b-4595-b573-8a3c001168a7"
        },
        "item": {
          "id": "317d65b4-6f32-4fbc-8785-ced8b478be54",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3e6b2736-2391-4703-ab52-c0b7fa117fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b0a7b3-e84d-4b80-9d0c-802c0237ab47",
        "cursor": {
          "ref": "4859ad4b-bdba-4f30-a897-c116d732f43e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5f3f677b-9b78-4e3e-9c91-15e73eea132c"
        },
        "item": {
          "id": "40b0a7b3-e84d-4b80-9d0c-802c0237ab47",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2e48b9d3-45b8-49b2-8799-b1b9377284a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce023e9-bfdc-4e58-b40d-4a5c617e8ccb",
        "cursor": {
          "ref": "d6b9edee-a93f-4825-9003-a7044dee6028",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "069c443a-4d75-4b52-ae76-0c6f1ad26950"
        },
        "item": {
          "id": "fce023e9-bfdc-4e58-b40d-4a5c617e8ccb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d2b576e6-4238-4b05-a3e4-603c9abe7c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076ee4be-7640-402d-ab40-3cd756629b6e",
        "cursor": {
          "ref": "21e84cf3-ddd9-4abd-8917-69d67468b43d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ef55de52-d278-4234-a870-0392c1f57e7a"
        },
        "item": {
          "id": "076ee4be-7640-402d-ab40-3cd756629b6e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f5f62042-f78a-4ff4-a7d2-6bab3c16235d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddf2339-0942-4a00-923c-8f86901497af",
        "cursor": {
          "ref": "c4004df8-b082-4274-a683-59a6e4e1d088",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b2d5ae4a-4bd5-452b-a313-49e89197c5dd"
        },
        "item": {
          "id": "eddf2339-0942-4a00-923c-8f86901497af",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0b1b047e-7bf9-477c-b7b6-a23135f449ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76827f7c-99bb-456f-b353-d950074f9d64",
        "cursor": {
          "ref": "2ed88aaf-e8bf-4815-985d-c14812fd54b6",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "451d2101-8eb5-4fde-8f87-d294cbfd6110"
        },
        "item": {
          "id": "76827f7c-99bb-456f-b353-d950074f9d64",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "40de4b0c-bff3-4d27-a48c-7d405b566e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc31ff-01f7-4465-b848-acd7fe886a7c",
        "cursor": {
          "ref": "8b13520a-6192-4514-b411-49fc10994f4e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7ebb064f-aac9-4df1-8004-928b4472103a"
        },
        "item": {
          "id": "72bc31ff-01f7-4465-b848-acd7fe886a7c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c1c736c1-ded9-44b5-99f3-d20707dcd930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c02c54d-9655-4f6a-befb-1deb39c8fd3c",
        "cursor": {
          "ref": "125198fa-b1e3-411c-9f7c-e6f4d54e47bc",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bfa20143-0cb5-4071-b237-58469447b43a"
        },
        "item": {
          "id": "3c02c54d-9655-4f6a-befb-1deb39c8fd3c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "92b8de54-e580-4456-a4ed-ba4349a1bc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e4720-c55a-4391-aff9-3330b71c7c07",
        "cursor": {
          "ref": "72ec8477-cb12-429e-b2b7-f4a5f594ea14",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "67be920e-3c53-4a0d-bb01-b7b7c498935a"
        },
        "item": {
          "id": "402e4720-c55a-4391-aff9-3330b71c7c07",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "61291deb-2973-4f1e-be26-0f99494a31de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1017222f-054d-43b6-be83-654a0090ffe1",
        "cursor": {
          "ref": "bcb767e7-e65d-42b9-ae63-c439921a9d27",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bce73eb6-cbea-4772-8fab-bd2515d59698"
        },
        "item": {
          "id": "1017222f-054d-43b6-be83-654a0090ffe1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f75f175e-c32b-4eb5-a749-38b5bcba953b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecd14f1-d60c-4a3a-99f2-1a35a229a9c7",
        "cursor": {
          "ref": "b5367a4b-f74b-41ab-90f8-17523d559545",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3bf1a81e-92f6-452d-9678-66b49daaba81"
        },
        "item": {
          "id": "9ecd14f1-d60c-4a3a-99f2-1a35a229a9c7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6ab18a03-2c70-436f-9731-ebf4a66653d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a01c6a-4f54-49d4-bba7-b26df2a52648",
        "cursor": {
          "ref": "a79baaee-e678-4315-8c11-1a706c549589",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d9d37750-f932-41cf-992c-73deef2f8ac5"
        },
        "item": {
          "id": "87a01c6a-4f54-49d4-bba7-b26df2a52648",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d1e7f9cd-7d63-4e66-99da-bb1f99bcb1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0fcda8-682e-4ae7-956c-93dc0738bbfd",
        "cursor": {
          "ref": "0a60e9b8-75be-4d36-8028-ccc65c6db6b0",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8c4a3c9b-d1e2-4fd1-8e0a-1ffd1e94fa22"
        },
        "item": {
          "id": "6d0fcda8-682e-4ae7-956c-93dc0738bbfd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f6e6f895-8979-4ccf-a5fd-a8f953459505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49aa6f5a-34d9-4a9a-be7d-a97a00ba02b5",
        "cursor": {
          "ref": "5f6d8026-9c72-42fa-af70-552c7dfc8ec4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d7b1b079-b3b0-4bd4-ad48-83c2bce367d2"
        },
        "item": {
          "id": "49aa6f5a-34d9-4a9a-be7d-a97a00ba02b5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d070470a-5354-487e-b457-40387f1283e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7502940e-559e-43a7-be7c-75ab32d1b68c",
        "cursor": {
          "ref": "3357a2fa-cd52-415b-bd79-d51448cf2b98",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eb98f7cd-d9f3-43f1-807d-2ac9675b55a7"
        },
        "item": {
          "id": "7502940e-559e-43a7-be7c-75ab32d1b68c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ae218bed-b887-4e52-b111-9741c5a593ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c6c979-5b0d-4d16-82a4-c5ae8743e242",
        "cursor": {
          "ref": "eb1d773a-5e71-487d-8e4e-e2c30b928656",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "98a4a927-b498-471e-86cd-34501b8b705e"
        },
        "item": {
          "id": "a0c6c979-5b0d-4d16-82a4-c5ae8743e242",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fe1661de-d514-4467-9218-602dd4e5fba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "cbb5d432-03cc-4c19-b52b-a33b14103e5e",
        "cursor": {
          "ref": "dcb8aec0-c830-4bfb-89e0-1d8f7b87824c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d96d827d-2b14-44e9-bfe8-2aaf868b82c2"
        },
        "item": {
          "id": "cbb5d432-03cc-4c19-b52b-a33b14103e5e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3e1fe683-ef7c-443e-b358-e9d05c20548d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "62e1981b-cd2c-44ab-aabc-6d660a14344b",
        "cursor": {
          "ref": "06605b31-a4e9-4f34-ba06-97c0025876c6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0dd747ae-dcb6-43a5-be79-fa512d9002d8"
        },
        "item": {
          "id": "62e1981b-cd2c-44ab-aabc-6d660a14344b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7ac542a2-3371-4dc3-b667-f6bec6c6f85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1278cd33-5d63-42b2-a364-c4caa9b693b2",
        "cursor": {
          "ref": "410f90cb-077a-446c-9921-3609b7730aff",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d7e35b8e-93d7-45c5-b07c-2eeb341707dd"
        },
        "item": {
          "id": "1278cd33-5d63-42b2-a364-c4caa9b693b2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "74aa7d1b-d63b-440b-8f4c-c143d10811c1",
          "status": "Created",
          "code": 201,
          "responseTime": 4403,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e2ed9c-0c18-4778-b613-24d1e081693f",
        "cursor": {
          "ref": "61a0ac0d-1772-4392-a696-225225c46eaf",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e602dc5b-fa90-4164-877c-550b33fff298"
        },
        "item": {
          "id": "a7e2ed9c-0c18-4778-b613-24d1e081693f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "414f720a-3bdb-48d7-97a1-6dc245f34c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b3a05991-f205-4c28-a991-3062d56dba00",
        "cursor": {
          "ref": "aae51c67-6087-4244-990d-bfc897fb67d8",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b93d59c1-0bb7-426e-ad0e-802a6db3a46e"
        },
        "item": {
          "id": "b3a05991-f205-4c28-a991-3062d56dba00",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "06c8ad76-40ed-46f8-ba71-eae39a900068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "7da3aa06-92da-4b1a-be0b-f892650e1463",
        "cursor": {
          "ref": "d254c93d-3c4f-4840-af50-8a14e71104e0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4c8f2e3e-6f35-441d-bb50-a089506a1f18"
        },
        "item": {
          "id": "7da3aa06-92da-4b1a-be0b-f892650e1463",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4771eb4f-2abd-4542-8792-1cca53a971ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d14edac-e170-444b-9189-732135273772",
        "cursor": {
          "ref": "46ad0112-40d0-482b-a10b-3770d65b356f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "47b93269-4ab1-40d9-9358-dbe454eeff85"
        },
        "item": {
          "id": "6d14edac-e170-444b-9189-732135273772",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "020e32b0-4006-4a1d-a133-e52a8407ef3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f33dbe-6c04-4745-a30e-e415d543de07",
        "cursor": {
          "ref": "bd081389-489b-4ab7-a227-053ec4d1ce56",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c1fc9fe2-e567-474f-8da8-621bc4c9c6b0"
        },
        "item": {
          "id": "e2f33dbe-6c04-4745-a30e-e415d543de07",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ec26dddd-0f5a-466d-9b51-8097da505175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c478d0-df80-4450-96f6-2c0118eeb9a2",
        "cursor": {
          "ref": "6e9a0151-9b90-49c5-90ea-10b2fc688f16",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b8e15df8-5215-42ed-800a-2068adab3d4b"
        },
        "item": {
          "id": "d3c478d0-df80-4450-96f6-2c0118eeb9a2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "90393336-c6a5-4ae2-abd2-20976a6aacf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a094887-5c7b-4894-ae3f-347c1f73c83d",
        "cursor": {
          "ref": "4d574ae0-1355-4731-a777-62ce6650ece2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "215c9da1-850c-4540-b39b-a6494f8c50b0"
        },
        "item": {
          "id": "4a094887-5c7b-4894-ae3f-347c1f73c83d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e5a5ee1c-a748-41a8-b8a6-be874ec9b000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd95617a-1ca8-4253-a036-60391bcd3687",
        "cursor": {
          "ref": "650d5624-1de3-4b18-8cd4-dda11175e62e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "87cf4b96-0afd-4656-aed1-fc4bc1d8eacd"
        },
        "item": {
          "id": "cd95617a-1ca8-4253-a036-60391bcd3687",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae5bc79b-c319-4b72-9780-59b790594a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bde58e6-1d08-4ea9-a3b0-8bd8b737a236",
        "cursor": {
          "ref": "304f7427-4333-4df9-9dbf-44c19c7bed91",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4025b2e3-ddb1-4144-ade8-4edf2758979a"
        },
        "item": {
          "id": "4bde58e6-1d08-4ea9-a3b0-8bd8b737a236",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da87949c-f391-4aa6-ae5e-e937e53dfacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d619ba-ece9-497a-8edc-27ff95cceeaf",
        "cursor": {
          "ref": "d59ce4bf-abb4-472e-b895-07b7989ff17e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "181a9da6-1129-40ab-9f90-97f9c2e53e53"
        },
        "item": {
          "id": "c3d619ba-ece9-497a-8edc-27ff95cceeaf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "01476888-df28-426d-8007-ff83504edb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac9d915-d01f-4aa4-ae61-3fc917e8cbc9",
        "cursor": {
          "ref": "c6291b5d-527a-4a6c-bd37-8462b98726b4",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a7d3d87e-1149-4c1a-89fa-b04448ece249"
        },
        "item": {
          "id": "bac9d915-d01f-4aa4-ae61-3fc917e8cbc9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dc86a683-4c41-4369-b8ce-8db7cff3dcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6223a76d-87d4-407c-bb25-2c37b4c5ed0a",
        "cursor": {
          "ref": "382a1745-54de-428a-b679-74d573342dbf",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1d218b56-d208-4de8-9a77-c49c7a920e9c"
        },
        "item": {
          "id": "6223a76d-87d4-407c-bb25-2c37b4c5ed0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "57547429-e7d7-4ac5-b2a5-f9744df5ea95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec28d71-99d0-41d8-85cc-9a6955e1ff9b",
        "cursor": {
          "ref": "b32260bb-1e98-41ed-8ef7-cf463890edca",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a7f80ff6-fecf-48ae-a57c-2649aede06f7"
        },
        "item": {
          "id": "3ec28d71-99d0-41d8-85cc-9a6955e1ff9b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1ab677a2-ff0f-45ca-8132-efb779b46f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd35eff-c4a8-430e-bc39-ba118ce99b8a",
        "cursor": {
          "ref": "e3a234d8-1075-4894-b43b-57b8206661ec",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a018b9a6-5f6b-4e4b-95f7-378fe91d28f2"
        },
        "item": {
          "id": "0dd35eff-c4a8-430e-bc39-ba118ce99b8a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "01e8024c-e84e-4c37-953b-a799e72ee6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07de2fa3-9841-462f-aee9-75b349ba8faf",
        "cursor": {
          "ref": "61d66981-e12c-46fc-b545-1aa000ce6584",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "244eb15e-4806-49b2-b30b-69f0e40b0328"
        },
        "item": {
          "id": "07de2fa3-9841-462f-aee9-75b349ba8faf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "43c8349f-bed2-419c-9df4-7e5a38c41c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fceea1-78bd-479c-9838-91ca47154ee9",
        "cursor": {
          "ref": "45b70be3-aba7-4ab7-9558-4fa129b1956c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "17f9e607-0451-4f21-b2e4-92b7d290f5fb"
        },
        "item": {
          "id": "04fceea1-78bd-479c-9838-91ca47154ee9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4614429c-4af8-4821-ac6c-965a29b7c61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ec2a72-eb5f-4208-ac75-1e64ae1c1666",
        "cursor": {
          "ref": "2e7aaa38-b89c-49c8-bd61-a1c4aa9f7971",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fe4edc0e-350a-4c41-b664-0e2b5259a11b"
        },
        "item": {
          "id": "89ec2a72-eb5f-4208-ac75-1e64ae1c1666",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8fc2377d-fb1d-40cd-a25c-f2baa365dfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be70229-57d1-4bb6-aab2-4158f729ba78",
        "cursor": {
          "ref": "a81a128f-c572-4c4e-9fd9-990f7fbfdf81",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5d044aad-afd6-4bde-a087-8976b5eb3a73"
        },
        "item": {
          "id": "4be70229-57d1-4bb6-aab2-4158f729ba78",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f66fefe7-7564-4e37-9e55-c009dcc46ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b953f906-9586-4cf9-96a5-cca5732a8610",
        "cursor": {
          "ref": "81a380dd-1b0a-4cb9-9374-94d95e9d4178",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4c2ab64c-ae48-4bda-a5ce-0d1f392fc831"
        },
        "item": {
          "id": "b953f906-9586-4cf9-96a5-cca5732a8610",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1d9836d4-b2c8-47a6-b9d2-0b1b9f556192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75201e7a-2c64-4552-a79e-0e38931463aa",
        "cursor": {
          "ref": "b46a626e-6f03-4fe7-8c3c-81effce868f3",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e1a3d4d4-9b34-4ca1-8e92-2f16785d69e8"
        },
        "item": {
          "id": "75201e7a-2c64-4552-a79e-0e38931463aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83697fdd-291a-4ca5-bb6b-e18f230c6874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0b8d4b-d290-45c5-a3e9-1ec2fed2e055",
        "cursor": {
          "ref": "0b0f668c-b688-48fa-a22a-182dc6a7bb2c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18cf1ede-6c0c-4a7b-a1a2-ea466081f12c"
        },
        "item": {
          "id": "ff0b8d4b-d290-45c5-a3e9-1ec2fed2e055",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c2db1679-00e3-4fd0-98d3-41e400cb1c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee70157-e6e2-4e48-b4e6-778f67836bdd",
        "cursor": {
          "ref": "b3e0f71d-de76-40b2-acaa-7b518d835557",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "13c57822-370e-45c7-9b07-261df5832fa6"
        },
        "item": {
          "id": "dee70157-e6e2-4e48-b4e6-778f67836bdd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6371f033-6d19-4bca-8e27-002b6b23fce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3f259b-1111-469c-9b33-00829c5fd821",
        "cursor": {
          "ref": "45168397-5bb9-4e49-bd5f-be30a6af1140",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "458c8299-25af-4f93-bfb1-3713f007a2e7"
        },
        "item": {
          "id": "3e3f259b-1111-469c-9b33-00829c5fd821",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6ec62db-33ac-4496-b570-6163e296115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a8785b-53c3-4edb-9704-cadcb9cdb61d",
        "cursor": {
          "ref": "f5dd00af-a42b-4295-861c-f436d1af0f4a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "baf91d4e-cc79-4729-853c-8c30bc6bd834"
        },
        "item": {
          "id": "e5a8785b-53c3-4edb-9704-cadcb9cdb61d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "24016d89-b01d-4e73-97e6-a47a2ff6c63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f124f0f-c619-421d-9df6-a0aef9255880",
        "cursor": {
          "ref": "1b4871ae-c35f-4945-a5b6-9b923d357a27",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bbf42861-0619-4860-8f5d-04b8dae0b8c6"
        },
        "item": {
          "id": "3f124f0f-c619-421d-9df6-a0aef9255880",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "50a33467-9421-4602-9110-b7f2a25eff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0377cf13-9691-4574-9753-df940451da63",
        "cursor": {
          "ref": "a1a7661a-f7c0-4dcd-b017-dcf8a31499ed",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "35a9d377-f3c5-47a3-a748-45d4bacf8611"
        },
        "item": {
          "id": "0377cf13-9691-4574-9753-df940451da63",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "22e0d81c-f7d0-496e-8338-56f2884caa87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d895ab7b-f9b1-4e50-b1dc-5c8896eb06d6",
        "cursor": {
          "ref": "b4692f3a-9d90-46f0-b196-ff0d5ea19321",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5e5000c7-e56d-434f-872c-438f5ca05835"
        },
        "item": {
          "id": "d895ab7b-f9b1-4e50-b1dc-5c8896eb06d6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3ee4b689-e582-4612-b330-290a1b524cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bb2188-87f1-4107-8eae-1aa3708e0cec",
        "cursor": {
          "ref": "1d74db90-9c58-414b-9907-f96137767bc0",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76e83722-9de6-48d4-bbb0-a572270868f7"
        },
        "item": {
          "id": "b3bb2188-87f1-4107-8eae-1aa3708e0cec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b3b7bec-d2a0-412c-9d30-20b76fd03bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42457446-34b3-4ee4-978e-2de48ab9f6d9",
        "cursor": {
          "ref": "5d475627-4121-4742-adf3-4ccefdc452f2",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2a0373dc-40fe-4105-a293-04f171970230"
        },
        "item": {
          "id": "42457446-34b3-4ee4-978e-2de48ab9f6d9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "212e7547-60d8-452e-8efb-5ead42543548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aae09de-6f80-4073-8dd1-b4ba918a40c1",
        "cursor": {
          "ref": "075ae95e-377a-4fcc-8939-39bbd5e98324",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6bce1918-c9a5-46ec-9b61-41883191dadc"
        },
        "item": {
          "id": "0aae09de-6f80-4073-8dd1-b4ba918a40c1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b1b4454e-1327-4b66-a2aa-99e3ca8f6440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b20b7c-83c3-4290-bc26-fb485b7cc090",
        "cursor": {
          "ref": "5fce0c8a-02a1-4158-b3b8-f2d74d308f1f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7d7347c0-979a-41bd-a958-49b56834e851"
        },
        "item": {
          "id": "58b20b7c-83c3-4290-bc26-fb485b7cc090",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "44657d24-5008-42ee-85c3-46883f165024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16501eda-f7e5-4b2d-ba55-fd556ae66a76",
        "cursor": {
          "ref": "9b2a0d52-83be-4260-af32-b978553b1225",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2389c54f-c578-49d4-9423-fedaf152ca4f"
        },
        "item": {
          "id": "16501eda-f7e5-4b2d-ba55-fd556ae66a76",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "75349a49-a3e2-451b-a061-12166bb33adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d3ec56-5e2f-4788-81b4-78a2536007d2",
        "cursor": {
          "ref": "0a6c8870-0ff9-4379-b73b-5a1aacd5c39d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "42117ada-05fe-4c99-b0e7-3d263f70cb58"
        },
        "item": {
          "id": "20d3ec56-5e2f-4788-81b4-78a2536007d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1432e5ee-727b-48c6-af34-e74caba79e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b24ba4a-3329-4b10-8ca0-94da315e561d",
        "cursor": {
          "ref": "b46d4ab6-cdef-4a89-910a-c168c332109e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b1766663-1d59-4ffc-8413-addc9424c8b2"
        },
        "item": {
          "id": "5b24ba4a-3329-4b10-8ca0-94da315e561d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8042eefd-c9ea-455a-83a8-28cb84618601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0972aa-91e8-4758-a1e9-e4431cee230d",
        "cursor": {
          "ref": "8f900569-34dd-42d2-9370-da65944eae72",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "678029ec-bd98-490d-bf3a-f36e17c74f9f"
        },
        "item": {
          "id": "6b0972aa-91e8-4758-a1e9-e4431cee230d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0c8f3329-fdc3-4d84-985c-1d89c7860422",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97144e4-f781-4902-aa95-910e9e05cc28",
        "cursor": {
          "ref": "150c5833-7bdd-4411-bd25-17e421a48fcb",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "70d279fb-32d4-443b-8420-9e709e822dee"
        },
        "item": {
          "id": "a97144e4-f781-4902-aa95-910e9e05cc28",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "031c8031-58ba-4bf8-9333-855abafdefd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efe997c-f4df-4d7a-9e58-d576062ab4a3",
        "cursor": {
          "ref": "081853d2-d923-4cf5-86dc-e68b7162c40b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "97aa2d17-b46c-45d9-bfb2-9414b62e9f9c"
        },
        "item": {
          "id": "4efe997c-f4df-4d7a-9e58-d576062ab4a3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d5d3fcfe-fe68-4ed1-902d-5bfac9ddbbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06ef205-ccc7-42fe-9a03-c51eae99b92e",
        "cursor": {
          "ref": "cb28ea3f-cb21-48c8-b124-145d6047f51c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "807b0ad7-e3c7-4aab-8248-7664a9bbbf09"
        },
        "item": {
          "id": "c06ef205-ccc7-42fe-9a03-c51eae99b92e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "90378995-805d-4d57-833b-1fa18fad3e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02402f38-1a08-48e6-88d5-7bc5855b59ae",
        "cursor": {
          "ref": "7fc965c2-f569-459b-9b31-af9ed838758d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ebce0579-d111-4585-94e4-43c6654550cf"
        },
        "item": {
          "id": "02402f38-1a08-48e6-88d5-7bc5855b59ae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40cdf497-1600-4b2e-844f-cbad830890d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fc689c-bd13-47db-b7f6-ee9419c0db7a",
        "cursor": {
          "ref": "65132b7b-284c-4af4-9dda-3622d9f5eced",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5b35cad9-b2a8-42de-8bb0-7d69f2b60fe4"
        },
        "item": {
          "id": "04fc689c-bd13-47db-b7f6-ee9419c0db7a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8f2f7a12-b4ad-4f1f-a59d-8475aab7b76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5cc106-86fa-4b07-a310-606b10ecbf18",
        "cursor": {
          "ref": "a1edfdab-8dc1-4f22-8753-12da2c8b08d7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2383a0b3-d0da-4a83-9ead-a21f0c67062f"
        },
        "item": {
          "id": "6b5cc106-86fa-4b07-a310-606b10ecbf18",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0b98140-f56f-433e-ae01-0eb4781ecc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8a45c0-09d2-4a1a-b404-60cfe5eb94df",
        "cursor": {
          "ref": "0e0053b7-af88-47dd-a736-7851661ddd2b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ad401d11-01fb-409b-a862-9fab6ddfee04"
        },
        "item": {
          "id": "9c8a45c0-09d2-4a1a-b404-60cfe5eb94df",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b20374a2-6637-42a3-9c9e-6a4e4148c0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7bf203-bcb1-4d75-ac82-7f38dcaf38f8",
        "cursor": {
          "ref": "bcbff5b0-de42-487b-86f9-cb36f75e041f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a3aaee59-c5cd-4a90-a597-d18b01ae974a"
        },
        "item": {
          "id": "0f7bf203-bcb1-4d75-ac82-7f38dcaf38f8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f7ad3a18-4ae9-4573-9f0c-4ea161d7ea53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb98feee-2573-401e-b416-7841577fbbbf",
        "cursor": {
          "ref": "14cb7a88-b4ba-43ea-b4e8-37c0121861c3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4fc29b41-ef0c-4543-b34d-c371c98dbc54"
        },
        "item": {
          "id": "cb98feee-2573-401e-b416-7841577fbbbf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "baeed909-a667-421a-bb60-7bd4000bd5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dc9825-b8fe-452e-80ac-be3f7c1c0ffc",
        "cursor": {
          "ref": "e4995c01-4009-404a-8a58-9b8b1e71bda2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cf3e505f-9e47-4c26-9214-c253f52e4851"
        },
        "item": {
          "id": "02dc9825-b8fe-452e-80ac-be3f7c1c0ffc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fa3b0180-3e14-4c2f-b918-59daa8b13b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d49eb85-7dd0-4912-9b2e-fb932f21227d",
        "cursor": {
          "ref": "2d0a9cc7-3164-4211-bdcc-0d42717e9ce3",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "54717c28-81f0-4720-bfde-5eb087dd8bd8"
        },
        "item": {
          "id": "9d49eb85-7dd0-4912-9b2e-fb932f21227d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f7a9582-34ec-4bbf-960f-9909af4e1116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9dc2a2-6899-4e2d-9d55-4ae198215af8",
        "cursor": {
          "ref": "9981c9cd-2c8e-45c0-a752-edf3ad7ddba1",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "594f60cb-9706-466a-9abe-a8acd3a77606"
        },
        "item": {
          "id": "6f9dc2a2-6899-4e2d-9d55-4ae198215af8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "111a6ded-e002-4c12-81e9-3706521aa6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e207bebc-51b1-4925-867b-35ae6f1ae9da",
        "cursor": {
          "ref": "3120df85-3603-4d72-952c-cbf875798325",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "83dee18f-a203-4b1b-b902-90867d5f20bb"
        },
        "item": {
          "id": "e207bebc-51b1-4925-867b-35ae6f1ae9da",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "253a06bd-34a0-4f01-a4c1-ba6cd63f23c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec6fd99-b40c-4642-9ba1-ca3cdd2acc3a",
        "cursor": {
          "ref": "95b17a81-48b9-418f-8aea-b6e43df3ea63",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "130a6604-1230-4e16-9cd7-18c42ff29c83"
        },
        "item": {
          "id": "1ec6fd99-b40c-4642-9ba1-ca3cdd2acc3a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39e054c7-574d-4221-b868-86d6acae2984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e70f33-d230-48c5-99bb-79520e983b77",
        "cursor": {
          "ref": "ea514c9d-35a2-4c5b-bc48-8f609c290815",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "75e7e671-cb39-4d3d-93d0-b74db17beb78"
        },
        "item": {
          "id": "b1e70f33-d230-48c5-99bb-79520e983b77",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a455afc2-8675-488c-bfc7-1b6fe32b24a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ceb426-af9f-448e-ae5e-5c3b1c6c7dbf",
        "cursor": {
          "ref": "83e9749a-9352-41fb-a09e-bd333bacaa5c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "30ef7aa0-6078-47c4-94f2-778343fff126"
        },
        "item": {
          "id": "13ceb426-af9f-448e-ae5e-5c3b1c6c7dbf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f425f32e-5129-4529-992b-2330684c825b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f8a803-d790-436e-9e23-286d45c29d4f",
        "cursor": {
          "ref": "65a46d88-cd2c-4544-b340-80485e9f4e80",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8216ab0c-144b-4417-b783-932e667ef98d"
        },
        "item": {
          "id": "c7f8a803-d790-436e-9e23-286d45c29d4f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4811828d-d383-4d41-b9d7-c4a8bb6c0458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d04655-a7e6-40a7-b4ba-11c0f1db66d1",
        "cursor": {
          "ref": "5308482c-1948-4485-8e48-ae9fe8484966",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "51d7223d-fca1-4bad-85c6-f8c4172fd4db"
        },
        "item": {
          "id": "50d04655-a7e6-40a7-b4ba-11c0f1db66d1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0ba736e9-89dd-4672-9b95-6b33e878cdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db684b4-4852-4302-9d55-60ec991194a4",
        "cursor": {
          "ref": "eac66d4a-c26f-4f51-bbec-62c1e964ac26",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fe1e8fa1-2efe-4ac5-8aec-371d04eb2aaf"
        },
        "item": {
          "id": "1db684b4-4852-4302-9d55-60ec991194a4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a1a5eed-420d-46b5-ae43-849e6fd7c0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f2da53-15f3-4a40-aef6-6cb9223c0bdc",
        "cursor": {
          "ref": "cc9b8421-3143-400e-9501-6e059166dd44",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ee571830-f799-487b-a4ed-60d47591eb09"
        },
        "item": {
          "id": "d0f2da53-15f3-4a40-aef6-6cb9223c0bdc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "451f0c52-fd41-4fed-9ed0-7bc5e8370313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aea2a9-d468-49b1-93d1-4523927e2910",
        "cursor": {
          "ref": "7228deca-d452-4497-b19a-24bc3cfdb048",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "28c4e8c2-ad8a-4194-8e0c-af8bf94f712a"
        },
        "item": {
          "id": "76aea2a9-d468-49b1-93d1-4523927e2910",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7ff52a90-9900-40a4-b4d5-5e8be08c3fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e39b64-0a45-4ce7-9725-1862b7e26218",
        "cursor": {
          "ref": "8bd11934-6217-41c5-8b84-96eb502afa07",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "12fd8ee9-f8c3-4e4a-9bf3-8611555ea037"
        },
        "item": {
          "id": "48e39b64-0a45-4ce7-9725-1862b7e26218",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c1a6496-1d56-476a-bd34-884526e2633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a878f3-8cb2-4405-bda7-71cc07e0e94f",
        "cursor": {
          "ref": "96df9c43-6551-4aac-85fb-535483fd3b0c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6fd2af15-496a-4009-9f80-aecf1cd2f79b"
        },
        "item": {
          "id": "16a878f3-8cb2-4405-bda7-71cc07e0e94f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a7285f31-bc95-4d5f-979e-a30e338eb8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d297843e-7db8-4882-b2b0-9526ab09dbf4",
        "cursor": {
          "ref": "4db8d868-128e-4353-8a38-fd3e800e0061",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e54b537b-e49e-4932-9861-222b08d18228"
        },
        "item": {
          "id": "d297843e-7db8-4882-b2b0-9526ab09dbf4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "45336d55-ba72-40f7-9adc-68a9e6adba2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3630910-a246-4bd2-9c2b-c30125705e9b",
        "cursor": {
          "ref": "a6adc45f-7adc-4e10-a45d-0295c17c54c0",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a5a33b85-581b-4ea5-8627-003a1554dc82"
        },
        "item": {
          "id": "d3630910-a246-4bd2-9c2b-c30125705e9b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8be4e37b-4092-497f-9eee-e5107e78c5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e768911d-d0e8-4d49-a48d-6042ac34df39",
        "cursor": {
          "ref": "b79fc4bd-c887-46c9-8212-24dd0ff82bcd",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9acea8ce-a804-45ea-9ecf-12e8bdf22aef"
        },
        "item": {
          "id": "e768911d-d0e8-4d49-a48d-6042ac34df39",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "31fff32e-2c69-4749-858c-7ef87a5a7129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aadade-9b2e-4d77-bbb5-78269959d6c7",
        "cursor": {
          "ref": "53430818-dd60-4eb0-9dd2-397be12df38f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7b83edf7-1ce2-4338-978a-7b5e12f5af0e"
        },
        "item": {
          "id": "20aadade-9b2e-4d77-bbb5-78269959d6c7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9a796a1d-5041-418c-b039-2d799459b2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094d8cd1-a016-48c9-8996-3aaf5774f705",
        "cursor": {
          "ref": "f87e8c04-20e3-4a99-bba0-fa5e3c781733",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "02b614d9-fa6d-484b-a536-85fd5511a448"
        },
        "item": {
          "id": "094d8cd1-a016-48c9-8996-3aaf5774f705",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5e5e9959-e903-46d0-9af8-c4b307ce32af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac24a2d-4338-4288-ba35-d049628b40f7",
        "cursor": {
          "ref": "2757649d-ace4-41b4-9d45-675cb5a19557",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "af89aa7a-0a3c-47f5-969f-27fe90c4e321"
        },
        "item": {
          "id": "eac24a2d-4338-4288-ba35-d049628b40f7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bc95e39e-7ff5-4c50-a9e8-fc255837f21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38714aa3-9d0d-43dc-b323-88774f4929f4",
        "cursor": {
          "ref": "68fecc65-4c2c-40cf-bf20-eef6d3af6de0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "35477985-b22d-4f4f-89e0-fe529be64180"
        },
        "item": {
          "id": "38714aa3-9d0d-43dc-b323-88774f4929f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "292358ef-98b5-4746-8a94-6705ab28d850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ba78d3-f6f3-46ee-a682-7832e1122c34",
        "cursor": {
          "ref": "4fdd745e-5cbe-4ea9-be07-5962fd0c3f4b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dc38d167-d6f2-4963-9efa-20df45ff65e1"
        },
        "item": {
          "id": "34ba78d3-f6f3-46ee-a682-7832e1122c34",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cfdc74c4-6bd7-4a6e-aa94-ee253733d490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e68022-41f0-4e92-b246-8d12d4372175",
        "cursor": {
          "ref": "805ff379-3c20-48eb-9afa-d184776bc520",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ef78bc79-5afb-498a-b0a4-bb719f41fff1"
        },
        "item": {
          "id": "78e68022-41f0-4e92-b246-8d12d4372175",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5d0b6ccc-f236-47c2-8d92-cd634143c44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3c76bc-676f-4745-8e69-8e6b31bed885",
        "cursor": {
          "ref": "26ce7dad-e75a-4e76-ac4f-8b0c55fd7968",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3831f92d-5a9b-44fe-8087-4551d95c436f"
        },
        "item": {
          "id": "af3c76bc-676f-4745-8e69-8e6b31bed885",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fe51bac2-11c1-4313-a860-a84b62ab9948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b877de-2b14-4ef5-be97-de85ade54dba",
        "cursor": {
          "ref": "53b2a802-7e65-476d-95cf-20cd9591fef9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b96ef5ec-4ca7-4e65-83ab-5cbd9e57a7a0"
        },
        "item": {
          "id": "60b877de-2b14-4ef5-be97-de85ade54dba",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9f328dd7-6b45-4d2b-b046-2bf9e3975ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b141e5dd-7084-4030-9e87-89137abdb0a1",
        "cursor": {
          "ref": "a71ec407-ee4a-4e89-a24e-07925ab1f163",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cf9d2ab3-bae5-4b66-9fca-986685148da6"
        },
        "item": {
          "id": "b141e5dd-7084-4030-9e87-89137abdb0a1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "70efd104-483d-46a9-a0ce-5666ebbba463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4015bb-1a51-4c57-9415-4394690b4f0e",
        "cursor": {
          "ref": "cb2443dc-5ee4-4986-97c6-d6cd8dc4d72d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fc627e5c-b0d4-4fd5-8d1d-cf10230b6b13"
        },
        "item": {
          "id": "fd4015bb-1a51-4c57-9415-4394690b4f0e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "99a0cad3-c170-44eb-ae69-3f41fa77cc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2265bc-f883-4966-8a61-e91b27c220e0",
        "cursor": {
          "ref": "7b4f1322-514a-463f-9e37-fee8d25ec307",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2dfd8c7c-a19f-4c3e-866c-e4853b24234c"
        },
        "item": {
          "id": "db2265bc-f883-4966-8a61-e91b27c220e0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3a28f076-3e70-40ab-a9a3-3404f3a55ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46468550-cca5-4279-ad94-9f581f016202",
        "cursor": {
          "ref": "dc128694-fea3-4545-87f1-995743248fb7",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "986fc870-46f9-443b-a096-7f9755c14c2e"
        },
        "item": {
          "id": "46468550-cca5-4279-ad94-9f581f016202",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8994b07d-7361-4500-879a-1169f90ad5c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4147035-bed3-477d-8a2e-1cad9da086c1",
        "cursor": {
          "ref": "966cef5a-8efd-4df8-a8d5-ae2221047ce7",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "34fcf209-2a98-4a8e-8c71-ed8dd20f48a3"
        },
        "item": {
          "id": "f4147035-bed3-477d-8a2e-1cad9da086c1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8af33da-bf50-4087-a15e-2399b9c6b6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf882fd-4ac2-4984-b488-46c03f6947e6",
        "cursor": {
          "ref": "53236162-eb78-444b-8f4e-1e4cf66f82d5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c8052687-8689-492c-a603-ddc8a2aab671"
        },
        "item": {
          "id": "cbf882fd-4ac2-4984-b488-46c03f6947e6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "20b2b184-aadc-4f01-a3f7-bb9f65126268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bc3c72-d9ac-47a0-a778-a20d36381d30",
        "cursor": {
          "ref": "44d037d0-01b5-430c-a8e1-c95e25a7d2da",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0c853326-f13a-43cb-a2da-c5bc69f0f42a"
        },
        "item": {
          "id": "79bc3c72-d9ac-47a0-a778-a20d36381d30",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3000fc19-e1ba-4ab5-9afa-7477789db3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d64dc7-2840-41fd-b169-ebdd8c2feb5a",
        "cursor": {
          "ref": "a44c545d-0ef6-42cc-a146-2824eda75eea",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a58a8a5f-cf31-4540-9526-f06ef998c889"
        },
        "item": {
          "id": "a2d64dc7-2840-41fd-b169-ebdd8c2feb5a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f552d474-880e-4fbd-b33b-c750968fa7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6406966d-9afd-4c71-bbb7-9c21387f1e9b",
        "cursor": {
          "ref": "adc5259c-58c8-40e8-9f03-9cd8a5f41358",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fcae6287-7466-46a1-9466-a4689905b547"
        },
        "item": {
          "id": "6406966d-9afd-4c71-bbb7-9c21387f1e9b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "de857cc6-5571-43b2-8fd9-9d47b7f74d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a129943c-7e25-4011-898d-7968e5993b67",
        "cursor": {
          "ref": "defc1e22-ed48-4207-b499-7c731d30875a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f36a612e-03e6-4477-b13b-a06d7b0e9259"
        },
        "item": {
          "id": "a129943c-7e25-4011-898d-7968e5993b67",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a6fcb34a-9c09-4336-bea8-5b0580bc494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c74ab50-2dfb-4e9e-9920-6586440d137a",
        "cursor": {
          "ref": "76c7c47d-8494-4b7c-bd51-7e26c7ba90b2",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8e861b1c-04f7-418d-8c69-55ae0b9b1c8a"
        },
        "item": {
          "id": "9c74ab50-2dfb-4e9e-9920-6586440d137a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7c1faeec-22ea-47ef-8ace-8fbfe6a6a904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb42a7e5-6f31-40de-aecb-f04c480661ec",
        "cursor": {
          "ref": "7c0e16fe-95b5-4f09-a5c2-6d4ea0b27f04",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0a0b8cce-8293-4d9e-9875-4f3ba241660c"
        },
        "item": {
          "id": "cb42a7e5-6f31-40de-aecb-f04c480661ec",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e816fb0-564a-49ad-a159-984ac38639c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cad799e-d741-4554-9ecb-2a80566bd3f6",
        "cursor": {
          "ref": "171b1d91-557f-4525-b918-358365832b87",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "38869529-254b-47f8-94b9-9b3ef5b2d37e"
        },
        "item": {
          "id": "3cad799e-d741-4554-9ecb-2a80566bd3f6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1fe8d57e-4efb-4112-9b39-3d1904829a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca85a5e-0d0b-4e3d-9c5b-9633f8bd051b",
        "cursor": {
          "ref": "3078cd58-0c3a-4ab5-8d61-948546e3498b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7d1c746d-537c-459c-aa3d-bb8fa533fd3e"
        },
        "item": {
          "id": "dca85a5e-0d0b-4e3d-9c5b-9633f8bd051b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "46954e4b-fdff-46f1-946d-55718439a32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6330f45-d547-473a-b16d-83542c7f8e2e",
        "cursor": {
          "ref": "947295a4-d113-453e-81f3-d1a0e8ede1ba",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c0c3ee80-8408-45a4-b40b-7014a6948988"
        },
        "item": {
          "id": "d6330f45-d547-473a-b16d-83542c7f8e2e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab294d62-933c-4448-9045-4a72a7cfee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4baf66-abbe-4309-a8c3-2d0db31f0e79",
        "cursor": {
          "ref": "3b1b4e2b-d8ce-4421-9a9c-c67db216f714",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b90080f1-3922-404d-8128-0998ab9d95da"
        },
        "item": {
          "id": "cb4baf66-abbe-4309-a8c3-2d0db31f0e79",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8c488583-8448-4a8b-afc4-557afc09f16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a7d507-f0a0-4b39-b710-196aabd370c0",
        "cursor": {
          "ref": "8a712f3b-33c3-4c69-a1df-704bc322926f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "24678728-a77c-43f3-b904-317f2ff4f4de"
        },
        "item": {
          "id": "34a7d507-f0a0-4b39-b710-196aabd370c0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "76a9e911-2dde-4fa9-a762-5c4aa9c3f758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc30ac2c-46d0-4e36-9731-2473ffe6baa5",
        "cursor": {
          "ref": "82df9dc4-9818-4590-8385-57e2d7edca78",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e3070bec-b1e7-498e-b860-972745aecafd"
        },
        "item": {
          "id": "cc30ac2c-46d0-4e36-9731-2473ffe6baa5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ed77ee24-e281-4107-83e5-233acabe203e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8cbbbb-d2c7-4f07-ae5b-c6e8d9d33322",
        "cursor": {
          "ref": "96851aa6-dd21-47d7-8986-4ec9c0d43066",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6c5e40e6-19e9-4f4a-8287-8c1b2669c76b"
        },
        "item": {
          "id": "9c8cbbbb-d2c7-4f07-ae5b-c6e8d9d33322",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "49815ddc-11d9-4edc-8740-ce82c109fcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7041aa83-fc74-4320-afbd-0100b90e6944",
        "cursor": {
          "ref": "bfbdf3e3-fc06-4106-ace9-69a4155f5b13",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a00ff8dd-7708-4319-8381-ecf0eae00edc"
        },
        "item": {
          "id": "7041aa83-fc74-4320-afbd-0100b90e6944",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e114a8f1-6e4c-4bc3-9b2b-3c90de579d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc7120a-9077-436f-ae74-f6e1608462e7",
        "cursor": {
          "ref": "a2279d86-76ad-4348-99d7-416762d1016d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eae298be-3cc1-4f13-8665-4a32e8d750e4"
        },
        "item": {
          "id": "8dc7120a-9077-436f-ae74-f6e1608462e7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f6b5bb29-2dcb-45dd-aaa9-fb43536607e4",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "cae0b3ba-ea55-40f3-90f4-d21550715e35",
        "cursor": {
          "ref": "ddbba75d-f699-4fe8-bfb6-739dfa9710c2",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9cfa7d3a-d1ad-4282-8dd0-4ca52351d448"
        },
        "item": {
          "id": "cae0b3ba-ea55-40f3-90f4-d21550715e35",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "44257a0b-cd02-471d-a6de-04d7be8330dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7418463b-459b-4d03-a242-2867c88cd8f3",
        "cursor": {
          "ref": "2c637d40-1ae7-498a-b857-c4940b7f02e6",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5962441f-fc51-49e1-8260-3ea929c03397"
        },
        "item": {
          "id": "7418463b-459b-4d03-a242-2867c88cd8f3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ff43a3d1-d2f2-4099-bf27-36c7fc2d1e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d95c256-3eaa-4df1-bf47-ebb2536acafd",
        "cursor": {
          "ref": "cdc2165c-94b1-4eaa-810b-e261094a750d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bac6111b-d024-49ec-9b62-dc35acc56060"
        },
        "item": {
          "id": "1d95c256-3eaa-4df1-bf47-ebb2536acafd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8b2f3aa3-f593-4466-94c6-57ce030e6f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a041c4-8656-418c-b223-100df97c2bca",
        "cursor": {
          "ref": "8ab4600f-b457-4e48-be63-435b5435368e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "491f6b85-29c3-409a-8e83-b7fd1a10f3da"
        },
        "item": {
          "id": "b1a041c4-8656-418c-b223-100df97c2bca",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d8e8d6e4-c591-41c7-93ed-d4d56101b98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dad832b-d9ae-4f05-864a-3dccf84d8156",
        "cursor": {
          "ref": "9cbc207a-e4a6-4f9c-ad13-3da6a38cd56b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a589957e-603d-4258-839d-82287bd986fd"
        },
        "item": {
          "id": "2dad832b-d9ae-4f05-864a-3dccf84d8156",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "185db568-62ad-498d-9811-1546d5a49e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefe9e14-ca71-486f-ac3d-cdd4ccf1d392",
        "cursor": {
          "ref": "0054445c-f876-4e5e-a7ef-81f10d43b862",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fb1761ea-0298-4feb-9087-3d390fca979c"
        },
        "item": {
          "id": "fefe9e14-ca71-486f-ac3d-cdd4ccf1d392",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d14010aa-8037-4a82-b401-2de0561c359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7107b46-9514-495c-88aa-fee6147c6de1",
        "cursor": {
          "ref": "73ceaa64-161d-4042-8e4a-5fea43ba9052",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c5f2ec82-a324-423a-95db-7401f2306e05"
        },
        "item": {
          "id": "e7107b46-9514-495c-88aa-fee6147c6de1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8d2179ff-e6b4-45a2-a764-24279ddb8c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220345e0-8c1e-4f03-ae43-012fc5b2e849",
        "cursor": {
          "ref": "67471e96-3e59-4247-b36b-43a895af6abc",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cd5b4764-82f1-49db-9ecc-41758cfd5add"
        },
        "item": {
          "id": "220345e0-8c1e-4f03-ae43-012fc5b2e849",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "34401822-9868-4187-b94c-6c32c332e294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445df73c-f7ce-49f2-bf65-455a7a83c584",
        "cursor": {
          "ref": "bea69f42-d5b8-4e76-bbcf-4e1225f85f09",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "df84bad2-60dc-4cc3-ac3c-5281acbcfbe6"
        },
        "item": {
          "id": "445df73c-f7ce-49f2-bf65-455a7a83c584",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "469b9511-1d2c-4b2b-be95-1afcf539e125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66197131-28ff-431f-812f-efefb1063a39",
        "cursor": {
          "ref": "9026b9c4-ff8a-44a1-9e99-a059ec995a33",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b5c32697-c1ff-4408-b938-2d59d07eb688"
        },
        "item": {
          "id": "66197131-28ff-431f-812f-efefb1063a39",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "770244e0-12b3-4a76-a8b4-4ee496c8234c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021e93d5-8e26-4ad3-a3c0-3d05669bdc8e",
        "cursor": {
          "ref": "1508e2c8-646c-48fa-be67-0dbc72787351",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3abdf4d7-4746-449d-90a3-cd82609e1b1e"
        },
        "item": {
          "id": "021e93d5-8e26-4ad3-a3c0-3d05669bdc8e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6d158df9-11aa-42f0-acfa-8668bc1c5f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337d9b75-dcbe-467f-8524-d54575f0f8df",
        "cursor": {
          "ref": "f5d5e452-8439-42af-9357-67fa7816a41e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "17b04c47-507c-42e4-9292-569589c4dab1"
        },
        "item": {
          "id": "337d9b75-dcbe-467f-8524-d54575f0f8df",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a8f3b4fb-4d55-4a59-bff0-6de78e9efc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5342a9-83e9-4cb5-89dd-7a8fde784a5c",
        "cursor": {
          "ref": "a54f0767-b8b1-4b4e-9f2b-002594b75490",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9b411b40-7543-4a93-bc81-d92322cc369a"
        },
        "item": {
          "id": "9f5342a9-83e9-4cb5-89dd-7a8fde784a5c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "46ff2331-4c96-492c-8a5e-af4af9ec05b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43107a4-9783-4219-86aa-d1255e623722",
        "cursor": {
          "ref": "66b3ecf8-1424-4827-a6e9-203b019cadab",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "523c4f5f-459d-4cae-a99b-035b7b97d2dd"
        },
        "item": {
          "id": "e43107a4-9783-4219-86aa-d1255e623722",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a5d9f1f7-e519-411a-9c4d-533dacbf54b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00035742-416e-4bbc-8274-1185dda82b4d",
        "cursor": {
          "ref": "d1994672-7fa2-4500-8d9a-1a578411dd7b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0daec014-0046-4b89-86cc-ae92d57382ad"
        },
        "item": {
          "id": "00035742-416e-4bbc-8274-1185dda82b4d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fbff2ddf-cc01-45bb-9003-dfc603603e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a78f08-1ac2-4510-a921-deec0d46c995",
        "cursor": {
          "ref": "b6fd054d-3bf1-4354-93b8-ac78e7ca0ed3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0cbc1a2c-8539-42fa-9530-24b306e2db85"
        },
        "item": {
          "id": "b2a78f08-1ac2-4510-a921-deec0d46c995",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "76f17bbc-8782-448e-9d2f-c01db5db01ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c51e09-ba8d-458d-a135-065f7e71d73f",
        "cursor": {
          "ref": "f5d587ea-e739-47fe-a326-3557edd5f623",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f42cee1e-57c9-48b0-84e9-63ed646edcd8"
        },
        "item": {
          "id": "02c51e09-ba8d-458d-a135-065f7e71d73f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "70a2fb16-41fa-4106-8dab-c0eeff348603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afb6239-12e8-43cd-b209-bff3097b34cc",
        "cursor": {
          "ref": "08e7bf04-b2de-467e-b4b7-ed92d54bc07f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f4a57fe9-6f00-4c80-9a48-7874b9b3c375"
        },
        "item": {
          "id": "5afb6239-12e8-43cd-b209-bff3097b34cc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "17fa967f-5931-4f49-8a30-c465abf2bba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035b2996-e099-4e7a-9945-b95b88bf081f",
        "cursor": {
          "ref": "0e2b61db-53c2-4479-9eb0-21e2737081f8",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6b3e9555-112b-4c3a-8d2c-607c5150ded2"
        },
        "item": {
          "id": "035b2996-e099-4e7a-9945-b95b88bf081f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "81bdf9ae-c70b-40ca-ae10-41de9f0f699e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe7ba58-84b9-4729-a0ae-4fef50aa3357",
        "cursor": {
          "ref": "80083c87-eda9-467d-809e-76a513f7303e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e27ec820-ef22-411a-87ed-dc0c57f34044"
        },
        "item": {
          "id": "abe7ba58-84b9-4729-a0ae-4fef50aa3357",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8362f375-d33a-4892-916d-7b10aaf4763f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44354464-0493-427b-83dc-0ac0204273fc",
        "cursor": {
          "ref": "b9381e4c-ec51-40c7-9e69-b78524cd6f82",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bbe92410-0737-49f2-a5b7-5dea26401614"
        },
        "item": {
          "id": "44354464-0493-427b-83dc-0ac0204273fc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "31eae718-803c-4911-812e-3a43184fe6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1525496f-3943-430d-864e-ec1760dc1f75",
        "cursor": {
          "ref": "f633fccc-e2f2-4897-8a3f-4a64228a1a90",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "407e57a6-3319-433d-85cd-8f1f7408cba7"
        },
        "item": {
          "id": "1525496f-3943-430d-864e-ec1760dc1f75",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "10bc8be5-21b2-4bcd-87ee-250bd90df790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7eb83e9-b7c1-486a-8e8d-672891921363",
        "cursor": {
          "ref": "1436bb80-ce1d-46a9-91ae-5f30a252319c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c801252f-de8f-40a3-abc7-e4db6a756ce4"
        },
        "item": {
          "id": "a7eb83e9-b7c1-486a-8e8d-672891921363",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d1093840-5c71-47ee-bd0b-88b0da85b74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f632d4f9-ff08-4f6b-b7d7-093ac2d9f74d",
        "cursor": {
          "ref": "ef24a931-60ff-4d15-9553-6df20d8bc8d5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0b6bdc68-102b-4748-8b02-aecdda1937a4"
        },
        "item": {
          "id": "f632d4f9-ff08-4f6b-b7d7-093ac2d9f74d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4de3d8be-1fd7-44e5-8eba-2f5884cd2f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b199db-d443-43e8-9400-d63e1896ed14",
        "cursor": {
          "ref": "74031576-844a-4b0c-8aac-0fac6113227f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d914e180-50c9-42c5-8d49-56858c50b9fd"
        },
        "item": {
          "id": "80b199db-d443-43e8-9400-d63e1896ed14",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b5bb5c87-32a3-44c7-bada-06bc488739ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08da8031-a571-4deb-ac4c-99948ff831e9",
        "cursor": {
          "ref": "99672d80-7db2-48a0-b531-e795135e6ef1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "284ad399-6b63-4978-8c3c-a9918f130aa3"
        },
        "item": {
          "id": "08da8031-a571-4deb-ac4c-99948ff831e9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5b2bc7af-1a2a-46a1-a51b-53b6f08b436a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1967fd93-0219-4e74-a206-e19849b9e20c",
        "cursor": {
          "ref": "95d37da6-dac8-46c2-8ba4-e4370e9f6578",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4b472842-0c84-4684-beb6-7ec4570fc7c3"
        },
        "item": {
          "id": "1967fd93-0219-4e74-a206-e19849b9e20c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bda9bf74-b051-4eb0-a0a7-ea8adb8afa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bcd9fe-fbeb-4d4d-abea-693efe8e5a17",
        "cursor": {
          "ref": "245454c5-8846-41e7-bd85-0d21c1c96f4b",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d71dadd8-a10c-4eb0-b367-9aba3a5f8b8c"
        },
        "item": {
          "id": "06bcd9fe-fbeb-4d4d-abea-693efe8e5a17",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "709ed66e-ccc4-433b-9f73-bbfaf72f1e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6b6588-e9d7-4fee-8580-3b4437fbbbbd",
        "cursor": {
          "ref": "04baee77-9879-44e2-b27c-95d364c3a2b6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "644c3ce9-5c7f-4691-9169-6e104089f986"
        },
        "item": {
          "id": "0d6b6588-e9d7-4fee-8580-3b4437fbbbbd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5ef1310c-e2d9-456d-96a1-1496bcea98c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98545c5-e3c4-4e10-a8c1-c3ddb87e1840",
        "cursor": {
          "ref": "ce81d956-097d-4569-9861-21b8e74f4fc8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4a3e1aa5-94a1-4b16-bfb7-2ab68c8a4695"
        },
        "item": {
          "id": "e98545c5-e3c4-4e10-a8c1-c3ddb87e1840",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cc0651a8-ecd0-4be4-a81a-17194a85c22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e81c96-5cf6-4a53-a4be-8fb75d801685",
        "cursor": {
          "ref": "810d3e3c-02b7-4f78-b63a-c07a9db4f677",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dbc07682-fea7-49ee-b261-11388f4ee179"
        },
        "item": {
          "id": "b3e81c96-5cf6-4a53-a4be-8fb75d801685",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "650e44cf-3223-404f-9e28-dfe6c065dcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125a5787-c3ac-432d-9c84-f8f75a01397e",
        "cursor": {
          "ref": "06da420b-28b6-4b80-a051-2bd1c084b4bb",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d48f4533-b123-4b4a-95ea-79dee75c685c"
        },
        "item": {
          "id": "125a5787-c3ac-432d-9c84-f8f75a01397e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b830ef7c-55bf-4eb5-bc27-7d1fc8cd1c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7fae89-a7ba-4800-82ea-69764adfdea3",
        "cursor": {
          "ref": "3578e1d0-baff-486d-863d-57346d4abc85",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7c00fb67-6167-4b48-8790-02f42a75d525"
        },
        "item": {
          "id": "0b7fae89-a7ba-4800-82ea-69764adfdea3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "59aeec2c-7521-44e3-bba0-a3af8c941a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8a0e64-c28b-4a0c-bf11-3d84b6a00297",
        "cursor": {
          "ref": "67a5f202-34f8-4cf0-ad20-6150c96cae19",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aa12e4b5-dbb2-4420-8b99-b3cea3bce122"
        },
        "item": {
          "id": "3e8a0e64-c28b-4a0c-bf11-3d84b6a00297",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e62639dd-918a-45e1-8a71-24acc9c76610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3774f75-3f23-46fa-8424-d06abec725e2",
        "cursor": {
          "ref": "b003b4b2-1ba4-4d8b-bb1b-1ac4703db99c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aa294185-9ef5-42cf-9e83-d130ffc316bd"
        },
        "item": {
          "id": "c3774f75-3f23-46fa-8424-d06abec725e2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "863b449d-e05b-45ce-b274-64c87a0b025d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff046dd-f5b5-4046-a15c-f907702b6dc9",
        "cursor": {
          "ref": "7af7d466-0445-4d2f-963d-4e31dbc92ac6",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5fc5411f-fc9f-4c63-bfdf-e946c37a11ac"
        },
        "item": {
          "id": "eff046dd-f5b5-4046-a15c-f907702b6dc9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8b8e871c-3aa0-4122-89cd-80236042db1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790f200d-89c9-44e9-956e-0ce0ee9c4a8e",
        "cursor": {
          "ref": "268d89ab-27d5-40b7-a766-a0ea76f2e32f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2fca9927-0c88-4b4f-baa7-78041f3d9efe"
        },
        "item": {
          "id": "790f200d-89c9-44e9-956e-0ce0ee9c4a8e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "43177ec7-1d8d-4a67-a441-cdcb32394afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15378e9d-d746-4ecd-bfe9-129c8ec9629d",
        "cursor": {
          "ref": "bbeabbc4-0202-419e-b53d-8abb21e50469",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b0f4c800-45e0-4548-a91a-12f85307dd05"
        },
        "item": {
          "id": "15378e9d-d746-4ecd-bfe9-129c8ec9629d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a00c6493-20b2-4f5e-8b05-bfee3c89323c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fa91fd-8411-465b-9548-cb8c32b398e8",
        "cursor": {
          "ref": "c35f3190-9fab-49a9-8b1b-871d4b6a48bd",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ec3b283b-5a44-44b0-9d5b-53362eed31dc"
        },
        "item": {
          "id": "d8fa91fd-8411-465b-9548-cb8c32b398e8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b5ce2316-c400-49a7-a456-416637ac61b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b02578-d02e-4eed-97be-008fed91060a",
        "cursor": {
          "ref": "a52029d6-5eb1-4fa7-b2d1-0c6ab1561d54",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7485b7a4-8954-4df0-8647-df6680845ebf"
        },
        "item": {
          "id": "e1b02578-d02e-4eed-97be-008fed91060a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3fb9ca73-6cd3-43a3-8c31-0999442a8c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bda586-ed72-486e-8dc5-f9501bd604c8",
        "cursor": {
          "ref": "076e8ce2-0043-4933-bd24-9375380557a5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a43c6653-2133-4b04-ac5f-534d04d9c812"
        },
        "item": {
          "id": "c8bda586-ed72-486e-8dc5-f9501bd604c8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "274a5b14-2e49-4516-a5eb-9dab278e0fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc0b8db-ea4a-44a0-b344-dcae2b951fd8",
        "cursor": {
          "ref": "b670d249-250c-4dc8-a190-e4c60f5a4074",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fb688655-94d4-4055-badd-5a8961162f03"
        },
        "item": {
          "id": "2dc0b8db-ea4a-44a0-b344-dcae2b951fd8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1591e91-0dc0-411c-b6ec-832de5505396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73846fa5-e0d3-492e-a79b-1462b11b5e2f",
        "cursor": {
          "ref": "ea62e636-8a2b-4383-9dc7-12c5591b3ec5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "67c784c6-66e5-4c05-aee2-05f8e33d05a1"
        },
        "item": {
          "id": "73846fa5-e0d3-492e-a79b-1462b11b5e2f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "56a4fcb6-e101-419d-9b6e-2ea1946035a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0304e70-2449-4eec-9fbe-f65bfdb4d654",
        "cursor": {
          "ref": "3acd3cd7-044a-49b6-a313-73bfec715b74",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8aa3600e-4185-4dc2-9f52-8cafbaca5615"
        },
        "item": {
          "id": "f0304e70-2449-4eec-9fbe-f65bfdb4d654",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e1c182f1-90ae-4d6e-b360-44b095069e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9261e126-84df-44fe-9832-3138f495f041",
        "cursor": {
          "ref": "28e04bfb-c9f2-4aea-b3dc-a67f52dbcd92",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b2489a3e-99d4-49e0-a44e-76d823a414f7"
        },
        "item": {
          "id": "9261e126-84df-44fe-9832-3138f495f041",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d06b44ae-f701-47a9-b9b2-8a465c6429ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40069594-b971-4e5b-bc04-4c0576137ad3",
        "cursor": {
          "ref": "04396e40-8af5-40b5-a511-15bc4f33f8df",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "76ce10f3-86a5-4379-b9ba-221a7809d88b"
        },
        "item": {
          "id": "40069594-b971-4e5b-bc04-4c0576137ad3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1009979d-40ce-40be-b101-e0618d9796ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f19b832-b93d-440a-a0ef-b8bfd2bdbc1b",
        "cursor": {
          "ref": "b4becff3-dd52-4c20-8266-0372de1c8554",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c77634d7-2888-4459-a758-ddc566f87765"
        },
        "item": {
          "id": "4f19b832-b93d-440a-a0ef-b8bfd2bdbc1b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "599caf9e-c4a7-4906-8e51-d2b900165f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d591078-955d-4885-b5de-1bdbef25a547",
        "cursor": {
          "ref": "df252c08-4d77-4c52-a388-d291df6191f7",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c8dea6c5-d6f5-48c9-bd13-7578042d6cf1"
        },
        "item": {
          "id": "5d591078-955d-4885-b5de-1bdbef25a547",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b36b2855-662a-42e1-b8ff-93aab8685e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21714bd7-00e0-4152-bfc5-f308388d5599",
        "cursor": {
          "ref": "f070fcd6-9334-43de-9d99-187b42ea1e6f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5b0bc938-112f-4d1a-8981-76329f916b10"
        },
        "item": {
          "id": "21714bd7-00e0-4152-bfc5-f308388d5599",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8964d867-f5e1-4765-a6b9-6e4c771e5bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dd4009-a3e3-4b57-abf7-6cbdfb4d5ce3",
        "cursor": {
          "ref": "76fef607-1a2b-4ac5-afab-1b7fda4f5ed7",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4ebe1adf-318b-42b7-845d-0a17efeb2916"
        },
        "item": {
          "id": "e8dd4009-a3e3-4b57-abf7-6cbdfb4d5ce3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "900a0fe1-74cb-4b40-90c0-a27e6e5d2089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcdf994-af69-48b3-9e11-b0c996e5a1d4",
        "cursor": {
          "ref": "4e748a55-406b-4dcf-9e1f-789bff2c0efe",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dfc31c1b-4a51-466e-ba11-29a28271ba34"
        },
        "item": {
          "id": "7bcdf994-af69-48b3-9e11-b0c996e5a1d4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "df7efc4a-9134-4c26-8d9a-07e4b0d11eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea2bcd7-43b3-4ebd-82a4-911e3c1ca489",
        "cursor": {
          "ref": "6ea1e490-085a-4e5e-b497-7a258dfaf86f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "865eac9e-53d6-4f91-b050-7db42c68ddcf"
        },
        "item": {
          "id": "0ea2bcd7-43b3-4ebd-82a4-911e3c1ca489",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c0c28ff1-5685-4f3f-b5f0-79f770e865e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b5baeb-8234-4b9e-8817-6dff484fad07",
        "cursor": {
          "ref": "89d2083e-414b-45ba-81a9-d624781cf7af",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef8023a1-b634-4304-9721-95c78a755363"
        },
        "item": {
          "id": "53b5baeb-8234-4b9e-8817-6dff484fad07",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "842eed6b-af92-4914-a699-5e5ed76d906d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1977db-0058-42ad-8fc0-74e26ed16283",
        "cursor": {
          "ref": "f0293e61-61a1-4774-986d-d35364c4a4da",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e36ac515-e75f-4495-a9b7-09b8b498512f"
        },
        "item": {
          "id": "8e1977db-0058-42ad-8fc0-74e26ed16283",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0cd46b3f-c6e8-4460-9b4a-0c20f0b0a47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fa75a7-8220-42e8-af01-88484ab7cdf4",
        "cursor": {
          "ref": "ea98d5fc-bfd9-447a-99b5-e7b1fdbff9e4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ad3f9e78-d4eb-4aac-bd6c-946c95bae53e"
        },
        "item": {
          "id": "f2fa75a7-8220-42e8-af01-88484ab7cdf4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "80b6bf79-3ea5-4fc3-b8af-75c2538daa68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada65458-8df0-43fc-852c-56116228fb99",
        "cursor": {
          "ref": "7914e64a-7ef2-4dd0-a475-fc87f60d5324",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1fc39c61-eca2-49cd-8d6f-1d1132591928"
        },
        "item": {
          "id": "ada65458-8df0-43fc-852c-56116228fb99",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "edb9bdda-b364-46ff-8ca1-cc24af45613a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8c0163-d55a-4012-88cb-90f7fbff2f0f",
        "cursor": {
          "ref": "22a20dd0-746a-4701-9d67-7dae6482a301",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ca566195-93c8-4d93-9de8-735df6be4b3a"
        },
        "item": {
          "id": "ce8c0163-d55a-4012-88cb-90f7fbff2f0f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9a9b2319-dd75-4b5f-8234-093947594b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e581f877-ac6d-47de-bd7e-634bc569968f",
        "cursor": {
          "ref": "043c43a2-03b7-4d31-96af-c6164256d901",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ae8a1e8d-46f1-4ee8-a72f-7d934ed6ea74"
        },
        "item": {
          "id": "e581f877-ac6d-47de-bd7e-634bc569968f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "adaa2512-7e8a-4dee-a485-936a6c810060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06da0270-33d0-4df9-a796-1f26f61716c6",
        "cursor": {
          "ref": "bf20888f-3e7b-4709-aad3-52ecf4469e1c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "76cec247-25d9-44e8-8568-fb497d493340"
        },
        "item": {
          "id": "06da0270-33d0-4df9-a796-1f26f61716c6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "51a0bd0f-b6ce-4fe1-9dde-2105721a9181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca30393-0f62-4322-94f3-0ffe609f75b2",
        "cursor": {
          "ref": "74917b7d-1907-400b-8fe2-20d9a06a1e61",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b63c5bbd-86a6-49bc-93ad-fad2d15c0ce6"
        },
        "item": {
          "id": "0ca30393-0f62-4322-94f3-0ffe609f75b2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b8be7f3a-7351-43df-900f-babebaca1192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8a0556-4321-4e07-bcf6-99abd06a6684",
        "cursor": {
          "ref": "d7e2a0ad-da82-4b6f-ae70-06a4c0c2dbbb",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fdf4345b-92bc-4688-a186-468aa8d50ec7"
        },
        "item": {
          "id": "4e8a0556-4321-4e07-bcf6-99abd06a6684",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "51132f68-ee9b-4ec1-a495-92e98458c3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54e722c-1b85-48b0-9784-7d5a7c69611c",
        "cursor": {
          "ref": "acea3a0a-d2a3-48bc-86c0-e6a11999682a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "73d16153-bdbe-4be9-aab4-cf01d85597c0"
        },
        "item": {
          "id": "b54e722c-1b85-48b0-9784-7d5a7c69611c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "640336d5-2694-45dd-84b4-fa6a86748874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dd7f16-7c94-4adc-a8a9-0de4e94abb2c",
        "cursor": {
          "ref": "0068a81e-9d77-4420-95dc-fbc22db4aff3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2f370d18-d205-4c45-b493-e0aa1dfad816"
        },
        "item": {
          "id": "36dd7f16-7c94-4adc-a8a9-0de4e94abb2c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "045051de-c70a-4072-ab0f-ab7aa00e73a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb00a277-9df2-4bd0-9723-fd85c5f5158e",
        "cursor": {
          "ref": "e9d2e2d5-8c26-40d1-a812-e8c6b2ed38b8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3f892868-35e2-414f-bb7c-4ef078cedbfe"
        },
        "item": {
          "id": "eb00a277-9df2-4bd0-9723-fd85c5f5158e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3e713f2e-304a-4808-98ea-45b2d49389a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa5c347-eeee-4d25-b80e-1c11f248b10d",
        "cursor": {
          "ref": "b7098771-f53f-43c4-9298-b2eb843888ac",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "36eea428-fcea-4cf8-b615-d91743937ff8"
        },
        "item": {
          "id": "8fa5c347-eeee-4d25-b80e-1c11f248b10d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "340d22a3-d9b8-4bfb-b854-6288e94589f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79658fff-5b2d-4d1f-ad6e-b1ffcfd64be1",
        "cursor": {
          "ref": "c35615d6-a630-435d-9d82-e53440b13fbe",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4025f7bf-9da1-4104-a663-fd23833ac3f1"
        },
        "item": {
          "id": "79658fff-5b2d-4d1f-ad6e-b1ffcfd64be1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5c5f42ea-4820-4182-afbb-523011b63f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea6a40e-63af-4626-a1ac-ee8911c31852",
        "cursor": {
          "ref": "ea0af5fd-e158-432e-9607-de1eec79ab1d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7482112f-5e6b-4e9d-afe7-04e275d4cba2"
        },
        "item": {
          "id": "bea6a40e-63af-4626-a1ac-ee8911c31852",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "741ee7b1-b27b-422b-a884-311ec037992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69265729-fcf4-420d-b9aa-5c6441e8f98a",
        "cursor": {
          "ref": "9c18a2fc-730e-4b6d-ae3c-8ebcbaecc7f3",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a0cf9e9b-9490-4fb1-bc18-27e1cd677497"
        },
        "item": {
          "id": "69265729-fcf4-420d-b9aa-5c6441e8f98a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ce7c899f-19e0-411a-8a04-a363a6903500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f4bc5d-d0c6-45b0-9f98-6c8242321bef",
        "cursor": {
          "ref": "835f2eb4-f272-4378-b954-58c9e04d901b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c407a645-4ef8-4e51-a1bc-73dd8c4f3cd7"
        },
        "item": {
          "id": "65f4bc5d-d0c6-45b0-9f98-6c8242321bef",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e87ac76b-e994-4d8b-9309-cc1f35806d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145858b7-e180-4a9e-b3f6-2663b359bb9b",
        "cursor": {
          "ref": "f1f3bd78-0848-4c5a-bb28-38708f90104b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e8ef7775-2e12-485e-ae62-b00a74d633e2"
        },
        "item": {
          "id": "145858b7-e180-4a9e-b3f6-2663b359bb9b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dd61e745-34be-40d3-acbb-f8863378be0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8168dd5-0f9d-43e8-88fb-6fe5226a0f15",
        "cursor": {
          "ref": "b5f8a9af-5c8f-4fbd-bfda-f26f8fdd1e5b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6bc0834e-713a-4fb3-8401-40cfc1a989e2"
        },
        "item": {
          "id": "e8168dd5-0f9d-43e8-88fb-6fe5226a0f15",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "88b57783-9def-4302-a7fc-ec8787892010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f90e2ce-b36a-46d0-aa46-259a85fe95ac",
        "cursor": {
          "ref": "771fc949-17cc-4217-979c-2e4ef76b582f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ee197c2c-19eb-4db6-913e-f645e7e31cc0"
        },
        "item": {
          "id": "4f90e2ce-b36a-46d0-aa46-259a85fe95ac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5acf3066-bf53-40c8-9957-715d1ba2787b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b0f621-49e8-4685-a385-d9be57aac2fa",
        "cursor": {
          "ref": "22e9c872-d806-4630-b123-a35eb87e0fe6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ca488649-d53b-404c-93b4-6cb21c497365"
        },
        "item": {
          "id": "c0b0f621-49e8-4685-a385-d9be57aac2fa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7474a97c-dc62-401a-af45-b2023ec1822b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf2cbeb-a540-42e7-be1d-38e15d9fac60",
        "cursor": {
          "ref": "361f3fd8-9ba3-4f48-998d-013ff66caffd",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "460c4975-f583-447d-a89d-f0dfc3df6a9b"
        },
        "item": {
          "id": "3cf2cbeb-a540-42e7-be1d-38e15d9fac60",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ab9cdf25-aff6-4392-a58c-4d02affc16e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711fbb71-776a-470c-b804-2507316fe810",
        "cursor": {
          "ref": "1110bf9c-14a2-4dc9-b389-d6d629f4de92",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9d8083f0-a29b-4103-a3a9-af74a5438a25"
        },
        "item": {
          "id": "711fbb71-776a-470c-b804-2507316fe810",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cae488ea-16e1-41d5-8c89-fca0ab63b353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a936cc-5276-4308-a139-0d64f6edbad3",
        "cursor": {
          "ref": "3f7732f5-a193-4b0c-ae21-b3a3f250f23b",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c794c662-e250-43bc-80db-09da67f8505c"
        },
        "item": {
          "id": "49a936cc-5276-4308-a139-0d64f6edbad3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b3ef5609-5c8f-4193-b6d7-76d2d22ec011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5967c3dc-aed2-4595-8772-c9557c604043",
        "cursor": {
          "ref": "b29d7c46-493a-4b46-b459-2b7da0218b2b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "12d91eda-20d9-4807-bbf2-bf5ab706801a"
        },
        "item": {
          "id": "5967c3dc-aed2-4595-8772-c9557c604043",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4a367570-c027-4b0b-b8ac-03aac9368f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ed987f-c2cb-4014-b242-39ac753c2447",
        "cursor": {
          "ref": "dac3ef72-6b42-4dea-93e7-8206fe0847e6",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c3e7ec82-858f-40b5-94c3-b23a88a32fcc"
        },
        "item": {
          "id": "48ed987f-c2cb-4014-b242-39ac753c2447",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f0292a08-2345-4166-aa27-0ea76506001d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce4f2e7-2551-484e-9c72-d4347a31ed93",
        "cursor": {
          "ref": "55ceb837-12e8-4447-85e2-030670a18aea",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "96db9d57-e474-42c4-b70c-b9ab80d41e90"
        },
        "item": {
          "id": "fce4f2e7-2551-484e-9c72-d4347a31ed93",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "94dd2452-c1fe-43ee-b572-bf52f4bba986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee1a1ca-12fc-4a7a-a29c-de17d3d91af0",
        "cursor": {
          "ref": "3d335b02-adc8-4bb7-ab41-da60daa2fb84",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9706d63a-0d05-402c-ac92-943065391f4c"
        },
        "item": {
          "id": "1ee1a1ca-12fc-4a7a-a29c-de17d3d91af0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3cf303d5-b360-43fe-acf6-43f1f8db519e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de16210f-14b3-4a75-9822-d8ea84a8b9b5",
        "cursor": {
          "ref": "f956f42d-2efb-4eae-afe0-a88ca1d95bfd",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5ef86202-6419-4678-a9c5-2c13fec39557"
        },
        "item": {
          "id": "de16210f-14b3-4a75-9822-d8ea84a8b9b5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dd3eef9a-e4c9-4b43-92af-da205c8a41bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682533bd-52e9-4dc3-b61a-9176b39cdb79",
        "cursor": {
          "ref": "4880a40b-aac7-4746-a523-e0a97544e08a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6b73e46a-3518-4adf-99ce-f42e51061118"
        },
        "item": {
          "id": "682533bd-52e9-4dc3-b61a-9176b39cdb79",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "97b95f2f-f5b5-44a9-90dd-2ff83db92d05",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "719b3309-44e5-4786-8df3-41538b8316a0",
        "cursor": {
          "ref": "bee89971-ccdc-4c14-91e7-fc3f27e831bc",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0afdb5a6-80ae-41ed-9a74-050394658d65"
        },
        "item": {
          "id": "719b3309-44e5-4786-8df3-41538b8316a0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "08db97d5-0c5e-46b8-9e17-c140fc7fa64e",
          "status": "OK",
          "code": 200,
          "responseTime": 3022,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f672821-2156-45be-9b98-d53f5630c7fb",
        "cursor": {
          "ref": "50f78d94-3592-49fa-a5ad-2ce84c5a32c0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1fddebb6-27df-4a0b-a94a-01728d995d14"
        },
        "item": {
          "id": "5f672821-2156-45be-9b98-d53f5630c7fb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1532e5cc-33cc-406d-afb5-13746cc5607a",
          "status": "OK",
          "code": 200,
          "responseTime": 2689,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "785080c4-a753-4f1a-93d8-def61046b715",
        "cursor": {
          "ref": "e4b03104-5573-4bd7-bea5-d4852f917a46",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7ffb8187-cda5-4f9e-80c2-26b98ce3ad95"
        },
        "item": {
          "id": "785080c4-a753-4f1a-93d8-def61046b715",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3a77e912-f316-47e7-9e7a-ef2ff7ac174f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785080c4-a753-4f1a-93d8-def61046b715",
        "cursor": {
          "ref": "e4b03104-5573-4bd7-bea5-d4852f917a46",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7ffb8187-cda5-4f9e-80c2-26b98ce3ad95"
        },
        "item": {
          "id": "785080c4-a753-4f1a-93d8-def61046b715",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3a77e912-f316-47e7-9e7a-ef2ff7ac174f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8348e75a-acd1-4530-b31f-567acbc082f0",
        "cursor": {
          "ref": "43bab331-cbb3-4bcb-922a-e22e79faf63d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "90268909-dcf6-463f-a1b9-7fef6c120e1b"
        },
        "item": {
          "id": "8348e75a-acd1-4530-b31f-567acbc082f0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0dbe2f78-306a-40d7-ac6a-7d62e87346aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbb6ea1-ea7d-4046-9091-ab24c1898e8a",
        "cursor": {
          "ref": "f44891b7-b887-45b1-827c-008e57f86195",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ed3883df-4c81-476e-8bd1-42dd9151c036"
        },
        "item": {
          "id": "4dbb6ea1-ea7d-4046-9091-ab24c1898e8a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "965780b4-4a37-43ff-8680-d376e8623611",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}