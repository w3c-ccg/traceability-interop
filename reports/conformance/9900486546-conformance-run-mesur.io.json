{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cdf3c873-a5cd-4e9c-b42b-6396bb7a69c0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f6332910-792f-4cb6-94e1-e6aed1654d9c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "174e81c0-5e22-4fa5-a8e9-d58690ede33c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "af8349fb-e0ef-4a09-825d-ab0181098087"
                }
              }
            ]
          },
          {
            "id": "2586f22d-21ec-4c43-9fdd-96be5772f861",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7375ead8-ae32-47c8-a5a6-c66bcdad1f87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2d51089e-823b-45cf-a965-9a383d132655"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c564e551-1f51-4367-bd0a-6ee1f021f500",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "04b77b41-a942-464a-95a1-dcb0fbd91cce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8ab2cdb-3cae-49b9-a1ef-7a320461548d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69ed02b5-f0a7-47f2-a373-fc40dc1013b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5522ccbf-32a5-492b-b967-1e1f1bf5d783"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b513e31-938e-431b-aea7-f97b5be9ca2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b99c7658-4ab6-48b7-9afa-0d02ac887e00"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd41a46b-5c52-4794-a6de-bb6ec3a62cc6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "394e9e3d-62a9-4066-ab22-14d93e0a08f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "752d1cb9-3fa5-4c48-95c1-0cbe5ed2eb74",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d3c1ded5-9603-4ac5-99d5-7c3560207caa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72027ff5-eb32-4a58-b7ce-ba42f06b9c4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b07208a-1952-47a9-8b88-b7f76798a83e"
            }
          }
        ]
      },
      {
        "id": "318e05d7-1fb6-4275-879a-09445d2130d1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7616eafc-08bb-4e2d-91c8-fb6b7b248120",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30d51e7f-e86f-422f-91d6-ae512af4e922",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c2c6281-e9b5-4a66-9319-e5464d99d56c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30000148-dc32-403a-b51e-803b7fc03c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0956ceeb-17ad-4920-8a17-0293346bde3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb21bb6-be22-4463-a695-2fc6ec74dfe7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2107be-8d06-4940-b660-eaf1019bbbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c3e52e7-2e4b-4585-b28e-dd7ecceeaca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b37f5f-3d0f-4c03-9c82-eabe122fd250",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49667a09-445e-467e-8d1b-dc69caac216a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fad84a2f-07a1-4dc3-8fa7-f9b9bde49ac5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e9d138a-e2f3-4653-be6b-52d8e1d6d5ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f533f45d-3186-44da-a278-b375e128bbd2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8a2851-5dde-4850-954e-5a770f00ec8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3ef2a44-3c2e-42f9-a0bb-18186296262d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c63288-4856-466f-88fa-7b4f2ab5d698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16600672-21e5-4ab9-840f-b02a76ccdf2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8ea37c0f-76d2-4a05-a55b-97f7fc4bf017",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d373295-f733-4dd8-b99c-77cdc0b706ea",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "772963af-3a7c-4f50-abbb-f65498f0795f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "982c0b3c-d279-4a2a-afc2-780833ce90b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c62f9223-b6d5-4dae-8663-72f5a6b79c35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "24e447db-122b-4e47-b5a5-5eda18862ec5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12a4736b-0b56-4de8-853b-d5e7c67d79a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1b49b7d-3f6c-4112-a09d-98d56c12b00e"
            }
          }
        ]
      },
      {
        "id": "f21d98d1-b795-4935-ac99-a8f78d6768b6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "34068930-243d-4efe-bfba-83c340c8eb60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04c78cfb-69bb-415a-8693-588a8f7d899b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "145c2fac-589d-407f-8bf5-294a6919f9b5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6485cd-98d2-4a9e-a521-96261d9abe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b047f85f-30f2-4cfe-a676-19330063a043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fee83f4-194d-4339-8290-27157c5bb168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78b3badf-f132-4a44-9111-779dc2310162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f87d0a2-5cb3-410f-972f-8944a6146a3a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28bcb9f-0912-471b-b2a5-452daac6a48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d1ff99-cbb9-4b67-8445-86ecd19f96f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2b69bf-ec22-4cd8-8419-debd81df77a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "341ee3a5-f9f9-44e5-8609-b6dcd85ef2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e4a2fc-48a4-42f3-8b91-ad693782cc22",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c21eda-02ef-4279-9a56-8bff4bdfa4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87c96e2-9040-4203-9e82-2a27130e55c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4f16d9-a46f-4c31-b446-8100c5a474e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca35fef2-e4ea-443d-99f3-51dc88310f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf187ed7-8237-4e96-999d-17cc9e11d9b4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d3cef-cc89-44e2-8547-f95b4c902a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bf4144-6642-4419-8db7-3764e16c35d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2199533b-ef47-4f22-9c70-4690b9d49b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "805e79fa-8a15-4c09-8dc3-e1357a0098a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe8a03a-9483-4754-8509-8f8288cba43b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934e9aaf-4719-4816-81e1-18c887d3cf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52645a7f-35e2-4b94-99f4-4758f3a5ed66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9251c70d-e11d-4b67-9d4a-784666ce45dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fdb60ed-4dc3-4bd1-8a9a-17364c3181c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efc1f6d-eb2b-43e1-9ab9-091d4d12befa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626cc3cc-79ac-4859-8803-a6c51f46b17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b610e15f-e1d6-4efe-a560-7576c81adc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa765b4-e729-475d-aba5-a5c3486d22af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "406bf03e-b2fe-497e-a14f-62b4fb9266d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d62f928-4e12-4e2d-802f-9d5b10b21213",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf0655f-3c20-423a-8093-2d5f330e7a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3338f5-fe87-4176-a1ae-fb65923bb694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb666300-44ca-4706-97da-887ff1f484df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e60ca2ea-e754-46c9-b6f4-4f839aa0ff8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda7a85f-1009-4119-9347-4332edc8c211",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a96cd9-0960-452d-b5ab-2e37d5483751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4308e4-bf0d-4b7e-9df9-46c9b4c66a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f45fa70-97f2-457c-8257-c775bb8d82aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3919481-37e4-465f-a700-5399a4b8b8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f36c93-ed00-472c-bca0-7dcd11063dd6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cab3a7-0733-4fa2-ab09-4e71f5a20371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa013b5-27df-4359-80a6-5a2ab9110ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e569a2c0-c4de-4ae9-95fa-ccb733474e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d7b4bfc-614e-43f4-a41f-575ca6aed72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850afb1e-298c-46c5-bcf7-a7eb046ef29c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb1da72-6979-4b0e-8abb-a4a316e1140d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccbcb0a-29a7-4b41-973b-fd0cd5e732f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac0b1c4-7019-474f-9339-824c7f6cc998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b708f9d4-e3d7-4ddc-97ef-2da951f4343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017dfcf7-1cec-4ea3-b319-a3dbab57289d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db63ffc4-ecc1-49c5-9730-b6d1eb7f587f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab873e9-71c3-41a3-9a37-0058c3a602e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e0e7da-9e56-4d8f-a16a-153462f277a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45eb07d1-d164-47d1-9c97-917781db0db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2718b3f1-3122-4e54-9978-5e08759858fc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be33904d-5f32-42be-8325-58bbf7045210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f8a862-1a33-4f9a-a0f8-3da605778f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57494a56-6422-4e98-8b84-c52a515a5621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d4c4cd5-cce0-4b9d-a909-33e6702b8393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1406109-8ba4-40ce-8a99-f691e9599af3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2da4b79-4f70-4a57-b70c-8f847ce8cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11f75be-033d-40c0-bf08-88d60b02a1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2d264e-3be1-4dbf-ac51-38f1c2ff9e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09ec1b90-f0b4-4f71-bcf9-59b058a00056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2a7462-69b5-4273-9f69-d3fbc1dab1d8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a3c010-abe6-4dfa-8dcc-0ec30889bf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ab147f-ae12-4adb-ad29-7d3851a1c4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b895ea9e-be04-4595-b4f4-428a19824058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5abf0d77-4520-4eac-91fc-16ceedab9cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3852f25-b52e-4826-ba90-f6bea17e4a43",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd296cb2-4a77-40a5-91bc-5f6bac6a372b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79e9ba8-c73e-4567-904e-d7dd120a0fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9666173-c3e2-4c6e-9598-5cc0d2f23e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04c0d7a3-fb4b-4029-acc9-85a8d59fe680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fff2d1-9bbd-429a-869a-c2ece820aad2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e582ef69-0b81-4eac-9a6d-28b3f19acde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2a94f3-ec99-4f64-b48d-2a6e10ddde42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da028b7a-605b-4881-94cb-eccc751b86db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2af95c07-05ca-408c-bf26-3ed1dafa7290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456ce426-d41d-4721-ba89-26ddbef519f3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b598332f-e11a-4c7d-816b-4b61c986a7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ff3ca1-d344-4212-b885-d04c555343c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134418d5-87ca-459a-80c1-afad16f57a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "412f2197-f285-4e71-ace0-0a17f84a1ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941a6c5e-04b1-4a40-9c9e-0a61b6ba8724",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd726ce-fa7b-45b5-9e6e-7d48b57a4b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace70aeb-23c8-4db6-a3a1-593e5f9f2478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a256d3-4536-4fd0-ac21-a8161fc785d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd70df3-81f4-4d8b-a17a-a93db6e1bf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710e7a1f-321a-4398-87cf-14cb432148c7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12df1bd-4204-4dcb-ac77-c639f0d6e995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac9f9aa-19d8-4329-954d-33318fd0155e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1ed4d2-f1b2-46fa-9d78-2bbe2fdc2b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "749fda79-4cfa-4c82-9602-3298125f7160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969c87bf-85df-420e-921f-f2b7a100ee0f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4d8ec3-de24-422b-b905-18ee75486dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34277225-b03d-4f1c-959d-bc2e043104ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690fd0b4-4443-4a79-b1c0-187b2f84c98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab638b5b-f5ec-4fd3-bb54-30555fe9d06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a80aab-fcab-4ccd-a8ab-92c5e520b21b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a8c972-9dfe-44bc-ac08-df54aa0f1af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d94919-ae69-4b85-b8d8-1680b80d56ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f22ed1-4ace-4c79-9e58-fc8fdd6406b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c83eda-5696-4433-84de-8be721f09da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaa9543-2efb-4fd9-9c71-ad853b7f2086",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9800a4-4e81-4aa0-8e38-5cfe0db8cee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9b00b1-6a11-4c0c-97c2-65354683ec54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5232dde-2235-4f9e-af87-fcabf7a58491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4799cf3b-9232-48e8-a25e-4f1227a0ba13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0739eb-0ba2-47f2-a33a-3475fe143de5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3e0d64-3937-490b-9d19-5b0b42d4b1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af24800e-acb7-406c-802f-035879b26c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d76cb1-2add-4ea4-b8a9-f0388e49abc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90e3c868-14e1-44f2-b890-f2acf9c8609c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed835b11-1aec-420d-bcd0-ae961c2af920",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719786ef-1556-4794-a022-58e449a6d10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779bb281-ff67-4f1a-b770-a12ad14b8f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fae6873-6378-4d1e-af7e-8afef5332f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "35aba5ec-73ff-4bd1-9ddb-3dcd8d721115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a5b346-9394-4e10-b9b4-3c295b549b43",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3200b0eb-05d0-43fb-a6c6-ba30f26d86c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b189f9-f80a-422a-84d5-6b9c99ec58dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cbe2d0-7ef3-464c-bd2d-fc8221e759a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c16be1-2917-49d3-84fd-7f38f6a4bc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de774c45-0927-4ded-bee1-2ee4a486ccf7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45a78fd-b87a-44ec-b22b-e2d0198406d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d4ee8b-bb4f-4a06-b6df-f6f3a5c98bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb46eec-bcec-4151-8be4-f1064215b634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76597409-e3ea-41cc-b90e-34b68d11ac7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40c5463-6fd2-4703-9e7a-c84d2975d59c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef82bf90-fab5-4650-9b40-97597129095f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44dd04a0-4bd9-4297-b247-3823ac3999b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d92a35-c091-456c-b70e-83adc125d454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1355642-ecfb-4e02-bf63-bbe1989150bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2324ce8-ad7d-4965-aa7b-0db126beb386",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3328e1b-6c61-4947-b6ee-e924da05df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88b84b7-659f-4039-b940-5bf2d8a4360c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2ff159-3842-4436-994b-00ac3f46ded8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fd6869-608b-4eeb-9d45-0adaf9d84f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff735e2-aeb3-4058-9663-9ff8575e515c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c897036b-0a84-4560-8133-77ee6aba8904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d7e70f-c21f-4676-8a90-ddea0e18fe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11011430-c8c4-4bf9-9652-554ec846ffe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8736c0e8-7123-4ba7-90c9-b6065b29751f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7518c613-c1e3-40a7-bdb8-480ff27a718a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a57480-8703-4b61-92eb-b4d005aaf134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202d1526-0cbf-4177-b7fe-98bbf449a31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7845957a-6ab2-499c-9f4d-ac2cd93b3c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25470ab-93bf-4db8-a9d8-5180b70487ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbca502d-a05c-44b0-8e8c-c658c34280f5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97039c75-d46e-449e-82dd-aba3d2e4fcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de82b21-095b-4cd2-94fe-263e6bcfee8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cfdb8d-a94c-449d-ab59-bbee09f77815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc519280-9a48-4ba4-b57d-4418e59e4522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cd8307-ab03-452d-9c95-c6e695331f30",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e319c45d-f9b1-4915-ab57-6997a2ca16d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864d044b-8e98-40b4-a6ce-fff0848c5566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95962cf5-29e8-46c8-9681-f2408a18a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbc289d-6aa5-4654-a77e-9ebbd86a70d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5106fab5-03b6-4345-9494-29dc7b947c8b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fd203b-c687-4df0-ae9a-a4c6b65a956c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b63c830-cc87-4e25-92b4-083dacf3cc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2b85e1-7b6e-4e8f-b290-1c07bb0f02e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a000b9-8435-4a8b-960d-19810e96d9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daa47f5-5587-4304-8a2f-941d13599fad",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138d3871-4405-4f5c-be22-762f407a2587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447a051d-efc6-416a-a67e-d1888e79c542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfcb5e8-8690-48ba-b433-ed00e0df655d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5dcba2-59e8-4099-a631-b23fb0f12adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c88be53-586b-4dc1-bf93-7b8f60b4e3fa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a165fd-9193-4a50-8fbd-d6ac49a0dd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814951b3-8b88-43fc-9392-50a3977071d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09538a09-7a9e-4785-b6db-9f22eca12e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d6780866-f03f-4696-ae5b-06d78330e492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77c0ee9-1470-46c4-b2d3-7d743a4d67bb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c0d71f-f8a6-432b-8906-6771a2017db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e7c84ae-fcca-4030-af82-d4eb9c73acc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fb7597-c843-4be6-9af1-dd6ba17464b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cda3cd-0438-4133-b906-6976161413e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ddfbdc-a1c9-4b72-9f21-d7a58f348489",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12d9c73-126a-4840-941b-68815afe79b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e026428a-ee25-47ac-9dde-8fd0182d8ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52b442c-7183-4f66-8ae1-79f8b5cef55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0631558c-47be-4fd3-8eca-9ce55a243238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4b9c42-7a2a-42aa-a7c6-afbf89a7c6a0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635cb41d-a48e-4d8d-987a-e9590caf163a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4783852f-aa83-477d-a0fa-af3436c179b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fe464a-7661-4eb6-8fad-7d85ca377779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e192ee60-d002-49f2-a7a4-2703eb99daee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808bd043-149e-4c3f-82e1-e5725e3bfc8d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22634607-3205-4dc9-8bd1-ccf23d3c43e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed5f15e-03b0-478d-a122-2ff4877da364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beee3983-42b4-415c-b1c4-fa006db18966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7e77c7-2137-4598-9759-452c2d9ac8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39e96f0-da2d-4f37-82cc-86b41b5c770e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0f214f-3f3a-42c2-845d-c931e6ff5a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc95725b-578e-417c-80bb-91b80b47d246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba783e28-c813-4887-afd7-c961287ef26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40072b73-5d7e-43ca-af2e-979436a16685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e674d0d1-965b-4ca9-a39f-422a277c3dba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fbb8ae-31ea-4b3b-8a90-a809d10178a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e1bb8c-3af3-44a5-b933-0300bfe83cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d243d64f-a683-4afc-91bb-d8a024f16c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1a19b6-f506-4b74-8d8e-c4ec98d428ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e64b99-20d7-4bac-b472-18105bab9a9b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d0743d-40d4-4712-aa63-3c78d81d7b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79791fd8-b74d-42da-86cc-72f467e8a8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba62589-d1bb-4343-a0fd-58a77b243976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3942f2-17f3-47fe-81e8-a200339ee338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3007de84-a9df-4147-bbcf-005078c1384e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329e093f-855d-4d46-84b9-1c91f786a47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c45bee-0931-489a-8c02-a54ce9f468d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b49bc24-1bec-4d05-b3a4-c8bb61f83089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a63fbddf-0d1a-4040-9c4e-6a7bcb71b315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bf9629-1b56-414b-b86a-f93751bcccda",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3d123f-2b6f-4f32-8b30-075ae19e0b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7047eb-d0c9-4989-808a-fdffeaea3261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4b1739-01c2-45c8-befe-1ca5ab3ff57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "27aceef8-c878-4e5d-a6c2-3ded3d3d37ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513f80e2-6cbf-45cb-a645-1387ec9645f9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6174ef-840b-4476-a586-89e507b28ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cff8edd-a95f-45f0-ae68-23abce3925b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416eb23d-275c-48ec-9fea-4e0b06e4e46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f032c1f-8637-46f9-a983-8440043b1ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7fdd45-6748-4a35-9fd9-21be6d8ee69a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f810e14-1fb3-47b2-b4ac-9bda4b8a0cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396b8e52-5973-4d33-be12-312cc736344b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf657bc-959e-4063-a26f-774f1a01473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e05120e-b3d8-4871-b089-953c5cd3f06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257087e2-1aa2-4001-9c77-32f069c84b1e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32425ba4-16a1-4d6f-bf35-fc592123b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d7f6dc-7e13-4a0e-9e5a-ccaf6715f65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c65b98-7416-4e56-bc91-427fc1636508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67ce02c-8c12-484a-973b-969ae93e2a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794aa518-c98b-4c76-9ba4-c67b724481f7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284cece5-9cf3-4ab1-ac54-9e78eca632a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59290d1c-1f0f-4237-916a-8817bda8ff45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559195db-1657-4b5b-966b-84f117cea28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "688a2da7-7655-4278-9586-ad7bba5fd798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbcc6d5-8182-4ec6-a6d7-af4d52c70e20",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fb3f83-d8ac-4751-91bd-42142e0bd735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4396d6d4-574f-4ac3-b522-85b3a112f1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f422b96-628d-4cc8-9427-e026c0993aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8879656e-ac21-4f65-91d7-832f16c22964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd326934-b899-4206-b95e-3892ed0b57fd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d4749d-3414-45bc-99ae-ab647e62129b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2256a5-9cbe-4ed4-a52f-b47f26517840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f575ee6-d458-4c7d-aa65-40a6548ffa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d10d0f1-41c5-47ed-8a91-165b1d415bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6142893-f274-4aed-af65-c2599a46eb6f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b8497c-4256-4587-ac3e-343e96a712b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3c59b1-57b1-49ad-a518-eaa021a48ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e3ebc6-53fe-4f1f-b80b-61bb5f485e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc27ad2f-85a3-4cd3-9637-bb7f3e1337ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12de3b1d-6836-4697-88a5-a21aa8e8385d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceece39-363a-4dca-95b2-1626d2b2d994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e806a33b-1b9a-4cda-89c2-3a658a1f775d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80606bc5-4dd0-4101-8463-20168e92238a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02e8b47-ff22-40c0-bc15-e873f1c612a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31de595-79f3-41ff-bf04-6d986411944f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7523b3dd-7b40-4177-9dc1-fbeb472638f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df1fb49-927a-467f-a95f-9344903e190d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dc0917-df72-45e5-9ae4-950e3df9be51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51793335-8f68-43b3-98cb-869a0e42be8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6621126d-25dd-4f33-9ec9-8be401a14eec",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c20656-3265-4ae7-b7e4-6782384aa32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850771ef-26b3-42de-853f-d9db65e090bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391944a4-76cd-43ad-801d-62383c90e81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b48626-51ae-4141-8e53-87ad1cb1df5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a78aa8-a786-4e6b-9b32-4aab9c353206",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179066d4-93c5-48ea-b110-7ab35cf97314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eec8e73-b4bb-4b7f-8ab4-2059c43da654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615c903e-f18a-4c67-a330-c020650699b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7823bda2-156d-4654-a036-7b8ccf72d527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f64d22-6e9b-40b6-ba3e-a855d7c795a3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da18bdcc-5da0-44d5-9c32-55189b2b6ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31e4a10-da27-49d4-873c-0c2d9564564b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabde52a-57d8-48ab-98f7-97994d3099f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dec5bd99-8c0b-4eb0-b459-1e96a2b3bd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef3eeba-b297-4600-a171-06111148aeb7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810a5749-9c1e-476e-b593-bb100e175dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09806a70-2aef-489e-954a-c32cbddda78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e47ffe-78a5-446e-a8db-a91fb79a0505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5262d8d5-222e-4e6a-a75b-5ae5b6368692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492a410e-d655-4274-8433-68f1c075400d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbcd9ff-e883-4311-a220-cb61ae70758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c97481-7b55-4f75-8219-0f2b985e6f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e05b14-129b-4b86-930e-9857879fd28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2f03e8-b56b-45c8-8d5b-c9cba956e01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddad309-e58f-42e4-b503-14f83a96f0ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6267a4-afd4-40f1-8a29-9ac76b57a2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7679dc8-0771-4211-945f-ce6bc5a8fb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40da32dd-3de8-4b75-b578-5f52de4389b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "874be57f-ad53-4f1e-9c5f-0b9f865f8c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd1a83b-952c-43ff-97ac-f4583b6a304d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60f0fee-0e78-40a1-982b-bc07e07de649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752b6165-f3bb-49f5-b6b5-2969cb180cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3f95d1-67f4-491f-9644-65d3c6ed1df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c66e0ad-190f-4a91-a44c-10cd15410257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d112ee22-16d2-44f6-880b-f22b09b448b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b065175-91b3-416a-a045-c9ab3076ae6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0003dbab-1ca3-4ba2-84d4-0d464aec4d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a56ef7-3ca9-4c1f-b323-9d906b1ce538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1de733cd-eac7-4552-8b65-57752bfe9094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99c8108-0adb-4e88-b31f-4599c8b15e57",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590aef74-b636-45e9-a836-95f9d44651c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208f58f6-7401-4d5f-9d90-ac8f1f27ce18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe96e656-dbe6-4e3c-b735-b89d3bd16d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdbd9d6-62fc-457e-904c-17675302eadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ab9415-ba34-4eec-8c7f-8873a0bb9d4e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dd7d6d-2fa3-4be5-9198-4718acbb13e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2583ecb5-53c7-4430-a803-3ac402a04d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b5e955-e9e0-4d6e-89b1-1242503b412a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33505b69-5699-40b2-9700-14df5d9500ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04ddfd0-b651-44b1-a510-4df7706e2efb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e28bec6-63b5-4cc8-8303-1187b3511dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad397e87-5ca7-4300-a270-2e0b3c1db9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e766d21d-6494-4f89-bcb7-f733b07924f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "015ab889-dd75-4e5d-bac1-3efe37868aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2744ca9-5d0b-48ce-84cd-80073d39236c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6e518e-8e1e-42c5-8436-40ffa492daf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f387052e-3654-437f-9eb4-82ad4592aec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ac3571-6ba3-4b65-8d99-bde675e0bea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b014439-adf3-40c6-a128-863af296af27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cb6fea-f095-4c1a-88c5-fc9763ce34d7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318f9390-ee00-4fde-b1c1-7105dee4af70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d761cd8-e5f1-49f3-829d-318fb8b528fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a021d1-3770-4b16-b7f2-c3d617d8ed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c847eb8a-ce17-45ce-b8e6-80cd1d66453f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b1ccde-543c-4953-8cf1-782e0265f658",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b0c6a2-fe34-4884-86e7-4d967b00a060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdc7d21-d21b-405f-8316-3df80d256894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9457dbb8-8504-46c1-845c-362934c12ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27c8ddde-f1c8-443f-8bb0-3be24f9f9fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837be002-4401-4eed-b783-5e771ed094de",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39eef7e-c2bf-4175-9e5c-dc4bd3adfde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d189168c-e91f-47fd-b35c-3b593b094529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfe7558-c217-4bf7-8fc1-2d50f85dbaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "782c4210-9591-4b55-92a7-ed7b9442b685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3083e48-b324-4aa0-916e-b95ab40fe741",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58740a25-5170-4f4f-9a52-29cc3c09b88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838d6760-03f9-41e6-9634-5200b4d99b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297de2f7-f9a7-4cdf-a0b1-d9054ecd1195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8969c1-361d-45ae-ba5b-e996f02bc255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e4efbe-2b73-46d0-860e-1bf3339b9f3d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1342a946-23bf-45ad-9db0-85ae75581bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4caf07-93fc-4fde-b72a-222c76d56b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54099839-05ab-4d48-9a83-4eae4a7efc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8997f52-6208-447a-b7a8-7ff1df1a53cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f3791d-412e-46b8-bef4-b6ef1847a694",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaaa6fb-cec2-4962-afbb-178cdc056b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40ba380-24cf-41cb-baf5-251089930ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c472e8-813c-4e05-96b7-bf8d1ef06d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e0f30b-42ee-4699-a1b3-7225c40f9186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31a341c-20a4-4f49-98ec-11b0ac164f72",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a05564f-734d-4fb6-bae5-f0565f69ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b10a70-74ff-40aa-b1d9-e5ad5f0a96d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a920ed2b-6aeb-4ec8-8c9f-d41e8be1eae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13661798-ddf8-49b0-86af-ee2597069de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a8062c-8fb9-41f2-892b-552373562096",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d2b882-9e38-4819-8e3c-5db5deb73269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5525e7d7-12df-4174-9d6c-e6e01d709b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab4bc50-b36f-46d2-a54e-6d2068d2602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79526189-e5a3-4685-abb1-31ea3c129670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e539da-b82d-485c-8e79-bc392de90fb1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47ca56e-d5f2-47f3-8d8c-f2888e0fc395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1128183d-2368-4727-80e2-601dcdf9a544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0ddc85-673c-4633-b75d-f6e9f7375495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc19eca2-1b1d-41e0-ba59-86a367422d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e919e48-6021-4b0d-bb3d-8b26c411caaf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d7502-4b14-46b6-8821-d9c42681c18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08e94ed-c1f2-4176-a225-a42603e4044d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203bff12-0da3-4379-8e35-8fc8e3fde59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d461d59-ea29-4a29-8a57-fb534a2c9a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e30e072-9eea-4fa7-8933-3a732a990c03",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fdac22-3817-41a1-ba45-ef3211a6c558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350df848-ee88-4e1c-af34-d2b40210cbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a20e55-850e-41a6-9805-3575473c9a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46e4ec3d-54c9-41fb-8adb-be85270a6012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04318c70-230a-4500-8289-a4250b11965e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb807319-af74-4a69-b7cf-eb81c59ef16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7883766-5e84-4840-9b6f-895ea81c25fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b986333-f2d1-403d-a30f-997788177c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d3901d-4829-45a6-b140-c1414ea30e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0104e9-c793-477c-a25f-f59118723c0d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf6969d-c2de-4b94-bc00-a48418adff9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dce4f66-bb5b-43fa-8592-02234cfbc84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d36a10-963f-4da7-8d91-b2ae5da95244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c5b030-20cc-4ea9-bcd6-8dd045d72610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18760b97-e599-477b-a671-ed531a1f654e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9833de-5748-471d-9c6d-c6e4f5ae1873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40289176-3723-4568-80a7-70280ded9e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cd1f0d-1007-4af3-a7a8-97f2e9494bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b1d382-7127-47c0-9da9-66162203dda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9329ebb5-0eaf-4737-93ea-ed5e127d559b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27de805-a0ae-4ffd-8177-0880fa0a71c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd07437-26c6-491e-94a5-87d50f09ea26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e191ed2e-6e17-4d54-9759-cf1c20886b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed3841e-7f48-4b8b-b0f6-6047a66e380c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8fa7f1-fd36-4935-995c-19a7770b615d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e16de0-937e-4b74-9207-e3f5dfc0f050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca39e430-821b-4ec8-a15b-a9649579ec77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615cc2a5-6124-4c76-8ddc-9ea021c720b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a550655-c5f7-4ace-8800-e61db2fceb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e114850-4cb4-4e9a-a358-264151331bb0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee53a43-e9eb-4e53-bbb0-0f78bf35f3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5edd5d-86fc-42c5-9606-ea05b20de651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556e7b7a-aae3-46a9-b46b-d49218c7e5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d40f090-1208-4347-81b1-eee57dee4ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d14141-0b95-4d8d-940e-6064c2c0bc9f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bf5046-8bbb-46da-b443-8bab06667974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4331e66a-0cf5-4190-a72e-6bc703ba6f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bad183-bea9-4463-89a4-b5fea48a4458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5d8af8-9165-4ee6-bd8a-edd8338bbb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c087ec-34a2-42a5-831f-7b86d9594547",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c180f4b3-4d7d-4378-950e-f1d5cd680777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5868fca-8de9-4e3e-9a7e-1e7eae366468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69acc42-a8ba-4889-93d4-8ac6d1064a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c2deea-3e7c-4393-aa98-c0ab5973190d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a948db19-0e5e-43f8-9f78-8d4fa87b88f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8d4808-4dc5-46a2-bdba-2814e922f905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2217c37-1231-48a8-b626-ee4bb6b22c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe17d32-dfa6-4607-b846-2244344da815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef11af54-9325-4e94-8151-3fda1f554bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d908ddc4-5bae-4ef7-8eec-14b353db8884",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471c73e7-44f5-4746-b09c-08b6294ebb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7326fef-0629-4bbe-9117-ed987b1294bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e1c8bb-1346-46a7-8f79-c3448caec7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc6fddb-bc5b-4b0c-bc59-f51aaf41d852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632e4f01-5f99-42fa-8c23-ed202d9e0516",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d3dcb5-fb5d-47b2-88c0-0fe9ce00ab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec301a9a-b6ce-4bdf-af5a-2b8316b8e610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940e28dc-6851-4733-9773-d3ec2efcdf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8599e6f5-5b87-4ecf-8c54-3363b325c5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2441c7-253a-4178-abfe-36bb1d166d1c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5b3dc8-9691-4c76-bd4a-094970ad8964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d015849d-68e1-41e6-8e56-463fec66fef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d43d5a-e30c-4ba3-951c-31c5ae8e5998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9276df69-068e-49c0-8437-669f071efe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4682db51-4327-4ef7-90e5-504685a9072b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dfb04b-3e36-4be9-a671-4b4c095c41dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a141bff-c4db-4a22-b325-c3380891f70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea152f39-791b-42c4-9ac6-d2ed3645e800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "93b37f2f-5ae4-4cee-8030-6de99c99270b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76595907-a1fd-441d-b4e5-df6376febda4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623b3f38-13e8-4178-83fe-7a672b8cb529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c80e8bd-2916-4a92-820a-2e16c962546c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c24627-ce93-4410-b868-f0f7b774a5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "99c140c6-0759-4d49-aa07-e2e176c65b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d86bb14-7d7a-47e6-8672-62e78da18334",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e8f393-ec9c-42a4-abc9-5b34dd3400e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c72c62b-a762-4ac0-9d12-53b62fb696a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af72c939-81df-4a73-8333-561378cb5fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6945402a-f5c0-44e2-909f-e14753ebf259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4077ca39-fb52-4552-b9ca-f3e4ab8599c8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4e4c86-ccb8-41ec-a9b8-a08015bef36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a1207e83-c6cd-4630-9d18-729685cd123e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2b69a1-4bba-4cf6-b9a5-951bb78d6d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4f04ca-552d-494a-bacf-7cbac794f9ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "104cac53-96eb-4855-a679-9b07379fb7f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "363cb1f1-19ee-4ae8-914d-b5ae2af27d5d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670ce139-d967-49ef-948f-c4ee6ec4399f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e927e98c-fba4-4a55-b57b-244c915ad25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfeebf6-a40c-44be-9c59-3cbcae596330",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b383ae0-98ef-4198-80f0-c4dab352fab8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18928eec-f74a-41b8-aeff-e8b179f6bc98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dac9dde1-a4f1-4642-993e-0d2181655ef2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c49ca46c-4778-42c7-95d6-13a87d4e8484",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e832e86-a2db-4622-a99a-c395cc6c6494"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bb600cf-214e-46ba-b783-1ab6653d51bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d1420ce-a1ae-444f-90bc-e3e4f820c896"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c5dedf7-bcaa-4389-ba6e-cf23ce857926",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "797c6329-7a20-4e0e-8655-1cff20e0846f"
                }
              }
            ]
          },
          {
            "id": "8659299b-a799-4185-b8ba-9cc8c8b25321",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94bec9d2-735c-4670-845d-113a166b888f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dfaaf5d7-cf68-4d6e-ac5e-8e50ff0e0d9a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d8bbf7-ff52-4ad0-85df-895dcbeb17d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "23335922-cd5c-4fc5-abe3-4bb4420d3a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd457a7-d952-4418-91ec-943bcf6efc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2ba6ef-61cd-4cf2-97db-ed65bea07b60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8ebee3c-5636-46ed-9a90-cf960831dd7d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aad6f740-2657-41b7-95dc-5295e272a01f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7824c5ea-f1f4-4693-8309-e1b88228842c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6614e410-ee07-42a6-8075-c774a5179f29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52b042fd-5adf-444b-8243-1e47bf3f9782"
                    }
                  }
                ]
              },
              {
                "id": "b416f703-1e80-4f5d-a3af-a3dc08ff060c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf2056bd-d4d1-4f01-88a6-b2daf12f69a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc86340b-2708-4134-a948-217895529130"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "686bbbbb-b23f-4b50-9dc3-915c3d88a7c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54f501f8-7389-4db8-a414-f2cb65cdfba6"
                    }
                  }
                ]
              },
              {
                "id": "0eb49a55-a47d-4a2e-bd9a-ce8f0fd720c9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52f7ae59-ae57-415e-a312-4ae4b3f6713f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "298a42d7-c57a-4afd-8626-1192ad02eb21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8b936e6-9c80-4376-9663-ce5b3da204c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62c15df8-dc24-45b7-9ac3-c7d672fce72c"
                    }
                  }
                ]
              },
              {
                "id": "134ee6f4-0d67-4262-9250-ecd01a8bebb5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e8b3c4d-72fb-4ac2-8b8e-1d7e1b702efe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f854c520-90cf-403d-9434-86065cb65e1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "340a9176-8624-4321-8b29-a34e993006d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3bd25659-5d5a-42b5-9489-804ed15f8507"
                    }
                  }
                ]
              },
              {
                "id": "4ec18786-b5f0-4727-9cb9-c21eb73b443d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f2e1189-af9e-4f44-9f48-c305673d1c09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6205274-e1de-4fb9-aee3-f0296217e3c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1236f894-e497-430e-b12a-8e7d5c794a8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2a3454e4-d357-4e05-93fd-94d2c8428052"
                    }
                  }
                ]
              },
              {
                "id": "0b901ecb-bfbc-476d-9778-7d46b27ab44f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0ab146e-fd6c-4caa-a52c-2ed7c6637ee8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70e11aa6-df09-444b-9b1d-110cb9be1bfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef13eada-1c14-46bc-8de5-83b80779840f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14af96c1-7622-46b8-9549-8987049044fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a92d286-0528-4b74-a3d3-4c4057370253",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d06efa2-d181-4109-b28c-c4cd54b742e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a1dd7078-677f-49a7-9890-37c77b15dffa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04837b3b-cd36-4589-aa18-f337c6e13a3d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9e8f9fa-d636-464f-993e-3a0bdb712d71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ca925796-c5ba-4d59-ac00-0b8e6b6ac61c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b031fecf-01ad-4b54-badd-6f6fadb0ab1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9406c4e2-5845-4a4b-8296-b8e9b6b8cf9f"
            }
          }
        ]
      },
      {
        "id": "21a6ae1b-50c9-46a2-9b36-fa182b435059",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "534c23b5-6e0b-4ee3-a7a5-35cbfccba9c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c39b1d78-7d9f-4b47-b85a-aeb4042550ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca4c0d57-a777-4a82-9e81-4ed5a2c2ee57",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20aea49-f874-428b-8cac-e3742b15fa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383280c5-5686-4c91-bfdc-58b3d97bfa3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8888f7c3-4785-495a-956b-e94c8714c441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "146de4de-2dae-4e39-8992-6183b876b6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74c170b-0e20-4780-94e0-486d850c2620",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b28c1c8-f52e-4a16-a4ea-3a582d1b2ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1722373a-6634-465d-9323-9e75ae0b030c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeb50b7-521f-455b-ba87-98ae9030c7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7906c15b-e15a-43bc-be9a-9936f9868f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5314964f-a0b8-4f73-a994-cd913c789747",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867cda8d-f024-4005-bc5f-1926a9f983d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baca8462-2358-4b6e-892e-cf1c25592f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6953baa4-a000-485c-aca1-4aea5350700a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffdc46b-2ea4-48d8-b48f-dfcf640bb222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588c2ac3-a9e2-4fb0-b662-c1cd13231201",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863401b9-7f79-4287-b625-600b91e01482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d1bfd8-39af-4bf8-bc06-c3ed61adb80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf39ac1-bc84-43c9-b4b7-b9b8b36b9231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c36d50b0-ef95-40d0-be0d-b6969fc97337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1944de6b-2c51-48de-9212-0e4d0319da02",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f24d36-7bd7-4554-b4cf-a0dcce9c0742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252d0eb2-55b4-43f1-9c85-c756cd6954f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08f6631-7c10-4edf-9d45-2401fc8a307a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26384a90-ce76-4297-b780-a824892ac1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5041080-2c5a-4b8b-b01d-5869a33c34ea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f34ba8-8145-4c99-88af-26ce6c3beabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaed4f2f-a038-43c7-9a33-d1dfcff64613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607c1a4f-0efe-4ace-a4fd-ebb5a138901d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4dbcf6-d604-4c7f-a364-868eee55712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f833cde8-ef7d-41df-a2a6-6b346a0cefe0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1cf91a-4127-4569-b678-772967db31f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f749f697-fbd5-4348-8f89-6d3a388bb054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e96e1fc-c5f5-453f-ba88-5d487bb505b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9c1c74-9358-429c-bbd4-32917285b6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94e9f0c-8026-4822-b603-04c441297caf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a53130-d690-4f0f-bbba-2ba730ed50e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d659f672-caa2-4b74-9e13-9edd1e69b07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a697d510-632f-475d-92e3-2d25cac7c600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c7d8fb-e061-484b-ada6-a0752825654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f536384-9cb9-4f63-bb19-44fa0a53d024",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b5ee13-59c6-4384-9041-80147590bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aef9b7f-621c-416c-ac02-ecb0721bbf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ce79f0-90ce-41fb-9549-2714eb79380c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd144d28-4885-4fb1-9287-ca53405afdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb487fa3-1cde-431e-b403-679fe58ad65a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a623bae4-f7e3-4767-adc0-6c27357fbb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b3ac7f-aece-4b37-9100-b03a0e42a930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d79f90-d9a1-418a-af74-891b263595e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "104e5a78-9487-4b72-847f-4c2833c848da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b624da-2251-4d74-8c36-f4c16cc04c4b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa48585-0e52-4eb1-9c67-92a7aeb83af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def1e831-a573-4a94-94d5-6383e051593c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15720577-ba94-4aa1-8364-04a7f16078d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdc2658-d667-4c75-9a9e-217cacc5d68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a6a81c-a70f-4118-a4e7-38d96956c35f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2e6282-b293-46e4-9ce9-8a0396c0f161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5c4f55-cb8a-46e6-93ab-199496d2f607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcbb8e6-bc6d-4de7-a763-1abf9b32bb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c488c25e-a2b4-4c55-8dca-70a02c08a647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa50d0a-a1b6-40b2-9247-8fa55cc80428",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b915c1e-963f-45a3-a371-759c5594573e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc65e31-0af9-4b0c-9bd0-2c51c7f14257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d485aa-d115-4bfb-be42-4792c47cce6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "011f68cf-7703-4e60-b071-4a423fb2cd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf5e15f-5379-4f59-a402-8b02319445c6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8769e5-ab94-42e6-ab24-2bcb2d06ad21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8cb8fd-859b-42b9-abfd-083badca95ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f7ac09-fcb8-4502-885a-18d2e6642a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b694ff44-f2e7-42f4-9526-c6644806d627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079aeda7-d5a5-4005-bc01-a7fd2ec62762",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb350f0-053c-4794-928d-a74345200a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fcbeaa-42e2-45bb-8a2b-a288cd6ce83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d10e71f-4717-42b1-a78d-e592494d11ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "731430c6-1767-4396-a13b-2a111a1036b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d768312-fa41-431e-8152-f606081c597d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd523099-e510-4e58-a9ad-a9d69774c25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bb327a-8361-4511-bba2-724bff9dd160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa52a38d-b600-41fb-9cb5-14a2d0c844d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9729044e-4cd2-4961-93b5-11d820083f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1207af55-2edf-4adf-a4d2-2055ba90f88c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981a1aac-9f6b-4e1e-b193-db92df3ef3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588c005e-31f7-491e-be85-a7f266cd7696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255a3e95-8eba-4d05-bd46-19134535786e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a40a3da-e4f0-498a-b7ad-e1849e264dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be490719-c9e0-4a80-b8a5-5324fcbc8f85",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa859a5-4afb-4386-acf1-a3c1a232bae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496e2c4a-41a7-4884-bbbc-5b27d2d05f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41543868-a3b9-4fc3-84d7-c00b5bdcb34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4b38ac-cd3e-4dd0-9cd7-51ca116f0acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5960a75f-52e2-4e3e-8e1c-766f77428429",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9f250a-2f18-428d-a3cb-0474a071126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b77c153-f17c-4a52-95b8-355806480c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a4ba92-2414-4264-8742-833cb4cae4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "023ef4f6-7775-4185-aec4-69b9421fb745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80bcf33-ef27-45c5-b9ab-8aaeb178087e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f73dd77-0ec3-47f3-953b-5e76e13d021d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc889fb1-3436-496f-8af7-a0ed456e7478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f26ade6-51b7-41cb-b321-266bdb7bd07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7deda1-e705-4b56-8bab-b8f97b97a907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2ccae9-a539-4103-9c7b-80089db8b140",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f1e3f5-2c82-4d32-a4c7-81c3e3808645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94e9898-727c-441e-adb5-3af99f7f7e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97949aa1-b0fb-400c-aba5-130a961166ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "539495b6-3921-444a-999f-dabe8f12fe1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a0829c-ff41-4288-8187-1cbe219c36d6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcda82a4-9954-4f1e-b16e-76d46a572d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cd4a17-a9c3-4b7e-b371-17df8a09726d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0de98b-6402-4438-88fa-512c27551f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6d369e-0f67-48c8-9e96-fbcb9c9338b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb447ba-f805-4044-a683-8a1ef1f6a700",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2c4474-6450-4d53-b173-3f3fa64112f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecb420c-06db-4fcc-a352-25b7ab877c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41be301-4726-4999-9265-e61577401264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "995c1005-613a-4272-8cce-ea5fe01af36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a27d2e-ea17-43e9-b473-7c39e793c76f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0266c42d-262a-4fb6-9893-2f2781f00f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70045667-14cf-4d02-8b58-896d00cbf2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e42e653-4595-40a0-ac2e-9b1381805a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b83fb4-38ce-468a-9d80-e7e1070784f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a864674-97fc-4417-8d45-d9411f39be43",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550d2df6-ecc2-4270-975b-77c2842621f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7a17fd-2e9a-43e4-a147-b9166b961c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c440c8-f82f-4db1-a36a-5dcc096c291e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11acaf17-91ed-4487-8bac-aa7ab30b2750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c040d975-4ddf-4ca2-8d16-9816ac8eedfe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c747e24-739a-4a2a-b915-c6ee03f123c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d16a8e0-48dc-4603-98f0-ec0fa4f8e7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fae8f5-d798-4dc3-96b9-9584bdd12f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b06dfc-b7b0-470f-bb60-c357bb283f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38aa100-35c9-47ab-af78-7a3d49c744cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13730471-a2d9-4ab9-9230-a3ca6e1baa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3da6003-64df-444f-b785-f1f832a3b6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5829fdc7-ba13-4508-aa28-2b0becf81c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5195de1-ad6d-4969-981d-f82731332c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca861af2-073c-4992-b084-bc9098a9113b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d46bc9-da0e-4b38-b9b9-9a3da5b52926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18114c78-0216-4b61-a6dd-1870239a7f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4735da-5a89-4a4d-b17f-95d348ac123e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb40870a-e5ce-4643-8066-b6824e845bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3e043c-8d20-4932-a4dd-457e0db96e45",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcc0456-43f9-4b46-b329-137b6f202297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e979995-18aa-4128-b14e-c27e2c90237f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f98223-c9cf-4c2c-9d2a-d3a7c509f745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0eb550f-0c74-4100-a096-34eba0755785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4617971-a5a0-4f71-aded-28dc1916a13b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cec23a-24fc-458a-8b92-ff2cb931b5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f9ca2a-9b41-495e-9a81-90f78417f824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff899547-f7bd-46c2-a2a6-b43b933d4367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "854bb1c9-5c1c-44f2-a8ee-f7da9eece534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c954baf-5f78-4f3f-ad1d-1fed7da3712a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8182c1a3-6ec3-4aef-a0bb-1a2be00a64df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f2778a-1e4a-4f56-89a0-6336e3151891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5554f561-b4c7-4830-a8a7-295454706b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c36af740-c728-4e28-8f43-87b892cbcfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd8a375-548c-4bd8-a646-8700f94d4cbd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cb390d-b2a3-4023-aba1-8acb8cc0a9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d509d5-e68a-4553-85b7-1d428994d82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e112b406-12f8-4bde-9032-36f61b511e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed43ba8-b20e-4074-9e7e-a078bda9266e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4042c042-7bc3-44f3-a44d-f4dd2633e252",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa87640-3ce7-4513-811d-74fe8b0a59e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731b2ed1-00d4-4672-82b6-b48cfbe1d158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8705ac-b709-4662-b65f-d339368d40a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a40ec98-abe7-4fe3-bb60-b6287e749d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5550e019-3fa6-45ea-a205-22d8840ec8fc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c78fc72-5ec4-4209-9a07-9f551800dde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89c6d93-af01-49df-b14f-ea6709337569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3478c3ee-01bb-43b7-b5c8-804f934939b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b22d096-4a41-4a25-a004-75bf9243ccf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faaa137-dae7-480b-b9b8-40f8880576af",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143ef309-f2d3-472b-aab4-05f3d109be20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dc558f-283b-48dc-9320-6c441409e85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aac44e-ff4a-4ee7-bae2-fdea38417d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64325feb-6140-4c01-a9cc-8235921e3c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab51b8c-9c2c-41b7-b99d-2e23ed446ee7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7475f2ee-da06-4a6f-890d-f7cba73be451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a6bc0-812c-4bf9-9d70-7bd2e2f6bdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee74d3a6-4730-41f3-87f9-c70061f88c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da91f737-3a26-4560-a74e-80a43a29f67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febd19c0-9e72-4d52-8e18-66b5d39e4fda",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78df843e-bdbe-4b23-80f9-2743c6130917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b887bf-7e03-415b-84f5-bf1ee9d85131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a42b1f-1463-43f5-9f7e-d2b0f0a79bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf17a22-a4d9-4a5b-8da2-d1da251b77e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2e57d71-8d73-485e-99f5-2523d619c4c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d31d50f-bcbf-4f11-bcbe-eaa06b54e734",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22ebc52-dbd4-4ccd-a1f6-a32bd83919d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7c254ff3-eac0-47b1-a0ee-7ab2eebab209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73c5ee6-eabd-4b13-948e-09490dfe76bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efd7216b-8bdb-489e-8883-e89c1f76dc63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d38541ea-13dd-44a3-8780-c369c63b3e88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bf6b651-eb85-4b56-88d7-8380a6cdad08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "567c4bbb-64f1-41a3-849d-1e4c0631c229",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c6b5c86-6246-41b0-a4d5-c5e7ee4120d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a2fa72e-d8a5-4066-ae4a-2c0fdf424edc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f7bd575-62d9-4aa7-bb56-cded7d07a2c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "378473b1-8b02-463f-9a42-a2d3a45bd0aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75a6c851-3168-4520-9fbe-d41e6985a219"
            }
          }
        ]
      },
      {
        "id": "4d2813d8-ad49-4b83-a480-e056803bb806",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6a5cf6cf-eb53-4c5c-b08f-5cc5b4ae3aa3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "536d574f-d05f-4b10-9602-8230c3b35f6e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5e9e68a-846d-4aeb-aac6-654254f86757",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7643934-b3f4-4d53-91e8-e62f8929ddaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf73fc49-ce65-4591-a206-695738399c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75177ea-9e2b-4857-a912-641deab7dac5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15df0494-4ae9-40f3-9690-1b1cd2e84518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5182698-9032-4f16-b65a-65a30e7080d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5487299e-8086-4f00-9579-846c35924bcb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ec48d8-57b1-42bd-bf43-8c3763b7c33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce9157e-7b99-4b02-8848-05acb5babaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabf58a6-b42b-45a9-9273-e0356ee1ca51",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e686ebb9-0772-4816-bd99-67b9f1029fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7fac41-73a7-4a65-80f9-b069bab6508b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73448f5d-9011-47a1-aa1a-f27659fa3e67",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f842c682-5bf5-462f-9bee-d80c55a496be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22120990-e309-4638-ac38-615b6902853a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cc6a30-2fb5-4dc4-8717-13c3473a938f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c73aac-dce7-4fa4-8a42-199bfc91aee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a989a87-3742-4821-b0fb-c8ee2e9dbcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2076b2-68d7-414f-9dbe-69cfeefb491a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e99f4d4-e270-4e48-9805-ac583f7b57bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e3a985-c180-4909-8cd2-d81c202284f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbf911c-cc48-4c7a-a7dc-f9611e03b5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cf7a6b-5e32-47c9-9810-927cdd0b63c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308f3b4e-67a6-48ca-9909-b75b46a938ce",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d63d41-3628-4e02-8304-8a5c14d9ba19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9f9649-69ac-4a11-b600-2aaed47a174e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd2ec0e-3af2-4a83-8831-55f18838ac92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a4be5c-cd44-41c0-814d-e0a42d034820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b108cb54-133d-4bae-8a12-e52d4225ace9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbf42e2-d197-4597-8801-a90b7692ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27be0292-07a5-46c2-98c1-1fca5a85f5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9f872e-3158-487a-b722-01b2ed91afb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3899f8-e213-40f8-a89d-285631bee428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c95f07-605c-4ee0-b726-92557858305b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc9e2fd-423e-4a90-a8fa-140cace1c341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63123c6-2da7-4e86-b40f-c4d5010431cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7304136c-4be6-407b-bf58-51efe237dd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8126078-6530-471d-9721-893de3d04506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5eb48d-1555-47f3-8e19-d43a3c492bce",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a2bd85-704f-488d-8401-c59d91b9f172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca292cc-02fc-43f5-9eb2-17b8c2024cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65ff991-889f-4c85-826b-75d1a9fe1757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5618a9-e991-49ae-96f9-0fe8210bf2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db67204-428b-4417-9d29-ea24625648c7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbe7775-e5fb-4509-9abd-65765ed3062d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9d8fbd-22ba-4cbc-8e77-0b7580fea9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f13dfb3-bc83-47e5-b9bb-e98fe554a615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0938c508-efce-4790-af3e-575e981ea843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77318f86-5aef-4603-b410-4220f239bc0c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ad258d-f9b0-491e-9c02-071c56588048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4483d89b-a552-498f-a82e-ee0b5a245109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddb9c02-4c98-4459-8454-b37581d4b013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df4d71b-12e9-445f-80d4-65e4e5b13c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4c8e60-7940-4d40-8263-c18b326b8e58",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a20d67-f76d-4c20-87a0-c12daa74d1a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4266100-3794-43ed-a6b1-dffccfcabf4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1069444-d7c3-42fc-8ad8-2872025e2da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3faa689-743c-499e-865c-af07c9a72f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f4d075-1e3f-4f4d-86ca-cc6207d7d62d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9ef472-008b-4cfb-8762-75363d5a3f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b025a3-a249-4741-8b26-79d31121867c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55802997-6438-48ec-a857-ba4fd1686470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57b3d0f-5b6a-471a-8ffd-080d41975661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332741f3-e774-49e8-b080-daedaa4ed44b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe60a0c6-d0b9-487d-99e0-b639e6e8dd90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57dc1450-91a6-43cc-bcd3-f940e6cbf695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5caf05-ff54-4fd3-8350-af253ab20010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e49b09-60f0-475b-81bc-e7b198b972ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f30ea7-d91c-4cc3-a69a-6b277458f06d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00355a67-2497-4ce2-b87e-75ff966003b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897dfe34-b3bb-41c5-ae16-1b96fd0f50e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9892a7fd-fb87-4364-ab7a-609fb155cc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7474a1-cbf0-408e-b1e9-ae148280d9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0699e9-345a-428c-beed-de9a23337b68",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3890fda8-bdbf-43af-b403-b71bd16fae27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238442c8-5660-4eae-95b7-d81895ef1f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c7c396-e1d1-4587-bf36-d945f646e873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72dc0613-422f-4b97-a29a-60d7812bdc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3a6d55-7c69-47b4-8cfe-a6d498a30b87",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95235c0-40f2-4c80-b410-eaa37bbe81ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dce944c-bc32-4de3-b7ad-6fa794c3dbd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0cc76a-5ee4-4a5c-ad56-ae189c599eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c189b3ed-5b09-4ab1-b865-cbeb8489697d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd82cc84-3828-4f41-8872-39fc0426f5ba",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3d7828-b9ed-42f9-bc9b-d0a619558b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebd343c-ebdd-48ca-8379-284d49cc4eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d0ef53-f259-4ece-8ea3-9aec6f596283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f961dd2-e8f2-42af-bc2d-98f367dd5f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583c9f02-29e5-4c46-b147-5ae36e2eac6a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621be4ee-92ab-487f-b982-bc85d1ddfd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be54c0e-6e33-410a-a532-61f3e314214c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6f55be-ebfe-4db3-9f9c-0dcbc5923e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2179e4-efce-4b72-a80f-1ca9f957886d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d966e2a-acc3-44fd-a215-b2590c956d96",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133c43db-0f89-4cf8-8723-5112584680da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df376974-4354-4cd8-b140-48a0c02cbff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35164d9d-5ec6-4789-9dd1-780ddda676e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de05f561-3b6b-4e59-922a-4a054d9e51ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149281c9-c1bf-4137-8022-6af8eb0e1986",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee919eb-e87f-4ba6-b60b-5c23b91c0f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedc370a-278a-4df9-81a5-3bfaf46ed865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abfcdee-6a8b-444a-aecc-2da4b93c192d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132fceb1-a2f7-411e-85cd-80d92bac2f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c4ff94-da52-41e4-8403-e1926deb19d8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3e4d4d-3bea-4bad-9969-847cf4c98384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f342a5-36a9-4355-965e-7612ee3cddf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e80c444-d560-46e0-a2dd-29bc43ad6ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64521d16-aeaf-4a8d-af30-a18df19dbc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9e38cb-8abd-4fce-9c32-26f1dd739026",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c06c45d-73d4-4511-820f-3b57b7f636c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236708a5-6c94-412d-ab2a-ebcc508ba73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b7f4d8-470e-4cd5-aa1e-3f02432acbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f662e2bf-3e86-44a3-8db5-2baf772b9ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bb4cca-7217-4ee8-9034-c8cd40ca5f0c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bd7a2d-bb83-400c-9572-64c07575565f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df75cd0-8dd2-4b8f-ba37-b72535a39d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4914236-a2a8-4fed-8833-c62b961b56c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2325be1-403d-4faa-a97e-4a46186e3421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9479ba4c-c0f5-400d-bc52-533d33a94b40",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16048b72-962e-4032-8431-02c889531594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47015145-2401-498d-8dad-ce221922a967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d6d186-f9b6-48a4-92c8-e77edcd0801d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1643da2e-9b9d-4d69-8252-787a82369fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c120c4a-3c1e-444a-8de0-91e4ea4a29a1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ece9e8-8eb2-4b4d-b319-ded2dc32ed16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bbcfc0-6230-4b76-9c76-f7b73d96cc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e740f43a-a844-40d4-8868-dcdacd67a047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a692c5-9ccf-46b3-96f9-8d3bf08fd595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5de8343-e0ad-43b1-917f-f9b2760f56ee",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b14fff-8583-4fdc-b22d-85d67d9d4f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5bd5377-8111-4ab0-8332-218950b87065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1e879d-3a73-4091-ad0c-b46149c1b2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff9e0d4-34a0-4a9d-94b0-9764b5973676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5468ede8-5efb-4b6f-a061-77cafbbb8385",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749b82ee-ac72-4b3f-866e-471fd4464c70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a6e4d2-a61d-420c-bb5b-1c32a3a9e16b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa18840-62b0-4a8a-b501-7aaf1d5889b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4d4749-74a3-4f10-af98-4072956bb7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fcda6e-50ce-4bd4-b6a2-174f7b500190",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d82129-9f43-4ec9-aa02-82eee0e479b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45f92e1-161d-4ad9-985e-67ad956eff31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1215fd-bd7c-45e6-a196-b43b5736cde0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab40bde1-2819-485e-b6ea-03a4d453e9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493fbbe8-4100-48ce-9113-6ade3f8f4c56",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e280d30-0b6f-4612-8090-45bab615ee31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "149557e0-6c95-49ca-97aa-066d8f370413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188ca4f6-7e31-4cff-bf77-58f81ba5d8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee1f397-499d-45e1-9038-14be532acd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f838883-3477-48b3-bd36-33512e4ad997",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9badc211-1d2a-4bce-a298-55cc026fa02e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beffef50-dea9-48b4-93d6-387c6a633505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6b4807-73db-4607-aa79-e2bd84588b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505daaf0-7d89-4efb-8490-e1658ac659fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8136ce34-564f-4520-9d19-a3521d284943",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec1a156-0f27-419d-8f3f-2c073206f70f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804dac14-d0a6-491f-87aa-9a06ce52fd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1deac601-6061-4ced-927b-3ab6fdbde7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993e5cee-2e18-45ac-a042-789446cde753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d25dcd4-34e4-4db1-9724-34f9ed999af7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ab272e-6c8c-4c87-ac7b-af1a4e9ea4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947a876c-bf9b-49ee-a390-52ad48b25ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e32e4b0-017e-4ea1-9e8d-e96676344c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db878029-136d-4d54-a45a-22a432a5e1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e609f5c-2baf-4057-b815-6673b6889381",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b0b521-537e-45da-bcbe-d4611ce0c065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c153dc-0c31-4d39-8084-6f2372685c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc446a0-b0da-4bc1-9c92-24394c0525ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b50cf9f-22bc-4fd3-9c72-03393efbc6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0afedc-0bf0-4a0c-8023-afa6c8d8ed05",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0316e7-4851-431b-acaf-74f81cc8a3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b7986d-bc7c-4ed7-8787-cb984c6e788a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0248d82c-6125-4089-8e40-d98afd1e3182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331516c8-4948-499a-a3a9-79eedac60978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855b65ca-23d0-402e-bd9e-a181acb1794f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e50a444-3972-4063-ba6e-002a0d35a576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2e0677-ba5b-4c8e-bf65-f6048248e06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfcacfe-93d9-4ca8-a085-966d938f42c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7df4e27-bf30-462a-b523-18765402086e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0890f70c-8256-49a8-8a54-a151e18fc748",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfc172d-b5d1-4893-9058-abb6f01fdbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbfb6c8-ca32-40f6-91a8-13c0ce3dd7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e73837-a633-44ad-8a4d-81216ccec378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a54755d-ba7b-46f4-bd15-a95e94f7860d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdadb2c9-9d15-4254-8329-7dc53d82b6e4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32621707-63c6-4fe0-8c76-02ae609b0b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3404d68b-3f0e-44e4-8f11-d7278e95ca78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db962801-43ac-411c-bef0-da4fec6b3c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5555819-207c-4680-8642-5ccc9e55383f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f3bf6a-512a-4fe9-814b-436be8ff760e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a5e202-e830-40b3-a979-8d335a1d2bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b59f9c9-0e8f-44e4-b2f2-1cd30fcee931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6ed76f-b03d-4281-b007-8045dc39bfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a351ac-88fd-465c-ba9c-7c17ea5da7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4251091-537c-41ad-8a3f-a502ce3e6c25",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3e4a80-b29b-4c39-a709-e09e315c9f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a767e1-3776-40ab-9183-9857f9c21592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba52c13-0713-4829-aa28-3624261c5681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84246764-fc48-43a2-82c7-103de9b5ca03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e051e4c-1605-4292-998a-fd1e9de1eafa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609e5872-4dc5-4211-b506-18670c9f9cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a16fec5-3d00-4c8e-9ab2-541bb132efe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb79e4d0-d1a3-4320-821b-4c163eb1e5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21cdb09-bb5f-4f38-b11a-afc934b23feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def95ff7-41cf-4fb7-ad36-746be770833e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0102dc-2518-4ac4-a5d1-2ba78192d881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc31d2ca-b96e-4af9-bb22-1aca6512c095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58c2625-3214-4391-bb87-74816bc424ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d8440e-3230-4fb5-8d35-e76c3889dd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7578e204-a633-4996-b735-a8813ea11b27",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cdf3d5-aef0-4a49-b940-ede56ecfa373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c00a97f-2ec8-42f2-9ae4-95567b6419b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa69c93-e3ca-4d3f-a56c-76fc259b440b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c663c7c-faff-45c4-a663-ebcf62cb04dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84b83ef-5f61-4813-943d-7da981325374",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707afd5e-532c-4099-83e2-f1924fdd26cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b21498f-6e8f-4427-80e3-65528ab5df98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40a767d-f8df-4287-a485-73f5b49efa67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52169dbd-6607-44b8-9386-0fda04c33ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479aae95-e653-4cf1-9c06-8a8a0bd8545e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eefe629-d7ec-48d0-ab06-621f0e7523e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9991e5a-6be9-4507-b92a-d28010772aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7433e564-b4e6-43ce-9808-fc1122509bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd321f3-5c3f-48ff-a3a6-69f7c2249d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fc162e-8cc1-485f-a9ce-8d01cc66c38f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93da4515-f4b8-4d5e-abd5-e02712b21236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57b724f-3f64-4691-ad75-473d74b7580a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07fbfcc-fcfc-4a0e-afcc-d8cc35410894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dec563f-57dd-4814-ae5b-9af6150e83bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79efee40-8dec-48bc-88c8-da13bfd08950",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3543e3ef-88d7-42da-86e7-c350bed88ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc6b80b-7bd0-4fc8-968d-66b29a59b8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff35d01-eb25-432f-a1e1-404ab158e4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1be8cc2-03e0-445f-9e03-453018531b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbdc686-7131-4c3f-a9f6-be71b7730df1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e38a5ce-35f5-4601-95b8-f1807d1ea49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88548f38-e482-4d91-be5f-b1b84d365065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1babfe-94e5-4b70-9391-6ff906b9ae3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9684649-f9c7-4862-b543-d991cb733e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae12df9-9b5f-40b1-af1e-4c261ffb0553",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac77df19-e3ac-4722-b343-5db387d3723c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8767e2c2-8d63-4302-ad96-6805c3c5bc63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228dced0-fc21-4884-84c9-bf64c0ce9c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d46781-1e4d-439e-acdb-4a00cb5283b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9033650d-9f1a-43dd-8798-094622730f5a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36239e8b-03b5-43bf-95fd-232c1ee52042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e5207d-fc6a-4fc6-b1a0-5150ad211bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b6b3e7-ae28-4656-940b-14c8597435fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68dbcc2-5f90-4578-975b-6ea8b51b4d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1798b0bb-d806-4988-bc4e-efe66729fab3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d68cdd-bc8b-47a5-8239-16811b0ba513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d0e493-1549-4832-9e5e-89cd9a7af78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d57402-fc9d-466c-a127-528cf78baad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f72e4e7-dfab-4bc9-851e-a3df37d428b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6444aa59-6c3f-495f-b79e-60ea799b1a47",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1781b80-777c-4ed7-8da2-10ba94b2c860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ce8138-6334-4b38-a8c7-bc1c8edb9068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518ac605-d972-4890-9bca-c42a9a1d5881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d70ee1-5885-4aa5-b5b9-5bb83a2e7e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe05dd6-9786-411e-b073-678c64802cd8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfdda94-7cd7-42a0-ae88-c8afbdc69171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9337b2-8995-4444-b56f-9c6f14f58c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c95cfae-2dbf-4d42-a3b8-3fa0860a7d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fae2d1-7524-4958-ad0d-b757e612a667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023dec17-8ad9-476c-afa7-39de9d04c746",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b72415-8597-48f2-a784-47ee8dae5fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1438ebd-063a-4a5f-a33f-6511cb93a3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae3c8c2-63d5-4f77-b802-cf8500dac858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0e10de-d000-446b-8a11-80911853318e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3941aae5-9266-450f-8a1b-3ef4ff4a93e4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6795c54-cf4b-4fb0-b757-42ddb49c689d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d77494-c17d-4a79-93b2-c1cd84cc2826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a9da80-2502-436c-acc7-b78a2da97732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0341c68-8daf-4ded-9dc7-6300b36ed98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315b5461-7836-4662-a8da-fc3bc70638b6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67b1eb0-052f-486c-bffc-d42b3b926988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77899dce-6778-4f41-817d-7d9dc44a5f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af84a75-39fd-463a-9b56-ded9121135d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7c2112-3e3e-4910-b7a5-03736c6de095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1584d7b5-cafe-471b-af4b-a1fa8e0eab28",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50d0385-1521-4c31-8a72-e05da42173bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145da7d1-5321-42d9-98a9-92e4cb24a0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865f36ae-066b-4b5a-b5ca-8646dad6a8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e22b0c5-5aec-4b12-a801-7cc71c8f5f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f360f992-fcd0-4bbe-9b3e-dbd522df0868",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5b762e-eccc-4802-aa82-baaa79666a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b94814-07a2-4573-9d9a-00c20a0eeb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de091b2-00a1-4105-9378-5759d42f2e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdad92b-d79f-4390-ac24-34d31f3b68b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae4ced8-3d14-49ce-9a81-20507064eb39",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d3a346-df7a-4fe2-ae09-5316c021591c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25e07d7-35ba-4508-b8e4-fe735d4dbbf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16aa945b-189a-4952-8c27-689b8f7b7caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915eacaa-1d79-4aa4-bc69-750297655d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdc348b-75bd-4b72-b5e4-c3918ca6494b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93be75f7-26b0-4058-a006-dc1de8fa5d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18ec829-f1f2-4d55-bdf0-b0e15f0ad2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559be2fc-2943-4929-aa1d-8bc2f186712f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0287d5db-c7d9-4a89-9221-87359f230b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612309d3-8e76-4cbb-b353-46a804228054",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c2e4d3-0f4e-450f-9b01-6baa535d8c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e4b0b3-c57d-4f28-b545-360823652a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d155bf1d-d72f-4c4a-87ce-0c4b8c6e749e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019efb76-f05d-4e8e-9ec8-847849afe176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c2e5f3-2af2-42f7-9be0-6c13e147268f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8eee35-da6c-4006-9e9d-e192377e2960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef547067-e05c-43b9-94c3-cdf2ed4f77f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1bb966-d132-4997-84c8-42d8503f74c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b43e0a-10c2-49cd-8689-29e82601f118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28f0f06-5817-4a24-ac55-66aca044e8e2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dadca6-533a-46d7-ad58-b635b2aae5bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c264b6aa-4529-48f7-b2b4-55d1902737db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9955bdf2-81c9-4600-9649-67c6d1f581b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d74f7d5-af5b-4240-85c4-3a402db87f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc9d1d3-baa4-4649-9bd8-b1b5afa39dd7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1e7e96-1ae3-4b23-8f08-f58424ddaa1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc6c0b8-4ed1-4f6a-9b41-2792c4d47e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815d8101-89f1-45d8-9788-a690065d9c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5b2ab9-323a-4fdb-a414-9a0363d861c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb57f360-3da6-493d-8314-7adee7195b04",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b264a2-51ae-45aa-9d2c-172feaea465d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "129f8824-ed2c-451c-a0b2-df3ef9cb3335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6425d7b-db85-417c-82d5-6f9ffddb3861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8cebeb-ecc9-479a-a974-98857c4eee54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c29855-4ea2-4ec5-a205-a4309bec323d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd6c435-04aa-4319-a528-e881403d8a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5a6ddff-70be-4d73-9901-02f5ff5fb40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1457bee-034c-4f14-a9ed-f00df02acd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee408a8-0d9f-4672-af56-00272c989168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5563000-1a9a-4f0b-97b3-c255b2b67c61",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5ab337-38c8-44ab-8cf7-36b704850d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c84b2e06-8811-4a9a-80d5-b313116a2302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7dbbf8-228a-4f88-99a6-7bf6c6dfcdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46b8c3c-b291-40c7-8ed8-47f3fdee0780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96e67fc-471b-4d59-8071-b7ade405fb45",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580a0d84-646d-4586-8aaa-2da896cbe37e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bcdfae-e113-4c25-a21e-c5200b2bc386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1d5e22-7ed7-433c-91fa-a7769eb426a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed9980e-4866-465b-abb7-4fd75789a199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef08220-da96-4a70-88a5-d66491b11012",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c433494-11ee-4549-a7c3-da6ec0bd4008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68942867-18af-456c-8136-e82c465b8156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd85259-0a87-40ef-8e90-24795e3839a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c903ac-1035-4fc1-ad0f-ccdd2fd43742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7b3ee5-61eb-42dc-b59f-4751d6655354",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37631be6-2177-4d29-97b8-1a88a139cd9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d00acbf-7c18-418b-8990-e898c34442a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1f8d08-563e-4598-a110-fa0dbec15802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9576290-bc84-400c-aa0c-48f3ae30af93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b2cdba-35b4-4910-8a95-6f74851b1f79",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a88a82-2b1f-4136-ac18-ea618f8398e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5797ed0-d024-40ce-a2d6-623aaef4be44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce87407-b656-43c3-875a-00c4ddfeb592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7a4f92-d632-46d1-b310-996e44d77088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21a40b7-b21c-4e85-8017-af12d5b7db36",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492f93b7-a708-40da-aeab-884de28604e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666f22fa-a958-4aa8-a5ee-4d6c8db82093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb0feeb-d904-4b5f-9646-09eb8c9290f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990e4d10-4bb0-424d-8e63-c4c689f08df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5114ff8d-c50b-4879-a926-cdc91ea65c0b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840fe072-36f9-4165-83b4-a55abaeeb3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4de5f5-4088-45f6-a8e4-dcaff5a101fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5e0d72-4dc8-4552-85b4-97fec93e6e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af18fa79-2908-4988-9f68-f594006d2fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea169a38-fc8c-4596-818e-9e93d8582348",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5ecfba-10cc-492b-a137-368a95c0ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38672a3e-1bb9-48d9-a6c4-7064f86adec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726f30d4-ebcb-4dbd-b0a7-837e2ca4c677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d0d005-05a9-4647-ae9e-7391a12a161a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab6bf56-ee25-4b68-ae7a-24b90fe77dd1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266ded59-c12c-4657-b8fe-e4889e106d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3907ea1e-c96c-48f9-b00a-2229672928cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14d6543-82b5-446a-a1fa-b5fa6ae485f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4776728-d8e1-4ec4-8a3a-be3b6beeafe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72967a46-b175-445a-9ed1-4adb0969b1fb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5d438f-10d7-4e4b-80b5-517fcda5100c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83b61e9b-b7fd-407a-97d9-d99dd09cf68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a55a92a-c858-47a2-9ad0-4d23bde6b9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b47cce0-2919-45c7-baea-458d438479c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34a51c6-b1aa-47c5-94de-02eb20029df5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73779f4-1864-465c-9351-15feaa8dd6e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c74691c-c5b5-4915-8f87-d3189b07e042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b72926-a2fa-422c-bfbd-706aff7f8204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a8f99f-b0ed-4fda-907d-1739c6da8644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62489d9-1386-41f3-8218-0dd3183f38a2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdde518-79f4-4f33-a95c-05a1bbcbf964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df0f62f-ba70-4447-b8da-676db98dae70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4244fe48-2cf0-4dae-93e5-77d30b15e5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694ff62e-7b9d-460b-a320-53bc79d6fa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3ad6ec-564f-4d0d-b60e-5e4ac14bab2a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795577ce-e39c-4d2d-b2d9-a831f144579c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a9138f-03f7-4007-8c39-49f90ebb6759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844d64d8-c299-4923-ba06-3298ec490ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816f3a28-2a04-463b-be5b-6a77b499c9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d54d372-a01f-46e3-8dbb-2f0f2fa86d2c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5d9224-70aa-4a58-a253-e616528d5361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239b67ed-0c27-4746-9e5e-55d168099135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180b4171-83e5-4b67-b247-b792bcafa3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b43a482-e17c-4180-b3fd-2c200610225a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b587d0fa-e918-4f6c-9fc8-75fe2f0ea46d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aaf693-7717-43de-bdc5-d9c0f04ad1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ba354d-92aa-400f-92d4-a919271dd73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf239845-4a93-4de6-ad05-310800ea23f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b4ca6d-cecf-42cf-b510-6bcf30cb75b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5098efce-d680-4995-805b-9614d1c74671",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70cadf8-77a6-4fba-96e8-81b8604390c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d7fdb3-6687-47e0-8a93-b9d69eaa3e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c81d992-a43f-4f58-9189-18d0046a9cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6458b1d-a611-4da2-a352-3b1dcf9c1180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403d564f-22f0-4649-91ec-ed4d194d4756",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14745330-42df-4184-8c76-0c6ca035ca59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff50999-31b0-48cd-a9d2-3dc04ac0e7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578dc17a-02da-432f-84cf-70a9cfa2fac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af33d901-2aa2-475c-a22c-4dc6158a2cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae799ade-98b8-4bba-9853-60e44e8cbafb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e532631-2b68-4d25-b08d-e4481dc82ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80e740d-5035-425e-a0d6-05011f0108c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecce7162-6d3c-4fb5-bc21-0d65af1b2b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac1dcc9-5430-4038-868d-63851af2b5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ec4091-b6fa-4ed8-8745-6b035c13feeb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbe264e-bba7-4a43-8504-6c0882046fff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3337fb36-bcde-4141-820d-9ec2d467d066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcec630-1164-49df-9f08-f3c2de6ff5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63265ac6-17bd-4bbc-a2db-7899d16c56db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff39973-2f3d-4dab-848f-1e7a37e5f2d3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f65e372-e441-4f72-8fc5-4e1548089f42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d731a961-cf7a-4d50-922b-8e5f012c776a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c158fe2-9325-405b-90e7-4441f0d41516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08823a7-b3cb-4300-bb71-e7467dbfb54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f750885c-6e6f-493f-b3dd-21ab33a54919",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471a2b1a-9cf8-4f85-beb1-e15b0e41697b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b2e626-07e5-45b6-bdd5-c42f0e266e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dbe29c-a947-46a7-8099-335e102680c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed654552-3b21-4fcb-8be0-b212d5b4683e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ab0080-7b83-401b-8445-a615a589c031",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf1012f-a89b-4340-96c1-ba5da3eda75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49efd259-830d-48af-8863-7ce6e2bfa2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114be25f-1c25-4ef8-b11e-a78e42d86f6f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415e1e84-a287-4da1-a42d-b82e48614bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e87dda-c6d2-4393-9890-e1949b96fe6f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e962df-1ab5-4a71-aa3c-b71d5a4bc8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a1ebf4-e26d-4c57-8edc-5da7a0bbfa69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386bc116-8b7e-4781-9611-592284cccbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509046fd-c974-4258-80d0-b8052ca66b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5202410-0893-492f-8ec2-9cc98108d41d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6382df44-744e-466b-a172-49d1e82ccd0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e090b07c-dc1a-4f2d-954c-66bb484e3906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceafb617-447e-4b0c-9c20-3c40e5ef4889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf09eb6-8bd2-4089-b6af-faf9e5bf9a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49290b2-0ae7-474b-814b-a0443f92c305",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09a9c3e-5864-437b-adfc-b66e5a7a5dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d5c408-2daa-46f2-aed7-a4529744886e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb37faf-0a28-492b-b6dd-ba363800f9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de08cfb-1d3b-41a5-a581-93857db577c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad80563e-661f-42bb-89bf-9cc01ea52b99",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08205f8d-ac5f-4af2-bbae-0f4da13a9ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7eca8a-44b5-48f1-bdde-0d1090c23b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f998933-c421-4997-86a1-a22a839d3b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e466abda-dfb3-42c7-8d04-6dfd5ea818a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba54b488-c34b-4b3c-9596-ef7f52569dda",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856300a4-dc5c-4c63-a1ee-b2e3cb6359d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bebc42-4dee-4d5c-a88f-58ffe1c56993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e1cdef-17dd-4c62-a58d-2be167b8de96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081756ee-3b34-4960-9072-df70e0203c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cc5dfa-c79a-4866-a162-0e2207016b49",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb62dd5-b58a-43f3-b12a-cbc291214c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "777cd064-c69b-4ddd-a144-8fc3dffb182d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35feb960-d1d7-4297-b0f0-8686959bfd80",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f666b82-a127-4b27-94a6-3c60b0b3b60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76c5f6e-a827-443f-9bb5-73a04af82490",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a21b37-0b23-4330-b617-59e5e0894593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f1824d1-b676-406c-83e5-dd9d191c24d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a25f0-28d2-4057-a970-1580c43a5a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cb06aa-6d89-40ca-8655-8b9c6b28cfb7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "719a95d6-83f1-4423-9143-6af172a1baca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3317a307-a59d-4375-a277-fa4a7054cb5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7741639-a9e7-4e3c-8809-92bceb5cac40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19c0b239-2ca6-4c9d-861d-6066a6dc8a21"
                    }
                  }
                ]
              },
              {
                "id": "cc623f13-09d1-45e8-a658-7d8a945da450",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8171833c-d714-4c42-8627-d61c518585e0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29be2339-f761-4c5f-93f7-4a8ef65e582a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e038d90b-cd6a-4199-9015-c1d3312e0b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f760de-debf-4483-a681-8efeb06c05d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "217323da-1ff2-4aeb-8ba3-5a1381b6db79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef6a2534-225c-4cc8-a6d4-599631f27bec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c0a9da6-7207-434e-8083-69060e35b344"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82844aae-4cbc-4ada-ae49-5fbf76f29f5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8b06cb7-3fcd-4e5c-93c9-787e437edec9"
                    }
                  }
                ]
              },
              {
                "id": "d9803355-78e2-4408-9e4f-b5424966dc7d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c0c73b78-0622-4f03-b708-73328b6af3b8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3a27ad-df49-4590-b1d0-cf5a48416a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a57921f0-127a-4a1c-9394-869f304cfcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dfcac7-e4e5-407c-b92b-c771fa6c89b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3a852e-a87d-40f8-b90e-15f24712b873"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e22b9738-e127-4ca3-a127-742d47bbc076",
            "name": "Positive Testing",
            "item": [
              {
                "id": "710642e4-ae53-4705-a3aa-2544fed6efc0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d341a9e2-639c-4412-ac0b-b340ef0b9f81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e2ab2166-20ea-48cd-9e12-5d7772b2547f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ba253e8-331a-480d-b6a2-5f21a78031a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13f452a8-d2ef-4d9e-8a8a-69625e6a7cab"
                    }
                  }
                ]
              },
              {
                "id": "aa1bb042-3b4a-4f7c-a450-651bf2ec7106",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7907b682-7dc9-42b5-bfa7-39366b64dc8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ca2739c9-eec5-486e-89ca-24430fcbf0df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd8478c8-080c-4fb1-a016-6eaaf64d0cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97cb05d3-b214-4e2a-9cc5-c277748a3a91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b288ea0d-470a-4535-a5f6-7349015db8c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6bd29014-e2ce-435b-bfe7-5e34bce910f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2e1efae-55dd-412b-ae1f-35bd1013a4e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e83dabd1-f4ab-4a3e-858e-32d8188fd5b5"
            }
          }
        ]
      },
      {
        "id": "53da2149-fdc8-4181-9eb0-b1b3049c4a08",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7c9ae5d1-293a-44a3-b69a-e1ea4d469f15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43b88752-5366-40dc-adb4-5db2b34c0575",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f84d94ce-888f-496a-a2cf-6a73167fa47c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c96ec6c-ff1f-44c3-90fd-78e5af5aa650",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e0b0979-57f7-4a53-952c-4674204c03de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13de45d0-8a78-43c4-89b1-81299077e97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47f74fd7-76de-479c-aecb-d5cc61e96357"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bd5a9ea-d379-49a1-99ae-2774ed6dcc4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9545300d-f977-443d-8ab3-cd74245f966c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b90768f2-46ec-4b1a-9914-a22770dc826e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8322226b-6b5c-4d0d-bf57-0fe6c9076997"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8418d2f-2fee-447e-b563-fd369f75bcef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "80f15978-3e8d-4cfa-be32-8d7ebc83aa34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e813bcbe-6efc-492d-84ac-f0a6a4f5cb8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55619d9d-3de0-41ed-bb18-cf7e31670695"
            }
          }
        ]
      },
      {
        "id": "5d6e1f20-0cc6-4087-bcba-7cf803701ced",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6c6c1e42-8772-4297-baa3-35e02236c614",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fe1e0d7-2940-4881-850f-225f1eaa8fc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4b34199-0df5-4c30-8fb4-eb9557c2ce42",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856edd3a-3f96-463d-9534-d2397e56fb31",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6a3c502-2407-4901-ada2-f1976561ae58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a14379f-ff8c-492c-995b-e64760076b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c64510ee-98ec-4729-a83a-5e44df5564e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1893ed2-aea4-4a67-9828-9c3bba6675e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd49c89d-b5ca-4e91-a3e8-6b849325332c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b368b7d-fe1f-4cf5-ad2a-b984a5b1eac0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a22f1f6c-d6bc-4502-a67c-7382ba4e3079"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9aafc393-6403-4484-8386-67d5280dc38d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a3969f1-8163-4cf9-8dea-6f796fabb6b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6cbfb2e-7d67-4d83-bc27-02c20b3742f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35ae0d6b-a7a5-4246-b0e3-3b54083bcbd7"
            }
          }
        ]
      },
      {
        "id": "122d8650-a7f4-49b4-9085-3330d3173c69",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ec83cc1a-e461-4b3d-82b3-9dae1231456f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0535a7ab-4b1f-4adc-a0f7-509c4a3b099d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f5068f5-2075-4d68-8f29-3613f0d7cee7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12bc27f-b5cf-4608-8464-422da9c2fe29",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0aa315a-466e-4881-be19-2c6b390a5df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b854b2c6-a3ea-4f0a-a944-36d00d2adb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3192e1bd-b5ca-4bf6-bbdf-fd3b05b020bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87fc8ba8-b1d6-4a51-8ce4-e074b5ab7b05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ebb5e31-b687-49d0-8ea2-008c1122b194"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f322fd5-194b-4b9e-bfa6-263a98a8a50b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b39d7f0d-1695-46b7-8405-b33db33eaa40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1c173bf-f0a4-41a6-8255-cf340a288dba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60dc8ef6-470f-427d-a501-07a25785e6d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "750c5bb6-d043-4980-b7de-dc2e18f73bb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "727d2553-0ac3-41b9-b571-e662c00832a0"
            }
          }
        ]
      },
      {
        "id": "86ff1bb3-6fc0-4759-a24c-3c259c4d18e4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a24f8db-ae8f-476b-8115-a09d2fb0b7eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c08a3c9-5f34-474e-8cb4-b93dec1af249",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eaa27763-1813-4700-a4c0-85298db63b68",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54691351-f3e7-4bce-82b9-0c6858b99530",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c4f3124-3e2c-45a1-bd30-62b25edcdd2c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.1428571428572,
      "responseMin": 8,
      "responseMax": 331,
      "responseSd": 27.157452216368807,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720744742546,
      "completed": 1720744767311
    },
    "executions": [
      {
        "id": "f6332910-792f-4cb6-94e1-e6aed1654d9c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ab4a7c48-5f35-48cf-8923-83724577a8ab",
          "httpRequestId": "d044807f-af24-4ac1-8051-c9aac6253730"
        },
        "item": {
          "id": "f6332910-792f-4cb6-94e1-e6aed1654d9c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fccf2ea5-059c-4583-9c80-5b7a4d07d3dc",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "2586f22d-21ec-4c43-9fdd-96be5772f861",
        "cursor": {
          "ref": "e439a41c-33c3-4f60-8797-1a3d1d197919",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "10afc9e5-f472-49e4-af74-d83aa7059811"
        },
        "item": {
          "id": "2586f22d-21ec-4c43-9fdd-96be5772f861",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dd2d2bde-6e13-4443-9e54-7dca410b9e53",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "b8ab2cdb-3cae-49b9-a1ef-7a320461548d",
        "cursor": {
          "ref": "f33a578f-4b89-4a73-a941-914f49d77328",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a471ac05-533f-40d9-aa2d-d631993e9ff2"
        },
        "item": {
          "id": "b8ab2cdb-3cae-49b9-a1ef-7a320461548d",
          "name": "did_json"
        },
        "response": {
          "id": "b9743448-7280-4176-aeb5-dc374c825ca2",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2c6281-e9b5-4a66-9319-e5464d99d56c",
        "cursor": {
          "ref": "4ab2142d-d3e6-4cca-989a-7ac9c33ec1c5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a86cf0e3-2ce4-4a4e-b07d-a7a386164e17"
        },
        "item": {
          "id": "9c2c6281-e9b5-4a66-9319-e5464d99d56c",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e11416e-358c-45c5-8835-83583a92e45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2c6281-e9b5-4a66-9319-e5464d99d56c",
        "cursor": {
          "ref": "4ab2142d-d3e6-4cca-989a-7ac9c33ec1c5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a86cf0e3-2ce4-4a4e-b07d-a7a386164e17"
        },
        "item": {
          "id": "9c2c6281-e9b5-4a66-9319-e5464d99d56c",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e11416e-358c-45c5-8835-83583a92e45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb21bb6-be22-4463-a695-2fc6ec74dfe7",
        "cursor": {
          "ref": "719747e3-60c1-4c5e-938e-1a23b5675012",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8f9c2b9c-42f8-408b-a35a-d56e00989c21"
        },
        "item": {
          "id": "3bb21bb6-be22-4463-a695-2fc6ec74dfe7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b9f4c6ed-a053-4312-877b-7d8b9c54f36d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 331,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b37f5f-3d0f-4c03-9c82-eabe122fd250",
        "cursor": {
          "ref": "4b90b6ad-28c9-41d9-b7fb-c233d58d8119",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "835b4e7c-17b3-48a3-8f13-e69b95e52753"
        },
        "item": {
          "id": "84b37f5f-3d0f-4c03-9c82-eabe122fd250",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d4daec2a-bd11-4aae-be72-f85456142081",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f533f45d-3186-44da-a278-b375e128bbd2",
        "cursor": {
          "ref": "763ce26d-f13a-4306-a5f5-56baedd1e39a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "99164ac3-d92c-41b2-920b-41f97a378b41"
        },
        "item": {
          "id": "f533f45d-3186-44da-a278-b375e128bbd2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3ba8f6a7-74fa-4a30-b113-b9b42de0ea5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d373295-f733-4dd8-b99c-77cdc0b706ea",
        "cursor": {
          "ref": "ec2bcdb0-0ab0-4dbf-8038-9b737e42323e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1de3ed3d-1bae-4664-b420-a838c377ae21"
        },
        "item": {
          "id": "6d373295-f733-4dd8-b99c-77cdc0b706ea",
          "name": "identifiers"
        },
        "response": {
          "id": "28384e8a-cdf7-4d83-af68-ab41eb41ca9c",
          "status": "OK",
          "code": 200,
          "responseTime": 159,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145c2fac-589d-407f-8bf5-294a6919f9b5",
        "cursor": {
          "ref": "4f7daa18-56df-49b6-9561-63ef4113b7b4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ae58f72d-789a-4257-9b8d-9bc12c628ab7"
        },
        "item": {
          "id": "145c2fac-589d-407f-8bf5-294a6919f9b5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ef4adbeb-29ec-4ea5-b1f5-1d5194c85510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f87d0a2-5cb3-410f-972f-8944a6146a3a",
        "cursor": {
          "ref": "58393d67-90ba-46a0-a9c1-bdc199b48977",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "90db61ff-2f3f-4c28-96d0-718478a7d15e"
        },
        "item": {
          "id": "9f87d0a2-5cb3-410f-972f-8944a6146a3a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fe0fbd84-a09a-4ce7-9e38-2edfc1e8c560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e4a2fc-48a4-42f3-8b91-ad693782cc22",
        "cursor": {
          "ref": "9d6ccbec-ad3a-4dd3-85f0-74be08601598",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "21538d7e-536f-4122-8ff2-715a16cbb6e9"
        },
        "item": {
          "id": "32e4a2fc-48a4-42f3-8b91-ad693782cc22",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cfe5a5ec-2ced-44a3-8e2b-e77c82236cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf187ed7-8237-4e96-999d-17cc9e11d9b4",
        "cursor": {
          "ref": "51793d3d-566a-450c-9905-7544956bf38a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e40e24b2-3179-4790-a33e-f828246d41c1"
        },
        "item": {
          "id": "cf187ed7-8237-4e96-999d-17cc9e11d9b4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a22a47ce-e52f-410a-a89f-98c0cd020ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe8a03a-9483-4754-8509-8f8288cba43b",
        "cursor": {
          "ref": "3d3f2f28-9315-4fa1-b1eb-ec82d27a62ad",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "67ecf56e-fa8c-407d-8c48-b7f21fb0ab47"
        },
        "item": {
          "id": "ffe8a03a-9483-4754-8509-8f8288cba43b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fce245d2-52f1-43b3-9f62-736f71846909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efc1f6d-eb2b-43e1-9ab9-091d4d12befa",
        "cursor": {
          "ref": "fa4b4d71-8f9a-4b08-b522-f823f8e794f4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "eca7925d-6743-44db-a554-a177fe9d4c77"
        },
        "item": {
          "id": "5efc1f6d-eb2b-43e1-9ab9-091d4d12befa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7f157f03-0cc7-4c4f-8863-9f421e4e905c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d62f928-4e12-4e2d-802f-9d5b10b21213",
        "cursor": {
          "ref": "79d5f5e6-f081-4a16-80f4-e387b333ecfc",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "27795ea7-12de-4fb2-80f1-76f208ec0a4c"
        },
        "item": {
          "id": "7d62f928-4e12-4e2d-802f-9d5b10b21213",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4bc297e6-b3c3-46c3-b7dc-694ba8b6088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda7a85f-1009-4119-9347-4332edc8c211",
        "cursor": {
          "ref": "99bf0976-35fe-4660-9bc0-b02f5750f1a8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "daa23091-5f14-46bb-aaa8-418e45ee5ac7"
        },
        "item": {
          "id": "dda7a85f-1009-4119-9347-4332edc8c211",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a949e989-621b-45a1-a40d-8d1878016164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f36c93-ed00-472c-bca0-7dcd11063dd6",
        "cursor": {
          "ref": "94ef7a0f-14bf-4624-9f73-5dbe57829499",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "07c4a5da-429d-423e-b041-7942468d7fc4"
        },
        "item": {
          "id": "78f36c93-ed00-472c-bca0-7dcd11063dd6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33248efa-7a15-4ff4-9572-5c6fde605521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850afb1e-298c-46c5-bcf7-a7eb046ef29c",
        "cursor": {
          "ref": "49f1ad13-34f1-4c1e-8681-98a6b25f78c8",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7eb6bfa9-357b-4ab8-9467-27c706fca5b0"
        },
        "item": {
          "id": "850afb1e-298c-46c5-bcf7-a7eb046ef29c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "713835d6-9ffc-45e2-972f-65ca16ec6e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017dfcf7-1cec-4ea3-b319-a3dbab57289d",
        "cursor": {
          "ref": "8446e445-e826-4a52-bfe2-3e6b7330897c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b48b1240-e702-47af-83e3-1878fa52801b"
        },
        "item": {
          "id": "017dfcf7-1cec-4ea3-b319-a3dbab57289d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "397e3b26-1a4a-45e0-a24d-b9e893f6882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2718b3f1-3122-4e54-9978-5e08759858fc",
        "cursor": {
          "ref": "e48ab741-3d3a-40d8-b51b-f557ee1b8f20",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bb40e8a7-5393-4c99-ae47-1446d4b9c724"
        },
        "item": {
          "id": "2718b3f1-3122-4e54-9978-5e08759858fc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2b0b950b-404f-4792-952e-c7a0ab75dd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1406109-8ba4-40ce-8a99-f691e9599af3",
        "cursor": {
          "ref": "dc18c821-7853-45d9-906a-8c857de072cb",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "69eec0b3-25bb-4a86-94c4-8de1f5679458"
        },
        "item": {
          "id": "c1406109-8ba4-40ce-8a99-f691e9599af3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b4c91111-eb01-47cb-be4b-e6e3c3d3db0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2a7462-69b5-4273-9f69-d3fbc1dab1d8",
        "cursor": {
          "ref": "25a64514-49f5-45d1-ba1f-693f0ca5949c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e70aa9c0-7dcf-46fa-9fd8-006dcc1a0855"
        },
        "item": {
          "id": "df2a7462-69b5-4273-9f69-d3fbc1dab1d8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ed7c474d-8889-4cb7-86f7-98f54ee19282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3852f25-b52e-4826-ba90-f6bea17e4a43",
        "cursor": {
          "ref": "f817834a-5750-40c4-96ab-a877cb584855",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "801f25b9-138b-4502-8220-fc8dfb217881"
        },
        "item": {
          "id": "e3852f25-b52e-4826-ba90-f6bea17e4a43",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a326721e-616e-4b65-9543-2db9e9155228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fff2d1-9bbd-429a-869a-c2ece820aad2",
        "cursor": {
          "ref": "9c4797b8-6486-404c-b2d9-7d7ed363fb95",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b8a12fb4-18bd-405e-92b4-bb276e3a3fc2"
        },
        "item": {
          "id": "70fff2d1-9bbd-429a-869a-c2ece820aad2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c1d15ffd-4fa8-4a11-9fad-afff91653b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456ce426-d41d-4721-ba89-26ddbef519f3",
        "cursor": {
          "ref": "190dc3f5-96d1-4235-8bf1-8fdd6d0d7e00",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4e01adf2-871d-49c0-8c41-f98fb7416569"
        },
        "item": {
          "id": "456ce426-d41d-4721-ba89-26ddbef519f3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2df3833f-24f0-4059-a19b-8be86155473c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941a6c5e-04b1-4a40-9c9e-0a61b6ba8724",
        "cursor": {
          "ref": "b224bfb9-fbb8-4076-8b62-70536017a918",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f4d6d1d7-1135-4c3e-83d2-03640928431c"
        },
        "item": {
          "id": "941a6c5e-04b1-4a40-9c9e-0a61b6ba8724",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "57d17e07-735d-4558-a421-8f4e07a5c077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710e7a1f-321a-4398-87cf-14cb432148c7",
        "cursor": {
          "ref": "8c39a02d-5261-408a-9868-4ad0e417dba9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b639ffdb-536b-4c63-b90c-74602948a416"
        },
        "item": {
          "id": "710e7a1f-321a-4398-87cf-14cb432148c7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1c0ae61d-f0a9-43be-b977-d45dbca8e9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969c87bf-85df-420e-921f-f2b7a100ee0f",
        "cursor": {
          "ref": "a014e9af-fae8-4b75-b79c-cfed90346bc3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4b141a68-ea1c-484b-9aa5-a5155dba5312"
        },
        "item": {
          "id": "969c87bf-85df-420e-921f-f2b7a100ee0f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3822f519-3b9e-4ad2-b963-b1b87e2a6e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a80aab-fcab-4ccd-a8ab-92c5e520b21b",
        "cursor": {
          "ref": "d8ca9171-d69a-4f4f-aeb5-a3d1a55541fb",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "735656eb-3dd5-4fb8-a56c-18b8bdd3c3dc"
        },
        "item": {
          "id": "56a80aab-fcab-4ccd-a8ab-92c5e520b21b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b5adf23e-1467-4788-bced-86876cd25c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaa9543-2efb-4fd9-9c71-ad853b7f2086",
        "cursor": {
          "ref": "2f75a123-58d7-48e9-8f94-2ed8eb6ab659",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c08f5745-565a-4b0d-ad6f-df8f3af1fe68"
        },
        "item": {
          "id": "5eaa9543-2efb-4fd9-9c71-ad853b7f2086",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dfd72b70-14a8-4f95-b266-dce94475d804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0739eb-0ba2-47f2-a33a-3475fe143de5",
        "cursor": {
          "ref": "995353c7-eef4-48cc-822d-ae6992a114d9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e012d59c-6c69-48af-a233-ba93b2e5cbd3"
        },
        "item": {
          "id": "3b0739eb-0ba2-47f2-a33a-3475fe143de5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2e96fa91-78bb-4c40-adc9-4795854c4808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed835b11-1aec-420d-bcd0-ae961c2af920",
        "cursor": {
          "ref": "70b5d9e1-55d2-420f-83b7-a84624b0ba71",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ba43a98c-2c85-4171-b62a-61697c6c631d"
        },
        "item": {
          "id": "ed835b11-1aec-420d-bcd0-ae961c2af920",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "698493d0-a2d4-4377-940b-21d304d1c961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a5b346-9394-4e10-b9b4-3c295b549b43",
        "cursor": {
          "ref": "b49671f9-b5eb-4d01-b796-245464fb39eb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1e04333f-bca3-4f36-ba7d-013d09802886"
        },
        "item": {
          "id": "b1a5b346-9394-4e10-b9b4-3c295b549b43",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "569d1b06-8547-44bf-987c-41aded6c0bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de774c45-0927-4ded-bee1-2ee4a486ccf7",
        "cursor": {
          "ref": "6bc1455c-8176-4730-a6d6-d33c4f5809a0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2b77be8f-9f51-4a5e-a4a0-7fb9b4a64816"
        },
        "item": {
          "id": "de774c45-0927-4ded-bee1-2ee4a486ccf7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4788c37d-0699-49b5-ae89-eea32136dbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40c5463-6fd2-4703-9e7a-c84d2975d59c",
        "cursor": {
          "ref": "4ebbee6d-78ba-4c2e-aa26-3db02d3f10c3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6d2848b6-97c9-4f36-8134-53ce246a4fab"
        },
        "item": {
          "id": "a40c5463-6fd2-4703-9e7a-c84d2975d59c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ab30d068-cf11-409b-933f-82863f35447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2324ce8-ad7d-4965-aa7b-0db126beb386",
        "cursor": {
          "ref": "d2cd6b6e-dbf4-4ac7-9edc-bda8cf4afc3f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "04e26c6f-6211-4a82-b243-c0e736e9eb6b"
        },
        "item": {
          "id": "d2324ce8-ad7d-4965-aa7b-0db126beb386",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e46284e4-4dd8-4961-8887-e174d44a5cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff735e2-aeb3-4058-9663-9ff8575e515c",
        "cursor": {
          "ref": "e7a0d02b-130a-457a-a9d3-eac60ed7c818",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9ceef228-ab7a-4b91-a819-cf76eeab4236"
        },
        "item": {
          "id": "0ff735e2-aeb3-4058-9663-9ff8575e515c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bd1ce48b-c7bc-4127-9b3a-71cddaf17339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7518c613-c1e3-40a7-bdb8-480ff27a718a",
        "cursor": {
          "ref": "02d02755-70c0-4f85-a813-e36aad5c25eb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4fb78c05-8ac9-4e8a-b999-496f669bf69f"
        },
        "item": {
          "id": "7518c613-c1e3-40a7-bdb8-480ff27a718a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "866aa722-41a2-4b93-8246-e9e6e633ef70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbca502d-a05c-44b0-8e8c-c658c34280f5",
        "cursor": {
          "ref": "0282c782-2945-4590-8554-cd2fb8c944a5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7f96d95f-9962-4768-bf77-b67c76eae9ca"
        },
        "item": {
          "id": "cbca502d-a05c-44b0-8e8c-c658c34280f5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "74632e8e-7012-4e8f-9a05-dcacf9a07aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cd8307-ab03-452d-9c95-c6e695331f30",
        "cursor": {
          "ref": "0feefa13-4391-44a6-9abb-b59be9b93208",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "32d1a48c-af03-4410-bfdb-0576296f7edc"
        },
        "item": {
          "id": "34cd8307-ab03-452d-9c95-c6e695331f30",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "29583ec2-3bec-4a1e-a7f3-74a9ed4b8a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5106fab5-03b6-4345-9494-29dc7b947c8b",
        "cursor": {
          "ref": "87bbf599-3d15-47c4-875a-6799700e7ae6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7800ae24-738a-476c-b025-b957001f5969"
        },
        "item": {
          "id": "5106fab5-03b6-4345-9494-29dc7b947c8b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bebee086-1b77-418a-8795-d0786d549575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daa47f5-5587-4304-8a2f-941d13599fad",
        "cursor": {
          "ref": "2fe987d7-3d8b-4aff-9408-672d5f92ca7e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ae47d6e9-8935-4594-98a7-5205bca86767"
        },
        "item": {
          "id": "7daa47f5-5587-4304-8a2f-941d13599fad",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "03772768-c7aa-411f-b836-bbfdff0b25cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c88be53-586b-4dc1-bf93-7b8f60b4e3fa",
        "cursor": {
          "ref": "ab47f5a5-fa1f-481d-b479-001971d1f5cc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "11958ae4-5400-4720-9720-3afb030f0709"
        },
        "item": {
          "id": "8c88be53-586b-4dc1-bf93-7b8f60b4e3fa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "af3901f9-02ab-4580-b11c-50327e660a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77c0ee9-1470-46c4-b2d3-7d743a4d67bb",
        "cursor": {
          "ref": "d9a9945b-7755-4bd1-b3ba-57bdd8c4d506",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4345ea6c-810a-490e-b46a-40aba68d96dd"
        },
        "item": {
          "id": "f77c0ee9-1470-46c4-b2d3-7d743a4d67bb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a109f367-a23c-4921-9278-bf78f82a91f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ddfbdc-a1c9-4b72-9f21-d7a58f348489",
        "cursor": {
          "ref": "c5d7d59f-4254-4fb5-9fe4-86bd00fab98f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a783afef-4d8e-4069-ab2b-c16c6779bc85"
        },
        "item": {
          "id": "77ddfbdc-a1c9-4b72-9f21-d7a58f348489",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1ab72066-3968-4b06-a03e-c785cb8c0c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4b9c42-7a2a-42aa-a7c6-afbf89a7c6a0",
        "cursor": {
          "ref": "1102e5cf-e54a-4a95-8510-471ea8801096",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "91634a1a-9f21-4b12-b43f-12770c371c5b"
        },
        "item": {
          "id": "7f4b9c42-7a2a-42aa-a7c6-afbf89a7c6a0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5f2bfb57-095f-4237-ae97-92e1a49ca99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808bd043-149e-4c3f-82e1-e5725e3bfc8d",
        "cursor": {
          "ref": "9a606243-eda3-42ce-af9d-9e23cb69e52e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "88aa036a-1053-48ce-b937-021269a8d251"
        },
        "item": {
          "id": "808bd043-149e-4c3f-82e1-e5725e3bfc8d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ef33bb22-0a53-42ef-8475-7bcb93db5202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39e96f0-da2d-4f37-82cc-86b41b5c770e",
        "cursor": {
          "ref": "bfd6341a-bc3f-452c-8898-26f648a2875e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "32a9f49d-fa38-4639-9675-ee22fe08b430"
        },
        "item": {
          "id": "f39e96f0-da2d-4f37-82cc-86b41b5c770e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "60d334d9-d7ec-4895-85f4-fb585f01aad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e674d0d1-965b-4ca9-a39f-422a277c3dba",
        "cursor": {
          "ref": "faa1c68d-e601-4da8-b059-9834167bfdc6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f4318fac-9027-4359-b49f-c478a12d6159"
        },
        "item": {
          "id": "e674d0d1-965b-4ca9-a39f-422a277c3dba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a4268200-2665-4611-bc89-e029a4776146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e64b99-20d7-4bac-b472-18105bab9a9b",
        "cursor": {
          "ref": "2aa926fb-e0b7-4861-a680-0585e3a800f1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7f1099f0-5834-4a46-81e3-76cbb5995fea"
        },
        "item": {
          "id": "17e64b99-20d7-4bac-b472-18105bab9a9b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2eb3cef8-0abf-41d0-8966-20e615dde2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3007de84-a9df-4147-bbcf-005078c1384e",
        "cursor": {
          "ref": "d6c3bda9-90b2-4937-8034-38e6986d96c6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6c36b7ba-a02e-4906-bd80-62f29c52d6b3"
        },
        "item": {
          "id": "3007de84-a9df-4147-bbcf-005078c1384e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "934c7ae2-6ff0-46c4-8d12-0b3978462e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bf9629-1b56-414b-b86a-f93751bcccda",
        "cursor": {
          "ref": "0663ac3c-6d7b-4337-ae27-e7f6dd7f9385",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "04b82bea-7b9c-483e-8ce3-966e560f5ec1"
        },
        "item": {
          "id": "c7bf9629-1b56-414b-b86a-f93751bcccda",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cb380c5a-c14b-4284-b720-cb739cc58308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513f80e2-6cbf-45cb-a645-1387ec9645f9",
        "cursor": {
          "ref": "b3a0f08b-95f8-4e8c-9859-419414ac0615",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "54349ae0-bae0-443e-9a00-14087aba9eaa"
        },
        "item": {
          "id": "513f80e2-6cbf-45cb-a645-1387ec9645f9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "913e3bc2-32f3-48c9-8bc8-e37bca293809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7fdd45-6748-4a35-9fd9-21be6d8ee69a",
        "cursor": {
          "ref": "17a96fc1-6def-4b06-8a0d-7b9bcd7d677a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1cb7e90d-5a19-45ba-aff9-e484f548c880"
        },
        "item": {
          "id": "be7fdd45-6748-4a35-9fd9-21be6d8ee69a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "03675eb8-0087-403e-b107-a55befd90eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257087e2-1aa2-4001-9c77-32f069c84b1e",
        "cursor": {
          "ref": "d05bbeab-f2bd-4022-9d90-99f7cf2e3dee",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "375ba192-202f-4bcd-862f-a48beb83c7bc"
        },
        "item": {
          "id": "257087e2-1aa2-4001-9c77-32f069c84b1e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ce4d2e2c-ef28-46f3-8d15-574f1a72d0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794aa518-c98b-4c76-9ba4-c67b724481f7",
        "cursor": {
          "ref": "77474f84-edbd-428e-bd82-e91f564dbf6e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fefb7b20-0c90-41cd-8a30-b688e1e0be6f"
        },
        "item": {
          "id": "794aa518-c98b-4c76-9ba4-c67b724481f7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99fc91c9-d58c-4082-98b7-c6898a61842b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbcc6d5-8182-4ec6-a6d7-af4d52c70e20",
        "cursor": {
          "ref": "0c4eb73b-6907-438a-80d1-beea628accda",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8513c94c-1c50-4b32-b480-19853f77f1f1"
        },
        "item": {
          "id": "adbcc6d5-8182-4ec6-a6d7-af4d52c70e20",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b27862fd-6726-433e-925d-746f035a2cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd326934-b899-4206-b95e-3892ed0b57fd",
        "cursor": {
          "ref": "19d55d48-ca10-4d51-b989-d89250d756b1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a0ad10b1-20f7-4fe2-9763-f1f88a85c236"
        },
        "item": {
          "id": "dd326934-b899-4206-b95e-3892ed0b57fd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5cd1240c-5be1-4fd3-afa8-fd3c5c5db8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6142893-f274-4aed-af65-c2599a46eb6f",
        "cursor": {
          "ref": "e635062d-f060-47a3-bdea-9d5eac9766c8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9b5fa7e4-44f2-46b6-8bdd-72a5bb46fe34"
        },
        "item": {
          "id": "a6142893-f274-4aed-af65-c2599a46eb6f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e6aa7edd-7f11-49c2-8662-3cea9921b436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12de3b1d-6836-4697-88a5-a21aa8e8385d",
        "cursor": {
          "ref": "5d35dac8-9934-4194-82c6-b75e093ef189",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2bc32246-6cc8-42e1-942e-dbe25235abba"
        },
        "item": {
          "id": "12de3b1d-6836-4697-88a5-a21aa8e8385d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7eaa65b0-5c4d-406a-8240-b440780171ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31de595-79f3-41ff-bf04-6d986411944f",
        "cursor": {
          "ref": "73edc405-cbde-4b0c-b683-45c363604c00",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6230823d-9ccd-43a0-b8b7-89ddc0ea31e9"
        },
        "item": {
          "id": "c31de595-79f3-41ff-bf04-6d986411944f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "02eac2dc-e5b5-4474-ac99-c7db58427900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6621126d-25dd-4f33-9ec9-8be401a14eec",
        "cursor": {
          "ref": "05477de4-fb34-487e-9dc9-856e5aa6de79",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6b2959b5-d08b-4bd4-93a4-ae17b479cd4c"
        },
        "item": {
          "id": "6621126d-25dd-4f33-9ec9-8be401a14eec",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c1d6d466-1d7e-4561-bed6-0811e24c6890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a78aa8-a786-4e6b-9b32-4aab9c353206",
        "cursor": {
          "ref": "ed7b417e-4f5a-44fb-a8d9-1c9f542dd749",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "53eb2bbd-10c4-4866-8e66-1b2d2846a6c5"
        },
        "item": {
          "id": "86a78aa8-a786-4e6b-9b32-4aab9c353206",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0b6238d0-5fd5-4245-8166-aead35baae67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f64d22-6e9b-40b6-ba3e-a855d7c795a3",
        "cursor": {
          "ref": "31370160-ee7d-4f30-9065-1f24bf6894b6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c4e3cc3d-abe0-48cb-8b3f-98acd77248ae"
        },
        "item": {
          "id": "57f64d22-6e9b-40b6-ba3e-a855d7c795a3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8d71428b-492b-4d89-9ec9-56844ea9ddfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef3eeba-b297-4600-a171-06111148aeb7",
        "cursor": {
          "ref": "794daacc-5cd4-4e0b-88ff-f9e276a8777c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9046e3d7-b417-46c8-b3c6-2fc35c1e6d46"
        },
        "item": {
          "id": "7ef3eeba-b297-4600-a171-06111148aeb7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "18b9c0a6-e992-4066-9af2-9018f0db8221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492a410e-d655-4274-8433-68f1c075400d",
        "cursor": {
          "ref": "f2fe7f25-20d7-4ff0-ad78-d8c5745fdaa6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "17d9fc4d-b390-496d-8a51-54e432c4ace8"
        },
        "item": {
          "id": "492a410e-d655-4274-8433-68f1c075400d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f12c9c3b-2dc0-4df7-8cee-e9adeb8024f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddad309-e58f-42e4-b503-14f83a96f0ef",
        "cursor": {
          "ref": "d9a98a43-27cf-4459-8015-a92618286861",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f4116eb6-f56f-40a8-9288-848c3f5520aa"
        },
        "item": {
          "id": "fddad309-e58f-42e4-b503-14f83a96f0ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6995b23b-74f8-4a44-80cd-07e85ff596d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd1a83b-952c-43ff-97ac-f4583b6a304d",
        "cursor": {
          "ref": "73a75eba-15e1-4cf5-b1f2-3503921019dd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "05eead13-aec7-48a0-a607-d63f3804dc1c"
        },
        "item": {
          "id": "3fd1a83b-952c-43ff-97ac-f4583b6a304d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3bfc8e2-b5b6-4d0d-9442-22351cc85f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d112ee22-16d2-44f6-880b-f22b09b448b7",
        "cursor": {
          "ref": "e5114581-25f1-4ee2-a122-00bf0e8480cb",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7dc9861b-cf8f-4ef5-8d47-a63dc8eb8eab"
        },
        "item": {
          "id": "d112ee22-16d2-44f6-880b-f22b09b448b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "acb4b145-b487-458e-b05c-dd162937759c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99c8108-0adb-4e88-b31f-4599c8b15e57",
        "cursor": {
          "ref": "45de72f8-f9ce-4e65-a14c-0e31250b274f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b85b951a-5da1-4a54-b1a4-8a73ec197809"
        },
        "item": {
          "id": "d99c8108-0adb-4e88-b31f-4599c8b15e57",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "952cd249-72da-494e-9f02-b8dda80b78bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ab9415-ba34-4eec-8c7f-8873a0bb9d4e",
        "cursor": {
          "ref": "309ac9fb-744a-4722-bea0-ed7631666325",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "318c1e11-46a1-46ee-9adb-685002012f31"
        },
        "item": {
          "id": "05ab9415-ba34-4eec-8c7f-8873a0bb9d4e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f0032c50-30f5-47bd-8264-4b3d55e615ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04ddfd0-b651-44b1-a510-4df7706e2efb",
        "cursor": {
          "ref": "2cd8778a-465e-42b3-aac8-7f83132c44d6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8a7f0ad3-df59-4942-beb1-cc8f034cf128"
        },
        "item": {
          "id": "e04ddfd0-b651-44b1-a510-4df7706e2efb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ad61d04d-bfbb-40eb-9b4b-59d5d6cbce28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2744ca9-5d0b-48ce-84cd-80073d39236c",
        "cursor": {
          "ref": "14d42167-6247-421b-a2b3-90173fa1baae",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6c9412eb-fc2a-4158-b61c-610473ec39fe"
        },
        "item": {
          "id": "a2744ca9-5d0b-48ce-84cd-80073d39236c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e0c193ad-6f8e-4b0c-9e09-82788f526f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cb6fea-f095-4c1a-88c5-fc9763ce34d7",
        "cursor": {
          "ref": "e4e41212-2a25-4e94-9095-da8124b348d5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "be69f952-a650-48ba-b11c-93e21df2899d"
        },
        "item": {
          "id": "a8cb6fea-f095-4c1a-88c5-fc9763ce34d7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d4d3bb69-0059-4077-b109-7d8f0997bf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b1ccde-543c-4953-8cf1-782e0265f658",
        "cursor": {
          "ref": "786eb9f4-16c7-44f1-8f5a-e957c12a6ed5",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3733ee1f-8027-49ca-a0ce-96ccbe96dd35"
        },
        "item": {
          "id": "63b1ccde-543c-4953-8cf1-782e0265f658",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "41e4f8df-8955-4266-8799-fbbe8daced4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837be002-4401-4eed-b783-5e771ed094de",
        "cursor": {
          "ref": "e5aed8d4-a5ea-449c-bbfe-5ede24e6861e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0f278ddb-ecd4-4b95-9c0a-6e7d3fad9186"
        },
        "item": {
          "id": "837be002-4401-4eed-b783-5e771ed094de",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3e0c316d-e72f-416f-bf2d-6c6e89d69f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3083e48-b324-4aa0-916e-b95ab40fe741",
        "cursor": {
          "ref": "ccb15731-d193-49f3-a7b7-25b0a2113336",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fde1de43-7d1e-4c33-b8b3-28c267a56263"
        },
        "item": {
          "id": "f3083e48-b324-4aa0-916e-b95ab40fe741",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6fed3daa-69dd-4609-b4f9-f181e4245b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e4efbe-2b73-46d0-860e-1bf3339b9f3d",
        "cursor": {
          "ref": "8ab1febb-e14a-439d-b2de-b656799fe6af",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f47136f2-bdc3-4e85-892b-3736af66d8d1"
        },
        "item": {
          "id": "f5e4efbe-2b73-46d0-860e-1bf3339b9f3d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c9ed68d3-4212-41d3-ba0d-019fd4fc278a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f3791d-412e-46b8-bef4-b6ef1847a694",
        "cursor": {
          "ref": "53a6213f-124e-43ec-b0a5-31200528bbe3",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e4521d7f-9d55-4598-ad2d-ef0c22f86008"
        },
        "item": {
          "id": "45f3791d-412e-46b8-bef4-b6ef1847a694",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e3bfc20d-cea4-48f4-b7c0-aefbb005c81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31a341c-20a4-4f49-98ec-11b0ac164f72",
        "cursor": {
          "ref": "483efaaf-9d85-4d80-855b-58681a4e4afb",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2e2281b1-4c20-4d25-b606-7ab01f3a6caf"
        },
        "item": {
          "id": "e31a341c-20a4-4f49-98ec-11b0ac164f72",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5073f693-8dda-48b3-8eb5-0bd17d69c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a8062c-8fb9-41f2-892b-552373562096",
        "cursor": {
          "ref": "c5933742-db97-470a-9a56-1000ce9fc9b7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e59ab20c-c027-4127-b927-43564ec5088d"
        },
        "item": {
          "id": "a9a8062c-8fb9-41f2-892b-552373562096",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f7bb9dc7-2da3-4873-90c6-af201c43d163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e539da-b82d-485c-8e79-bc392de90fb1",
        "cursor": {
          "ref": "9f0ec122-6c3e-4cab-ab02-200517fb08ec",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c6f3825d-1c9e-400a-a2d5-36859eb5e8c1"
        },
        "item": {
          "id": "d3e539da-b82d-485c-8e79-bc392de90fb1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6a78e01b-0a80-421d-9f22-aa4a50897b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e919e48-6021-4b0d-bb3d-8b26c411caaf",
        "cursor": {
          "ref": "bcff2b74-c8ac-4c05-91a5-ec6e7661d945",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "84c4c5d3-0cf8-4adc-828f-ebc752586017"
        },
        "item": {
          "id": "2e919e48-6021-4b0d-bb3d-8b26c411caaf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "12096642-986d-43e7-83e0-cf61ca881ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e30e072-9eea-4fa7-8933-3a732a990c03",
        "cursor": {
          "ref": "98d1e5c0-b798-433d-aa1d-e7e392db0ad4",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ace1c66d-fc8b-449f-a8a8-837ae96f96ac"
        },
        "item": {
          "id": "1e30e072-9eea-4fa7-8933-3a732a990c03",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a3e78cdb-47a7-4897-b3d3-32da3f067a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04318c70-230a-4500-8289-a4250b11965e",
        "cursor": {
          "ref": "36a2aed0-71bc-4347-85ef-6ea0fd09e9b4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1a15de05-7a67-4dd0-b0d6-34b9dc21b1f9"
        },
        "item": {
          "id": "04318c70-230a-4500-8289-a4250b11965e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a98a49db-0db6-4f48-9502-fc3f1342d415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0104e9-c793-477c-a25f-f59118723c0d",
        "cursor": {
          "ref": "5ffd2f81-ad55-411d-9e6e-393b58b4b7cb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "14bad403-57e5-46db-acbc-7d66ded43a5f"
        },
        "item": {
          "id": "9e0104e9-c793-477c-a25f-f59118723c0d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f4669e55-bd4d-47de-8a0b-f8c4864b9dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18760b97-e599-477b-a671-ed531a1f654e",
        "cursor": {
          "ref": "06eefca7-ea44-489f-9421-a5e3cd602899",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2c389534-3fb8-4f39-b1ed-c66da7cbcac4"
        },
        "item": {
          "id": "18760b97-e599-477b-a671-ed531a1f654e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0cddbc3f-a080-40e0-9bff-b084a7aaf760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9329ebb5-0eaf-4737-93ea-ed5e127d559b",
        "cursor": {
          "ref": "244eb840-bdb3-45a5-adc4-3d0eb7cfc69a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "18467ecb-3723-4078-aa64-6b89b898a92b"
        },
        "item": {
          "id": "9329ebb5-0eaf-4737-93ea-ed5e127d559b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f5ad6629-32bb-4b09-b54d-44fd94a63435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8fa7f1-fd36-4935-995c-19a7770b615d",
        "cursor": {
          "ref": "e482ac93-cb14-49fa-a4cb-0ddc9b247db3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "68d12f32-365e-44b1-b28d-26e253003663"
        },
        "item": {
          "id": "8e8fa7f1-fd36-4935-995c-19a7770b615d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d4bd5851-f516-47ef-acc4-d2dc9f0a2cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e114850-4cb4-4e9a-a358-264151331bb0",
        "cursor": {
          "ref": "5df0bade-e87d-4cb0-b63a-eea053b591fd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ac23b614-f2cf-4f40-a93a-0961e3c5fb4f"
        },
        "item": {
          "id": "2e114850-4cb4-4e9a-a358-264151331bb0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b476e5b8-59cb-4a27-855d-92a3562b41b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d14141-0b95-4d8d-940e-6064c2c0bc9f",
        "cursor": {
          "ref": "6379f447-0d01-4c6b-85c6-275afd2aae0f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6645a141-19ec-44f8-9883-6f1a67283ad5"
        },
        "item": {
          "id": "19d14141-0b95-4d8d-940e-6064c2c0bc9f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e1e1626d-3142-41ab-9ab9-f1609ac4b9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c087ec-34a2-42a5-831f-7b86d9594547",
        "cursor": {
          "ref": "d186a561-ee50-4326-ba87-9aeb160bd827",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c05024f6-9d6d-4dd7-b95a-0fd4f48425fe"
        },
        "item": {
          "id": "12c087ec-34a2-42a5-831f-7b86d9594547",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7048063e-a155-4c35-8b4f-5613fab2fc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a948db19-0e5e-43f8-9f78-8d4fa87b88f8",
        "cursor": {
          "ref": "25a5bba6-baa2-4560-a0c0-75fa59f8e214",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "77e023d0-ea7c-4cbe-b312-95b66a37b688"
        },
        "item": {
          "id": "a948db19-0e5e-43f8-9f78-8d4fa87b88f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1f753ae5-7d5c-4bc8-8286-acdb1c8df45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d908ddc4-5bae-4ef7-8eec-14b353db8884",
        "cursor": {
          "ref": "adf4de24-0b62-49c0-896d-d60783bd3cf0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "60590298-c8b4-46ba-9407-fd844c608859"
        },
        "item": {
          "id": "d908ddc4-5bae-4ef7-8eec-14b353db8884",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fd529a2c-9aeb-4749-bb95-2386fdd591b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632e4f01-5f99-42fa-8c23-ed202d9e0516",
        "cursor": {
          "ref": "ad0cc10a-6dcb-45d0-bbe8-e5b1fa181ec1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a1ddbbb1-7b71-45ce-975e-b3671a364427"
        },
        "item": {
          "id": "632e4f01-5f99-42fa-8c23-ed202d9e0516",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "11f0a1d1-5c81-4c78-af1c-61f62e28a9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2441c7-253a-4178-abfe-36bb1d166d1c",
        "cursor": {
          "ref": "e4b07d1f-b0ed-40ba-9545-634c154a9d7e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9c7615c7-7ac3-48fa-b117-d1aefa0413d0"
        },
        "item": {
          "id": "6b2441c7-253a-4178-abfe-36bb1d166d1c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1eb6894f-f977-46e3-a3d4-eed09066ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4682db51-4327-4ef7-90e5-504685a9072b",
        "cursor": {
          "ref": "bdd9fe7a-ec8e-420a-ad9b-331dc22cda94",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "86b73aa7-cb5c-46ec-a7ff-063120f7d0f5"
        },
        "item": {
          "id": "4682db51-4327-4ef7-90e5-504685a9072b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8598c4f3-84dc-4087-880b-8e5ede06f6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76595907-a1fd-441d-b4e5-df6376febda4",
        "cursor": {
          "ref": "c53cce78-e36d-481c-83dc-d90a7c1e5a1d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "751dbf7d-9174-4621-b211-c974de622b28"
        },
        "item": {
          "id": "76595907-a1fd-441d-b4e5-df6376febda4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6125a2f8-8ab1-4581-be4a-6071688bf901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d86bb14-7d7a-47e6-8672-62e78da18334",
        "cursor": {
          "ref": "4ffc1a41-75ff-4493-97cc-82e5d952386f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "da37088d-f177-4ba7-88a6-91b4123b60a5"
        },
        "item": {
          "id": "0d86bb14-7d7a-47e6-8672-62e78da18334",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a5cb9f6a-8967-4bb6-9696-519c45d86054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4077ca39-fb52-4552-b9ca-f3e4ab8599c8",
        "cursor": {
          "ref": "39e46c5d-e508-4cd2-afe3-4782a107ef6c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "58ff73d1-0d24-4602-84da-9b0f9e96d65d"
        },
        "item": {
          "id": "4077ca39-fb52-4552-b9ca-f3e4ab8599c8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "83d31399-3434-4ed7-95bb-8567b11069fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363cb1f1-19ee-4ae8-914d-b5ae2af27d5d",
        "cursor": {
          "ref": "3f9cad06-07d3-4ac7-8174-bcb17acd6ffa",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "145b5212-fe32-47df-b35f-12e2296faebd"
        },
        "item": {
          "id": "363cb1f1-19ee-4ae8-914d-b5ae2af27d5d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a7566fe3-14b8-4e49-8398-4044cb2eb1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfaaf5d7-cf68-4d6e-ac5e-8e50ff0e0d9a",
        "cursor": {
          "ref": "7e4eb9c9-4887-412a-a372-5569997ae0e8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "67c08a03-d473-4541-b5f4-3c65a594df71"
        },
        "item": {
          "id": "dfaaf5d7-cf68-4d6e-ac5e-8e50ff0e0d9a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c83ef620-8ffc-4179-99a8-8c8b5ebaf917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f8ebee3c-5636-46ed-9a90-cf960831dd7d",
        "cursor": {
          "ref": "d9966c18-708f-4b5d-af5a-7db6c887acae",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0ce3b359-720a-44af-a094-7b71cf3c8a42"
        },
        "item": {
          "id": "f8ebee3c-5636-46ed-9a90-cf960831dd7d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "490ae8d1-6531-4e44-8f48-896e4c4bee2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b416f703-1e80-4f5d-a3af-a3dc08ff060c",
        "cursor": {
          "ref": "4d3c2914-3397-45e1-9f0d-1bc70d369663",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "50fb2b1f-8c69-47cd-9708-41acd7c1cdd1"
        },
        "item": {
          "id": "b416f703-1e80-4f5d-a3af-a3dc08ff060c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a294a1fa-4983-4e53-a0be-c56e2e9f8744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0eb49a55-a47d-4a2e-bd9a-ce8f0fd720c9",
        "cursor": {
          "ref": "8c940c10-111e-49f4-805b-3f90ef6899db",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "093d36b0-9041-4891-bda8-2db3bf39c79f"
        },
        "item": {
          "id": "0eb49a55-a47d-4a2e-bd9a-ce8f0fd720c9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dca45173-9104-4a1e-a169-a87cbf16acfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "134ee6f4-0d67-4262-9250-ecd01a8bebb5",
        "cursor": {
          "ref": "4324dbc9-9566-4a7b-8839-432a1c115fe8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d0c3edd1-a07a-4356-9804-3e55e1201f8e"
        },
        "item": {
          "id": "134ee6f4-0d67-4262-9250-ecd01a8bebb5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "176b883f-98c2-4bcd-ac50-9a8a95d9838f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4ec18786-b5f0-4727-9cb9-c21eb73b443d",
        "cursor": {
          "ref": "1ea861ef-304f-4ea4-a811-afbecc3867d3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e6c088d8-8012-4361-bf08-83a4a974969c"
        },
        "item": {
          "id": "4ec18786-b5f0-4727-9cb9-c21eb73b443d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1620ebd1-c29e-401a-a853-ad2f5f55b612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0b901ecb-bfbc-476d-9778-7d46b27ab44f",
        "cursor": {
          "ref": "c5b187ab-e9b3-4c43-8c4e-f3b9fd6f06c9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2dfc3fde-d693-47e3-8e2a-1779d333a8c2"
        },
        "item": {
          "id": "0b901ecb-bfbc-476d-9778-7d46b27ab44f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3ece2a0b-64d8-487d-82ce-603ad2f4a94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ca4c0d57-a777-4a82-9e81-4ed5a2c2ee57",
        "cursor": {
          "ref": "a5ff8dff-ccf6-48e5-828b-55ce6c219c47",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3cf6dcb4-e4c4-4523-9c4a-283631fdb02c"
        },
        "item": {
          "id": "ca4c0d57-a777-4a82-9e81-4ed5a2c2ee57",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "408a2846-8f14-49b6-bf56-66780fe8449b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74c170b-0e20-4780-94e0-486d850c2620",
        "cursor": {
          "ref": "a8baa305-427c-4ece-8a44-d60ec93aa3fe",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a3244452-92c4-4991-993d-3a6c1d3b5e70"
        },
        "item": {
          "id": "b74c170b-0e20-4780-94e0-486d850c2620",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9679f216-6bc9-442f-acf7-45dbaea70a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5314964f-a0b8-4f73-a994-cd913c789747",
        "cursor": {
          "ref": "fde27d39-bdb3-45bd-a962-c698423deced",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cface176-c4cb-4b82-90de-00b3ca25164d"
        },
        "item": {
          "id": "5314964f-a0b8-4f73-a994-cd913c789747",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "887f0483-88de-4bc3-88bb-e7c671d41b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588c2ac3-a9e2-4fb0-b662-c1cd13231201",
        "cursor": {
          "ref": "4473e2e6-80a9-4b55-8af2-3270211de9dc",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "08166501-201d-4abb-9ff7-8989e54fe9cd"
        },
        "item": {
          "id": "588c2ac3-a9e2-4fb0-b662-c1cd13231201",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1aa3f970-396d-4fe2-896a-4125034c4c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1944de6b-2c51-48de-9212-0e4d0319da02",
        "cursor": {
          "ref": "41266e00-21df-441a-8614-50e278b33c40",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ac4deb1-ceb6-4f58-bf6b-22f632f79a7f"
        },
        "item": {
          "id": "1944de6b-2c51-48de-9212-0e4d0319da02",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "183c807f-52d0-41a7-8172-13c0c1793bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5041080-2c5a-4b8b-b01d-5869a33c34ea",
        "cursor": {
          "ref": "db6eabf5-3118-472b-9009-7ae1682b12c4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "40e032ab-01bb-4c1d-9d4a-69d4532fba82"
        },
        "item": {
          "id": "e5041080-2c5a-4b8b-b01d-5869a33c34ea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fdfe6576-78fa-4587-aa29-1ccc6197dfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f833cde8-ef7d-41df-a2a6-6b346a0cefe0",
        "cursor": {
          "ref": "c8d60e7a-13d8-4de3-b3f9-b5f6710beb97",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2feb550c-38ea-401a-9f01-7532e391fb08"
        },
        "item": {
          "id": "f833cde8-ef7d-41df-a2a6-6b346a0cefe0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b171f66d-2148-4150-8491-0269671492a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94e9f0c-8026-4822-b603-04c441297caf",
        "cursor": {
          "ref": "9a6b145f-d73e-4ae7-a15f-b62d8fce578c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "95f06b22-0040-40e2-93ca-8dec6a866670"
        },
        "item": {
          "id": "d94e9f0c-8026-4822-b603-04c441297caf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a82f18e-3c1c-4287-946d-9ab8d38d9184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f536384-9cb9-4f63-bb19-44fa0a53d024",
        "cursor": {
          "ref": "e93d7cd5-2159-4c74-9552-16835da4a626",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ff206228-0c38-41d5-aad8-51935b8744e2"
        },
        "item": {
          "id": "7f536384-9cb9-4f63-bb19-44fa0a53d024",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "773c7617-1cec-4e42-b831-bab1e99de982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb487fa3-1cde-431e-b403-679fe58ad65a",
        "cursor": {
          "ref": "54ff94c4-9d30-4beb-a607-9c0132a6a6ad",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a07ae85e-cdfc-4a38-b490-164b51f72d12"
        },
        "item": {
          "id": "cb487fa3-1cde-431e-b403-679fe58ad65a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4e1f38d5-11b0-461e-ae10-e152a034445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b624da-2251-4d74-8c36-f4c16cc04c4b",
        "cursor": {
          "ref": "8d26d5d0-3797-48c9-8406-2af7b467a383",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ebe9048b-6a87-4990-9139-07eb41fb0606"
        },
        "item": {
          "id": "05b624da-2251-4d74-8c36-f4c16cc04c4b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a977f479-2753-4c0e-9cdb-439aba5e4aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a6a81c-a70f-4118-a4e7-38d96956c35f",
        "cursor": {
          "ref": "f96bb36d-2b1d-4507-84e6-a0712fc2e0c8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d119b6c8-d43a-4a13-b238-66943ce170e2"
        },
        "item": {
          "id": "b1a6a81c-a70f-4118-a4e7-38d96956c35f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d54e6b9-e577-451c-8384-cb1d2202324d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa50d0a-a1b6-40b2-9247-8fa55cc80428",
        "cursor": {
          "ref": "c115a575-c492-4140-bc28-29d12a7fcdd4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "11850b50-6fce-4e7f-946b-b2c5b26efe2c"
        },
        "item": {
          "id": "9fa50d0a-a1b6-40b2-9247-8fa55cc80428",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e31ab8d0-3ccf-4ab9-a94a-2816792bb28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf5e15f-5379-4f59-a402-8b02319445c6",
        "cursor": {
          "ref": "fe04380a-3c8c-4bf6-a9a3-f711978f49ad",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3e8bbb22-e8e4-41f6-868d-aa13b85d385c"
        },
        "item": {
          "id": "fbf5e15f-5379-4f59-a402-8b02319445c6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dc8ec205-a3c4-4bba-b4e3-41b5ef1bfb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079aeda7-d5a5-4005-bc01-a7fd2ec62762",
        "cursor": {
          "ref": "06e84e92-4d5b-45f1-a02a-afe984c18919",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "96c535bb-a11d-45c8-b500-e126b5c7c1c2"
        },
        "item": {
          "id": "079aeda7-d5a5-4005-bc01-a7fd2ec62762",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "350d1856-7a19-478b-ae92-6c61eadb2585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d768312-fa41-431e-8152-f606081c597d",
        "cursor": {
          "ref": "dc7c2e42-dd20-473f-87de-17eec4774e69",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "986cd28c-3e33-441d-a154-bcb371ce4af6"
        },
        "item": {
          "id": "3d768312-fa41-431e-8152-f606081c597d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "59893ba0-d129-481f-80e5-3821e2d04181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1207af55-2edf-4adf-a4d2-2055ba90f88c",
        "cursor": {
          "ref": "52eb4637-e47a-4dd2-8bea-ad29f589e2ba",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3303759e-23c7-47c5-bf3b-97390a25a0c3"
        },
        "item": {
          "id": "1207af55-2edf-4adf-a4d2-2055ba90f88c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f0ed5379-494c-46cb-8ecd-d4de6d20afb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be490719-c9e0-4a80-b8a5-5324fcbc8f85",
        "cursor": {
          "ref": "8090b534-f3cd-46d3-9804-19a2778c34b6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1a527f7a-67fd-4b92-97fa-2bc52600a03f"
        },
        "item": {
          "id": "be490719-c9e0-4a80-b8a5-5324fcbc8f85",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "98f11df1-64f6-44c2-a8d8-452663bad1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5960a75f-52e2-4e3e-8e1c-766f77428429",
        "cursor": {
          "ref": "5663f81f-53b7-479a-98cc-74dcf2967872",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "78a1adb3-4908-448c-a1ef-2e7379884c48"
        },
        "item": {
          "id": "5960a75f-52e2-4e3e-8e1c-766f77428429",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "09f35dbd-ce73-468d-8950-d2cb95392d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80bcf33-ef27-45c5-b9ab-8aaeb178087e",
        "cursor": {
          "ref": "44101137-6743-4201-83fd-4a757fc77fdb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ba5e9316-8d7d-4a84-ac49-5d4788832708"
        },
        "item": {
          "id": "c80bcf33-ef27-45c5-b9ab-8aaeb178087e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "11e6ca62-718a-4348-9a7e-2bc748e1c338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2ccae9-a539-4103-9c7b-80089db8b140",
        "cursor": {
          "ref": "648bd319-8752-41eb-9ba2-f352780b68ae",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7ceaca50-400e-4829-86d7-23aa2b090af5"
        },
        "item": {
          "id": "3d2ccae9-a539-4103-9c7b-80089db8b140",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c4ee9553-4a63-465f-a48b-23fd72caf114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a0829c-ff41-4288-8187-1cbe219c36d6",
        "cursor": {
          "ref": "c8a0e3d7-a2d2-4df4-ace3-86be2c73a4bd",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9783ba8c-bab3-402b-aa0e-b989c8ec20e9"
        },
        "item": {
          "id": "a6a0829c-ff41-4288-8187-1cbe219c36d6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "54293585-320e-4ea9-a048-099baaef9788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb447ba-f805-4044-a683-8a1ef1f6a700",
        "cursor": {
          "ref": "97323e04-9efc-4127-b864-58873dc52ba4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "44945b61-319f-46a8-b014-6653d0bedf1f"
        },
        "item": {
          "id": "6fb447ba-f805-4044-a683-8a1ef1f6a700",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d2a9569b-5cb6-43ec-a91b-32252298ee30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a27d2e-ea17-43e9-b473-7c39e793c76f",
        "cursor": {
          "ref": "8fcbff15-735d-4934-8321-250d1a362190",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ffb38171-1ff2-4f01-bd93-d34ef531f176"
        },
        "item": {
          "id": "c6a27d2e-ea17-43e9-b473-7c39e793c76f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a98c9be7-7c0e-4074-9c02-184e28cd5c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a864674-97fc-4417-8d45-d9411f39be43",
        "cursor": {
          "ref": "dea4ebbc-435a-4c42-9dd5-d18d4e076267",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c4ab1b0d-0af6-48c8-9ef0-ee8bfe865325"
        },
        "item": {
          "id": "3a864674-97fc-4417-8d45-d9411f39be43",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "86255e75-d7d9-4ae4-b7c0-3afb7f2fa3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c040d975-4ddf-4ca2-8d16-9816ac8eedfe",
        "cursor": {
          "ref": "17d3c42e-1676-4e89-8f75-650078cb1eb7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "467b5313-48f3-4e32-a9eb-c8ca7c0a8284"
        },
        "item": {
          "id": "c040d975-4ddf-4ca2-8d16-9816ac8eedfe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "228b2b74-24a9-4ec3-a634-e4eab2b62783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38aa100-35c9-47ab-af78-7a3d49c744cf",
        "cursor": {
          "ref": "54b840a7-574a-40f6-b017-0defd9ff5c67",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5020b661-9af1-4e03-894e-50026f09eaaa"
        },
        "item": {
          "id": "f38aa100-35c9-47ab-af78-7a3d49c744cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7a4f2b31-025d-4263-b0e1-957d5a35ec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca861af2-073c-4992-b084-bc9098a9113b",
        "cursor": {
          "ref": "15aab7e2-09a2-4e2a-93e9-13278da0cbf4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "408597da-5580-495c-8511-0234680d5f1f"
        },
        "item": {
          "id": "ca861af2-073c-4992-b084-bc9098a9113b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8b1439f5-a017-44fe-be19-6aefa24a4da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3e043c-8d20-4932-a4dd-457e0db96e45",
        "cursor": {
          "ref": "6b728c6c-5a77-4b22-92b2-fc9ee0957673",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b8a18386-a868-4cde-b397-114840a2f435"
        },
        "item": {
          "id": "0a3e043c-8d20-4932-a4dd-457e0db96e45",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "05254fee-e2ee-4bf4-9968-005381e03350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4617971-a5a0-4f71-aded-28dc1916a13b",
        "cursor": {
          "ref": "12e8cac6-2359-4274-b251-300f6e406e61",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "185362b1-9166-431f-ad51-e67754a54749"
        },
        "item": {
          "id": "e4617971-a5a0-4f71-aded-28dc1916a13b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47baf54b-c76f-4d61-af36-c508f055505b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c954baf-5f78-4f3f-ad1d-1fed7da3712a",
        "cursor": {
          "ref": "b8f2a899-f986-4a41-860f-37d6e2cd81d8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f3b29a37-ffd9-4450-9ea2-f3fc75748d53"
        },
        "item": {
          "id": "7c954baf-5f78-4f3f-ad1d-1fed7da3712a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e7c6d849-9201-4204-b55e-f21750fac96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd8a375-548c-4bd8-a646-8700f94d4cbd",
        "cursor": {
          "ref": "77255dec-d401-48de-9ba0-5369cfd1b57f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1b9c0122-1a90-407b-b9fd-516615166810"
        },
        "item": {
          "id": "6dd8a375-548c-4bd8-a646-8700f94d4cbd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8aa90b33-a7dc-4897-9274-2ef6a93287db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4042c042-7bc3-44f3-a44d-f4dd2633e252",
        "cursor": {
          "ref": "8c433791-5130-4e5d-ade7-7e9040eb4d8e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "51a1c616-b66d-4407-a0a3-2362c04f7b9c"
        },
        "item": {
          "id": "4042c042-7bc3-44f3-a44d-f4dd2633e252",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "11e068c5-3a10-40b5-b87f-04f91154bfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5550e019-3fa6-45ea-a205-22d8840ec8fc",
        "cursor": {
          "ref": "886a38d9-6968-4f1c-85a9-0b55ba54639b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "08df8f49-bf08-45f1-b5a7-da028738864d"
        },
        "item": {
          "id": "5550e019-3fa6-45ea-a205-22d8840ec8fc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cc3aa896-a0c5-4ddb-bb95-0c61f9b0e1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faaa137-dae7-480b-b9b8-40f8880576af",
        "cursor": {
          "ref": "36679f44-f3de-4e6b-8892-1f1de849f782",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "716a7ffc-312a-4fa6-a4bd-e02a5343ee91"
        },
        "item": {
          "id": "8faaa137-dae7-480b-b9b8-40f8880576af",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9277a4c0-6543-452f-9379-234309ffc268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab51b8c-9c2c-41b7-b99d-2e23ed446ee7",
        "cursor": {
          "ref": "bf10b3f0-afec-4cca-80c1-41bd233e378b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c0bbdaa-fbea-4f77-a212-a9b9813982b6"
        },
        "item": {
          "id": "cab51b8c-9c2c-41b7-b99d-2e23ed446ee7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b891d13b-ebdc-4f97-9aca-73dbc88eeeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febd19c0-9e72-4d52-8e18-66b5d39e4fda",
        "cursor": {
          "ref": "da613175-f85c-45fb-b19d-978e1b19fd71",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e4bdabc4-3e31-4a91-b5b6-76aacc60a74f"
        },
        "item": {
          "id": "febd19c0-9e72-4d52-8e18-66b5d39e4fda",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fdc40a66-df8a-4e5c-a58d-69773fadc43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d31d50f-bcbf-4f11-bcbe-eaa06b54e734",
        "cursor": {
          "ref": "24bea76d-2f98-4c1f-9912-ce02d6bb0c54",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "83eeaeee-c9a6-4f04-9c4e-a47a72308335"
        },
        "item": {
          "id": "9d31d50f-bcbf-4f11-bcbe-eaa06b54e734",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "acef29a7-8298-47de-b261-7fa259536f3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e9e68a-846d-4aeb-aac6-654254f86757",
        "cursor": {
          "ref": "e042b70f-2f43-4414-8051-b1e9d9618466",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e7314f37-5b48-455d-a5f0-3436c27e3c2a"
        },
        "item": {
          "id": "c5e9e68a-846d-4aeb-aac6-654254f86757",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5e00e5f6-2248-4801-a2f0-3edc804245eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75177ea-9e2b-4857-a912-641deab7dac5",
        "cursor": {
          "ref": "3b2ad695-cd3a-46aa-b5f1-571d02fe8159",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b4d84749-b699-4f7e-8757-516b714a8824"
        },
        "item": {
          "id": "d75177ea-9e2b-4857-a912-641deab7dac5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6b6279d9-cdfa-4fb0-b795-c27c3d07f782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5487299e-8086-4f00-9579-846c35924bcb",
        "cursor": {
          "ref": "50d6e182-d281-45d3-899a-abae8364ed2c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "115f764a-3a83-4270-9b37-bc66aa9ba6f8"
        },
        "item": {
          "id": "5487299e-8086-4f00-9579-846c35924bcb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "edc5bfc5-6568-4369-97e6-6173fddf31c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabf58a6-b42b-45a9-9273-e0356ee1ca51",
        "cursor": {
          "ref": "40b2f9a0-da00-4eec-a61c-24f17b1e322a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "08d8309f-2c53-424f-8b6a-9305548e95b9"
        },
        "item": {
          "id": "aabf58a6-b42b-45a9-9273-e0356ee1ca51",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "59bfff0f-bfa7-4fb7-afe9-fe4bfbd397d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73448f5d-9011-47a1-aa1a-f27659fa3e67",
        "cursor": {
          "ref": "83b52e98-e3b4-4fb0-b7f9-d09b6b01e22e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "de487aac-eaa0-4e4f-8b28-b13fb1543f95"
        },
        "item": {
          "id": "73448f5d-9011-47a1-aa1a-f27659fa3e67",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "67b6c472-6c79-4d89-bca8-f8a6c62049a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cc6a30-2fb5-4dc4-8717-13c3473a938f",
        "cursor": {
          "ref": "432b637f-f1d2-4e13-a0e5-34a021e8a089",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "74713966-21ed-4968-8f9b-7e479118f392"
        },
        "item": {
          "id": "f0cc6a30-2fb5-4dc4-8717-13c3473a938f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "89112281-7cd9-475f-8ad2-35186f7a180d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2076b2-68d7-414f-9dbe-69cfeefb491a",
        "cursor": {
          "ref": "3214e3ad-e893-4b28-84d6-81750b966314",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6eb21f8f-4150-4d3f-bd51-44ed8f88866a"
        },
        "item": {
          "id": "7d2076b2-68d7-414f-9dbe-69cfeefb491a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a891de09-5e66-435b-bd3f-fcb37b0c8e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308f3b4e-67a6-48ca-9909-b75b46a938ce",
        "cursor": {
          "ref": "d449f247-85c1-4597-8a9d-89af54ca2292",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a89973ab-b590-45bb-8e67-fa9179428318"
        },
        "item": {
          "id": "308f3b4e-67a6-48ca-9909-b75b46a938ce",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "38618c05-88b3-4f28-8f0c-6cfbae1f59b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b108cb54-133d-4bae-8a12-e52d4225ace9",
        "cursor": {
          "ref": "c0c9d9ab-f393-45c1-ac7c-c5cea463f529",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6c30feee-85c8-4351-bc65-e1b856c894f6"
        },
        "item": {
          "id": "b108cb54-133d-4bae-8a12-e52d4225ace9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6f048f6e-1e48-46b3-ab47-c5aa542d9f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c95f07-605c-4ee0-b726-92557858305b",
        "cursor": {
          "ref": "dd9aa424-1ef8-4925-8e71-e6db402cc69f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "59555eee-6e63-487b-aae1-565c763acd88"
        },
        "item": {
          "id": "28c95f07-605c-4ee0-b726-92557858305b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a3fdd76b-bc48-42a0-bf24-195ece3d4f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5eb48d-1555-47f3-8e19-d43a3c492bce",
        "cursor": {
          "ref": "1a259592-5ecb-462c-a738-a6df0b6e6d2c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4605d103-12b9-47a1-bff2-8c6a0b764ee0"
        },
        "item": {
          "id": "3f5eb48d-1555-47f3-8e19-d43a3c492bce",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "02077246-0773-4b2d-8dc6-33dbdb79f7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db67204-428b-4417-9d29-ea24625648c7",
        "cursor": {
          "ref": "a02b255a-4701-4b39-a9b4-b4379cea4e97",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6236e603-9d5b-41e8-afa0-0f3ff32ac5ea"
        },
        "item": {
          "id": "7db67204-428b-4417-9d29-ea24625648c7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "93e62f34-bf63-446c-a851-9246b8a60c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77318f86-5aef-4603-b410-4220f239bc0c",
        "cursor": {
          "ref": "84aa62ec-4584-4c8f-acec-ad2b0a68ceb3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5f654ca3-9711-4a9c-98a1-7133548674f4"
        },
        "item": {
          "id": "77318f86-5aef-4603-b410-4220f239bc0c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dab68759-f8bf-4bf0-9931-360137d972ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4c8e60-7940-4d40-8263-c18b326b8e58",
        "cursor": {
          "ref": "5dea5f39-01b1-47f0-aa07-521728730def",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "48d6a80c-7f59-48b1-9307-2bfa6c63c328"
        },
        "item": {
          "id": "6b4c8e60-7940-4d40-8263-c18b326b8e58",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f6073935-4052-4dd2-b1c3-0b47f1dfef24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f4d075-1e3f-4f4d-86ca-cc6207d7d62d",
        "cursor": {
          "ref": "1126c836-d96a-413c-ae0e-c9895ceae3b2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "db87a0f2-1ba9-42de-aaea-3878245d300c"
        },
        "item": {
          "id": "e7f4d075-1e3f-4f4d-86ca-cc6207d7d62d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "08328b09-2e0c-4a8b-a325-f5fdbda1c71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332741f3-e774-49e8-b080-daedaa4ed44b",
        "cursor": {
          "ref": "3a3d8ee4-fdb1-44b5-9de8-94cbf4b835c9",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b5a9c5b8-4612-4246-b529-9a6e0da19800"
        },
        "item": {
          "id": "332741f3-e774-49e8-b080-daedaa4ed44b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "00a5c3e9-2222-4d5a-bb15-7c0b256a7c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f30ea7-d91c-4cc3-a69a-6b277458f06d",
        "cursor": {
          "ref": "72b030ac-9b23-4510-bbd5-f82b94310f6d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8d9e5698-ace8-4fb0-878e-739635356187"
        },
        "item": {
          "id": "29f30ea7-d91c-4cc3-a69a-6b277458f06d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "774349f7-b7e1-44d9-8eb2-a53f5b6cc143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0699e9-345a-428c-beed-de9a23337b68",
        "cursor": {
          "ref": "69d85973-affa-4166-b1a9-5eb64ff3c52c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e02e916b-631c-4ab5-9fc8-f2a8aa26060d"
        },
        "item": {
          "id": "1a0699e9-345a-428c-beed-de9a23337b68",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f6f0636b-414c-4a10-9199-5bbee50318a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3a6d55-7c69-47b4-8cfe-a6d498a30b87",
        "cursor": {
          "ref": "4756509b-37ee-4ee6-b2dc-7ddd097d6fc5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "776cd521-359a-489a-b463-59437d98651e"
        },
        "item": {
          "id": "3b3a6d55-7c69-47b4-8cfe-a6d498a30b87",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6e9892f7-93b8-4181-a161-b083bcd03ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd82cc84-3828-4f41-8872-39fc0426f5ba",
        "cursor": {
          "ref": "8e0e1ae7-a5e0-4e03-9080-7d6dcea5fded",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f833ced3-7633-4abe-8a18-ec65d04c7431"
        },
        "item": {
          "id": "bd82cc84-3828-4f41-8872-39fc0426f5ba",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c6e29506-98d1-45d4-bd37-cd15f5c88b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583c9f02-29e5-4c46-b147-5ae36e2eac6a",
        "cursor": {
          "ref": "5d0bad38-3764-47b2-b65c-930b501399c2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ba29be47-22d5-496b-a0d8-c84881ebbe11"
        },
        "item": {
          "id": "583c9f02-29e5-4c46-b147-5ae36e2eac6a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0b813cd7-e458-4ccc-9f4c-a2b5fb2ab2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d966e2a-acc3-44fd-a215-b2590c956d96",
        "cursor": {
          "ref": "638d9c13-2cd1-45c7-b9d3-0b03b2e82fe9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eb8775e8-35e3-41de-8e8e-c6d2cd5c3494"
        },
        "item": {
          "id": "9d966e2a-acc3-44fd-a215-b2590c956d96",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7135d5e3-3fb1-46a7-8936-cdcd4aa5216b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149281c9-c1bf-4137-8022-6af8eb0e1986",
        "cursor": {
          "ref": "cd603acc-2022-4511-915f-4267407df387",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2685bec1-f186-4a45-9993-c1f447d686dd"
        },
        "item": {
          "id": "149281c9-c1bf-4137-8022-6af8eb0e1986",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "27033ab6-a1dc-40fc-b7cf-030f0e4131a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c4ff94-da52-41e4-8403-e1926deb19d8",
        "cursor": {
          "ref": "c91d3365-d264-445c-978d-c565c267344a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "56b052a6-2f06-4e77-9093-67e21d1f6c34"
        },
        "item": {
          "id": "d2c4ff94-da52-41e4-8403-e1926deb19d8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5b9fba18-0b73-4e0c-9126-0f70aeb085b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9e38cb-8abd-4fce-9c32-26f1dd739026",
        "cursor": {
          "ref": "67521239-0a00-4653-929a-cb5a0bed2241",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f4c8a809-9775-42c8-b621-cba7c44b6d43"
        },
        "item": {
          "id": "1c9e38cb-8abd-4fce-9c32-26f1dd739026",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6bc76b90-57c7-4d37-9514-f13ac366034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bb4cca-7217-4ee8-9034-c8cd40ca5f0c",
        "cursor": {
          "ref": "2e16ce7e-ca7f-4b94-97fb-a2961165251a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d337f05f-96bc-4eca-bd73-73eb497b4330"
        },
        "item": {
          "id": "a3bb4cca-7217-4ee8-9034-c8cd40ca5f0c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3c0931d5-4e13-498d-85ca-ed4be5f5d550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9479ba4c-c0f5-400d-bc52-533d33a94b40",
        "cursor": {
          "ref": "6c51bef7-7ab1-468b-8d68-4bf4eb8c2ccf",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a98ab6e1-2f64-4c34-8cc1-920e279c0a48"
        },
        "item": {
          "id": "9479ba4c-c0f5-400d-bc52-533d33a94b40",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1b47e951-1581-40cf-a619-c37c5d80b3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c120c4a-3c1e-444a-8de0-91e4ea4a29a1",
        "cursor": {
          "ref": "429a5aab-23ae-4acb-8392-be37eadcf65e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0607216d-6a8f-468c-b744-0133de3404df"
        },
        "item": {
          "id": "7c120c4a-3c1e-444a-8de0-91e4ea4a29a1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "139b5e5c-92fb-4ba8-8133-91407c0d5550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5de8343-e0ad-43b1-917f-f9b2760f56ee",
        "cursor": {
          "ref": "f27a7da1-5284-4ff9-8c6e-94095d33645f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e1634710-77e7-4676-9c5c-ec8e7c5d57df"
        },
        "item": {
          "id": "b5de8343-e0ad-43b1-917f-f9b2760f56ee",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2964295e-fc34-4849-b267-cc4c947c00fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5468ede8-5efb-4b6f-a061-77cafbbb8385",
        "cursor": {
          "ref": "057bae2a-a050-4dd8-8793-320843a90b69",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "524ede1f-8749-4a6f-a050-44733dfddc68"
        },
        "item": {
          "id": "5468ede8-5efb-4b6f-a061-77cafbbb8385",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c5ae00ce-c90c-421e-bad0-ff3a20f54a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fcda6e-50ce-4bd4-b6a2-174f7b500190",
        "cursor": {
          "ref": "30fdb27b-9632-4005-a458-0f8c639110bd",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1a0bfa16-8e41-491d-814d-f4b34114fd63"
        },
        "item": {
          "id": "b3fcda6e-50ce-4bd4-b6a2-174f7b500190",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3654899d-81ee-4f21-8f56-7f36905ce44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493fbbe8-4100-48ce-9113-6ade3f8f4c56",
        "cursor": {
          "ref": "fa31d9fe-0e33-412d-b6d1-6f873bef5f5d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c8d6b13a-67af-4a49-8890-ebbff0ae1801"
        },
        "item": {
          "id": "493fbbe8-4100-48ce-9113-6ade3f8f4c56",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a672f6fd-9196-4788-8b74-6d91cc0946f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f838883-3477-48b3-bd36-33512e4ad997",
        "cursor": {
          "ref": "b08a750e-5f7b-4a01-90a2-c72c4bafaff7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a57ec353-be7a-4edd-bcad-38f2d4eea3fd"
        },
        "item": {
          "id": "0f838883-3477-48b3-bd36-33512e4ad997",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "27dd66c9-26c0-4aec-bcb6-61848fc32d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8136ce34-564f-4520-9d19-a3521d284943",
        "cursor": {
          "ref": "c8c21b5e-e8d7-4991-b671-61fa69ded61b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d6b687b8-bbf3-4583-ac7a-44d54967f30e"
        },
        "item": {
          "id": "8136ce34-564f-4520-9d19-a3521d284943",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "011d897e-aaff-4a04-88e0-d62fcf6bea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d25dcd4-34e4-4db1-9724-34f9ed999af7",
        "cursor": {
          "ref": "37a293be-f3b8-4a83-b9b1-fa0e3c2b32b8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8a9388ea-744d-4b36-8cc1-fac0aa15b12b"
        },
        "item": {
          "id": "0d25dcd4-34e4-4db1-9724-34f9ed999af7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1e008215-0cc8-455d-b36b-c09e2da119eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e609f5c-2baf-4057-b815-6673b6889381",
        "cursor": {
          "ref": "1bd07774-bf87-41e9-ad38-f2af32a75fee",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2d32a8ff-cf3c-40b4-b3d7-141201ed7db9"
        },
        "item": {
          "id": "0e609f5c-2baf-4057-b815-6673b6889381",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "12964066-902f-4a50-930c-6d2c3da3c89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0afedc-0bf0-4a0c-8023-afa6c8d8ed05",
        "cursor": {
          "ref": "1d957384-be7a-4f29-b3e1-0ff28a3eee8f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20860595-da06-49e0-83b3-e5a4863662fe"
        },
        "item": {
          "id": "ae0afedc-0bf0-4a0c-8023-afa6c8d8ed05",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dd2c0632-1ba8-42e5-9a76-389b84059a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855b65ca-23d0-402e-bd9e-a181acb1794f",
        "cursor": {
          "ref": "f5539ed4-a7df-435f-93fd-98ce85c219ec",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bca91230-070a-4840-b6fa-8aa0d61ad0c2"
        },
        "item": {
          "id": "855b65ca-23d0-402e-bd9e-a181acb1794f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6aece1d0-2ab2-4fcb-b888-0e5e51db367a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0890f70c-8256-49a8-8a54-a151e18fc748",
        "cursor": {
          "ref": "e8edc9ca-2f61-45ca-b08a-c6bff2448290",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e4decd8a-7fa7-4700-b6fc-aaecb0adf347"
        },
        "item": {
          "id": "0890f70c-8256-49a8-8a54-a151e18fc748",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cdcf1724-bf68-401c-9912-c74cbc0ab7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdadb2c9-9d15-4254-8329-7dc53d82b6e4",
        "cursor": {
          "ref": "0bbc3450-4716-4b30-aeb2-ef682514d506",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d6a70736-6514-4380-a034-68e35d61dd34"
        },
        "item": {
          "id": "fdadb2c9-9d15-4254-8329-7dc53d82b6e4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "18d78da8-7f6c-4346-91ff-31e788cb8c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f3bf6a-512a-4fe9-814b-436be8ff760e",
        "cursor": {
          "ref": "160f6b66-66b6-4ce3-859d-b21ef35ad404",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bc546960-3abc-4ccc-a61b-046af5452927"
        },
        "item": {
          "id": "c7f3bf6a-512a-4fe9-814b-436be8ff760e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7d108686-6fc8-466f-9e13-5db748d3e15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4251091-537c-41ad-8a3f-a502ce3e6c25",
        "cursor": {
          "ref": "020214f8-5c83-465f-869d-23c3eb9569db",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1a0047f6-b86b-46fb-a082-e1b89ff1148a"
        },
        "item": {
          "id": "b4251091-537c-41ad-8a3f-a502ce3e6c25",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e3598727-ec6a-4b7d-ae77-ba6ff126caa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e051e4c-1605-4292-998a-fd1e9de1eafa",
        "cursor": {
          "ref": "4a80dec0-a5ef-4562-9401-0465352c9113",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f202aef-8fe7-488f-aaa6-b0f746f38c4e"
        },
        "item": {
          "id": "0e051e4c-1605-4292-998a-fd1e9de1eafa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "88d001bb-3d62-41b0-9dde-f10e334663bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def95ff7-41cf-4fb7-ad36-746be770833e",
        "cursor": {
          "ref": "5095e00e-237c-4632-8aeb-6c717df8f02e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e59d4c00-a79c-40cc-9d63-32c804a1b998"
        },
        "item": {
          "id": "def95ff7-41cf-4fb7-ad36-746be770833e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ba17d2b5-52f2-4f56-8ab7-3db6d78db079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7578e204-a633-4996-b735-a8813ea11b27",
        "cursor": {
          "ref": "e365e51b-77a2-4cc4-a22f-6c8abc701364",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "38d17cd6-9551-4089-a6b2-4fad713400e2"
        },
        "item": {
          "id": "7578e204-a633-4996-b735-a8813ea11b27",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2d2d313b-dbb5-412c-abe8-515a9733b4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84b83ef-5f61-4813-943d-7da981325374",
        "cursor": {
          "ref": "c34076bf-fb45-41af-bfdf-421d1d20ee99",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d876497c-a082-4aaa-8ebb-02908b6b243e"
        },
        "item": {
          "id": "d84b83ef-5f61-4813-943d-7da981325374",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7b870478-db02-4c13-b9c0-0ea99d811ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479aae95-e653-4cf1-9c06-8a8a0bd8545e",
        "cursor": {
          "ref": "9908e931-e852-4fdc-b009-c163940350ac",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "50aa5930-6172-4907-a5c1-3db8941b22ef"
        },
        "item": {
          "id": "479aae95-e653-4cf1-9c06-8a8a0bd8545e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0c133b6f-35dc-47ab-8e9d-15084b55a6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fc162e-8cc1-485f-a9ce-8d01cc66c38f",
        "cursor": {
          "ref": "1bf843e7-5c09-4685-91c5-a44dc0685575",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1b0d65cf-1db1-4018-ad08-87a4e0ab61ac"
        },
        "item": {
          "id": "d6fc162e-8cc1-485f-a9ce-8d01cc66c38f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a350c85b-69b0-42ff-bc0f-5c16f51c7e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79efee40-8dec-48bc-88c8-da13bfd08950",
        "cursor": {
          "ref": "cb4654df-4f42-4d91-afe6-e4f35d269d64",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fd1fec51-5387-4c63-9b1e-ed834071ab57"
        },
        "item": {
          "id": "79efee40-8dec-48bc-88c8-da13bfd08950",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "15400894-ae5b-4402-8a99-0d75b7aac73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbdc686-7131-4c3f-a9f6-be71b7730df1",
        "cursor": {
          "ref": "0a5bc3dd-9158-4356-b80e-00f78208c250",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ad5ac9dd-7bb5-4659-920b-971c45cd1c2c"
        },
        "item": {
          "id": "5fbdc686-7131-4c3f-a9f6-be71b7730df1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9105c8df-ec15-4a28-bcaa-c0f257087e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae12df9-9b5f-40b1-af1e-4c261ffb0553",
        "cursor": {
          "ref": "b7e6b0b9-a593-4101-9b8e-e7a4dc89b379",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c31d2c48-4a58-4aac-9d45-203f5cdd124b"
        },
        "item": {
          "id": "cae12df9-9b5f-40b1-af1e-4c261ffb0553",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f9645577-68e4-4787-b83d-b945e7f3066a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9033650d-9f1a-43dd-8798-094622730f5a",
        "cursor": {
          "ref": "8ba91192-cd7b-45a9-adaa-d4d97ea42ab5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "aa652e31-d37b-4a33-a452-8cd99d315384"
        },
        "item": {
          "id": "9033650d-9f1a-43dd-8798-094622730f5a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "12bdac45-a7d2-4510-aa7d-2bbe15b5b19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1798b0bb-d806-4988-bc4e-efe66729fab3",
        "cursor": {
          "ref": "e35741e8-5028-4d8b-990a-edfb89897c1a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bc224716-b23c-41c4-bbde-b5617ec5c80c"
        },
        "item": {
          "id": "1798b0bb-d806-4988-bc4e-efe66729fab3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "97c63d21-8adf-4c3b-9743-ab864bde8639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6444aa59-6c3f-495f-b79e-60ea799b1a47",
        "cursor": {
          "ref": "4c8bf25e-fead-4b02-b5a3-33bd718853e3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a66be65e-6eba-4d08-b6cb-a82b2cc6e222"
        },
        "item": {
          "id": "6444aa59-6c3f-495f-b79e-60ea799b1a47",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dd4915bb-5824-4816-a666-e565d16b6189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe05dd6-9786-411e-b073-678c64802cd8",
        "cursor": {
          "ref": "c1ad72d2-1d2e-454f-b7f5-0db97252598a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6d7f9df9-100c-4463-abbd-3178c2793e3b"
        },
        "item": {
          "id": "2fe05dd6-9786-411e-b073-678c64802cd8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9cbf974d-ae09-4e69-9fb9-ce95d57a569e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023dec17-8ad9-476c-afa7-39de9d04c746",
        "cursor": {
          "ref": "236fc4fc-8ef1-4ebe-a5bd-5c0d9369f1ab",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "74fc3957-5fad-4a70-802a-4af22b335793"
        },
        "item": {
          "id": "023dec17-8ad9-476c-afa7-39de9d04c746",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0a162ec6-effd-4671-9525-f41151212636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3941aae5-9266-450f-8a1b-3ef4ff4a93e4",
        "cursor": {
          "ref": "8cddaa54-a783-42a2-a385-761de2cc1281",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "85326f13-4283-41c1-b180-fdfe0e4d9e52"
        },
        "item": {
          "id": "3941aae5-9266-450f-8a1b-3ef4ff4a93e4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d17fc74d-4643-4167-9711-1bea6385b9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315b5461-7836-4662-a8da-fc3bc70638b6",
        "cursor": {
          "ref": "2c41b279-1d39-4caa-8354-b297bb52066f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d437bcfc-84d4-4e46-9273-14c185afa114"
        },
        "item": {
          "id": "315b5461-7836-4662-a8da-fc3bc70638b6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4bd11da0-fcb5-4f0a-9d42-ee7a3add0c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1584d7b5-cafe-471b-af4b-a1fa8e0eab28",
        "cursor": {
          "ref": "20679be1-3aba-427d-997b-a477eaf67746",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d12b7c96-5f98-44db-979e-5d042651a08e"
        },
        "item": {
          "id": "1584d7b5-cafe-471b-af4b-a1fa8e0eab28",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "121634ba-eb98-4c8c-9ea9-405f7ebb49d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f360f992-fcd0-4bbe-9b3e-dbd522df0868",
        "cursor": {
          "ref": "213b4b63-4ab6-49cb-9019-880e88505450",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1641f92b-ceee-43d4-9674-c656aac0410a"
        },
        "item": {
          "id": "f360f992-fcd0-4bbe-9b3e-dbd522df0868",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "26c1cada-cda0-4527-bbd0-658da2b5dfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae4ced8-3d14-49ce-9a81-20507064eb39",
        "cursor": {
          "ref": "6f267bcd-59c4-40a6-a5d6-f1bdbf8389a1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e2023370-2d47-4401-8b68-fe0b3fa38ff2"
        },
        "item": {
          "id": "bae4ced8-3d14-49ce-9a81-20507064eb39",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9dce5e3e-3a5b-4434-b52d-39c60210c898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdc348b-75bd-4b72-b5e4-c3918ca6494b",
        "cursor": {
          "ref": "bd60c08a-8275-42bc-8b30-7899a9100c7d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "67c695d6-7b82-4bbd-b548-a3052164dd9f"
        },
        "item": {
          "id": "dfdc348b-75bd-4b72-b5e4-c3918ca6494b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "776cdd05-8e9f-48f6-b44f-4f1273078e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612309d3-8e76-4cbb-b353-46a804228054",
        "cursor": {
          "ref": "1b380059-d702-4bc2-9ba7-28db7d929c3b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "67e6af4a-8fb3-4129-946b-880d610298dd"
        },
        "item": {
          "id": "612309d3-8e76-4cbb-b353-46a804228054",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2ca24a9a-70e6-48a6-8864-3c96db9646b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c2e5f3-2af2-42f7-9be0-6c13e147268f",
        "cursor": {
          "ref": "f970ae9b-3ebd-4437-bcb4-39ca10832ea4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dda0dfab-34ae-40d7-8bd2-664e8209db8c"
        },
        "item": {
          "id": "e3c2e5f3-2af2-42f7-9be0-6c13e147268f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0e06abae-a734-4503-9c20-e9a5b310fb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28f0f06-5817-4a24-ac55-66aca044e8e2",
        "cursor": {
          "ref": "8a8161f2-940d-4bb4-a34e-e4eeb02e3add",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ff999126-1686-4629-af4a-794195dca60c"
        },
        "item": {
          "id": "e28f0f06-5817-4a24-ac55-66aca044e8e2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "43c7e0e1-21c3-4f2e-9325-499a8279b425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc9d1d3-baa4-4649-9bd8-b1b5afa39dd7",
        "cursor": {
          "ref": "f7d73e4a-f5e9-45b1-a1ca-0b49c4d4edc9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ce4cdcbc-6235-4fe2-8693-bab197488d1b"
        },
        "item": {
          "id": "edc9d1d3-baa4-4649-9bd8-b1b5afa39dd7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "28136c34-554d-46aa-9a43-1ec42d0c7743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb57f360-3da6-493d-8314-7adee7195b04",
        "cursor": {
          "ref": "808a3cc3-e3b8-4f6c-a73e-4c20975c8b77",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fdb35923-d598-44c5-a688-8be868653a15"
        },
        "item": {
          "id": "fb57f360-3da6-493d-8314-7adee7195b04",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6a3fd806-5003-4aa7-9e75-4083be2413d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c29855-4ea2-4ec5-a205-a4309bec323d",
        "cursor": {
          "ref": "191b2905-15c2-45ea-b3c2-c11762ee97a4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b77d1cbc-0f29-42e5-b5ed-2c19dc1717b5"
        },
        "item": {
          "id": "e5c29855-4ea2-4ec5-a205-a4309bec323d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "16f3a456-d87f-431e-94d9-16d0d4a0114f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5563000-1a9a-4f0b-97b3-c255b2b67c61",
        "cursor": {
          "ref": "6f71a2af-3464-4ad3-b505-119bcc928524",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e93b1876-a97d-4a8a-85f1-8df3cf201027"
        },
        "item": {
          "id": "b5563000-1a9a-4f0b-97b3-c255b2b67c61",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "232e504a-c849-403e-a042-b4838f479eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96e67fc-471b-4d59-8071-b7ade405fb45",
        "cursor": {
          "ref": "0b83fa9b-c423-4301-88de-1d91c06fedc8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "de243404-16d1-42b0-be72-573b982151a9"
        },
        "item": {
          "id": "e96e67fc-471b-4d59-8071-b7ade405fb45",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "572fe06e-20cd-4dc1-aa16-14620b4e9ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef08220-da96-4a70-88a5-d66491b11012",
        "cursor": {
          "ref": "64b38f5d-93ab-447a-8f99-3387060d50a0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4fdadc89-a90c-4fdd-a200-14268f9dbe08"
        },
        "item": {
          "id": "9ef08220-da96-4a70-88a5-d66491b11012",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "973cb8eb-a722-44e7-92c7-285c0a2ad58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7b3ee5-61eb-42dc-b59f-4751d6655354",
        "cursor": {
          "ref": "c35e5a53-1e36-4dd9-bd2b-fed09a8bab1b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e1ae4b76-e8bd-45bf-94f5-cc1d4d1cb96c"
        },
        "item": {
          "id": "8e7b3ee5-61eb-42dc-b59f-4751d6655354",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3479eacd-b307-42e0-877b-a2475ff52057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b2cdba-35b4-4910-8a95-6f74851b1f79",
        "cursor": {
          "ref": "8d92f5fd-b7cd-4794-955c-2fbd448a7cf4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e8d4c9d6-85e1-4b5b-a7b5-ff81954f408f"
        },
        "item": {
          "id": "45b2cdba-35b4-4910-8a95-6f74851b1f79",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4479a208-0ad6-4edc-be42-7172a356aa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21a40b7-b21c-4e85-8017-af12d5b7db36",
        "cursor": {
          "ref": "e12aae6a-4f61-492b-8ba1-a02867615b31",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6a19023b-6f80-4374-9ade-b5bf487976ff"
        },
        "item": {
          "id": "d21a40b7-b21c-4e85-8017-af12d5b7db36",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3752e0f0-6301-4ec8-bbd0-fbf5092a4961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5114ff8d-c50b-4879-a926-cdc91ea65c0b",
        "cursor": {
          "ref": "2baffcb7-6596-49e3-aece-2685cb624dce",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b08762b3-0850-40b6-b9b7-fe3bf1151442"
        },
        "item": {
          "id": "5114ff8d-c50b-4879-a926-cdc91ea65c0b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a9a92376-44b8-4c1f-bce0-c2bf58da2957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea169a38-fc8c-4596-818e-9e93d8582348",
        "cursor": {
          "ref": "1c4e4dcb-b526-46a7-8994-c2f1a5b0e089",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0d0c3f2c-ad55-41de-89a7-24841b020152"
        },
        "item": {
          "id": "ea169a38-fc8c-4596-818e-9e93d8582348",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "076144e8-df2a-4e1c-90eb-43d6429dea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab6bf56-ee25-4b68-ae7a-24b90fe77dd1",
        "cursor": {
          "ref": "152919fb-9c64-40ff-bd3f-bf72070989f1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f1b36a66-f5cb-4ba9-afe4-872b39a7ffac"
        },
        "item": {
          "id": "2ab6bf56-ee25-4b68-ae7a-24b90fe77dd1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e013cfd3-5960-4b2e-97c0-c7b45df0f856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72967a46-b175-445a-9ed1-4adb0969b1fb",
        "cursor": {
          "ref": "08809e15-d400-49f1-afd6-cc0f17312ca5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a64aea00-0b74-4d2d-a219-5089177c6b29"
        },
        "item": {
          "id": "72967a46-b175-445a-9ed1-4adb0969b1fb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9cc18910-dbe7-4482-aca2-6059897705e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34a51c6-b1aa-47c5-94de-02eb20029df5",
        "cursor": {
          "ref": "e12d704d-7d86-4a3d-a88b-e6c8ac6af81f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b507a3d2-3a09-4960-8535-0d8d324023b7"
        },
        "item": {
          "id": "f34a51c6-b1aa-47c5-94de-02eb20029df5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6673d868-8140-466d-a9be-15f37f56affa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62489d9-1386-41f3-8218-0dd3183f38a2",
        "cursor": {
          "ref": "5fcd303c-b1b9-42d3-9531-429809ebdc2e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5e6c515d-1295-45ce-9a0b-9dd4b0d1025d"
        },
        "item": {
          "id": "a62489d9-1386-41f3-8218-0dd3183f38a2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ef4323b5-a0c8-4a82-ac2a-395094b94030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3ad6ec-564f-4d0d-b60e-5e4ac14bab2a",
        "cursor": {
          "ref": "e6e61081-ec27-4135-8192-496d8e1d6b98",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "71d13b2b-f170-4da0-93a6-2f4a61f7a8a0"
        },
        "item": {
          "id": "aa3ad6ec-564f-4d0d-b60e-5e4ac14bab2a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c711ba8b-b289-40eb-9c2d-4938694f259b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d54d372-a01f-46e3-8dbb-2f0f2fa86d2c",
        "cursor": {
          "ref": "7ca0fabd-862f-4edc-ab1a-779ccee5fa66",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a058f4ef-6c76-495b-a68b-74c35d9b5144"
        },
        "item": {
          "id": "7d54d372-a01f-46e3-8dbb-2f0f2fa86d2c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "850cbbc8-8117-468d-a8fb-343a5bd49917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b587d0fa-e918-4f6c-9fc8-75fe2f0ea46d",
        "cursor": {
          "ref": "90d1dfe6-cad3-4f78-a428-69aaefda3976",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "71ada044-aa90-4b32-a830-688b7b7607b0"
        },
        "item": {
          "id": "b587d0fa-e918-4f6c-9fc8-75fe2f0ea46d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1958c738-5447-4f77-8d07-03310f72d7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5098efce-d680-4995-805b-9614d1c74671",
        "cursor": {
          "ref": "70b0634c-8bac-472c-8464-dff8fecd97ee",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "52bd8201-37fc-4b98-bb28-d86baa95dcee"
        },
        "item": {
          "id": "5098efce-d680-4995-805b-9614d1c74671",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "18fba08a-75ad-4db7-9671-ff7d7ffb7cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403d564f-22f0-4649-91ec-ed4d194d4756",
        "cursor": {
          "ref": "fca69aa0-9c67-4e13-b4d1-703357f6985d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ea04a0cd-71dd-4161-a033-9d0c258edae5"
        },
        "item": {
          "id": "403d564f-22f0-4649-91ec-ed4d194d4756",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c6331fdf-fa3c-44c0-b101-78365528de61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae799ade-98b8-4bba-9853-60e44e8cbafb",
        "cursor": {
          "ref": "1e0b7b1f-8ae8-476d-a746-56da012a06e5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9f81723e-3861-49dc-9795-05dab015daf4"
        },
        "item": {
          "id": "ae799ade-98b8-4bba-9853-60e44e8cbafb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5a3c9f16-c1f1-4aa9-8a90-2997da7dd9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ec4091-b6fa-4ed8-8745-6b035c13feeb",
        "cursor": {
          "ref": "60477908-e49a-41b0-a23b-03fd7fe71d44",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2704c9c4-3861-4cae-bd8f-21e4c4676e4d"
        },
        "item": {
          "id": "99ec4091-b6fa-4ed8-8745-6b035c13feeb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c82cfb6e-d268-44fa-bda8-9544bb6b553c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff39973-2f3d-4dab-848f-1e7a37e5f2d3",
        "cursor": {
          "ref": "9d43e03f-71d0-448c-bd11-c37397127bec",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5341355d-a319-4914-9bfd-90f1e7e78c7e"
        },
        "item": {
          "id": "8ff39973-2f3d-4dab-848f-1e7a37e5f2d3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "780346f1-b638-4318-b2f0-f3244d79af0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f750885c-6e6f-493f-b3dd-21ab33a54919",
        "cursor": {
          "ref": "f37559a8-bc03-4726-a609-48b97344cad9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0a17c539-9795-4f2c-bd52-d63b0a3c1fed"
        },
        "item": {
          "id": "f750885c-6e6f-493f-b3dd-21ab33a54919",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2d821a20-294e-412a-a3d9-a916ae212ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ab0080-7b83-401b-8445-a615a589c031",
        "cursor": {
          "ref": "488f5a0a-8532-4df2-8ac1-bb5fe2b3042f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6aae48f3-d4b2-432a-a3d8-4844e7916c1d"
        },
        "item": {
          "id": "36ab0080-7b83-401b-8445-a615a589c031",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9d51d58f-1217-43e5-be0d-d763f30e6107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e87dda-c6d2-4393-9890-e1949b96fe6f",
        "cursor": {
          "ref": "e4672899-bdca-4346-9efb-bf059dbf0a13",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a801c13e-230d-4c46-8cba-bf9c0329f81e"
        },
        "item": {
          "id": "31e87dda-c6d2-4393-9890-e1949b96fe6f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "44aaa68c-076b-4bd1-b68d-2571d3611857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5202410-0893-492f-8ec2-9cc98108d41d",
        "cursor": {
          "ref": "f5fe11a1-db67-4587-8095-c8b5f698d553",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f55d9028-6133-4190-a4e7-d00ffb9c04db"
        },
        "item": {
          "id": "b5202410-0893-492f-8ec2-9cc98108d41d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "960e6b88-d94e-4f3c-988e-a95ffd035e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49290b2-0ae7-474b-814b-a0443f92c305",
        "cursor": {
          "ref": "44a4c399-29e8-4efe-8428-d72f4eee0218",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bb75ac2d-c692-4064-9a74-ffa743a2d3aa"
        },
        "item": {
          "id": "c49290b2-0ae7-474b-814b-a0443f92c305",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "64ad0c0d-9819-421b-9f7f-788d49b67877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad80563e-661f-42bb-89bf-9cc01ea52b99",
        "cursor": {
          "ref": "504e6c37-cfbb-4206-b7cf-be625e70bf27",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fa47c445-f90e-4bd3-9aaa-b8718c1d8c57"
        },
        "item": {
          "id": "ad80563e-661f-42bb-89bf-9cc01ea52b99",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "373d23ec-3ae3-44b3-b7dc-3806748626c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba54b488-c34b-4b3c-9596-ef7f52569dda",
        "cursor": {
          "ref": "4cf0c212-c7b1-4169-a57d-56bf8ed89c1d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "da93437c-37de-4a26-b0e6-f65c38951c0d"
        },
        "item": {
          "id": "ba54b488-c34b-4b3c-9596-ef7f52569dda",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "26007540-9a03-4b98-bc12-76e3e9069da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cc5dfa-c79a-4866-a162-0e2207016b49",
        "cursor": {
          "ref": "7d055b89-3b98-4458-a984-4f741b8646a7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dddf89f1-8ad0-4564-b73f-711bbffd24ed"
        },
        "item": {
          "id": "10cc5dfa-c79a-4866-a162-0e2207016b49",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cddf4f57-9521-4cf9-8b7a-8f20b20f872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76c5f6e-a827-443f-9bb5-73a04af82490",
        "cursor": {
          "ref": "355571ee-e85a-4ec5-8bf8-0d49bf093eff",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0755edf4-c2bf-486d-b3d9-7f8f208057fc"
        },
        "item": {
          "id": "a76c5f6e-a827-443f-9bb5-73a04af82490",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "457c7833-4d64-4339-8014-07127ab11651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8171833c-d714-4c42-8627-d61c518585e0",
        "cursor": {
          "ref": "0990a79b-5528-4305-b4d9-c18832d4f40e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "da23fc8f-2f55-4268-88e5-f804659f758b"
        },
        "item": {
          "id": "8171833c-d714-4c42-8627-d61c518585e0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "38b766c9-66e8-477d-9c11-eab9284f2956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c73b78-0622-4f03-b708-73328b6af3b8",
        "cursor": {
          "ref": "67bdb54f-42f1-4e20-b835-87e8d9fd6781",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f4a586b6-cf5d-4adc-aacd-905e4dc9f4ce"
        },
        "item": {
          "id": "c0c73b78-0622-4f03-b708-73328b6af3b8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "003f8b8f-588a-4f9f-a594-8d7f0b82d2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "710642e4-ae53-4705-a3aa-2544fed6efc0",
        "cursor": {
          "ref": "962dde59-128b-46ff-b430-cee682c7f934",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4db3881f-f4fa-4f69-bc92-0fb0df4b9cf3"
        },
        "item": {
          "id": "710642e4-ae53-4705-a3aa-2544fed6efc0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dd2f571e-3aec-479c-834e-e2dd05376569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "aa1bb042-3b4a-4f7c-a450-651bf2ec7106",
        "cursor": {
          "ref": "794cb087-156e-4662-a6bc-0a7a2be44284",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "329b46c4-ca92-4410-8d23-f5698f8475e5"
        },
        "item": {
          "id": "aa1bb042-3b4a-4f7c-a450-651bf2ec7106",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "517bab27-fd24-467f-a891-42fa30b1e57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "f84d94ce-888f-496a-a2cf-6a73167fa47c",
        "cursor": {
          "ref": "d8caff6f-0cd7-4fcd-909d-c3f3a91a9d55",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "94b8ab81-0c71-4827-bdf0-138d78494d78"
        },
        "item": {
          "id": "f84d94ce-888f-496a-a2cf-6a73167fa47c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3cb08abf-0156-4087-8852-a0498dc284f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84d94ce-888f-496a-a2cf-6a73167fa47c",
        "cursor": {
          "ref": "d8caff6f-0cd7-4fcd-909d-c3f3a91a9d55",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "94b8ab81-0c71-4827-bdf0-138d78494d78"
        },
        "item": {
          "id": "f84d94ce-888f-496a-a2cf-6a73167fa47c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3cb08abf-0156-4087-8852-a0498dc284f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b34199-0df5-4c30-8fb4-eb9557c2ce42",
        "cursor": {
          "ref": "5e3b012f-123c-4735-8ae1-e92490315df0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e56fabcc-c1ba-4cae-9411-64fdcbc5379e"
        },
        "item": {
          "id": "b4b34199-0df5-4c30-8fb4-eb9557c2ce42",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f40eb3f3-0006-4a60-8712-56b912bc0da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5068f5-2075-4d68-8f29-3613f0d7cee7",
        "cursor": {
          "ref": "05d8b1af-5d33-42e7-8806-109ca80778bd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b46e7904-2812-444a-a3f6-2524eb346d84"
        },
        "item": {
          "id": "6f5068f5-2075-4d68-8f29-3613f0d7cee7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cbbf9087-92ce-44ab-9592-d9169183f92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}