{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8805d912-9318-4797-a996-9a94f155f95f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "993f8dd4-6559-4a42-b9b5-1e0d22803db0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ee3db59-bb90-4c03-9b0a-341a54c175c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "07344c4e-a966-45e5-a926-d8f65b1a8e04"
                }
              }
            ]
          },
          {
            "id": "b0c753ee-1834-4b2e-86d5-24f861884aa5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8f9c12d-a520-427c-a327-a4653ba0158a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f066c1c0-bf49-4a04-b763-2267e3ddc55b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b8a731e5-e7c2-472f-97c1-4820dfd4f323",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "24241dd7-6960-4bc7-8356-6ab6f359785e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e189098-bfa5-48d2-b15b-30ce848f5e0e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa86d3ad-da94-4742-8d52-05aefb503ac9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c20164e0-56ed-4de5-a3de-a04bf71313bb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a2f6e64-ca17-4bdc-92bc-fbcbe282cba5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87fe0750-210b-4d57-9156-31ef10aa8e22"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3cf40a38-badd-40b1-b40f-cfc414b1aa31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3cdd4de-e2be-4e7f-b4be-0a0c008976cb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70533786-d45b-4a3e-a6ad-5bb4a5fe77a4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "34d121ed-ecf6-4b5f-a6da-5a41a45d109d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9bdc51d-d0c3-4336-90a9-276ab9b8b7e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10bc9120-6ec9-4ba9-85a8-3466d468aa7c"
            }
          }
        ]
      },
      {
        "id": "bdc225ae-3812-4fd0-a9d7-ece4fdae9918",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "274c8187-ffce-4f3a-ab4e-b82ef6bfd122",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3da97cd9-1d7c-4856-96f0-db9aa27d70e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd24faa4-fa0b-428a-bfc6-e34ec24879fe",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658b6164-1cb9-4426-88d2-25ff3291c7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7384f8b2-3eb8-4bbe-9a65-027278fd7891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e75b77-6a6c-43ca-bf17-9cedd961a334",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c912546d-5909-48f7-8ea6-a242b0c52c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7355809-17af-4599-9d6b-755c68275055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ec2042-087f-44b8-b693-3578165230dc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974c0496-281f-44c1-a6be-910b8365948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abc04298-25ea-4c4c-851a-e2d0d1f2f703"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "910215e9-e6d6-4b3a-9280-6183405f94f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86c8ebe4-6b45-4edb-81d0-9b670e796eb0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf81d53-5ac8-4fc8-a8fc-434570238d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03b33c53-8b09-491e-81a1-80f15657cc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd68809d-24f1-459a-9151-9bdabe58e17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4a6f04-cb85-417c-98e1-03518ac56e0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c5a5f3a1-fd4d-4817-a7ec-71d1c513d7fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d563fa9d-33fd-4184-a73e-8407a16f0c47",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28b294de-fa65-433f-9b4f-539f1375861c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5f30914f-9fc4-4ad8-ae38-13501dea8282"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6019809-10c4-4f00-8a3b-67dcdb640555",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "39f8cb87-e80d-4b5e-96aa-8a289b306097"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dec05fa9-05ed-481f-bd85-d4df98a00401",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "096a8307-6fc1-41a3-b7de-f1bc083beca4"
            }
          }
        ]
      },
      {
        "id": "37b640fc-2f73-47f5-893c-7435878086ec",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a202a217-b6a6-428f-b0f5-758efe0aec58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0628db27-c46f-4bf5-999a-120d9b0bc22c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "02a1f6e3-5710-4cbc-ac51-5f9f1a1889bd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4543a271-ced9-48c1-98a8-338b5e1914aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f296ca7-7307-4afd-9b3c-d923c20e316a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d10d672-23ee-46e8-a509-3f3162c63fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b52ea7f7-13f6-47a6-accf-3f78cae5c99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0bc4a4-e8d8-43d4-91f9-20184a2ccfe8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b145f91-e722-4cfe-b7f9-8e4eb96259d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8a705a-83e5-4101-abff-d565c92559be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f0b1c1-4e6e-4edd-bdf5-c7306372213f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e812aff-4c3c-47d3-ae07-16d806df2714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50ced9b-0e17-4959-90bb-ff71f2e33c1a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b23e7c-87ab-456a-b620-ac86db597c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c329849c-3de9-4484-9f94-ac8ea50d749d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fbb273-a7f4-453d-bb8e-d85821bd35ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e073104e-4d50-4999-84cb-21b78f47336e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43440a46-b336-4313-b01e-e4fa2cd0b7aa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aa572d-c7c6-4f97-995f-2dbfa19418bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b42a103-fea5-4565-ab11-2bffb6b45d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa995e94-34a8-4a6d-8b82-018d1502505d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b033554-456f-43ea-ab8d-7f9c915061a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccd2563-abcd-4b5d-a2c7-bd404004c88a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b3793d-6892-432f-9ea1-503776969dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0446e695-c0c6-4e8a-9583-0e3326bc539f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb1f621-8e5a-4745-9b19-86ddedfd4755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a77cfa2-7af2-4925-ab2d-5aa308aa5145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73470531-f0e1-4a13-b41f-4ee8bdf268cc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e054eb1-95b9-4c54-95f4-2b43cdc008bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35a2e78-26dd-4982-8f1e-e9eb73a50c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519b571a-bab3-4dfc-afba-621d677b4d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c827936c-c098-4ca7-8479-645e799985ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439e3fde-922d-4f82-b200-77117419560d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a9b2c6-ee6f-462a-bee9-a02802eafb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cf90f2-11d5-48d8-96c1-822599ee2d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7c6a29-7f78-4ceb-9491-e3da4dc133d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "191d8b0e-8aaa-42d0-a327-5fde2aafb565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c75e519-6a7c-4c70-82fe-374f2bc6a8d3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5100fb8-bc60-4573-9a48-2ab0ca4561cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3765c0e2-2aaa-4e2f-83e4-7cfda1c853c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38eb30-bfdf-4d49-b684-fab9feef69c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eba810fb-b212-44cb-8ddc-2a9481621531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e83688-ae99-40d0-a2f7-972ffa467d96",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddcd014-47c2-4ef5-90df-4e61d44c34d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a53839-c283-410a-9c6b-f8dd0da7b834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4194ad1-a9f5-4199-98db-d04b84568dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2d5182f-e4e3-4dde-9d18-1ea56a072989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b42902-f6cc-44fb-b1c1-6b3473370ff3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec542515-9b5e-4d15-ad25-89c00d85d8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea005028-71b6-4dd2-91cd-adbb856be9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeaa901-ec88-4b38-adfd-6879a94d36ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28a3ace6-b724-46ec-a407-5e0f37cd7f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657b4e13-ea66-41b2-83d2-c8c1803600e1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ebcda6-b988-47d7-948b-a547e78c4873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e516ea62-9a1f-4701-9a69-61045497d4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7c7ae7-5eb8-4ee0-8151-fb38bd9dce69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e5e1b24-3903-4ef0-a509-b3d9d01f661b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a23910-dd76-47aa-8e26-aff1bf58a411",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d8f166-7eee-466e-8c4b-23e2b0ed4b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57325e5-c8bb-422d-8ff9-4826a8c83833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe26192-6559-4e56-bf4a-bd700b1fd757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60fb7347-0142-4a2e-a17f-ba4af917f031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2f5957-e3b8-4927-aaa2-10c618496967",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccd478f-dd3a-4c65-98a6-ed182a0b4ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6283b9-5c4a-4693-a04a-46ceab7449be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc521a0-c6e4-46f1-ab5e-41551e18d6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31489029-620e-469a-a1c7-ec1f46657074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f501a8e1-323c-41bd-adb4-0cf2c9e064fa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c9e3d0-3dc6-433a-b63d-8c3e94926ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eebca96-4309-47d4-9073-8e2c123dd4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa0e1cc-fb5d-4363-9878-7a32538733fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5564432b-bd45-4e9b-b902-7ccb96785531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b7d207-2bef-438a-82c8-c62e760a0fa8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d53798a-66ba-44f9-af9e-416117f86865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44a0cbc-3926-434b-877a-5296d49f4730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b36c31-e47d-4c25-a797-0d342bd3a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4280bb80-74ed-4c47-902a-07a656676f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79072daf-644f-4658-a52c-b9dfb822e47d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7ece48-12bc-4856-b7c2-7173a07a188a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b884ceab-0188-4313-a9c5-321c5713f807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0641dd-d857-4180-b910-6690fc98058f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d697602e-383d-473f-9596-b56e0f4037bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52339cd9-0480-4004-b32e-618ce7db02fd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d71d3e8-99d8-4dee-a8c2-cfd1dd51188f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0021bacd-fcf8-4835-8969-ba02dff3d544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a5925e-56da-487c-8681-f06f37c61e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4207b898-88b8-41c1-a0dd-90a0db495b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996afbc1-3d17-4de3-87a7-ef6575eced9f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6e1aab-ad01-4b54-b2e5-f552c53ac0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471211af-e059-4719-b930-b9f08fe7b2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40fd17e-e911-4aa1-8f8e-e0d4288447a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54183a12-87ba-4c51-9b6a-fa97b9b4d6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94c09df-6e66-4a78-8c0a-1feadb0f910f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f60937-31ea-45cc-be2f-d9edd9e94df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a284f7fb-6d81-44b2-8bf8-65d41e17e83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cc6459-b49b-42b5-aa32-079e7151698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0735164e-9662-426c-be5a-2c01827f4eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec8f6f6-35b5-4fba-a48a-88f7629cef16",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516edee6-2249-48e3-86f8-6a42627e0565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94a6a63-e277-4da2-a11f-0375d99686e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4355511f-84a1-415a-b3f5-005cf7f32ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e56ebbd-949a-43c3-9445-a3f41c2cf1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c855f48b-85e5-49c6-b4f1-0d2faca26e62",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea2ee59-3337-4113-86a3-2394ded8f9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60f5f88-e9b5-483d-bbec-4b747075c5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7158258-58d2-4fda-bbb2-c0296365234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7c75b0-9e97-4b41-9718-11be16ebb9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba10b0e6-80e5-4ef8-ab34-f9e76e53e010",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7c6d5c-d838-4dc1-9930-82f2782146e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76db99ff-d705-4d52-ae9b-3cc6624c12f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7b7554-bd77-43cb-9ef4-685eeaec2997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42d513ac-f041-4346-8d78-56ca5d0d506b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b931b29c-a285-43cc-88f4-2576d666d7dc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48112deb-15bd-4623-b26a-c0687a05ab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9192fd7e-d32f-4e20-b31b-1b263b4c23a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593e85ee-a408-4256-832f-8a3ad72aaed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dde9ab3e-d226-4763-b091-acdfa1fb81e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bd1d83-88ea-4deb-8f3b-5c5b6c33910d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f617b0a-a4df-4596-8106-fdbd1db62397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379afad1-03b4-4d3f-a7b1-22508452073d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021cb994-b20b-484e-8c72-1cd7be1109e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "338cd811-c3c0-470d-9426-ac12aeea31c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462eff16-9a11-4d47-acbd-6ad68d5e97ee",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bf4ebe-7488-4830-b743-02e016676527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f24bdcb-9a56-4ba1-868d-4d64dc6cdeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f7e6ad-5a63-48da-9d54-39234082ea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7820c342-492e-4d9f-b2df-10b903caecde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519aef7e-8cd4-457c-8bc1-4190a675f815",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ec8734-400f-439f-b7c1-8b83bc5de032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49c7a92-2da9-40bd-ba17-a9d9c5b6e448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506826ff-c8ce-4d95-bbb1-488bc007d67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c200aed-e98e-443f-872f-631455684986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c459e8-64d7-43e2-8785-da28cb9c0fc0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ee3232-2d71-4928-abde-5c62dcaaefb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9272333-870a-4f28-b5e2-9660968394ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35dc3c2-d289-46bf-ac02-3bfa7a284632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd575e2-19dd-47b9-aeeb-4c8d3843610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dc0eb8-b39b-494c-84e5-7ea8ba1bd613",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc2ff30-f3cb-4a71-aeb5-ecb38bd4384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8cabf8-b316-4666-84fc-1f0147202a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459d8494-fa43-44cd-9794-6ad3b68821ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0900143f-2ced-43b5-b8d4-7a6a4d6a5c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf3bd1c-a861-41c5-b197-e7cd806058bf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d877edd-b812-45a8-81a2-4ff3e90830a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09186bec-9893-4acb-a71a-f4b7c1fa18ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c61cbe6-ac4a-462e-9945-d84d742fd759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa36f4cc-2df2-49a4-ac33-a1c9d497cc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd71924-1272-4ad0-924e-e35cabc6acc2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e619d4a-8e22-40ac-b1a7-b80c1c14e932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69cc2a6-5ed7-456b-9108-a832bbeb6767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b71732e-4fd5-4fce-b217-82deb83564b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "226d7bdb-05c5-484c-bdcc-5ca2575e1d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e7a664-acb8-476a-b7b5-9a3879ea965a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a9d0b5-d2c3-498c-aaab-d6f05adae98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a6dacf-6b1a-4aa1-9b8b-bad73fedb414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dfea7d-cd5e-469b-8b27-65b5bb5ee972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e05132-9e44-40d8-9272-ddfb536dadf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5db7a16-c966-477a-a455-9c2faa75f0c4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2035524b-2269-4106-af62-0ce0e00bd37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d5b507-c8de-4751-a11b-23ff1ac23358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028b6d49-094b-452e-b040-ccc390bc8578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35d27e25-7026-4f3a-b09f-a5443c6c67fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60f04ac-79ed-41dd-9563-3c68733724c2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e65edd8-7711-4133-a6d6-f8c64474bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b128338-f048-4a09-855e-0243e79448a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10ec680-63fd-4e55-b5f2-556367a09357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf19f505-e373-4ce0-b483-8e29bb4966b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793c9c30-e7cd-49ce-9d72-4761965acf3e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a618745-879c-4db2-a73a-86d6881a539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1021c6-0b06-41bf-8971-3258d94c7817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbabcb8-354a-4e60-9844-ae0ef35ac590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dcc822-7bed-4901-9210-5a90368eb701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3bc3c4-b040-4504-a4a5-21a38737b90e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fe239b-ce27-4b56-b9da-68032a2d7653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9bb61b-d555-4144-a45a-d16c7bde0a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ec7546-479c-49b8-aedb-47e1c4166141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8aba42-083c-4d99-be9b-64a837dcc8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463c86b2-4f95-4d53-8d09-6a0f1cdf6609",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315014b8-04d8-4ff2-a033-b73062d4b206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "627c7652-7472-46d7-8d9b-6bfe7fafef60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b16328-f365-4383-ba7f-f8ca1be43836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8207c3-c53d-410a-96ad-1a1e25afc5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d032d0-e210-4eb8-b7b3-5d24842332e0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf86930-73fd-4b07-8efd-7b6b5b057f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c827a50-39b5-496d-812c-840a6b8115b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9c5dde-e3ba-46da-9407-9bac32019a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edb22e6d-7ccf-4168-8a69-744ebcfcda43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34255efc-00ce-420b-bc78-658e8a465550",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2346db16-08eb-48c0-8641-57174759d5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9652ef-6370-4e6e-9f4c-96aaa170da7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5338de17-2927-42b4-8b60-767557dc614e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b46c6f8-16b5-4ced-be19-f8a00e5e41d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3a0511-c792-4995-8ac8-ddbe4268ef32",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f388dc7f-d66a-4316-a689-ff1e9571e501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c841c5-027e-499e-af6e-ce4e8a78090e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0485e86-2ee9-4cd3-819e-7d1fbec674de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcb15c4-c5d9-4485-8b94-889827c7f5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258f93b1-4499-458f-98d0-46af3adf7dca",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d14592c-5e02-4108-aebf-4ae710a67237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805e9ea8-1b13-47b4-8255-35a93fe54af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d017872-e078-41e9-be45-3e866aa7f977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca448912-f8f7-478d-b6a0-8cca408e2e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2585dd32-c8ec-47f3-a172-6bbd4f0d8495",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491093eb-8c0a-4a4b-af82-05ec69c845a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e585c132-e27e-4f26-8fdf-77829bffa974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a36ce73-6fb7-428d-9f81-35b4c599a56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af75e2b6-a00b-4979-a915-977410869728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50dba52-fc9d-42d6-ac74-b9aeb5862bb6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b706038a-7afc-47e8-b721-e9f7420073be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5530644-7e1d-4f8e-afe8-17d6ab1045e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dbab13-1647-41a4-87aa-b3e923af683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa5a908-1062-4f77-87fe-45a60e188dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3c6689-3d19-4eae-8cb2-444c22a929da",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91a3de6-8013-43d7-ab04-7aebd7907e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664f4134-083a-4c5e-b2d9-94a6cd058433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117ac3be-24b8-497b-b160-737e420a24a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "286c5bf1-f185-440b-b266-5d1207668844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad076a6-8021-4f3f-863a-2db0501eb39b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66d6617-7993-4e29-8929-b93a165ae71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed0685a-96ba-46f4-818a-e308bfd3f04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066e9cff-4b94-4451-a608-909243f73aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ed597e-d813-4e06-abf2-1bceddad0609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92407879-ee69-43b1-8fa0-36ddd67b1a42",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01afc1a-2cf1-4e9a-b33c-15361d76ac48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93899515-80aa-49f9-929f-3a33928074fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49567def-a2ca-4b63-8388-3fd82d6e5433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1761a574-85da-4700-aeea-ee6111be4d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660d0dc8-d3c6-412b-9551-9d1d2da11f93",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2bde58-959c-4106-b271-824874b453ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcda335-c03f-4814-a72d-40e0d45e0f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bf6782-cf0e-4a81-9fb4-4f7a896189aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd90e443-c87b-447a-ae3a-0b5ab9523879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840280a4-618e-4af8-8bbc-ecea834eec95",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b25acf-736a-466e-9bc6-b2888d4b0d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d93e926-2a3e-43ad-8bf7-ee22cadcf924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646d8823-2ae4-4a30-8490-1c76a867ed00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67f6a159-1c43-4e99-b2c6-db15abcf6fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cabbcb7-b59c-49a1-90d4-4f4ab4fae85a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d59d30f-a100-4b1d-b221-b65802aaf609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dd5724-7311-4709-9f54-10d3488d93d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1db637a-ef13-4930-82f3-93d3791e1a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3042d9-2454-4f38-8593-f10aab3fb93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e5063-cc45-490a-819a-41620eb10f6f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc18b98-d4c0-4dd7-aa38-fff126a7f66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97dc66a6-d406-44cc-b365-b1ce13454354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f9335e-9387-4779-b5af-ef679145b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a801260-2f1d-496a-b219-e36b95058365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1130d3e7-63d0-429b-bd3c-c46861158f88",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3a0a70-0f63-4afe-8c64-0847c47e9d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32936f8a-63f4-4c7c-b745-d688f51f0167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05be949-479e-446b-b956-6c0de3abeea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3961cc6-4e39-4a4e-a0fe-6064db14cad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a527ac99-3aa4-4f3d-9c50-6b963dbc1689",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419738fd-da33-4153-9c42-d6e77b19fb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c3eefb-3ccf-4230-bddf-d5ca36709965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734e566d-92ac-4278-a082-d559441260e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c24d03-8fd6-413f-9fb2-63454185c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0590cae3-d1e8-46ce-9cd5-e24b689ac9d0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aedae6-b700-4c51-9e77-b5f49e0f6d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e6465f-bf21-4a7a-8f58-14bf44d9ff07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af01d05a-2b81-4551-b064-cab251128d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6194231b-ac56-4ffa-918a-b71f210d65b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a23c1c-b2c4-4b21-a5eb-72594bb4b679",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dac0c33-c344-47be-b557-2e5936e4f4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8315d8-b6ef-4d87-8348-1d26355fe04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1ced05-75cb-43a4-96cc-c1842ff697c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7bc35f-4adb-4669-970b-edf3509ba368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442da8f7-60eb-4c65-9ce6-4c1312acc658",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7555053-a4ac-4d79-bc69-63cc0b55fd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f06ca5-1ca2-42c3-93fd-eb6f90239aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670dc80c-e695-4d54-8af3-dc9e5d7cdba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c05e1d0-0f7f-4c72-bc40-10212bf3dd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6763c9-4f4f-4e24-8d5d-0a6719ada558",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4997042a-7537-4737-901c-1ba8c59cbc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4bb860-4d3e-4957-abea-a93c3e1302a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafd6a9f-374d-4678-bd75-7d85536b14e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d388ec31-dd83-451a-aab6-4452105ff3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978a5331-e9c9-4494-99b9-26ee0fe3200f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b632d3-399a-47ca-a389-1a9079de3c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0dc824-6132-4e31-bdc6-efc177e80e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9660137f-6db1-4598-87b5-93bfabc4bf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcaf90e-3509-4153-9056-91c6f953ad1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fd55ce-e1ab-4f87-8ba4-30825a6ff222",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0737f5ee-17ad-492d-8497-1ec3080921eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e8d86e-d2d9-4476-b2a6-58cf62c57aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a18251-2351-4b04-8bd7-1002205d57a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed6db65-75cc-4b59-9ca8-0f753764b809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28df5481-3603-4342-8dfe-67a10f5399c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42d4391-c26f-4966-8bec-889c889137aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449b351e-b384-4cc3-8e4d-612fa8056c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c83e654-025d-47c3-bc5a-c151b59b7a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f42bbd-bc73-497e-8d16-33a44b55b784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b43c5b-10cf-4667-be14-42a3abaadb28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfee185-1a3e-4a8c-be6d-c73f7c5d793f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c30cde-3d71-4c45-bc12-a3bd109014fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db10e31c-958c-4f3f-8143-bdfaf2e52cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef5e871-83bd-4675-bcb9-93494ee2152c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280819e1-5f75-44e6-90ac-b10de41e0eb7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c11de15-8b0c-4996-a7a5-daa1b24d2c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0b5549-836c-4ce0-8caf-0b3338416565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2da19b2-fff6-4b39-bc14-bfd2b5a1c1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8615d01-ee2b-449b-a810-b3584c16e7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5a8450-7f84-4af3-b300-8cec741a3f90",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a3afa3-e50b-4b01-bde5-98d4353e7004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801f1ff9-e293-4e43-baf2-4dcab7422df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce59e6ca-8432-4dd2-a1f9-8d6d2f82d686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "135246f3-ebce-456b-9c52-c2918bcfefbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75f25bf-6a4e-4625-975e-e15c89d937bf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f0a9ad-0f9e-4d04-a824-ad904b8406e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc7be53-ac40-43f2-94c3-f724c3a1af15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf808ce-8c78-42c4-9c9b-e680c0b4c9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf923c0-9fbf-4595-980a-90512fc433fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f28c65-c8ea-4245-9a7d-a33aa00a8063",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90b4a53-3a90-4840-ad3d-d8a17c34b1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6549acb0-634f-4454-b38d-156932b26e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d819105-bbb6-42a0-b070-f66b8291b9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0ed797-5da3-4050-94ae-329d14bac14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1517d3f-092f-4dc4-a048-2b629d8c12bc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcadf862-a4ee-43b1-b74d-9d62bae07533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b5779e-0142-4ed2-a8fb-9aaec1b6e01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3650b9a-0561-4ae0-8535-76f7a512271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3287a80-a768-4845-acd0-259bf71542b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1c57e0-10aa-4eb3-9298-a2d9231d1b74",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c52739-bc38-4797-ad59-41388b8401fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f483ec-214a-46be-be46-b941f9aebabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36e8502-3b44-4508-ac59-cfa7a9c3a2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd625323-0e1b-4393-963a-fa71bad71fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e158fae0-f2f7-4f76-b154-f74075b1fde9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79c4ea2-5efc-4bd7-9247-24564802d802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32aa9ec2-f300-4eaa-b73e-e200faa60587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc83156-8a49-49db-9f38-6bdaed396320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "820dc81a-95bc-479a-8993-1240d6ae1f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d47d182-bd70-4626-b204-2cdd6df31ae8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb3197b-2919-402f-ad05-9617a7cc9ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffaaed5-3cc2-450c-a50a-732664e785e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d4cc4b-e10f-4c1f-8144-52d87fd8a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0972c417-ee4e-4daa-809e-272746226940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2039b4-5ef8-4911-9ec2-cbd1c463a43e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be113deb-fb61-4ff5-bd54-bda7fcc0e44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f49e8de-e78f-4d2d-8248-4fb884c6474d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0e7aa9-9b00-43b7-bc47-b69cda8d55e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd86fc1-67e3-4902-bb71-4c885634f025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f79d650-5a11-4ddd-819b-c0f047d40a40",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdc71dc-6684-4db0-be80-bafa49c3ef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac80bab-d48e-4bc6-8f30-cfc0a759d49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804f254b-1171-4c4f-8f95-557e6f206292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f575a30-18d9-4857-9779-7ef23c080287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdbc964-b8c9-4098-bc8a-ffd6451d7ecd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17794c84-c0f5-4d7f-ae04-9fb29d104b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19218ef7-542c-46c3-ba7e-9936d75df458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a793cb8-674c-43ec-b5b3-e4bb29b57c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b72e9f0-3a1e-4cf4-9cb7-a9265f483338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679c358f-bbb3-4c24-9014-24302238a647",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e9bde6-6c65-4c45-833d-e7d7121e4cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012f3f7b-7019-42d7-92c3-3277d950a4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19265b36-f8ad-4c7d-9b3f-decd40f13151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f76191c-bf90-431d-a8e5-c99866cfd275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ceb6d5-3bed-4500-b7df-59d590d0342f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c35f95-32a0-4c54-9d8e-1f7c04dc3e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14fce76-44bb-43e7-8505-72bcecd51754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba9edb0-3842-4846-9f1c-f72a77dab323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98961d79-f132-44b4-833e-b8066d41daa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31be5003-0b8d-41db-8a21-a384e073838c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e1b8be-7fae-491b-b36c-ddc0f203a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd776229-3470-45ed-ad87-8e0bf7367c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838b11b0-8d11-4bda-90ed-bfebd7e30da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9e1b57-aff1-4c48-a026-1d5c698bf3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b3a3d7-b65f-4478-a7e8-a00dbe76f04b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64bafdc-0b42-4cf6-96fa-203833c5c47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf7ecb2-79a1-4454-8e51-4e304e16ea92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0d35ac-021d-4c95-a39d-60b9c23af112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "035356cb-04f1-4a6f-9c49-277f8b118f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85229f66-4051-41f2-9ec2-ff84ae5d7f7f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fff307f-48df-4c88-bcdf-f696e15fb3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b8c93d-3031-4cf5-8de6-f4703ccf7881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72205bc4-dfb4-42c0-867a-fce330081ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3071939b-8453-415c-b947-75f807a44f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af18e95-3c19-40c5-a967-b6d3c35ce1d4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94efea2-05e2-410a-9f2b-76c42e6795ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13fb3a4-19bf-4861-b770-4ea5f48ab34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e462dbb4-404b-41d3-8adf-329e4ab7697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2253d21-9f15-48fa-ba3d-49a85416f7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c210d3f-8a25-4fe7-94f9-57c9aa45a6f8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7697284c-73f4-473a-87ef-707b446a22fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce5457e-d3da-4333-b178-8ad6bc2b87d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83404b7b-b7aa-435f-ad95-053dee32b2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "438bb5e4-40d8-4edd-85b9-15e34ed7311a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a720dea-3c24-4b63-9530-0684b2fe504a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd8dd70-3c91-4b4a-bccc-d9b204334d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d47ef4-733d-4dbb-9527-51d5b9d6ad64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ba2cff-e37e-496f-9f75-84ddb2b2a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9023c1ed-ebfb-4b3e-b997-9333812c75aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3027e99c-d0b5-4b2a-8293-b3984d841ef9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ae1e58-8e2b-4404-aeeb-3fbd8e8714b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df90aa83-b790-4d89-acc5-5bae1da797b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6437f401-ae34-40df-96c8-d2cf70bfc0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "015bf6a5-e738-4d4c-a3ff-9fc5d228c478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cc6116-d64b-4d18-af44-7e6e983f9f94",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85414893-e728-433b-952b-d6159f6761ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fcf847-477d-4e6b-86df-71e72141b492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc57df1-0f92-4978-a66e-cfe475d43afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f0b5a4-569b-4d6e-9410-04a3bae9af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7b603c-a26d-4ab8-ba2d-91b76a0d9bd2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56247016-975b-464b-8453-e45d1c6bfd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde8d058-cf46-4d40-8492-eaa9f6a54f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808d77b6-a959-4d33-80d4-57f360a04faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b60d0c-4fe1-49f6-8d32-395916a7b241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125a59c4-ca24-4bd2-943b-861c171dd34d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3377eec-0184-465f-b55a-c09ca7f27423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a561165b-f617-416f-b427-15d4966ce11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d3a8f6-c0cb-4716-b283-a67f8a8dc7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5feda6-b725-4a0b-9922-2ee3036fbdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49df14c5-4068-40b3-804f-aee3c3fdb78a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede635ff-fc2c-4ab5-bda4-982451e4559e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8748e58-4fcf-494f-b7d2-d0bacbbadbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ab85d8-d133-4a0c-ab44-bae8c3887671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38279a3c-efed-4f86-b659-27b3c04fa5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacb9011-3556-4fef-9a5b-1f74224655da",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e486d16e-25ab-439d-82c0-147f52234cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f593881a-7f16-4d9b-bafb-1f8be97dc87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7301de5-e27d-4e62-a826-ddd0ce2424a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d55dd592-725a-4e90-a904-478a01acf3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f067ae-d585-4edd-a9dc-56e2fec86d8a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed807f9-8846-4412-b93b-d754a648cec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ab5e37-35ba-4c8a-ae07-7e835375a006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cec53d-ded0-4ad3-ac3d-c97c5eebfb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f950d57-0b81-455c-bce7-bac868a39308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da57b7eb-1603-4a5f-a336-13bafc7edb26",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb40f00f-53e3-4f5a-acfb-1ec5f545e001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5150cfde-9de9-4b01-8c4a-953c38e9dc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd9596e-9b1c-46f9-b921-8c5573cd399e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d49ff213-5fed-4822-a6a3-429737682ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f9733e-df95-41c1-b826-d7e81dc569cd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0254ae1-4f67-41e8-8dbb-71832bddfadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ca83b4-f9e4-432b-9e95-9d4dad01a5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb42f53-0707-48e9-894b-d4391af60f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74609e48-9522-49a9-a893-a7f58727c552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063061ef-d40e-4d11-8462-7192fa2c170f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5842abc8-c84c-43f5-ad9d-ca3b87f631ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea1295b-e812-429b-b7d8-000916f12471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdf0e23-f220-458c-a7df-99a6558f061b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb19431a-210e-4c10-a1d2-cfa96f68f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38354d7-1c4e-489d-90c8-903e884cd10b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bd7c13-0ade-4610-b036-5542cb6bbb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231f546c-807c-42aa-92d1-11813cea43fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e172aa48-b5df-412c-9bcb-0722ab9c6683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "222ed0a5-9e4e-4b94-af98-e7601645e81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eea2e92-5bba-4589-8914-5f19772692c1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d9f3ae-71df-4f01-af9f-a8ba3a3a71a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925ced64-d3c0-4770-8a16-72f1b91a3b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41bf219-220b-4ce8-95bc-835b66c45fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "44c499ad-44e8-4199-9737-0abb79c27571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1716d77-1fc3-4802-b233-9128219edd31",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cb0373-1bdd-4982-bf49-c03dd5380d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a918310b-5975-4fe1-b3d3-3ef06ae99210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab8b4c9-6731-4acf-a2f4-869cf8572133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6273ca-b068-48e6-a5ba-6c9a324a186e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10447366-aad0-4152-a855-441e696ed5b8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afd5a1b-84cb-419f-aeae-7b5670d5cbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "04b92cc7-aff9-4387-bc6c-0c20fe7944d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445a8700-0689-4110-a22d-5a9f307a22e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4745c9c1-4980-4167-8ddb-eeaf080e1480"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a1793b5-ef9e-4fa2-b8b7-05337cd0970f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "518c374f-7ab6-43a0-bd4e-17183e6e0304",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8bb4f7-aa5b-472f-b9ad-7a83fc489adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "335b7e95-bcc3-4324-8830-779ecacae69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e862bf27-a55c-4a57-8c0d-06616e31ef25",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9798cfa8-b356-4b8b-8e3c-570e5fb8931c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "caa87ee1-a996-4a9b-992d-4c4cd8887f8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e568fa6-c4a0-49db-b3dd-cbf24c8326bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4446c88-2f87-49de-83f2-7e3c9cad3493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e5863d9-c61f-4ba0-be9c-6df4dd1d4875"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31c1c731-0c56-441f-9a55-aba604d64037",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b593a0e9-4b16-4e61-99cf-eddd2f802806"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72833af0-91dd-4512-bf46-2452e956bbd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f055bbd-82d4-42a1-9354-241e181faa6e"
                }
              }
            ]
          },
          {
            "id": "0772c28b-c5e5-45cc-a4d1-ead40dbb42dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4e0b578-54cb-4356-b32b-41130f3b46eb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a300f38b-ed4c-47dd-b5ca-41a1ff7c5283",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e9c3ab-41b7-446c-be72-141e406be7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c951d01a-e966-4ab1-878a-0793d122f2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8188e3-6015-4ab8-87b4-b3a62de50cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4ac012-f246-4ba2-abe5-2b88f1473528"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c99a8e51-48ff-4a65-9914-4bdb49e9c3cd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b35ba41e-7706-49c5-9db8-aa4facb941ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd3c759f-40a4-4329-9d05-528f03595b4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75a2f6f5-f077-4ee4-adad-1a42a4727874",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f293ff86-1add-44ad-bfe1-a8e352f46a78"
                    }
                  }
                ]
              },
              {
                "id": "4b524934-0117-4850-81fe-897e5938993f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d8b78b2-cdc6-47b5-885c-2de993495fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac8ea733-18af-4eb6-8d00-274239951f7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34917970-51b3-4540-8661-3facd466209a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ca024a8-4a21-4894-a0e0-5b824443cde5"
                    }
                  }
                ]
              },
              {
                "id": "ac5d790e-117f-4215-88f6-d77c41920823",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d5ada0c-6e64-423c-9cfd-3c4fa2294100",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7c44944-d9ae-4572-8057-d800371f121f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f2275fc-28ef-423a-9ddf-ccc6e7edcfd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7881917-931a-47fe-9b9a-fad2eee75fd3"
                    }
                  }
                ]
              },
              {
                "id": "3bedd9b6-d660-4e60-9423-12f09aa971f4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd0f7614-fd65-45d5-86dc-154faf5c259c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e96fd329-5811-47db-a8ff-295f0e912d0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a751193-3683-44b2-9723-1a6c474a9d8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5421c3cd-8d38-45e5-8f1f-6013b4d87d60"
                    }
                  }
                ]
              },
              {
                "id": "006ee328-2e85-4785-abf4-48e1ca05faf0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b905440b-828d-4a47-b54c-6157f5ad1caf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3c0ecb8-d43e-4321-bf3a-f318f068a367"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d63d6877-52ac-4115-9b62-f7649a0b7779",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7f8e6400-fe41-4d07-94c9-69ead38123f0"
                    }
                  }
                ]
              },
              {
                "id": "d0c98081-5cbd-4585-9c27-0f70262f2ca1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd4fdd13-4578-4374-940a-8b89accef6ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3252b4e-98dc-4783-8fe0-7dd2029ad2b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b765f1ae-82c1-4813-9e80-31257799539f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3628de23-7bce-4e37-99c9-373e16c45b9e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "737f8f4f-8742-403f-845e-2e869aa918b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59cb5f77-e182-4946-9ec9-b1fe39b3ff34"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d97f92cd-2b58-414a-93ec-265785368e15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ea80ab3-db4c-4093-b58f-b111f476d279"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbcdcd89-02bf-46b8-bd37-31ea857f8e17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f075b49d-9d58-4e46-8110-a780e495e04e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c240c93-ea3a-48e7-9a60-d8065a9975a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "994cbedf-7ba5-4d5c-ab6a-915e33695cb5"
            }
          }
        ]
      },
      {
        "id": "84e6f9ae-6189-40cb-9115-8825c8c5c953",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ffe09ff6-23ac-4d37-b687-5f807fae8290",
            "name": "Negative Testing",
            "item": [
              {
                "id": "957b12c4-13d4-49df-81a9-a8853f36fab3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0df6f78-9556-4244-a8c5-d78e331ed208",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f17acd7-33c3-4dfe-b167-cc55bdcf2054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd135862-5132-416a-8373-b1a67aef36fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d709848b-ac86-480c-bc04-33d63ace422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "74caa563-de4b-4c63-b500-f5358f2deb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6d9d67-ce38-4316-a00c-1c9f8e4a805a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd36aee-68c9-456a-b543-a2ba789f8507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b0d96a-8d57-4cb6-aa28-a78707911d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54a913-e72e-44f1-8ef2-30d2da3acb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ff8804-0472-42e8-8ae5-ba56aced7132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dddd94-03ee-427a-bd88-57cef44c6d6b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eec78a2-5fe2-49d1-ada4-a4e07e315c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed1681e-0f7b-4df0-8716-98705808a69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eb05fd-cc6b-4ee2-8b74-4e881c784958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d65a9c-7b81-4be6-a4f3-3f3995f4a9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0ca068-a0a4-41ea-a8b9-30e34e3aff2b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd2e0ae-3d97-4f95-9d46-762064a93f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8a0457-bc55-4698-b641-5e839b745a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949f28c1-8f61-4387-ab41-69a8241b88ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d434bb95-26f0-4d3c-8473-85e28fcc67ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261ae4c8-6080-4f0f-84a5-c88e4582cfdf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21cd673-3ced-424a-a1c8-e054c85c125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c65166b-a44c-4ad9-87cc-7ac42311d82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24da22a3-893c-4b0a-8b47-03b8baee575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08940aaf-d03a-42eb-8b9e-efdb6ad8ee6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b02f1a6-ad1b-482c-a1f9-19e75d62c0e2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c351f3f-a180-4e17-811c-4cb86c9f773d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5226f1-8dc1-421f-bbae-c7bfc69a2b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca99cb8b-4eff-42cb-98b4-11db26b1b73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdde1a5-07ab-454d-a861-dbc1a2eb7cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1920c4-82b8-4538-b01a-7a242ee69653",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e4f180-59cc-4e46-878d-e7b68bc706ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f594a479-64e5-4d62-b9e0-867ffeb8885c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffde2bcc-a1a1-4b08-ad97-a1080250e43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b71ae7-3868-4a8c-aad3-fe37e0530ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617d8d3a-35ba-4a91-9cf4-db697c402785",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32af7c4e-89ac-4a06-8670-755166b94a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb04504a-98df-44fe-824f-c3fdd5b17cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4e86b3-5c68-41f6-bb00-4d6ca1076fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff379b5-ad9a-466c-8c01-587218dee955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4953804-c90f-47e1-ae4c-2b625c4e50ef",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b61eb2e-4ad2-4e62-84ef-e7ab84849710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57281a1a-dff7-4f1b-a7e0-10d407da7c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af95c6a0-2762-44ae-8fe6-4daad682ca91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8330f1f1-f48d-49e2-8dcb-63f094eb6e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b45dec8-a76b-47e5-bfa3-dbfa59a342dd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb77830b-f0ef-4e3f-b750-6177968f06b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ef6451-a861-4311-8e13-cec723f70b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7396509-055e-4407-9953-4237b9307316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de9cd23-0d86-473c-9716-86458665fa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a345594f-0ed0-461e-b1ee-1068e0cb2f5a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c00e8e3-d20f-4456-b60f-3b2b0bec2d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0666387-524e-49c2-b569-935fcf4f6f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f93294-1484-40b0-a68c-8b5517d30700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45e75e64-06d2-402f-9f59-9ad4f076c1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213d25aa-531e-4005-997c-a5f521d75b33",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b453c793-2d08-4bfc-b2cb-c9b22b49ba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e8f949-f582-42a5-b8c7-a46bf87396ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbe7b03-0c09-4949-bded-7fa7ee8b0f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8277485-60e0-4107-adc2-f9a0a394157a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e4dea1-e495-4609-9c03-5fdbb62cab55",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53872c40-adb2-4343-90a4-a291160411f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da83238a-abe2-4e4e-a0dd-8a9c14a4cecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e131f92a-355f-47ab-9d84-a02f2cef8260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96e4cb8-eaeb-4f5a-bc38-38dc74e92d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf3741a-051b-4570-858b-b47e787a4de2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd7914-7846-4ee5-b2ff-24ed4809c1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca148d0-d34a-47d7-8b32-e183e507d13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf19b78-9e22-46b7-8706-ff03989cf57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5312f3f1-2c52-441d-a2b0-9fcb63da37dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e824251-e1dc-49c1-972d-09645879ea4b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8ece27-64d5-4749-a34b-08a5c4b7da4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3c16c0-2262-4744-ab94-9b6ae90dff8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bf83e3-82fc-4cfc-b4c2-8a3decae7e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a302c055-5d21-40d0-92a7-4840210c4011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6ad1c4-5c04-4206-8dc3-b1f6a56cdea2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2179aa-a510-4bb1-bbc4-725ed6d27139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f8899-99cb-4a64-9c5f-36ef10954984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc96249c-0b2a-4bdf-be99-4db593e88f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95f6f91-e55c-4c69-b617-023aae7a8d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1245ee31-81b8-4c86-b226-e0ff93c4e4fb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8baee4-7080-488d-a509-acaae969af4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed519363-a073-4867-b8c2-d5e94b0bea49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5af4ee9-b26f-4f46-91d0-e13df3ced201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b0085d-6fd2-4b20-b491-78856a6a0365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811c9814-87e1-4367-85f1-ac3dc7d41aa3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ab47d8-6626-4f48-8e98-c4a63a295c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41677d4-acdb-40c0-adf6-aca0782f211f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6266bb73-8858-4b6f-a476-4aae6b82e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd681a2f-b0d8-4601-9946-d6361fd073ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec63175f-b487-46e0-856e-565b152d11b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8169e2e5-64eb-4af8-84db-c8f6c6508f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3373fd3-5bae-4c3b-9f94-52108867ddb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c05a12-63af-43bd-852a-2d4669f17d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b3d19a-ebff-42b8-a6c0-559cc48b4413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9808ada-2d8d-4f3a-b2dd-55bb89117b7b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dcaff7-1409-4210-8a24-fc56dbb920b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a933d0b0-f749-44ea-be41-32bbf03f410c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc72061-8b89-48b0-bd19-b1b4cca0f4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6ab7d1-03bb-482b-b17d-89fed4550e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0aba5a-92e6-42d0-88a6-214cd97b0870",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03a9d24-045d-4e76-8fec-5b7c2af00ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6397d8-e886-4b7b-b2cc-76a6149641e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2412a0-f521-4255-a806-bfc3ca8d3d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da545d12-5809-4639-a1ac-2f3ccf9ccb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fa988e-fea9-4361-b03f-13a29c086b51",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f728b29-bc24-4423-9103-2d633061dc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315dc738-f909-43e0-9796-7bcec4aa1dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59e13d8-c65f-4dba-bfc9-9a9e33191767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c465905f-859b-425a-a68b-084a8e7cdeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5691ce0-0ff0-48c3-95d7-973cad8588ab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6b19d4-2dfe-4656-b33b-3b17cbe4baf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0db395d-25f1-4306-b497-3695f8257c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822caa2c-78c9-40ad-8f46-0ca1f6f73195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56bfb3d7-d97b-45d8-986b-f77edac66676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746cda88-e70d-455c-b302-d55ae3f16040",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2a1b96-55e6-4c97-9609-4c607c86eb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3503f6-53f8-4e66-b641-8f0bdb738c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdd5d4e-84b7-405e-a89d-a97d49a6d13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4383eb-906b-4420-8977-fb42a0c773db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc92ff6-f3ff-4a64-a6b1-669732136d2f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0a5b43-6aa5-433b-97d7-4c7ad997f93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6036bd2-83a9-4fdc-8fd9-ca94ed9d30ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66974130-cb5a-49c4-ae21-00ab045b2cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063504fc-2456-419c-b6fb-8a4659b76702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd10f2b8-ac71-4bb9-bcee-f8e3203dbad1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c38e091-1633-40fe-a076-1c3c088f05b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edaa739f-6b9e-4c33-97ae-66b8ea8c16ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef00b138-d7ca-4b8f-ad87-96ff3fdf4ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5113c2-beed-46c6-8bd0-3062e70fa273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f7e77b-5672-4cff-8123-88fb46dd8a58",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a877c0-fe17-4873-9631-7e87fcfc63a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4327196e-592a-4c5b-bcf1-2625576e19b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be6f0ab-3079-4f98-b6af-77d566973678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "654c368e-9e89-4c31-913d-e6dc6ea424c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256fe8c5-ec27-4480-bc29-49eb89075103",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cdb5fd-55e6-48af-885c-5eaa908bd4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4babde6c-6a7e-49f8-bfc5-ae1ffb6ff7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51962e2-3994-4156-b378-200fb04eab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c204859d-a3f8-4b69-b028-afcabcd49e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232dbda2-b46f-4bec-9855-c9091e269734",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d17d0f5-70d1-4793-8d0b-48f8c7f38551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b85777-0cc1-4940-9a3d-6188717055db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a148241c-8838-4a51-93ff-54f66b74803b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27027a03-2af3-41a9-be77-efaebde47189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b21cf41-496f-4ec5-909f-02e478d0ff9c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cedea47-cb47-45df-9938-a0606ee328ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb34a92e-ba1f-4425-8406-532fbea08c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64334b07-a48f-484c-beb3-000cdacb4e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e299a0-6d73-440f-a091-16dc17dbe739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22433cc7-9bf1-4aeb-8770-fea54d9ced9e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f9a320-ddb7-45c6-9230-2fd5e9c5a39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbe0b12-7e09-43ef-9e41-b671b8e107be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f404e889-a50d-48c6-8a5a-66489ac4b041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23f0d164-34fe-4c0e-9657-005b138004b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92d4d80-1ac0-4cc6-80bc-794fc2603271",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74db765b-f28d-4163-b712-6eaff00e3d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e0fd33-6de2-43bd-b1fa-0bcc2b84eeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cece76-ec90-483b-8786-235ba4c9c9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9eda996-82ce-48e4-b468-612838ffd1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d041cc-ff43-4cb4-99ed-b8fed38a2f80",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a91f512-6943-4748-8c91-82566fd387c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7518da47-2c23-4fc7-a333-01fed2fa3b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b4f46a-55b4-4602-98b5-19f6a0012091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd69f7d-a631-48fa-ac70-d17d2b9f0df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab74a566-59ba-4ae6-9d0e-54fc2f3600fc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176d3f59-3881-43f7-b626-d00ff3626d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b895dbe-20df-4237-a488-50ec0f0a6f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8169b710-99c4-4779-8002-09637d9e7628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcd5249-a712-47e4-9cc1-944337dec884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bb7d94-ee25-4314-a172-f8efb56bc504",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aec00d-208b-414b-a3d5-0bd8de3eb124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a95978-114b-4df5-9103-e54f84ddfaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa611b9-eae6-49b7-b09c-3043845ee841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59722f01-1157-4341-ae54-750f1fae0869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c482d20b-aa91-4ec6-9a55-bbe0e72e9c99",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f173678-848f-4020-9029-e4bb2eda0af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f344e6-41ba-4f45-bfa8-0c8b960d14a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75da5a8-cc03-45be-8665-18581d12aa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f79dd0b-347f-4225-955f-c6bc567a3085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d059e0a-4d27-4f6b-8103-eac41189cbe6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37a6a6b-49b8-4ffc-8562-2ac78038a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4abd80e-fb42-4776-8d86-f67f32c2f939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a3491e-dcc5-42c1-b888-861c8aa8d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a9eeff-17a3-4c21-96ea-3fdfc23b1360"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbe1a46e-4785-4ad0-89c5-1199834302a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74b5fcc3-3af2-4edd-ace1-89e27fb1a15e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011f27ef-8b6b-41e7-9bef-86d834082d75",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6040cf-5e5b-4602-ada1-e1286e3f7ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f917bfc-8bad-4e87-9db1-787de3b80394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cdc9b95-18ee-4fe7-892e-0e07e6a817f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3186eb5f-fb78-49b0-b99b-73c323e29240",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91328485-d786-4b8f-8d92-4b94952b3cfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93901364-b0b2-4b8a-b6f7-43c6592ac86a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40a7b6a5-7c03-4874-b4f5-46789df56e5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "506d3232-99ec-4d1d-af3a-4cbf6844ffc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba893152-fb49-483b-ab7a-90ae72c94a15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0049b461-f5bd-458c-9ecd-a02f0ed59797",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03617b7e-896d-47b2-a8a6-6f3d4f39cc8d"
            }
          }
        ]
      },
      {
        "id": "b1dc0fd8-3d4a-4a3b-8692-ce53714234b1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c5e63f5d-31c0-4b14-870b-4be3e4e211cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cb58373-7b94-43a2-9207-439e60656f2c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd41d235-0b4c-4f6f-a091-1041c58914c3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02450c6-6b86-4540-aef6-c9066331930e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b447eb2-d4ff-483f-b012-d43de94f4a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d57a49-959a-400d-9d72-e14b6661bda2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c816763-643f-455d-9f83-c8f5ef76d459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15f2eb5-f547-4e9a-af82-e30c0309415c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ee79a6-7b9e-4c24-a4a6-d930179d5ef5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0dd04a-1cfd-4ca9-b1f1-44c5ce3ad20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c601be9-564d-41f1-91f1-0bcde2649f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a66c28-4d66-4324-b424-0eb8f5af3a00",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe78e07-9d46-4717-acde-e38b2ed26450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3b0496-8313-4456-8ab6-d682c8e1aab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578aeee3-f246-4c3c-8b12-7b2115bb73b3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d4996b-7e2b-4c6e-aacd-33b0fa286213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab8cb78-6ab0-49ae-be97-6ec4c649dd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c40789-cea4-4ffa-a296-82469f0bded7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4445392-cde1-4aca-8cf1-2d099b8bf2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7e214d-51fe-4ac8-bd89-f36f5de76599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784873ba-c71f-4566-bf1e-8a53ab7a947a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191265ad-c102-43d9-9acb-e85175dfbd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cd9da1-e9d3-462a-b1e2-44ab4c41baba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb98458d-0d52-4fe7-8784-d6c26b97244e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604caffd-61c0-4c9e-859f-a663e3bbbdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c8b381-0f94-4d56-b95e-58eb35854c18",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8d74c2-53d8-40d9-b9d4-9e81763d326e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4c2ccd-d33f-4d38-bb92-1baf96f85fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c09306f-52cb-45e2-9899-2e8f214fa247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c4a164-4296-46ff-ba70-d95af99b0a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5ffd7e-dcb6-4161-9c77-75c79ad4b736",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624a214a-f934-45c4-a185-3861f7648b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5451f8-3961-4861-aa4b-8a20f1e65cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483991c7-e7e3-4b9e-9cd7-655e35a02970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d666fae-1f84-434a-ae87-fc2d9c0552d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383135a2-67a6-44a9-bb89-7f8c06efbf05",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51d3bfc-f013-4b50-ad37-4d54da8698c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ebcad89-bee5-43a4-89d5-e4a706fae4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7799586a-d184-47a8-a364-074ba0eed3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85469f10-5845-4109-8633-df655396f737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1fd3df-c6ec-4df5-b298-8ef9c120f060",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b13598-a08b-4b1e-bd01-835a7edf279b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88d5ce7-5267-4886-8853-939cd785feef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84248016-a1f0-462d-b74b-f28949f40135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1054df6-0f61-4419-ab82-2956633a4059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fd10b7-505e-439b-a7da-5561f219e86f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604aa44c-9ec3-40bd-88d7-d137a0bfd5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae77e9b8-220f-4b3a-b50f-fc1ddea84a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1fc99e-cc02-4314-8ffc-4c7da007488a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb2cc38-bbe5-42f4-8d3f-8f78ed3220ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d02b42-5d0c-484a-95e9-3efe0790e3c3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d57e58e-4da8-4aaa-b318-2b6e14670051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c326474-3d9f-496f-bf95-8ba276e3cf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c755493d-67ef-47a9-a768-f354132528d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413e2c7d-2f6b-47ba-bb11-5544385f7ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97b8e56-6e8d-4028-b973-90b9be5686eb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dc7d06-2d51-40a5-8b4a-9c13c4149a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346c46fc-a319-4852-91cb-ba3c5ed0e1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d354d88-13bc-47e1-ad2a-060c5fae2402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add17e16-e1ff-4b0d-9acd-d4d23d8c7fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f497e1-d349-465b-b57c-5ceae8aebd8c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd676a3-d6df-4fc7-bece-d95c274af5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b38d72-1865-4b10-980f-dd8f7483d2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e5407f-875a-492b-8cc6-57491898cb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f74153b-5ad3-40ae-9c42-17aec772ea3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f230d97-f91a-453d-b265-b6db5005bd81",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7db5cd-c477-43dd-8dd2-7ccfe02ea29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74c12b1-8025-46a3-8545-9f31629f52e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91916386-423a-4692-a9c0-54f79a4cdc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a491f8-ed0e-4c01-8319-4a721deda04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ff3d1e-c09d-495e-aa9f-fe6628820e5f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37516d0e-6818-4ed6-92bf-9f399c7a1b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2322ce3f-009f-44e0-ab91-c45f978fe601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79409d2-f07d-4ba6-adca-b6a5a3c1a048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0774ea2d-b7e9-47d1-a481-459c94512673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5a9385-8960-4bf6-8e00-05c723ac5f8c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6cf1fb-304d-4fe6-a032-c10972dcbd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9caf419f-c616-46c6-821a-c55a6257a74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20902320-b5a1-440a-bc00-988e4c7f2894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e87b52-fdd5-4a12-85c9-8ae6162fbd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcee99d6-8540-4b7a-9fa7-fbc002ceb828",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4f9605-d749-4351-80ed-4c135a15b156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3120fa-2539-409f-bec2-7034c0e467cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d1f5af-c5b3-49d8-b2e1-76962eb4a407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7582a9-d828-4ba2-94b2-bbca362e5807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51747443-6995-4762-9414-d718acdd9c14",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa484c5d-e686-4bd7-a4f0-6de86a97983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dcdf99-1400-4633-8dda-a0d613dec318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7623217-9b12-4ee6-b708-5ab8006ce4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f39a96-ac50-4d4d-a70d-4be55bf7028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400a102d-8ee1-4ff1-acbe-fdc4602fe1d9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef4d966-abe7-4cf7-8fbd-9b206eb61f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39130b28-ead1-458a-ba2d-84e50c0c8c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1caaac9-cdb4-4b8a-a9c7-559ce5cd7590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f37b47a-99fc-4297-beea-6813d4a923bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc897ab-b4fb-4bb6-871a-c9e148c37893",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d278e1e4-d0db-4510-a3d1-26b46d022cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0c84bf-350f-413a-9727-6fb432e03225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd7b10a-4beb-41c6-8cd0-d790a3c21e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f715e2bd-a85f-4d1c-9d19-611015b133ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b609b4-5318-413f-ae80-9b1820db8afc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f1edaa-44a9-4e2e-8bf6-49914aae5a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42292163-cb03-4425-954b-c8a3af0f4210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01406d05-badb-42c4-9223-9ba89d6fba03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcafa24-f006-4992-a4ee-cf21c56dd189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea54afbd-4867-4e18-9c74-a5ac4efb557b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f92183-35c8-42f0-a543-6414e7ac8eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f1e2cd-1713-4345-846d-c8c137f1d344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07711ec3-cb73-42d7-a88a-376213fea46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73a6a76-f7cc-4d2d-b16a-e0e5b0edcf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f212ad2-4241-45a0-9756-091537c0dccb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ce963e-0f24-4dd5-a517-7eec6a1d7fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78f742c-502b-4b8a-9cdb-067603148d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "453ffa21-e964-4363-af94-e2f46c30d780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3829b0a7-49cb-47c3-b20d-a6d82c52d4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04b4ccd-1fe8-42a6-b613-7517866ec603",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7088362-94d7-4fdf-9407-73f971362a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29d3fa1-b4db-4771-9518-5b47b501797a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cada4a-3b47-44bb-8efe-7fb6cd24a7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a7dce2-cd0d-44dc-b77b-fa20c43f79c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012886e4-731a-4d6b-9af4-11f17aed2f87",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0a6e5a-421a-45a3-b863-dad9e75f7bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e910411-d064-4031-95a9-a55d50b03813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18959088-a124-4f98-b82f-50464ac65711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfe13d6-00bb-4d67-a229-0dfdf0d72fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f05599-95fc-4749-bf49-afd194f0e026",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9840d06e-328c-4306-86a8-c2d676989e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b68ffcf-410d-4f5c-a4ac-d89fe9bd176f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120ac719-728f-4eaa-a66e-116ae06f890c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ca6052-c949-46c4-9e84-d99192e8edce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf7f89c-14ef-4c27-86bd-1d0005642e49",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd18f662-d180-4ec0-958e-1f7b09cd43ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "040eba89-aeec-4531-bc3f-44a4a5b6a692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8f50dd-2ef7-49b5-a166-588a0c014d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c67803-1528-41c7-a467-d0eb35e66f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c3d63b-d20d-48b9-9524-dadb74210be2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b346ff7-b66d-4c36-a99c-17b3f252d649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84cd1c6b-29a7-4994-a027-3065ebc74c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93348c8f-587a-4bfe-8a1a-874e6d428334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efed227-085a-4745-877b-0ef2d448adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d987c4e5-f833-4346-a0b6-f2accfc9df68",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfed052-9fc6-4f6f-8875-47d90a34ee58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f72932-c362-4c64-9bdd-07ab91c737e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde72b7a-e8f4-4b48-b32d-28a7729ee286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8497794b-460d-4bb5-8d02-3229c5f4fcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0881b7c-9ce0-46d1-be23-c0ca90725e68",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847b96fe-8934-4d4b-89a6-8c341b1a4775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "706eb830-152a-418c-a6ac-2505e21b242f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241b6938-f67e-4ad2-bd17-cf8d3d62a915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f47291-6754-4f7b-a2dc-cd4305269636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1cc8d9-88a1-4049-a736-0765b380aa52",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cea502-3c3b-4cb3-b9fe-23cd6dbf54e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a136cb7-11b6-4e3c-91c2-b590ebbe7e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d018c06-e155-45a9-bfa2-213303699e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d484640-b39f-4b9c-be9c-31bfe5c71463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3872981f-ef9d-4117-971b-4d6f2058f9e5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3149ab6b-9853-4a9a-a8f3-0f57deb8829a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815b93de-b4ef-402d-993c-8408882d1569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad5c520-862e-461d-9e0b-b453f0ca36e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2ccd28-3a07-42b2-ac1f-76a5582624eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8991c35-24f0-40e6-9601-fb48fe06c99f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f2b3a1-e292-4751-bf02-ce8f41c32e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b52b2b-1e78-4d19-bed7-62d1c79dbac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4f18c4-77b1-4fb0-aa07-2205e447c4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d64273-186d-457f-ac1a-a000a60a85e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2206ab92-2a6f-4060-bb32-e6e8abb2e2ee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64757aca-6994-474d-817e-b3ef0f6e5565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1824b6b5-38b6-4546-b6de-37a85c38edc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816aee7d-b2fe-40d0-90c3-ba2e45f00ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172ee01d-20cf-47f0-a3c4-d80e482e221f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ae85e1-4fa6-496c-9171-5da5a845d0e7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62286489-5c1a-4687-99f6-ba5417fcaeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5ef722-d199-47e1-9234-8050274b666a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e00c82-5add-483a-b1cf-55b561bf4a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2799748e-77b4-42a7-ad80-b5f776b548d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e077dd-c5e1-41a6-b175-52d6a0eb1c43",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2e7129-1dec-4489-b1a6-d655c3a4e9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137677cd-31fd-4f51-8a99-6187fb165e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee96701-2c72-4d95-bd9c-eabd5cc8818f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ebc8a5-a8c1-460b-a1ef-28ab540e202b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f50659-341a-4aab-ad7b-864a1cd40fc3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324a35aa-832b-476c-b56e-88f9e46a3d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c026dc2e-820a-43b4-9d4e-acbb34a0ad52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0efa6f-dbfb-49cf-b64f-3a608ac72475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d347ed-44aa-49c5-913d-c669a2ef8752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47efdab2-6b03-4370-810a-e54da3cf0d2a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a743d4-6bdc-4c75-b894-f818bd4ce504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b1d2a3-2a33-4602-92d5-f88b795765fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94abc1f-bb7b-4d70-9851-36704c9a3e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53196978-8153-4627-b5e5-f71f87ac1487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0629f6-1e84-4600-94fc-5c94b3cf9185",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b591595b-18cb-40ac-973a-ec8776b6f5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae803cd1-199c-4fc2-a15f-0b18f8a3fc61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaf0fab-5673-413c-bd3e-709506d148d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15c3e76-a3e4-4e59-affe-b922f2440d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7097f4f7-1291-4c09-921d-25f04f613877",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ef9d1d-d546-43cb-9d94-5cc5a1da5761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628161f7-6ea4-4e2d-8b54-42c3e901e512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d7d15-2a6b-4d47-984b-62ac11e981d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e7d1e4-6c6c-4ed8-ad47-e5c1773dbf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11ce240-b627-473b-a578-b27ba40816a1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe63435-2da6-4c81-b6b1-5fb56805bafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940fcc4b-75c3-4f41-b800-68a7b3733aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c13789-8ac8-4d3c-8aff-e3024f0642b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c2f2e6-9d51-4578-aeb3-d7e1ba5caab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e4f9c7-4107-43ce-85d6-569a6fbf09e7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e07ea4e-e0e7-4f40-a61e-dec6bb8d50f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ba6616-a0e1-4bc6-8ab7-810cee7ae0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93123fa7-1425-4934-9e13-2f0bdf16d3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e78847f-ec59-4c59-95b4-85c649df2b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce65994-2366-41d5-a5b0-5e6a36fd131e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e395b459-71d2-4d25-b42f-ef1b740ffa65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c45bb9f-eb4f-4051-958e-cc4b6f2bac00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987ae4ab-0a62-4696-ba07-143090458c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44e351f-facd-4b0d-8c80-ae82ba0027a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dfa61a-633a-4d8e-8b9f-f432addadc45",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4131a6-715d-45dc-a148-565a4f4b0390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6558b639-b0cc-4294-917c-8aefaeb06d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169710d4-4eb5-4977-bbeb-b6655bd92eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09202693-8fb3-4fd3-bc83-56d710cdd0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7cae2a-2668-4253-9a03-17a2621cd40f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc73a044-97c8-46ab-b9d1-a60b7707461e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351e715d-a0fa-4742-9ae7-0737b09753a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1666b75-f1f5-47f3-adc4-e61195f4e766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233c5723-7ad8-4df9-a22f-6702e11f0c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38426534-4818-4c86-9187-377041099533",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4ade92-8443-49b5-abe5-308e2d9fac4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b87263d-0e3f-47c8-a5ff-15aa77537fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9986c57-8441-4c4f-9568-22b52fce2c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d6dfc2-2e19-4851-9aae-fa14b3534171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd629ef-f148-402d-b058-eb233c1dcc9d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed91354f-463c-43d3-a369-85290c279ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d49344-1d5c-4b69-84db-6599768a27ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c0282f-a70d-4f20-be01-d2d3c2f0c03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888f76b2-8260-479e-a3c7-071407fdcb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ae2c74-23b5-4bf8-ae3d-228dba7a3c78",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fb649a-856d-43b9-a301-9f8292823d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e89c4ee-76ba-496e-910b-bbdad451bb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab9887b-7cbf-4d5d-b827-6a575f4be79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa305f6-3e43-49c0-a776-d47194ec587e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6c24ed-e6f3-4d24-93a0-55a326ef341d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c817b8a7-fc23-4be0-b1f6-d385d26dc2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51fab17-1f3a-4b17-9bbc-8cea3e509e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5d54c7-264e-4c5f-bc9e-718f6b2b4f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1357fed1-c0fe-4a94-8b7b-53f0bf62defd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cf97d3-2858-4434-8e85-9baaf70ebdc5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d8d4e4-5849-42bd-b6c9-735e2b1e586f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cb0637-6471-4e1f-b9cb-a22eda4530f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f664948-edb8-4603-a588-7ce45968e626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce207fa4-990a-4f3f-bfd2-1b7e4331ce10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5145f7f-fd55-4cad-9f8d-f71e6b077e68",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749ea05d-1fd8-4bf2-b080-4191aabe8464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a754f2af-0f76-4dd7-b223-022d4c209b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5f6d87-7268-4911-bc96-0d418ac0cb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb69305b-6010-40de-9715-89e0959637d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83520fa6-bd6c-4bdc-ac32-c93e2759658a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aea63d-0086-4818-9fc6-93f81c61057b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39616a9e-f383-4861-ae61-63bb098fc457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42767f6b-0d18-4610-bd36-351fc8d3b01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb7f5a7-8eab-4ab3-9963-69ec1a34b3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe8bbb-2960-440c-82bb-44873471ed2f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0239681-a525-477f-b752-dda900c0d0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0a0786-7dba-4a78-b5a0-7f7aa43db146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba30e8e3-a788-4e25-8f2f-d606c703c982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891f0841-f2bf-4902-ab7b-e36332857c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d481ae-57ae-47b4-8686-85c9e17ab9bb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9d0bdb-9483-4ea2-8edb-ef96e35f49db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c863d11e-7596-4bb9-8b31-799b4bb11ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c9acd-0894-469a-8ed1-aa3277f8ffee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b374742-a75a-4cb1-bd5e-f088786e720e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2459106-c9f9-4d9e-8f1b-29d264f9f9a6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126ca7f1-e2b2-4315-a38f-c2e5d96a86cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1756919e-da40-4d6b-8024-38c1473624cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63743f30-ecb1-46b9-b7a9-24619deed5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9942929-2beb-4efe-868e-128020ba1ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bb75ff-cb7b-427d-aee0-4482dc5a541f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38819c77-e90d-4957-be5f-08a83ccf78b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad9e5f7-862a-400b-9074-c73892c8f032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf261a3c-46db-4d65-a597-e9f8033467dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9d0bf8-4060-42ed-aaa5-dbc1853bdd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e87a7a6-2930-4368-87b6-698333376a74",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57969f69-0221-4718-b6ee-7cae4dc616a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a7600a-31ec-4209-b32a-d6568ce4e295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dddf3a6-eac0-4dcd-9d5f-9cca062feffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e5690b-6046-4446-8d3d-0e7467a85d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a947e799-bb86-4a7e-b153-f457d87fa908",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8359500e-54c3-4a51-a4d6-b31e3d64d19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe11530-4c86-4b08-a39c-6c7054e2944f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2019e4-c98d-4a80-a9fc-6aafb136b13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee24138-af4c-48da-adb3-4cbd1950fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbac7d70-0137-4ea7-b21e-b82bcef10868",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9379a7-a553-4b49-bb8d-4ac027f56891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86693e45-2781-43c4-b781-c9e8b256521a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d6ba96-dbac-4f21-af9f-d1eba0f1da11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01cebaa-5813-44dd-b85f-908c189ea649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59030b1-e360-4257-921e-e49769b18f1a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b126bfdf-d25b-46c1-99cc-a152350d8396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83beabd-c800-44ac-b0ca-38b9b648aa1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da25e7e-28e3-4575-82c4-f421dc044b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba48cd9-6085-46cf-a840-d3c9d0d273ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6704464-49e2-4db3-8542-164dfe86fb8c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162f0eee-cd03-46aa-8856-c88bca17b65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25e45ca-bb81-41fb-aa01-075757169889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5271612-25bd-4bb9-809e-6088082eb135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f2a0b2-7cb1-431c-a6a6-6eab843a64a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c74b0e-6a8d-41b0-a6a8-74e8d1ca1bcf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd493ec-e443-468d-a5b4-fab80e1afefc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e035f32e-7fb1-4177-8f31-179d020b785a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558016e6-7ae8-4b27-889a-8e97b68ec7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b14e050-990d-434f-8d10-9598b25619a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250809fc-5393-4d1d-a233-0fa291d9e650",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39369e6b-078b-4476-8114-b087c9160969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7518c22d-8175-42ba-83c7-29e7533f4f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeb4106-8c90-429a-812f-fae8f6ccb028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663ecdb1-74ed-420e-9961-fc303e38cc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a9ffe4-61dd-482a-8a24-81f99f0c5865",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8325e7-3722-4754-b3db-f1a2fded0926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51bc1587-3b88-4511-aab0-828a62c3c026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d65dda-4070-49e9-a8e2-e1e70707a98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6dcb6a0-5266-45c3-b00b-98bac402fd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981ff855-1dde-4d1c-9054-4611316e104f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3022868a-5c2c-41ec-9b12-0daad4fee59d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2cc0999-bd4c-4211-8a1f-d7bbacacd225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e923514-88bf-423b-9c9b-f7b627201e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b264ed80-f5f6-4b45-a3c0-6b8793e9664d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b2e1c4-8eb7-43c7-9bae-8452533b4242",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4ac565-a664-47a4-b87c-8f04616facfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae7447f-e89c-4e45-a21f-c0d609037554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fae353e-4b35-4b93-a045-6906d5501db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8806233d-379f-45e0-af06-d863650eb38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb528371-860e-4f42-877c-23f6926d7a34",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33dbe8b-6488-4901-9d97-92e2aca0ee98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1213031f-6db0-4c05-8c5e-45034a820874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb4253d-8f68-43ef-8cd7-efb18e41056a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4165af-8132-45fb-8b73-5eb8fd7a04ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1572ea5a-9153-4185-bf65-5527628ac93b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc48b63-44c7-4d39-8036-48017878a9b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4dd3fc4-4324-4d48-800e-78892b1d2de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0dd238-9867-4a17-bd44-903543c89492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f78225-b489-446c-8131-ce8f909d2875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abc298b-eec7-442a-b778-bd5864b3a3ce",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bbf7d0-91e8-41d6-9095-8994100c51cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187e893e-f5af-4a5a-b31f-653a93c1014b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e62dcc-0090-4374-8185-b6b235e95a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dedd5f-582a-45c2-bf53-e8c48128b9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3540fb-3542-4a82-960a-13339458f298",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf84d59d-790e-4c85-b32f-eba2c78a488b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfd87b3-2848-4c6b-b25a-03cac082e61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acc90bf-5c7d-4ab1-bf28-4d3837699abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a0da78-e293-4499-8980-e70485c51915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8f10cf-1f51-4497-92ea-0f702cfc3f7a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb93e11-cd55-46d9-a7b8-7d5dc9d751a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e3f367-5f8c-4bf3-97d8-385b16c62320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca58f2ca-29e2-4142-8965-020152d50aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2225b47-d542-419b-a34e-bff79fa44f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b065b51-4cd3-42f8-a190-f126a78bd4db",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0ee587-b4ba-4f07-a431-c3614aa80cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6ff201-3593-4a87-9c57-8b20b4ee0e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353c608a-3900-41a3-939f-504d676e6f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883c67fc-e1ba-4d14-844a-068d8b8799d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbcdf9d-0ef6-4ab8-b374-2f3c9aa6abde",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa318e1c-f6fc-4e08-8fdd-3d633aed0190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ef1541-0953-4c22-bf38-9a3db2c03bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cfda30-9f46-4936-8dea-d990f6f85872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e04655-ccb0-4fdd-a826-ccb117c2fed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2879792f-1819-4d28-9c59-ef62f36c1b25",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ede629-db23-43d3-a894-06d02edff1ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d946c83-7a10-44a3-9891-efd037a48f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27f9c08-465f-4d0a-907e-ad3e1b7025c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ed1643-ebc8-41cb-9f22-9cf8de7e892f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298b837b-e946-4146-819f-8b706baa98d1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914a147f-3e30-4fcd-814c-e36bc57996b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c708d8-c273-46f6-95a1-8ba2efd4f055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b7d732-0ad3-40e8-9479-a519319446e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ad68e8-4519-4a0c-81a5-4815035b7b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8615c760-20cd-42b4-a050-ff2fed740d9a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296f2c96-6354-4a95-9d4c-6c29c42e62a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d09b731-6e0d-4a93-9741-e64e5ab42731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487bb945-abaf-4f53-89ed-7a492edc0beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0d8955-3fec-4db9-8908-4c6532eb7ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e301dc-6cca-4cf0-a2b2-62b3fec938be",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9040891b-ad98-49fc-b3e0-d0623f3e6b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc56182-ad5d-49f1-8ee5-914cc1a642dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7674d292-40d2-4e41-ac9e-a2a3b923f685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503f0dd0-0569-44db-9c1c-178c68f246d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89eb666f-9de2-4a16-a786-9883af4a173e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0921c2ee-ee3d-467a-815e-11250e65da89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "208df3e0-a716-44f9-806b-3fc0070e6150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4e5227-cd43-47a4-81a2-d52d7f18ee34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d0f4d4-8bcc-4772-ac6d-50409c4f3a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f4ace0-e423-4b37-aed0-1c855a6bef07",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5218f5-f701-4ac9-854e-f47a75eb0b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff77def-167d-491c-ae08-ca7aee0cec81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6099ab0-d254-4049-b411-8fc7d5d8afd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0bd1a7-9c96-4d1b-bb4d-88f66501c052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf935a6e-cc0d-41cd-abfd-f5a7b4077566",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f29abb-c5f9-41ae-8465-c890c38cd874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14405061-2658-4395-878b-692b7423891a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1c416f-6c2a-45e5-8537-bcc6692be886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c6ca9a-6e5c-4600-a30b-aece0721b0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cde8ee7-8beb-437f-8087-66f3bc76c633",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12196a89-af73-4608-b3d0-5e5834fe078c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35573c47-180d-4a4b-9774-6fabb163dee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00169d22-0b12-4e42-81e9-2705bbc04dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3537c798-2590-433a-a29d-1f49093a1c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6b6769-a850-4221-bd80-b876b9309a31",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169cbfe4-e953-4a98-bdf7-e5d427eb161d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f7e055-c0fc-4451-9100-9ca6abf27084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0161ee4e-37e9-484f-b20d-64d653c80477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19786525-ffc6-49d7-8fa5-291d62b817ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b71eb4-0a16-4e8a-a79d-464b089a92fc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b43bd9-f0a1-4104-892b-6fa1dc290c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab41a397-66c8-419c-8acf-5facd03b8f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2374a0bf-cf28-4376-81dc-379b6ed441bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40dd8bb4-107a-44a7-a91e-f759b5a1a97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3777c2f6-cdf7-4493-a372-0edc49808ca4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53c6c3d-a3f9-483c-8411-e1d1938a3f42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb9bdb33-3ca7-42e7-ba03-bfe5148c2f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1d5a77-d727-4815-ae0c-63ea46352c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d619f7d-19bf-43a0-b8ec-899b572fa981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdef3bf4-c07b-4559-ac58-8e8573c4f1de",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c395b04-1146-474d-95e7-1180078ddd6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0475f2c-b6f0-498d-b601-744be43ed209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1f2777-00cb-4ee3-9922-3a7543f8f8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed77d9b1-654a-4ec0-8c7b-d6b57eab4638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98efd105-a60a-4d7a-9e4b-f5d3a760c46b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba98e48-f6be-4151-a335-0241937379ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3174aa24-cda0-4539-bd8b-6e7622855499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622d5dc1-e6b5-4e83-8cfa-d4a893d9c734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fe406e-41a1-4557-9a55-5c5d5c613023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0e1419-32ec-4377-8137-1eebaedb5892",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47432451-4b8d-4274-957f-7f9a57c59304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2cddb9e-3e3b-40d3-b68c-6a687a2908ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349161bf-4cd6-4c14-b780-a59d1233f76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdc823c-8648-4ee8-914e-39a5d7e4e4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77165050-bda0-4a45-bcab-298748ffa72c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e236c2-007e-4da6-a451-a38c34c4da1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a377c8b-6592-4a0f-9345-273c05957c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ef7a0b-e9bf-4daa-8054-14ff5321a5ca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dceffe67-be08-44e5-a8c2-131d47a65519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d7733e-5151-4799-8f18-d7bcea6a4f68",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1715efb8-5134-4014-91ca-ee18409ea7f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe4b0ce-7b9b-4191-9ff5-dcb8bc48a146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331aa5d0-458e-4588-8e3e-586bb4573942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a268ec7-b4c5-48d3-b0e3-87ce96b5e5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9546ee6-bc7b-4593-a25f-d8f7ca257038",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cf1cd1-f4e4-466c-a997-fb6daafb351d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48875ba2-3ed9-467e-aa03-226df64deb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b38575-2729-4061-b519-21ba8d1d96ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca08d780-603c-4f7b-9dc0-167dfc302846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd7cf1d-1cd0-4dd3-a410-b6be18770605",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef18f03-b35a-4a04-bfee-4290d4260a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff1fc17-6d54-4ed9-8759-0b3e5851c62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1266327-c53a-426a-959f-19a81d2479e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d8e71d-d239-4973-bfb4-f6a4edbe1ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2774752-5fc9-4a8b-ab01-6f79fa347619",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab2b2f6-decd-454e-832c-e0f7960d2902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7625ae9d-cccc-4a96-8e26-c21aff379551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb75a8d-41a0-4851-bd29-68cb08c41980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934c51c2-2c47-4443-a318-f3789cf7b8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a263229e-cf7b-4db0-b1a9-08ce649165d9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b3752-e506-4daf-bec7-bb4c1c6bc0ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f096a352-783f-466c-809d-9f1be2b3a2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067abd1c-4e08-48e7-80cd-9cf9d19e3920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18160fc9-2820-4c07-9fc5-3c07e87a4b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4474419d-a0b9-403c-a553-c5c150f98fd1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d379d4-8348-457e-9ad8-c07ae31cf41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc343fb-4611-4666-8b7e-2f68b2959976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02428af1-9881-4eaf-82d5-a798f51ca883",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eda8275-6fec-41f8-8b23-009293721c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd62c31-2d93-4477-a1bc-1fe2982218ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7053c7-b020-4d49-ae4b-0b92e4aed1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35770431-c52d-428c-bbd7-8becf02aee88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2f35df-6f83-42a5-80e8-f4aef2df6d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070a1a80-8a9f-467a-ac35-a793b515ed99"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e140c71-e645-430d-8ccd-e0e537f8588f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90c00bf4-2fdb-4c7e-a7c8-c78671a2bed0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75fc41f9-5e79-4b4a-bc56-60f70a55e7f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca8bee92-5f05-4bdb-8a96-1bda3406e0e4"
                    }
                  }
                ]
              },
              {
                "id": "76138c57-878a-44f1-b105-88a838b153fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9609072c-4a6f-4680-8524-a80178299035",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b98b99c-d7e8-4ff9-bbc5-888e8c4f8c2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7bcedd11-1cdc-4499-94e1-7a733b81e1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8774a03e-6bcc-4545-8782-7b68248dfe02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08cddbb1-6926-471b-998d-f3de3b47a845"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06f2c3fe-9c1a-4be2-be0f-2f96911bef7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2671ffcd-387f-47f9-b93d-1650b3b8f928"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "000f5322-6dce-4b64-b65f-e124babbc971",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "958f600a-4d50-4c0a-bdbe-5bbcfb7c6151"
                    }
                  }
                ]
              },
              {
                "id": "b1c92387-62a5-4437-9a7a-78e9fd0090ce",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "99f2d3fc-87d1-4544-ab35-135abaa6440f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4f2181-e920-4fc1-aa14-a33b88db0380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "369e19ff-2f1c-45aa-bb37-5037f3410d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9191e2ab-9da3-4efd-ac36-266c4ff21188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d2960c-4041-4d5d-bcc9-a452978621d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f35787b-7061-4fbe-a758-89679bbc816b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fb55744-ea0f-4d94-b3c5-243bb8daacd5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d43a9d95-1565-40fe-8e4c-9891f6e1bc0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6320c35f-2701-478f-8976-01b6161ba5ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cb6acf0-526c-4e00-8a94-2465ec94c152",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30b3ba33-cb1e-4fce-a784-e0a7f40bb829"
                    }
                  }
                ]
              },
              {
                "id": "d3ced803-1da9-44ff-b933-84ed31de6ed6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ddc15b5-fc7d-48b2-946b-0de82832e69b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2377e62-3f2e-453c-9d4c-c6afa31564a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfe6fe2b-a0cc-439d-8a77-72d9f4f4855e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ffe007e-61f2-455a-9631-98e80392339a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be751618-1d68-4d59-8849-39eff4c346ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "02fa1482-87b3-4ee2-82f3-10c025f7d25b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c771701e-aa71-49de-bf10-90074cbd8651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6ee1271-bc67-43f8-9af5-20543f8e05c4"
            }
          }
        ]
      },
      {
        "id": "cf223f6a-03cc-4f63-b98c-0bebccdb4a08",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9a9c7b08-849f-42a4-b0cb-13e6194e23ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "934653a2-9617-4591-ae60-663a5094b6f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c7f6131-f952-45d5-9015-bc146556babe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77685661-7475-4a53-a527-17380dd6c600",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c067abd9-1e72-4cf1-b169-ed222754f1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b86531a-c666-43bb-a40d-399558608c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b13104a-239f-4fd5-bf69-cdfb69bffa92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b5b45fe-170b-4ef6-b8ec-fe969250bdfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60244051-20b1-4698-b8c2-45c3fcab7dc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "861192cf-e4e3-4662-94a3-794896802979",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9701a8ad-1afb-4728-ac30-28c0be173613"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6791cae5-e517-432e-a21c-8956c4f47a28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7718254c-374a-4a14-a175-dd2a5dc6f975"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a8ef390-b795-406c-bb39-0b3da3d0c1c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fb36923-5da1-4a6a-a7ab-96727971d59b"
            }
          }
        ]
      },
      {
        "id": "5eff5897-3f7b-4a13-ae8a-df8806bd8d3c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "717a4b67-91ec-4714-b43f-06f837bcf10b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffec6b9e-e5d7-4a08-9916-37aadc14c5cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19303544-82b4-4b8b-863b-a7e83263e207",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb447fc-7e4c-4fec-b4db-c60f5bd42230",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a16845d-d994-40c5-a4e7-eca5ab5e3510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce7c8d3-dc05-4b4d-8984-2fdea0261627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c9e4d6e-9123-4d3f-a84f-822751f26066"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5295bd93-c66d-4a39-8535-f101fa100cb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc524d8-8a25-462f-b92a-ff4965ed0d39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "755e1b23-a9ef-40b4-84e5-9e432044b047",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8570fbc-53b3-4658-b540-281a41bc4f3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68011329-e09e-4d34-b451-6c19f5234666",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e848423a-e77b-4c73-9df1-d21e47b82e4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bab8aa62-9557-4635-b0c9-5cb16cb4601c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d710020-5d41-4832-801a-61e93dea9ac2"
            }
          }
        ]
      },
      {
        "id": "03a4901a-b0f5-4155-8c3a-26ce31d7d689",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b3c31f9d-721e-4e12-8c60-94a4826802be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fb00303-63a8-4017-acc2-5b49c6911fd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a8751f8-977d-4671-9ddd-9821369cf3a0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0395f027-78b4-40de-b5ab-bf60196f959f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0408590b-43db-4042-af03-87e0b2614142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df2cbe9-7f19-4e19-b5ea-1a59894ef92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8360d52-5c46-4665-9508-2c00c6253aa1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd5b685c-1c3f-48f5-bfee-9110f7642b11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33f7cb18-dc5d-481f-b86f-b2c211f011f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59dc1d3b-6b64-415f-a5e7-7ab7143544fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f8b6341-9864-4649-82e6-eb5500bda908"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86cf55a8-276c-4860-b0c5-eb535051c334",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3eb2edf8-1768-404b-9df4-dd6fc14cdd48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08a5b4c7-a0e7-4859-90fd-955b7781cbd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe00b997-5779-4de7-a668-4327caf998ab"
            }
          }
        ]
      },
      {
        "id": "9a192a4b-8a76-4334-bb57-aeca14b472fb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65b37607-b40e-4c3c-9d61-9ba5344cb13b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8bf8645-f620-4723-a769-8c5a24934bd5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "32e454fa-d1d9-474f-9f70-b05f78247566",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b74caa5e-c3d1-4a8c-8033-9a8ad7544b08",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c38874d9-5ecc-49c7-ab84-3ebc857cc9f6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 32.99206349206348,
      "responseMin": 7,
      "responseMax": 896,
      "responseSd": 58.770402878252945,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722300005314,
      "completed": 1722300021922
    },
    "executions": [
      {
        "id": "993f8dd4-6559-4a42-b9b5-1e0d22803db0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9f5feee3-bffd-4e66-bf32-638ace09e939",
          "httpRequestId": "df9a2260-9eff-4e2f-9dcc-e4f9881c2b53"
        },
        "item": {
          "id": "993f8dd4-6559-4a42-b9b5-1e0d22803db0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "74b48bcd-a3fc-4d50-bb9d-351661d8dfde",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "b0c753ee-1834-4b2e-86d5-24f861884aa5",
        "cursor": {
          "ref": "a53fc998-7806-435f-b52d-9d8dec2edd3d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c63f3d10-4a2e-4274-bf7c-00cf92ed1c8c"
        },
        "item": {
          "id": "b0c753ee-1834-4b2e-86d5-24f861884aa5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dea6859d-37b4-464a-ac23-fe9a0ebbe0e0",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7e189098-bfa5-48d2-b15b-30ce848f5e0e",
        "cursor": {
          "ref": "96038da2-95ea-49b7-b25b-b0d4bf494259",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fc132269-7772-4cbb-ac74-4f2cbfba5a58"
        },
        "item": {
          "id": "7e189098-bfa5-48d2-b15b-30ce848f5e0e",
          "name": "did_json"
        },
        "response": {
          "id": "5b3bf71b-81a6-4bad-ad19-ad288d22136a",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd24faa4-fa0b-428a-bfc6-e34ec24879fe",
        "cursor": {
          "ref": "e2ae9ded-23d7-4a8a-b0ec-c6dca59ef150",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b2d7832d-0a9d-4f52-b606-e2e960d31a69"
        },
        "item": {
          "id": "bd24faa4-fa0b-428a-bfc6-e34ec24879fe",
          "name": "did:invalid"
        },
        "response": {
          "id": "b39e674a-1059-4f9f-822a-b75f69478e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd24faa4-fa0b-428a-bfc6-e34ec24879fe",
        "cursor": {
          "ref": "e2ae9ded-23d7-4a8a-b0ec-c6dca59ef150",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b2d7832d-0a9d-4f52-b606-e2e960d31a69"
        },
        "item": {
          "id": "bd24faa4-fa0b-428a-bfc6-e34ec24879fe",
          "name": "did:invalid"
        },
        "response": {
          "id": "b39e674a-1059-4f9f-822a-b75f69478e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e75b77-6a6c-43ca-bf17-9cedd961a334",
        "cursor": {
          "ref": "470948a4-6260-4e3f-b907-908c2331604b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "797a43fb-b85e-478f-8bb2-7225b1914eb0"
        },
        "item": {
          "id": "93e75b77-6a6c-43ca-bf17-9cedd961a334",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "96742298-4612-4d83-abac-b38d5711f24d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 190,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ec2042-087f-44b8-b693-3578165230dc",
        "cursor": {
          "ref": "2f7531e6-129a-4237-8139-6f7d10b43656",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5362784e-67cf-495e-92f4-875c1c8a87d0"
        },
        "item": {
          "id": "b4ec2042-087f-44b8-b693-3578165230dc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "110cc02f-893b-4376-97f7-ed582ca83fe0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c8ebe4-6b45-4edb-81d0-9b670e796eb0",
        "cursor": {
          "ref": "8ef14841-e7c4-4127-8464-a1acca641f61",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d30ca621-a3d3-4c2b-b3e8-bd9f0b3853b5"
        },
        "item": {
          "id": "86c8ebe4-6b45-4edb-81d0-9b670e796eb0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3394a60f-9c57-46c6-b9ff-bd09e3751ee9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d563fa9d-33fd-4184-a73e-8407a16f0c47",
        "cursor": {
          "ref": "24b3e426-758b-43f7-b0d4-f514096ce0b1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "115f43e2-782d-4137-b30f-c2095b15cd9f"
        },
        "item": {
          "id": "d563fa9d-33fd-4184-a73e-8407a16f0c47",
          "name": "identifiers"
        },
        "response": {
          "id": "87f55104-f46b-47a6-b9ee-3efc033d952f",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a1f6e3-5710-4cbc-ac51-5f9f1a1889bd",
        "cursor": {
          "ref": "1ef8bce9-9bd9-46ff-84cf-e4d862064068",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fd55a647-4962-403f-ad14-3203fe3ac1b2"
        },
        "item": {
          "id": "02a1f6e3-5710-4cbc-ac51-5f9f1a1889bd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c462b186-e2d6-46c4-9604-c3226fb907e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0bc4a4-e8d8-43d4-91f9-20184a2ccfe8",
        "cursor": {
          "ref": "99a92a00-4661-47eb-ab92-0cbaf0b1fd84",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bdfb293c-c38d-41de-a79e-c4fe1e68fc90"
        },
        "item": {
          "id": "4b0bc4a4-e8d8-43d4-91f9-20184a2ccfe8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5a6c604a-8984-421c-b9ca-63898508580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50ced9b-0e17-4959-90bb-ff71f2e33c1a",
        "cursor": {
          "ref": "e0597507-8e5b-44cf-b8f1-751241953432",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "675c389d-32ed-40ba-b756-4b8477f1d79f"
        },
        "item": {
          "id": "f50ced9b-0e17-4959-90bb-ff71f2e33c1a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ff0b8aa6-3390-4900-bee6-2b709be8c29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43440a46-b336-4313-b01e-e4fa2cd0b7aa",
        "cursor": {
          "ref": "06b06fe9-5736-419a-832b-b1d2ea7c69ae",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9c8a4adf-1f6a-4002-b004-20ea4809d1be"
        },
        "item": {
          "id": "43440a46-b336-4313-b01e-e4fa2cd0b7aa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "02c445f8-a365-45af-818f-6e6a5349fe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccd2563-abcd-4b5d-a2c7-bd404004c88a",
        "cursor": {
          "ref": "8bc2c3a7-6dcc-4551-80b1-60bffa5b8b54",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "772fdfb6-e30a-4572-a69a-50cae551f7f1"
        },
        "item": {
          "id": "1ccd2563-abcd-4b5d-a2c7-bd404004c88a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1348a1e2-0da0-48d6-8387-a541c1e1ac6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73470531-f0e1-4a13-b41f-4ee8bdf268cc",
        "cursor": {
          "ref": "d6dc5a1e-11f1-4bb1-8a85-7dff158333ab",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fecc277a-0e89-4412-a602-f6016bafb5d8"
        },
        "item": {
          "id": "73470531-f0e1-4a13-b41f-4ee8bdf268cc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eb638038-8f9d-4f12-9f9f-376af5dce931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439e3fde-922d-4f82-b200-77117419560d",
        "cursor": {
          "ref": "84e51676-3267-44f8-ac8e-eb6e58ad0aa9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "959349d9-9ec1-465e-a216-5dc6725d02ea"
        },
        "item": {
          "id": "439e3fde-922d-4f82-b200-77117419560d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "be210b4f-9e3d-4db5-a337-81423bb39c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c75e519-6a7c-4c70-82fe-374f2bc6a8d3",
        "cursor": {
          "ref": "53432f16-84ff-4ac7-b4a9-1c5cac961a2a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6eb347e8-cff4-4bff-b117-ac5fc39274f7"
        },
        "item": {
          "id": "7c75e519-6a7c-4c70-82fe-374f2bc6a8d3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2bd1b6d1-368b-4f80-9f2f-ac855dde83dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e83688-ae99-40d0-a2f7-972ffa467d96",
        "cursor": {
          "ref": "daaeb92b-49dd-41c0-bddc-3c59e2bc8602",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d00b9146-4c07-4f3d-ac1a-25b9a48b8963"
        },
        "item": {
          "id": "a0e83688-ae99-40d0-a2f7-972ffa467d96",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cb361f73-91c1-4185-8393-b488d211b11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b42902-f6cc-44fb-b1c1-6b3473370ff3",
        "cursor": {
          "ref": "f0205d22-001f-4928-a150-87651787b2ef",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "555049db-b4ed-4707-85cb-bf7b8fea6c2b"
        },
        "item": {
          "id": "04b42902-f6cc-44fb-b1c1-6b3473370ff3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "23cd79b7-7687-4b3a-b7fd-b60863e8946a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657b4e13-ea66-41b2-83d2-c8c1803600e1",
        "cursor": {
          "ref": "d9a27450-0100-4328-bcc1-967fc7f565b7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5a7e582f-e953-4531-a512-899783b50f82"
        },
        "item": {
          "id": "657b4e13-ea66-41b2-83d2-c8c1803600e1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "241d43c4-ea7a-460f-8963-eeaaa5a72258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a23910-dd76-47aa-8e26-aff1bf58a411",
        "cursor": {
          "ref": "c70a4b28-5df3-4196-92cd-9628f0e2e2ce",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f62a0658-fc48-4f08-8f1f-06f4c5b031f5"
        },
        "item": {
          "id": "01a23910-dd76-47aa-8e26-aff1bf58a411",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "709c941b-7e8f-4e6a-b4fb-af3bd7eba610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2f5957-e3b8-4927-aaa2-10c618496967",
        "cursor": {
          "ref": "7871db8b-b55a-49ab-9b0d-286497804c0c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1ffd2bd3-093d-498b-b0e9-53e87ed29b03"
        },
        "item": {
          "id": "ef2f5957-e3b8-4927-aaa2-10c618496967",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4baf3084-db3c-41f3-97cb-c0d28de03834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f501a8e1-323c-41bd-adb4-0cf2c9e064fa",
        "cursor": {
          "ref": "728537df-f591-4bbc-b3d4-35a6d32c6334",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3ead0228-8e02-4948-a07b-ccea16f77b67"
        },
        "item": {
          "id": "f501a8e1-323c-41bd-adb4-0cf2c9e064fa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "006e51e6-7c97-4307-89be-459f3123afad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b7d207-2bef-438a-82c8-c62e760a0fa8",
        "cursor": {
          "ref": "57c394af-7798-4869-87ed-04a0cc189a1f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "02ef43de-82d8-4338-892a-f1255750ea47"
        },
        "item": {
          "id": "f2b7d207-2bef-438a-82c8-c62e760a0fa8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5400c367-8183-4eaf-be07-405a1126664b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79072daf-644f-4658-a52c-b9dfb822e47d",
        "cursor": {
          "ref": "c8d1e332-20a7-4661-b7f5-e57e7111484d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ab722333-891a-46b9-9079-0fcbfc9b62a9"
        },
        "item": {
          "id": "79072daf-644f-4658-a52c-b9dfb822e47d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "621a8ee7-fb71-4815-8bc8-82824305f60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52339cd9-0480-4004-b32e-618ce7db02fd",
        "cursor": {
          "ref": "8f7b1edb-86f2-4a27-b12d-d8c76524b9c7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bc535bd6-9d1a-4d33-ae8e-9142f4ef02c9"
        },
        "item": {
          "id": "52339cd9-0480-4004-b32e-618ce7db02fd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d9a59209-2ba3-4e9e-b3c3-e5a4594f6ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996afbc1-3d17-4de3-87a7-ef6575eced9f",
        "cursor": {
          "ref": "ed106434-f9bb-484d-91a7-03eaf747f9d5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "371db7b2-8d40-4f5e-af74-ed8271accebf"
        },
        "item": {
          "id": "996afbc1-3d17-4de3-87a7-ef6575eced9f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "325a5651-6dc2-49a7-8914-58f165330aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94c09df-6e66-4a78-8c0a-1feadb0f910f",
        "cursor": {
          "ref": "fe965a7c-9de0-4c34-88b8-1a192fea67ce",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fd4a90fc-8e0c-4e21-9fe2-7fe9a4763eaf"
        },
        "item": {
          "id": "a94c09df-6e66-4a78-8c0a-1feadb0f910f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d4b0368e-3a60-4a5d-bf98-0ac9b7c3bab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec8f6f6-35b5-4fba-a48a-88f7629cef16",
        "cursor": {
          "ref": "1810e6e5-f978-49e3-9980-05c3b37e9ebc",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a1533905-89a4-4d76-8ca4-c039b747500c"
        },
        "item": {
          "id": "2ec8f6f6-35b5-4fba-a48a-88f7629cef16",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "04480e65-a852-491a-961a-aec460c854b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c855f48b-85e5-49c6-b4f1-0d2faca26e62",
        "cursor": {
          "ref": "dbb05db3-3056-4a5f-ace9-5da0d2a34211",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "94c70464-c501-4d8a-81a7-6c0bf36c6a33"
        },
        "item": {
          "id": "c855f48b-85e5-49c6-b4f1-0d2faca26e62",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ba52f95c-e398-4a74-be86-9b518256d037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba10b0e6-80e5-4ef8-ab34-f9e76e53e010",
        "cursor": {
          "ref": "b4f74e28-391e-422e-8f23-51b4a730f4f1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d8c5545b-06e8-4e60-8423-eaabb155c54c"
        },
        "item": {
          "id": "ba10b0e6-80e5-4ef8-ab34-f9e76e53e010",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dc077320-7cab-480f-90d3-3b3e5305a8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b931b29c-a285-43cc-88f4-2576d666d7dc",
        "cursor": {
          "ref": "a10ade96-fe1c-4fec-8809-426003cfb338",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8c4e17f3-c83d-4452-aaff-78c42d8ecc2c"
        },
        "item": {
          "id": "b931b29c-a285-43cc-88f4-2576d666d7dc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "88ebfbe9-f0e7-4f38-a173-23d1824961e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bd1d83-88ea-4deb-8f3b-5c5b6c33910d",
        "cursor": {
          "ref": "af19568c-76fe-4ab4-ac0b-d8534101500a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7f65b1ba-fcea-46d1-9b61-5759c57498e1"
        },
        "item": {
          "id": "76bd1d83-88ea-4deb-8f3b-5c5b6c33910d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e8fd94c-d17a-4431-9b1f-e218ffd6d952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462eff16-9a11-4d47-acbd-6ad68d5e97ee",
        "cursor": {
          "ref": "76fbc68a-485f-42b7-873d-98974dbf5450",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "261028a9-a786-44dd-b225-9c03551f3375"
        },
        "item": {
          "id": "462eff16-9a11-4d47-acbd-6ad68d5e97ee",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9a7622c2-dc47-4c36-8bc3-05f66eea07e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519aef7e-8cd4-457c-8bc1-4190a675f815",
        "cursor": {
          "ref": "feebc195-d63a-4009-870f-5b7c56ec4d55",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d37a3453-9f62-4c3d-8bd8-9bfbd95a7dc8"
        },
        "item": {
          "id": "519aef7e-8cd4-457c-8bc1-4190a675f815",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9c6658c5-a28c-41cf-8d4d-2d50d77a2d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c459e8-64d7-43e2-8785-da28cb9c0fc0",
        "cursor": {
          "ref": "282ba6a5-1e3d-4907-80af-374e65942e10",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "87e49963-ffff-46b1-a7f4-01024dd77340"
        },
        "item": {
          "id": "b6c459e8-64d7-43e2-8785-da28cb9c0fc0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "742b30e8-80c7-49ce-b517-f122437f2911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dc0eb8-b39b-494c-84e5-7ea8ba1bd613",
        "cursor": {
          "ref": "35fb1229-4ba5-48e3-b501-3da2c5ea2a87",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "110c6546-05bf-418a-8bf7-4ba5b4b2892f"
        },
        "item": {
          "id": "25dc0eb8-b39b-494c-84e5-7ea8ba1bd613",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9805a2c8-167a-4171-8f74-7a1c2382fc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf3bd1c-a861-41c5-b197-e7cd806058bf",
        "cursor": {
          "ref": "b8de489e-98f1-4341-b50a-6a0ace86ce7c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2d326441-a2ef-431b-8369-8ddae368f922"
        },
        "item": {
          "id": "dbf3bd1c-a861-41c5-b197-e7cd806058bf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "097fc321-1250-48ce-bac7-33b25c086e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd71924-1272-4ad0-924e-e35cabc6acc2",
        "cursor": {
          "ref": "bb94b313-9959-4df0-add7-793428176e60",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8cc99e10-54e5-4d2e-ad77-881c313e3910"
        },
        "item": {
          "id": "6cd71924-1272-4ad0-924e-e35cabc6acc2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f8c93431-986b-44e6-b3d9-f58678e1d0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e7a664-acb8-476a-b7b5-9a3879ea965a",
        "cursor": {
          "ref": "ac44b645-2697-4291-913c-2af8cb29a34d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4973bd01-04ba-4673-982e-cd55eaeccbd1"
        },
        "item": {
          "id": "30e7a664-acb8-476a-b7b5-9a3879ea965a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "30dbd675-d50c-4a22-83be-63d68ddf4135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5db7a16-c966-477a-a455-9c2faa75f0c4",
        "cursor": {
          "ref": "be3fe6bc-9e9f-4a17-b152-1781a3f839cd",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "14f00021-4711-4b97-b2dd-637bc114d541"
        },
        "item": {
          "id": "f5db7a16-c966-477a-a455-9c2faa75f0c4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d28b90b6-77e9-44bd-8df5-9d4db6b72009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60f04ac-79ed-41dd-9563-3c68733724c2",
        "cursor": {
          "ref": "b926032e-2b2d-47d9-858f-90653f53a69b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d15c5e53-ab4c-4625-809d-d75062f7e42e"
        },
        "item": {
          "id": "b60f04ac-79ed-41dd-9563-3c68733724c2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "17c6aff3-d12a-473e-bdd2-5a086c62ac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793c9c30-e7cd-49ce-9d72-4761965acf3e",
        "cursor": {
          "ref": "3c9a5169-995c-4e6e-b96e-825ba162cb1f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "53ba51b2-70f6-47cc-92ba-954875cea8a4"
        },
        "item": {
          "id": "793c9c30-e7cd-49ce-9d72-4761965acf3e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0151486d-affc-4d47-9ab9-18fb5db1e466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3bc3c4-b040-4504-a4a5-21a38737b90e",
        "cursor": {
          "ref": "3efbe143-1fcd-46bd-a6b2-149f59bae455",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b8ce03ab-1ff1-4136-ab4b-e66035dec4b4"
        },
        "item": {
          "id": "ce3bc3c4-b040-4504-a4a5-21a38737b90e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dbae9b5d-3e46-4c92-bee4-66599b8ba8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463c86b2-4f95-4d53-8d09-6a0f1cdf6609",
        "cursor": {
          "ref": "40516d6e-66f1-47a0-bd2e-08e0eb881df1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7a71b133-6d7b-4c41-9e95-db6b9f67d633"
        },
        "item": {
          "id": "463c86b2-4f95-4d53-8d09-6a0f1cdf6609",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2e4c46e3-277b-4a2c-a0f1-6a4c0de68619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d032d0-e210-4eb8-b7b3-5d24842332e0",
        "cursor": {
          "ref": "ce28b781-5901-4104-a2b5-f0085e2af513",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "371ed614-60bd-459b-8ebd-60ef9c4a9c5e"
        },
        "item": {
          "id": "b9d032d0-e210-4eb8-b7b3-5d24842332e0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1fdda27c-2cbc-403e-a31d-ea1621b1cd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34255efc-00ce-420b-bc78-658e8a465550",
        "cursor": {
          "ref": "f0eb5a62-2b98-40dd-8dbd-bd79cf7fcdef",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ac7e2d38-5950-4c1d-a00f-728b0a73905c"
        },
        "item": {
          "id": "34255efc-00ce-420b-bc78-658e8a465550",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3e508577-98fb-46f0-9d93-bec089a7ad09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3a0511-c792-4995-8ac8-ddbe4268ef32",
        "cursor": {
          "ref": "df3f31d9-dea1-403c-9e54-d788d41d9356",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7098ee80-ae02-4444-a842-4f8ac9efbbbf"
        },
        "item": {
          "id": "6a3a0511-c792-4995-8ac8-ddbe4268ef32",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5c65c29e-254b-4c03-b301-b4c7429ec214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258f93b1-4499-458f-98d0-46af3adf7dca",
        "cursor": {
          "ref": "5d22c478-df9f-4b67-8829-a5076b891e8b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "75f3086c-940d-447c-a490-d0feb835875a"
        },
        "item": {
          "id": "258f93b1-4499-458f-98d0-46af3adf7dca",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "85936ba0-2e23-47a0-be32-5fe0a3d832e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2585dd32-c8ec-47f3-a172-6bbd4f0d8495",
        "cursor": {
          "ref": "c0ad3e86-d362-413f-8fe1-c03066054391",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cf9b0d18-a84b-45c0-94eb-b4232b1e1cf5"
        },
        "item": {
          "id": "2585dd32-c8ec-47f3-a172-6bbd4f0d8495",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c051ec99-b6bd-46c8-a9ca-962dd435492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50dba52-fc9d-42d6-ac74-b9aeb5862bb6",
        "cursor": {
          "ref": "77e4cc0a-9589-4606-84f8-2799ad0c1886",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fdfbdc2a-b6bd-436c-b35b-a1f4f668c6f8"
        },
        "item": {
          "id": "c50dba52-fc9d-42d6-ac74-b9aeb5862bb6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4ff5a99b-d07c-4caa-ad6b-801c7cbd6690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3c6689-3d19-4eae-8cb2-444c22a929da",
        "cursor": {
          "ref": "a485ed51-9698-4cda-88f6-d5b3779895a0",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9f6de6b7-4225-4007-b522-137ea678d7f2"
        },
        "item": {
          "id": "eb3c6689-3d19-4eae-8cb2-444c22a929da",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "15f0f88d-d460-4b8f-a7cc-e95a64e9ca42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad076a6-8021-4f3f-863a-2db0501eb39b",
        "cursor": {
          "ref": "656b6483-1525-4853-9781-bb723537e001",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c15ab10b-16a8-4b7f-9fe1-786a9f922228"
        },
        "item": {
          "id": "1ad076a6-8021-4f3f-863a-2db0501eb39b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "15d293d6-9935-42f7-a06b-d61c023a1580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92407879-ee69-43b1-8fa0-36ddd67b1a42",
        "cursor": {
          "ref": "ff9386b4-edee-47f6-8b49-c4ce7791f1bd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "09a2733b-3daa-439b-a7ec-8ece3eca6197"
        },
        "item": {
          "id": "92407879-ee69-43b1-8fa0-36ddd67b1a42",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f874b349-9685-4d37-a396-e91748852c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660d0dc8-d3c6-412b-9551-9d1d2da11f93",
        "cursor": {
          "ref": "4d4a9694-5d8e-4ee1-b5ff-a7ba2bb6b764",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9884dac9-af93-4e0e-833b-50ab51b8e6f9"
        },
        "item": {
          "id": "660d0dc8-d3c6-412b-9551-9d1d2da11f93",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1fabc84b-9f07-4bbe-9155-a5e56d0c0f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840280a4-618e-4af8-8bbc-ecea834eec95",
        "cursor": {
          "ref": "511e4146-b889-45d6-9752-f1ee27974333",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3570a60d-865b-473d-bca0-cc20d2f522e6"
        },
        "item": {
          "id": "840280a4-618e-4af8-8bbc-ecea834eec95",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3cf3777b-34fa-421f-821d-a1df1a961fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cabbcb7-b59c-49a1-90d4-4f4ab4fae85a",
        "cursor": {
          "ref": "2a1a00b0-e438-468b-9659-7e20b1506df1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bcd1379f-96c7-4b5e-925d-b60a596812c2"
        },
        "item": {
          "id": "9cabbcb7-b59c-49a1-90d4-4f4ab4fae85a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e5f9057b-e36b-4bc8-94c4-ca3435a5e3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e5063-cc45-490a-819a-41620eb10f6f",
        "cursor": {
          "ref": "9cc94a50-bc2a-4040-8731-7426014e2a63",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b1ca6196-f84f-4487-ac82-52678e6f3cdc"
        },
        "item": {
          "id": "cd4e5063-cc45-490a-819a-41620eb10f6f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cae40caa-f8b0-45a3-ae26-650536291d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1130d3e7-63d0-429b-bd3c-c46861158f88",
        "cursor": {
          "ref": "a447315a-30a2-4015-bcbd-79333f35f12d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "089f0392-c387-42b0-9db5-b3b8c09123a0"
        },
        "item": {
          "id": "1130d3e7-63d0-429b-bd3c-c46861158f88",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "29ac30f8-d56d-49cf-b851-519ec02021b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a527ac99-3aa4-4f3d-9c50-6b963dbc1689",
        "cursor": {
          "ref": "9e8e0566-27fe-4de9-b69a-f20d64b2dec5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7d3d795f-f051-45ff-a074-507ee8ce8020"
        },
        "item": {
          "id": "a527ac99-3aa4-4f3d-9c50-6b963dbc1689",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "00d9b3ac-5cc4-45b2-bc7c-7eca6ebbf149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0590cae3-d1e8-46ce-9cd5-e24b689ac9d0",
        "cursor": {
          "ref": "2d2cedf2-8991-4129-899d-8d19e401d954",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1fbfd61a-c027-4552-b24a-71216ab96530"
        },
        "item": {
          "id": "0590cae3-d1e8-46ce-9cd5-e24b689ac9d0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ce6c9a6d-bf93-44c9-94b5-bd0f118433fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a23c1c-b2c4-4b21-a5eb-72594bb4b679",
        "cursor": {
          "ref": "9f299eef-3902-4a9e-8549-7427b79f453d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b7d0978a-fee9-4883-b3ee-e77483e55045"
        },
        "item": {
          "id": "50a23c1c-b2c4-4b21-a5eb-72594bb4b679",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3a129f5b-0c46-498a-83d9-812ea42ec02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442da8f7-60eb-4c65-9ce6-4c1312acc658",
        "cursor": {
          "ref": "103659bf-fc0f-47ee-b243-0b4e12e6f336",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "faac6807-be29-47d9-b19d-312c3e3892dc"
        },
        "item": {
          "id": "442da8f7-60eb-4c65-9ce6-4c1312acc658",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6c3b434e-0d29-44ae-995c-ff4705867718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6763c9-4f4f-4e24-8d5d-0a6719ada558",
        "cursor": {
          "ref": "081e176f-bbb5-46bb-ad85-6a1ffdf956f0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c02c2d2c-6150-45b6-bdcd-6616c3cde269"
        },
        "item": {
          "id": "3e6763c9-4f4f-4e24-8d5d-0a6719ada558",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5ea58995-8447-4faa-9a9e-3ddb9ca38606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978a5331-e9c9-4494-99b9-26ee0fe3200f",
        "cursor": {
          "ref": "b62489d1-c00a-4985-8329-1c5ecff26663",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cfef6298-d372-443b-9bdf-243e3a3e98e0"
        },
        "item": {
          "id": "978a5331-e9c9-4494-99b9-26ee0fe3200f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d5905c99-1e77-4ae5-a04a-acd6331d992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fd55ce-e1ab-4f87-8ba4-30825a6ff222",
        "cursor": {
          "ref": "c95d2c80-e997-4221-a1ac-48d83ba87bd1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ba6069d3-e331-4046-b316-ae1ae8776c30"
        },
        "item": {
          "id": "c1fd55ce-e1ab-4f87-8ba4-30825a6ff222",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8acd1654-4202-4e16-8935-f5e7e398767d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df5481-3603-4342-8dfe-67a10f5399c0",
        "cursor": {
          "ref": "73cea40d-b091-4c3e-a7ae-6aef6b73a17e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0b8fb079-9f00-4b5a-814b-c4ebb7262b51"
        },
        "item": {
          "id": "28df5481-3603-4342-8dfe-67a10f5399c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "80f84daf-a8f6-46cb-958b-365696f00a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b43c5b-10cf-4667-be14-42a3abaadb28",
        "cursor": {
          "ref": "5b60c3dd-a86f-4571-ae45-89b779332341",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1003616b-0855-4082-ad5c-d54154760266"
        },
        "item": {
          "id": "49b43c5b-10cf-4667-be14-42a3abaadb28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5f753811-fda7-4cfc-bacc-0d083327a75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280819e1-5f75-44e6-90ac-b10de41e0eb7",
        "cursor": {
          "ref": "770b65d9-d47d-4a13-9cfd-f92c65c9f77a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "032d1287-195e-462d-856a-965d24870406"
        },
        "item": {
          "id": "280819e1-5f75-44e6-90ac-b10de41e0eb7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "78f9d6c5-da78-4c6c-a69a-7d582214483e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5a8450-7f84-4af3-b300-8cec741a3f90",
        "cursor": {
          "ref": "cd45a735-1742-4dcd-903b-4d505023018c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d8a35a36-460b-4343-b617-80b00c99f6ef"
        },
        "item": {
          "id": "da5a8450-7f84-4af3-b300-8cec741a3f90",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "57c27a59-df5b-4c8f-9e1a-5701df267afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75f25bf-6a4e-4625-975e-e15c89d937bf",
        "cursor": {
          "ref": "85f65bc4-b34c-44f2-8cae-651ea53f7a12",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d936c1ce-1338-491c-a4cc-6f948854aff8"
        },
        "item": {
          "id": "e75f25bf-6a4e-4625-975e-e15c89d937bf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bbbe7014-32e0-486a-aee0-73e9246bcb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f28c65-c8ea-4245-9a7d-a33aa00a8063",
        "cursor": {
          "ref": "1803fa8a-59b9-4744-983e-3d56d03f784d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cdd58df9-9f8d-4ef2-ada4-ae63d4896898"
        },
        "item": {
          "id": "36f28c65-c8ea-4245-9a7d-a33aa00a8063",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "50dd01f0-384c-41e0-8058-30eeac6cffe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1517d3f-092f-4dc4-a048-2b629d8c12bc",
        "cursor": {
          "ref": "b0b35ed0-18e6-42e5-bfc2-303c61db0f97",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ea1a1e09-9f9f-4afc-85a5-e534f29f5adf"
        },
        "item": {
          "id": "d1517d3f-092f-4dc4-a048-2b629d8c12bc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "97878f38-4a06-4401-a097-19ee88457101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1c57e0-10aa-4eb3-9298-a2d9231d1b74",
        "cursor": {
          "ref": "f2ea9503-7e15-4724-b6b3-034bef943488",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8a190e94-63a2-4410-850c-f1363f4d5318"
        },
        "item": {
          "id": "2f1c57e0-10aa-4eb3-9298-a2d9231d1b74",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8e03135a-b2b4-4ad9-ac5f-95cc87346362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e158fae0-f2f7-4f76-b154-f74075b1fde9",
        "cursor": {
          "ref": "746bce32-454a-4643-9206-e67b85c694b3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4d74dd11-6ae5-425c-b2d0-6cc7a1160a28"
        },
        "item": {
          "id": "e158fae0-f2f7-4f76-b154-f74075b1fde9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "df7ad89b-89e6-43c4-ba82-cf8c831cca4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d47d182-bd70-4626-b204-2cdd6df31ae8",
        "cursor": {
          "ref": "c137474d-9e13-4fe9-96a0-89676dbb5225",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "95fc1f26-26dc-4e99-b194-6beb8fa2345f"
        },
        "item": {
          "id": "9d47d182-bd70-4626-b204-2cdd6df31ae8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3c63bd60-70f9-4f79-b6d5-71aee0a021dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2039b4-5ef8-4911-9ec2-cbd1c463a43e",
        "cursor": {
          "ref": "16439a24-f538-4f0a-91b0-387a12562eef",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9e5e50ca-6803-4c2f-a8a0-dc8b2d843776"
        },
        "item": {
          "id": "ef2039b4-5ef8-4911-9ec2-cbd1c463a43e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32224350-a32c-4bd8-8c9b-879ecc55e2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f79d650-5a11-4ddd-819b-c0f047d40a40",
        "cursor": {
          "ref": "bc69cc41-8ad6-45ed-918a-7f57ea5456f0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9a0129f8-194c-4c3f-85c8-6af1239456cd"
        },
        "item": {
          "id": "7f79d650-5a11-4ddd-819b-c0f047d40a40",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9a4be209-d388-4f9b-ad2d-d2cd18943373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdbc964-b8c9-4098-bc8a-ffd6451d7ecd",
        "cursor": {
          "ref": "2ae6b87c-2229-4588-a108-6660452534f2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "35408f26-33df-4a04-91d5-bc697922e0d1"
        },
        "item": {
          "id": "6bdbc964-b8c9-4098-bc8a-ffd6451d7ecd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "152a9145-3576-486c-810b-103e96c892db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679c358f-bbb3-4c24-9014-24302238a647",
        "cursor": {
          "ref": "0b86257e-871d-4a7a-82e2-e8e6f0f1c134",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5bbf5b0a-49a8-4352-ae75-5de7f4ece591"
        },
        "item": {
          "id": "679c358f-bbb3-4c24-9014-24302238a647",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2fcdfb2c-b0ab-43be-a916-513b2b4d6966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ceb6d5-3bed-4500-b7df-59d590d0342f",
        "cursor": {
          "ref": "3463d3ba-ed66-4fd8-8f34-27ee5ea89afd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bfcedefd-391e-49d6-a064-df58c879bcc3"
        },
        "item": {
          "id": "07ceb6d5-3bed-4500-b7df-59d590d0342f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "671249c0-0457-4c15-ade5-abf0ee8d4d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31be5003-0b8d-41db-8a21-a384e073838c",
        "cursor": {
          "ref": "cde48826-ad51-4f18-a1be-2b567fd39c44",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f751b708-62be-41bd-b517-23b9a2e07014"
        },
        "item": {
          "id": "31be5003-0b8d-41db-8a21-a384e073838c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8f13e42a-9e91-46f0-ad8a-213fd31b1617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b3a3d7-b65f-4478-a7e8-a00dbe76f04b",
        "cursor": {
          "ref": "038b9b13-a803-4e5e-86de-99ecc658c29e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a3465bcb-3fcb-4e50-8daf-7f9e609c23f5"
        },
        "item": {
          "id": "c3b3a3d7-b65f-4478-a7e8-a00dbe76f04b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2c152127-59e2-4e51-b03e-901f30866c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85229f66-4051-41f2-9ec2-ff84ae5d7f7f",
        "cursor": {
          "ref": "1af307f5-8f87-43f8-ae1f-67657143cec3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c27725df-b3db-4249-a29f-850183637370"
        },
        "item": {
          "id": "85229f66-4051-41f2-9ec2-ff84ae5d7f7f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ec2739ae-0abe-4300-b9f0-fb28ccb455d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af18e95-3c19-40c5-a967-b6d3c35ce1d4",
        "cursor": {
          "ref": "e3fed677-a59c-42de-95ec-95756d2aa145",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "77c70737-fa11-4d51-86b2-d600a7dcf7db"
        },
        "item": {
          "id": "6af18e95-3c19-40c5-a967-b6d3c35ce1d4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b93c6fec-11ee-4bb7-adb6-ddba42e39790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c210d3f-8a25-4fe7-94f9-57c9aa45a6f8",
        "cursor": {
          "ref": "8ee1e5e0-f461-49ee-98fd-85b12fc57f33",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9369b41e-48af-423d-8ad1-74b9a591b876"
        },
        "item": {
          "id": "1c210d3f-8a25-4fe7-94f9-57c9aa45a6f8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4fac6398-0433-47b8-b19c-eabfcbe0f9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a720dea-3c24-4b63-9530-0684b2fe504a",
        "cursor": {
          "ref": "28f76fd6-4b2b-464b-8230-879fa550f8ef",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "39080667-9202-4300-818a-c6c0f2b82e7f"
        },
        "item": {
          "id": "4a720dea-3c24-4b63-9530-0684b2fe504a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2a8c0184-80d7-4374-b6b7-96f05c3f5220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3027e99c-d0b5-4b2a-8293-b3984d841ef9",
        "cursor": {
          "ref": "7b7b2b5c-4fad-4522-b816-d800805b2fcc",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b45e0704-66be-4d98-835f-0a2319644478"
        },
        "item": {
          "id": "3027e99c-d0b5-4b2a-8293-b3984d841ef9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5f14d8be-0a1a-40ba-a7d3-0d9b939ba872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cc6116-d64b-4d18-af44-7e6e983f9f94",
        "cursor": {
          "ref": "2b86138f-453e-41b7-94d7-494044c12327",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d19c40b2-6ca3-44c2-8403-83dcfe0596ee"
        },
        "item": {
          "id": "e8cc6116-d64b-4d18-af44-7e6e983f9f94",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "360215b6-5350-4a18-8830-95444b9c0d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7b603c-a26d-4ab8-ba2d-91b76a0d9bd2",
        "cursor": {
          "ref": "4270dac5-6c1b-4535-84e5-874b1c7b507a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f32d52d3-a485-4a18-923c-879d2042c29b"
        },
        "item": {
          "id": "0a7b603c-a26d-4ab8-ba2d-91b76a0d9bd2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7712ae4b-2c19-4cef-aa7e-a97dd6eb8de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125a59c4-ca24-4bd2-943b-861c171dd34d",
        "cursor": {
          "ref": "e40142fb-4337-4201-a616-d5881b9e6211",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c18c9df9-d11d-4164-b385-d5b873537158"
        },
        "item": {
          "id": "125a59c4-ca24-4bd2-943b-861c171dd34d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b156be9c-c736-420d-9830-fe776d0bea79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49df14c5-4068-40b3-804f-aee3c3fdb78a",
        "cursor": {
          "ref": "ecf6dcc6-c21f-4136-87ab-3952be6b4718",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e3d848df-8920-49f2-b5b1-9bc023d5f2e9"
        },
        "item": {
          "id": "49df14c5-4068-40b3-804f-aee3c3fdb78a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7041ebc0-deb5-4c2a-bf5d-6dc1d54d9f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacb9011-3556-4fef-9a5b-1f74224655da",
        "cursor": {
          "ref": "253ad429-b3ac-4a4a-98a3-4c1f883bcc43",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6434d323-b118-4130-a244-c8f54b7ef320"
        },
        "item": {
          "id": "aacb9011-3556-4fef-9a5b-1f74224655da",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2b8ef9b5-d035-4508-8a92-f559d853a069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f067ae-d585-4edd-a9dc-56e2fec86d8a",
        "cursor": {
          "ref": "bc984194-88fa-4d07-867d-21c376fc6862",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5feb60de-8e0b-46bb-9832-5a160221a169"
        },
        "item": {
          "id": "e0f067ae-d585-4edd-a9dc-56e2fec86d8a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0baf522c-df38-43f3-be17-5b93488dcdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da57b7eb-1603-4a5f-a336-13bafc7edb26",
        "cursor": {
          "ref": "bc5b035e-6d16-4ecd-8b30-ea1600d11e2e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "174af74d-d8c8-40b9-a8c9-1f35ae40c1c6"
        },
        "item": {
          "id": "da57b7eb-1603-4a5f-a336-13bafc7edb26",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ff261612-9737-436e-9bb4-6a9001cf385c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f9733e-df95-41c1-b826-d7e81dc569cd",
        "cursor": {
          "ref": "7f72162f-69c6-4a64-bf81-c509d5213b12",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "567f118a-17b8-44a7-99ea-03751f3c0501"
        },
        "item": {
          "id": "03f9733e-df95-41c1-b826-d7e81dc569cd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bc4256cb-e468-4efd-943d-344468e29ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063061ef-d40e-4d11-8462-7192fa2c170f",
        "cursor": {
          "ref": "8342173b-75c4-4ee1-8aa5-b264d709e45a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cbcabad9-49c9-4698-b89e-0c57f2705cc6"
        },
        "item": {
          "id": "063061ef-d40e-4d11-8462-7192fa2c170f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "811a114c-b2c5-4631-8b5f-4adae64b9d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38354d7-1c4e-489d-90c8-903e884cd10b",
        "cursor": {
          "ref": "15aa5b01-bc60-4eb9-9324-f70ffcb32358",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "123b38ac-3837-4cb5-a92d-fbb4b5502d0e"
        },
        "item": {
          "id": "f38354d7-1c4e-489d-90c8-903e884cd10b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "60f25961-5596-475f-b961-8bcb3da989f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eea2e92-5bba-4589-8914-5f19772692c1",
        "cursor": {
          "ref": "231eed4b-095f-4d39-b5d7-b8e1584b4d6d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bbcdb89c-2db7-4e1e-aab9-1cae03513950"
        },
        "item": {
          "id": "1eea2e92-5bba-4589-8914-5f19772692c1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "67cd0363-9ac6-4065-b1e5-52c4ecddb28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1716d77-1fc3-4802-b233-9128219edd31",
        "cursor": {
          "ref": "752f4901-f950-437a-8780-93dea58d9d0a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a31a766e-413d-4e39-9e3b-ae2dcbb65cf2"
        },
        "item": {
          "id": "e1716d77-1fc3-4802-b233-9128219edd31",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a84b628b-f5f9-465f-89ec-84fa3a2a3ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10447366-aad0-4152-a855-441e696ed5b8",
        "cursor": {
          "ref": "a410690e-ba03-4612-959d-57560aca51fd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f01b489b-97ad-4701-b293-a5da6e04a23c"
        },
        "item": {
          "id": "10447366-aad0-4152-a855-441e696ed5b8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f6cc4e82-fd13-4817-91cb-d3e09e7d0221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518c374f-7ab6-43a0-bd4e-17183e6e0304",
        "cursor": {
          "ref": "6394f597-7c50-4c8d-90d3-67cfba68a398",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8d801e3b-a8bc-4b8c-b4d0-fb6c59bd390b"
        },
        "item": {
          "id": "518c374f-7ab6-43a0-bd4e-17183e6e0304",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2211b329-17cc-4306-ab1e-d4b8a12bc7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a300f38b-ed4c-47dd-b5ca-41a1ff7c5283",
        "cursor": {
          "ref": "ce8649bc-1263-4df8-92eb-7793d3ce2da0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "99120325-2d0d-4137-b7ea-e5787025980f"
        },
        "item": {
          "id": "a300f38b-ed4c-47dd-b5ca-41a1ff7c5283",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f04cebf8-e80d-4000-9645-9d6900806b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c99a8e51-48ff-4a65-9914-4bdb49e9c3cd",
        "cursor": {
          "ref": "35ffbfe1-64c7-48f2-97f1-86bdc480cc80",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bfcb2e8a-862a-4050-abe7-da1165cc638c"
        },
        "item": {
          "id": "c99a8e51-48ff-4a65-9914-4bdb49e9c3cd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "86a607b9-99ba-4097-be61-fb2342d3ef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4b524934-0117-4850-81fe-897e5938993f",
        "cursor": {
          "ref": "f49a410a-4cb9-4f3f-a7d6-d1bfcd28aee1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "de3d388e-b8a1-43d8-8019-479c4ca6edec"
        },
        "item": {
          "id": "4b524934-0117-4850-81fe-897e5938993f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "af4bda1c-42c1-4d67-bb95-eabb5e897b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ac5d790e-117f-4215-88f6-d77c41920823",
        "cursor": {
          "ref": "5ec03175-b3f2-4024-b42a-c23d3c5b2b1d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f93d703b-841e-43b7-9529-349aaaa063c3"
        },
        "item": {
          "id": "ac5d790e-117f-4215-88f6-d77c41920823",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a7c4ccd6-526d-4a61-925a-3de8a1838b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3bedd9b6-d660-4e60-9423-12f09aa971f4",
        "cursor": {
          "ref": "e266717e-cf27-40db-8940-3c53c70d9b5e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b287b31b-c2da-4f9d-a1ca-cac7f7db1aed"
        },
        "item": {
          "id": "3bedd9b6-d660-4e60-9423-12f09aa971f4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26dc49f7-217d-40d0-8f34-d84e14dd391d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "006ee328-2e85-4785-abf4-48e1ca05faf0",
        "cursor": {
          "ref": "118eaeb4-b2a0-4105-b592-df7b19a8ebc2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e2fd1198-7d18-4bf0-9502-9cb1c214a35a"
        },
        "item": {
          "id": "006ee328-2e85-4785-abf4-48e1ca05faf0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "247d66d7-c773-4617-8275-93e213fd3f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d0c98081-5cbd-4585-9c27-0f70262f2ca1",
        "cursor": {
          "ref": "b0b7d3e8-41f1-49fa-a47e-4a0e808f91d6",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d3d05bdc-a652-43ff-b009-6ee769eab18d"
        },
        "item": {
          "id": "d0c98081-5cbd-4585-9c27-0f70262f2ca1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e7c48e50-4058-4ad1-82f1-2627ce9f45b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f0df6f78-9556-4244-a8c5-d78e331ed208",
        "cursor": {
          "ref": "58055e5e-a3a3-4923-909b-cd5baacd52a4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "240508a4-8778-495a-b2ef-cc37d40b2af5"
        },
        "item": {
          "id": "f0df6f78-9556-4244-a8c5-d78e331ed208",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1b8f0bbb-c559-4184-a038-115e1174ac60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6d9d67-ce38-4316-a00c-1c9f8e4a805a",
        "cursor": {
          "ref": "2b399acb-6de3-494a-bb80-1ed54d5a23a3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd00c017-d093-41ca-8880-6c6bef61f012"
        },
        "item": {
          "id": "3e6d9d67-ce38-4316-a00c-1c9f8e4a805a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "91344619-0dcc-4d4c-aa74-82b686fac651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dddd94-03ee-427a-bd88-57cef44c6d6b",
        "cursor": {
          "ref": "43245b6c-92b4-4b43-9513-b81e1304f452",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "794deb65-6065-4236-9191-75a3e53a6387"
        },
        "item": {
          "id": "40dddd94-03ee-427a-bd88-57cef44c6d6b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "caf9c923-b0d1-4c3d-9122-219209e35dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0ca068-a0a4-41ea-a8b9-30e34e3aff2b",
        "cursor": {
          "ref": "b04fbf10-577e-4aed-92e0-a27128bba3fc",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "70af30ff-7a99-41cc-9d2e-e17a2f0c6630"
        },
        "item": {
          "id": "ad0ca068-a0a4-41ea-a8b9-30e34e3aff2b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "772b814b-2830-4d13-8738-d70102ea65e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261ae4c8-6080-4f0f-84a5-c88e4582cfdf",
        "cursor": {
          "ref": "6d305528-b8e9-4d63-a780-deecb0878884",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3ec8bae9-ae93-4165-b973-f8e55ca87315"
        },
        "item": {
          "id": "261ae4c8-6080-4f0f-84a5-c88e4582cfdf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f6b4747d-221e-4506-9ac5-a72fd7219403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b02f1a6-ad1b-482c-a1f9-19e75d62c0e2",
        "cursor": {
          "ref": "98d8efe9-bab1-4e41-a6b6-c35d97f4754a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5a6a9eb1-8d0e-4b34-ad9c-c032aa022e47"
        },
        "item": {
          "id": "2b02f1a6-ad1b-482c-a1f9-19e75d62c0e2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "41524f4b-9f3c-47c3-826f-bee400dfc1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1920c4-82b8-4538-b01a-7a242ee69653",
        "cursor": {
          "ref": "979f0202-4a51-4277-ae95-b40e0c74291a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ae4a035a-2a29-4a74-8bbc-b5138f35330b"
        },
        "item": {
          "id": "8a1920c4-82b8-4538-b01a-7a242ee69653",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d9fb3890-cb3c-47eb-aea2-350c0a8ead4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617d8d3a-35ba-4a91-9cf4-db697c402785",
        "cursor": {
          "ref": "d77d2e19-6199-489c-aead-5e2f142800eb",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d7a12364-ac4e-4e42-8968-c8d80e36cd19"
        },
        "item": {
          "id": "617d8d3a-35ba-4a91-9cf4-db697c402785",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "665e002c-cc2a-49a7-832c-1d76e3f79b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4953804-c90f-47e1-ae4c-2b625c4e50ef",
        "cursor": {
          "ref": "46dbd6c3-a3a8-4eab-950e-34049ea9b0fb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ba64f1f5-27d3-455c-8a17-d0e901f2b070"
        },
        "item": {
          "id": "e4953804-c90f-47e1-ae4c-2b625c4e50ef",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9faf0968-01e7-4c97-ba1f-e4ca15c1a5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b45dec8-a76b-47e5-bfa3-dbfa59a342dd",
        "cursor": {
          "ref": "569c2313-c05f-4323-bafc-bb74f2bcfc5d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8da7a6bd-5bf4-4b85-812b-561ec97f539c"
        },
        "item": {
          "id": "8b45dec8-a76b-47e5-bfa3-dbfa59a342dd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d6656ac-d266-4992-8424-c484441ac662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a345594f-0ed0-461e-b1ee-1068e0cb2f5a",
        "cursor": {
          "ref": "6c9bc6c1-ff2d-4cd9-a283-e068c3f08e18",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4ff83b12-d3b6-4065-b1fe-6c2d138d3f95"
        },
        "item": {
          "id": "a345594f-0ed0-461e-b1ee-1068e0cb2f5a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "61828a42-05bd-4a2f-87fe-1e0be4eb9b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213d25aa-531e-4005-997c-a5f521d75b33",
        "cursor": {
          "ref": "916c35c1-2620-4b65-b1fc-73b7d98734fe",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e2b5a19a-07e7-415b-bdc3-7a6fc30b6c54"
        },
        "item": {
          "id": "213d25aa-531e-4005-997c-a5f521d75b33",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7b8a1d27-17d0-4206-89a6-d22ccbd6f561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e4dea1-e495-4609-9c03-5fdbb62cab55",
        "cursor": {
          "ref": "d36592c1-4ca1-4ebd-b452-1308aa427dfa",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "33b58eae-ec87-4ee3-9381-96553b759272"
        },
        "item": {
          "id": "85e4dea1-e495-4609-9c03-5fdbb62cab55",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1202cc46-ba76-4c82-890b-0ec963d54aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf3741a-051b-4570-858b-b47e787a4de2",
        "cursor": {
          "ref": "0bd1aca4-c12b-45de-9c90-809b71a3cfb0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fc70c203-5a0b-489b-be5b-1adb5501ce8b"
        },
        "item": {
          "id": "eaf3741a-051b-4570-858b-b47e787a4de2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b8e1721d-1c42-47ff-bdb8-585aeb99175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e824251-e1dc-49c1-972d-09645879ea4b",
        "cursor": {
          "ref": "7ff0c2c9-5cff-4830-b51b-bc2e76924ebb",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "61c636e6-b380-4219-bce3-cf8e60d16842"
        },
        "item": {
          "id": "5e824251-e1dc-49c1-972d-09645879ea4b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b2aeb19c-908c-46ef-b597-9202f9557858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6ad1c4-5c04-4206-8dc3-b1f6a56cdea2",
        "cursor": {
          "ref": "99d32ae4-451c-49f0-8f6d-584bd0392d0e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "987ac5f8-b545-4101-a6c2-1617ef47e5ea"
        },
        "item": {
          "id": "0b6ad1c4-5c04-4206-8dc3-b1f6a56cdea2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "111162c0-3ba7-4076-9670-cb682e2fac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1245ee31-81b8-4c86-b226-e0ff93c4e4fb",
        "cursor": {
          "ref": "915c421b-f119-483a-8067-ee46c830ece9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4c36f4a9-e1d0-42f1-8955-864992247fb3"
        },
        "item": {
          "id": "1245ee31-81b8-4c86-b226-e0ff93c4e4fb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "322596ca-535a-4af2-bd6a-8e1a00937513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811c9814-87e1-4367-85f1-ac3dc7d41aa3",
        "cursor": {
          "ref": "eac24bc2-cfae-43bc-9cde-48536d810344",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7e0e7720-ae2c-4b5b-8315-3db2f234790d"
        },
        "item": {
          "id": "811c9814-87e1-4367-85f1-ac3dc7d41aa3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "08c93103-54ad-4744-91b8-b71ace1d97a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec63175f-b487-46e0-856e-565b152d11b0",
        "cursor": {
          "ref": "492b9ea3-d94e-41c0-b3c0-5b3fd0872a06",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d5abbd2-855c-438a-886d-6728b6d0c18c"
        },
        "item": {
          "id": "ec63175f-b487-46e0-856e-565b152d11b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce48abc2-eee2-4106-82e5-40c7107d562e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9808ada-2d8d-4f3a-b2dd-55bb89117b7b",
        "cursor": {
          "ref": "b1a599d0-73ce-4880-a1ba-890e6147a4bf",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fdf5a28d-c1e0-4d89-8589-d325635a52e2"
        },
        "item": {
          "id": "c9808ada-2d8d-4f3a-b2dd-55bb89117b7b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ea5e6f48-a41a-4505-bcb7-0b14c24af624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0aba5a-92e6-42d0-88a6-214cd97b0870",
        "cursor": {
          "ref": "42932a72-9379-42b5-a91d-be68447af29a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8e43b928-fb8c-4029-8b87-4639b4eb3ea1"
        },
        "item": {
          "id": "0a0aba5a-92e6-42d0-88a6-214cd97b0870",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "adde34e7-96cb-45db-a40e-6ecb7d609f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fa988e-fea9-4361-b03f-13a29c086b51",
        "cursor": {
          "ref": "9523a835-3cbb-4fc1-b884-c3eca5cf53d7",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "22e48c9d-e18d-41ca-a240-a6cee72ceef8"
        },
        "item": {
          "id": "75fa988e-fea9-4361-b03f-13a29c086b51",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f261c5f-e8fc-4979-9f5b-8733f0e67ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5691ce0-0ff0-48c3-95d7-973cad8588ab",
        "cursor": {
          "ref": "763f4eae-5c38-4018-83d2-65df8d2a0daa",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eae2efdf-b17e-4d42-8ddd-27124c970d94"
        },
        "item": {
          "id": "b5691ce0-0ff0-48c3-95d7-973cad8588ab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "83df596e-0975-4d6c-be3d-478ca9e38496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746cda88-e70d-455c-b302-d55ae3f16040",
        "cursor": {
          "ref": "b809d31a-026c-4104-8aed-be4553bf3ff5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3176057b-c800-47d2-bcb8-1d588310b095"
        },
        "item": {
          "id": "746cda88-e70d-455c-b302-d55ae3f16040",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef25f1eb-5fd4-4f27-a211-fd222bfe515e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc92ff6-f3ff-4a64-a6b1-669732136d2f",
        "cursor": {
          "ref": "0944b450-4116-49a1-95db-fa2ec10b55cc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9405dbd4-834f-455a-942a-aa8262c5d82d"
        },
        "item": {
          "id": "ffc92ff6-f3ff-4a64-a6b1-669732136d2f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ac535b83-2299-4fa7-9b79-c91537d93bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd10f2b8-ac71-4bb9-bcee-f8e3203dbad1",
        "cursor": {
          "ref": "37aec6dd-7c1d-4d70-aae0-816ad92cd6f9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e00a786e-c54c-4fcd-b807-1f94e32d7a40"
        },
        "item": {
          "id": "dd10f2b8-ac71-4bb9-bcee-f8e3203dbad1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8fedd962-55ee-44ca-87fc-15cfd7b74bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f7e77b-5672-4cff-8123-88fb46dd8a58",
        "cursor": {
          "ref": "c45f49db-8eb4-486b-b5b0-d706f0416ee4",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3a22f1e1-c467-4758-bbd9-e2eaa8c96b30"
        },
        "item": {
          "id": "b1f7e77b-5672-4cff-8123-88fb46dd8a58",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aac873f2-8c2f-4180-b30b-d92abb667150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256fe8c5-ec27-4480-bc29-49eb89075103",
        "cursor": {
          "ref": "971b2c3b-8a63-4cd5-a69f-86a3da150797",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dbc0858e-2338-48d2-bbb5-e2f94d5c5d51"
        },
        "item": {
          "id": "256fe8c5-ec27-4480-bc29-49eb89075103",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "578bf5a3-c7a2-4b16-8c27-658982905214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232dbda2-b46f-4bec-9855-c9091e269734",
        "cursor": {
          "ref": "7e5fe8c5-5ba2-49ea-af3f-54c75dac740f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0bb05e9c-48cc-47ef-8536-dde7f9626210"
        },
        "item": {
          "id": "232dbda2-b46f-4bec-9855-c9091e269734",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "50dab20f-000d-4fad-9297-70d51bd65545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b21cf41-496f-4ec5-909f-02e478d0ff9c",
        "cursor": {
          "ref": "43b3b884-55f9-4851-8df7-19ce765c6795",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "efff2a65-ba57-406d-98bf-d5f4a5db256b"
        },
        "item": {
          "id": "6b21cf41-496f-4ec5-909f-02e478d0ff9c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ddc1ea89-081f-40ef-bb14-d3af262bbd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22433cc7-9bf1-4aeb-8770-fea54d9ced9e",
        "cursor": {
          "ref": "2d858d3d-a921-4a78-a788-f6cf3f3ffe74",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0f20f52f-2fcc-43fd-af15-ac86dd58f875"
        },
        "item": {
          "id": "22433cc7-9bf1-4aeb-8770-fea54d9ced9e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c0ef4115-ca16-43a4-87bc-c1883cf58e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92d4d80-1ac0-4cc6-80bc-794fc2603271",
        "cursor": {
          "ref": "83158bc9-9815-4535-8531-ae4c70ec02cf",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ad4b1e59-6816-41ae-be84-da665c85f905"
        },
        "item": {
          "id": "f92d4d80-1ac0-4cc6-80bc-794fc2603271",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3f94e0c5-99ff-458f-8733-453d6bc59630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d041cc-ff43-4cb4-99ed-b8fed38a2f80",
        "cursor": {
          "ref": "2d649e31-c8a3-4e98-a3c8-e08fc8a5a26f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e8275965-ce11-4816-9193-608e0175de2c"
        },
        "item": {
          "id": "d6d041cc-ff43-4cb4-99ed-b8fed38a2f80",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2b81b853-8f5f-4cfa-90ce-c0310c345897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab74a566-59ba-4ae6-9d0e-54fc2f3600fc",
        "cursor": {
          "ref": "f488436e-6d04-42ac-bef9-73f6ac29ef24",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a0b7db73-0754-4b95-a3b7-4c5f2c2ae020"
        },
        "item": {
          "id": "ab74a566-59ba-4ae6-9d0e-54fc2f3600fc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "673b3ff3-516d-4daf-a3f4-2110bbe964bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bb7d94-ee25-4314-a172-f8efb56bc504",
        "cursor": {
          "ref": "347b459b-0b1c-4041-b397-b275476baf10",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "faf94c73-749e-46cb-86a3-a19de4973e43"
        },
        "item": {
          "id": "d2bb7d94-ee25-4314-a172-f8efb56bc504",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c5e8a342-1f6f-4daf-a619-11f1612293da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c482d20b-aa91-4ec6-9a55-bbe0e72e9c99",
        "cursor": {
          "ref": "74d9e15e-00dc-45a2-a7f6-d1fca633fcfd",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "72747362-20d9-4116-95f2-5c3ff6167934"
        },
        "item": {
          "id": "c482d20b-aa91-4ec6-9a55-bbe0e72e9c99",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "51e328ba-3682-4dd4-8377-cfefda089f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d059e0a-4d27-4f6b-8103-eac41189cbe6",
        "cursor": {
          "ref": "be855ee5-d3f1-40db-8323-fee4f87bcaf7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4e5b88c2-ceb2-484f-9cd0-db2ae4a628b6"
        },
        "item": {
          "id": "5d059e0a-4d27-4f6b-8103-eac41189cbe6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5bac820c-06d8-4e7e-a44b-8e5a1cbf4316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b5fcc3-3af2-4edd-ace1-89e27fb1a15e",
        "cursor": {
          "ref": "2f368135-206b-4731-b92e-9a53cde2ef25",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "50744aef-ca71-43b8-8c6c-7b589bf911b3"
        },
        "item": {
          "id": "74b5fcc3-3af2-4edd-ace1-89e27fb1a15e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5a49b315-7df2-4a2f-8646-ba9fbb6d4c6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd41d235-0b4c-4f6f-a091-1041c58914c3",
        "cursor": {
          "ref": "b9f3ac0b-3cdf-47c4-aa45-af7440e1e319",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1ca2c004-e340-425b-92f4-0e3734c05a0d"
        },
        "item": {
          "id": "fd41d235-0b4c-4f6f-a091-1041c58914c3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "48f5a810-5769-40c2-a185-e2890ea153c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d57a49-959a-400d-9d72-e14b6661bda2",
        "cursor": {
          "ref": "0d45dabc-7c75-40ff-8d7f-fe5f5ffc1af7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fa50faf9-9ab7-488c-9cb2-bc6f64b6c344"
        },
        "item": {
          "id": "82d57a49-959a-400d-9d72-e14b6661bda2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1f65edb1-eb44-477a-a174-1c84bb537981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ee79a6-7b9e-4c24-a4a6-d930179d5ef5",
        "cursor": {
          "ref": "67fed0bf-5333-4149-9ed2-db3beebe69d1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6a17db1a-88e7-4ea8-8a31-00837b12a8ae"
        },
        "item": {
          "id": "16ee79a6-7b9e-4c24-a4a6-d930179d5ef5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "24665e93-e470-4202-b242-109ac4e4afeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a66c28-4d66-4324-b424-0eb8f5af3a00",
        "cursor": {
          "ref": "eecf4ea8-dadc-41b3-b142-98ace0f9af66",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0a737b5f-a735-4321-8ca2-b648eca1aec1"
        },
        "item": {
          "id": "46a66c28-4d66-4324-b424-0eb8f5af3a00",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d4f58e0f-d956-406f-a377-3812e50e24f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578aeee3-f246-4c3c-8b12-7b2115bb73b3",
        "cursor": {
          "ref": "7807b20b-fd57-4842-85ae-00c23c55531e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c95f0842-68db-4027-ba72-6c5e91075b01"
        },
        "item": {
          "id": "578aeee3-f246-4c3c-8b12-7b2115bb73b3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0221d421-8189-4800-97bd-c856f1336bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c40789-cea4-4ffa-a296-82469f0bded7",
        "cursor": {
          "ref": "e2dadd48-a610-4b46-9589-38c960db6e82",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5af1fbc3-4b65-4bc0-a960-b22ebe8fbd61"
        },
        "item": {
          "id": "88c40789-cea4-4ffa-a296-82469f0bded7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d6d26ddd-b2e3-4a39-8b03-151ace20ce77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784873ba-c71f-4566-bf1e-8a53ab7a947a",
        "cursor": {
          "ref": "2c5b4375-9588-4bd3-a781-be7449aed357",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cfbf92fb-2dc8-4942-acd0-43acce2702cf"
        },
        "item": {
          "id": "784873ba-c71f-4566-bf1e-8a53ab7a947a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1a90b862-03ff-4dff-868c-35e080575fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c8b381-0f94-4d56-b95e-58eb35854c18",
        "cursor": {
          "ref": "d42e41a0-44de-4778-824e-fc4693c78431",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5220fd77-6a1d-4316-8ded-29f16b2cea6d"
        },
        "item": {
          "id": "f1c8b381-0f94-4d56-b95e-58eb35854c18",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "571bee4a-fbb2-4b1b-b559-20c79015756d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5ffd7e-dcb6-4161-9c77-75c79ad4b736",
        "cursor": {
          "ref": "293380a8-c7e3-47a8-a71b-8e082302f45a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "14adf19c-149c-400e-ba14-577089a0148f"
        },
        "item": {
          "id": "5f5ffd7e-dcb6-4161-9c77-75c79ad4b736",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c667d280-0115-471b-97c3-82d3c8843ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383135a2-67a6-44a9-bb89-7f8c06efbf05",
        "cursor": {
          "ref": "9fce2231-a2a6-46cf-8d78-bfea928a5355",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c813d8b8-0df6-4de9-abfe-9aef2cf7aaad"
        },
        "item": {
          "id": "383135a2-67a6-44a9-bb89-7f8c06efbf05",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1496398e-311e-494e-ada3-afab0a149de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1fd3df-c6ec-4df5-b298-8ef9c120f060",
        "cursor": {
          "ref": "7fd82113-3d26-48c4-bdb1-37aa708f4617",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9dd1eb51-1c28-4764-a60c-359d5485948d"
        },
        "item": {
          "id": "fc1fd3df-c6ec-4df5-b298-8ef9c120f060",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ca87730c-a258-42ed-9918-180602d17799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fd10b7-505e-439b-a7da-5561f219e86f",
        "cursor": {
          "ref": "88bf6622-4254-4309-a486-c6958dc60e2c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "35f4ee24-3377-4d38-928b-fadd27baf6f4"
        },
        "item": {
          "id": "53fd10b7-505e-439b-a7da-5561f219e86f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e8957a26-aab4-48a6-8ff8-de05324fb4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d02b42-5d0c-484a-95e9-3efe0790e3c3",
        "cursor": {
          "ref": "4a60b3bf-6f8c-49cc-ad62-583684affff7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0a43ad95-e72b-493c-8021-b01361845497"
        },
        "item": {
          "id": "21d02b42-5d0c-484a-95e9-3efe0790e3c3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "86c700b4-6f10-4b1e-a8e4-0b6d4b854741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97b8e56-6e8d-4028-b973-90b9be5686eb",
        "cursor": {
          "ref": "c468973a-e90c-444a-9c75-94e7d7079b14",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "481e7073-10bf-4ec7-9b18-175b7ab0b7e6"
        },
        "item": {
          "id": "b97b8e56-6e8d-4028-b973-90b9be5686eb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a859a99f-9212-4e7e-98f0-c9bc4188dc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f497e1-d349-465b-b57c-5ceae8aebd8c",
        "cursor": {
          "ref": "7a0f1227-2e44-478f-8736-564ee4a1abd8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fc4a196a-2e7f-448a-a3c8-e72a2476a7c4"
        },
        "item": {
          "id": "55f497e1-d349-465b-b57c-5ceae8aebd8c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b393da80-0550-43a0-99a5-789284a88e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f230d97-f91a-453d-b265-b6db5005bd81",
        "cursor": {
          "ref": "fb615b50-4437-4c24-aa1c-669601c4194c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6ddcf591-dc2d-4321-b31a-b89ba4f8f4ea"
        },
        "item": {
          "id": "3f230d97-f91a-453d-b265-b6db5005bd81",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b289873f-6bf2-4bcd-8632-3eb05a9a3e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ff3d1e-c09d-495e-aa9f-fe6628820e5f",
        "cursor": {
          "ref": "c94cdafb-3aba-4f16-8281-074dd22f8a8c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9492ec6d-c710-40f3-b3cc-0ddbf38627f9"
        },
        "item": {
          "id": "a5ff3d1e-c09d-495e-aa9f-fe6628820e5f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e60fe4b3-2386-4418-91e3-df989f42b848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5a9385-8960-4bf6-8e00-05c723ac5f8c",
        "cursor": {
          "ref": "219303dc-83db-4990-b924-5cb4b131a867",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "31ac5823-0b2e-4c86-92fc-3c505e675686"
        },
        "item": {
          "id": "6b5a9385-8960-4bf6-8e00-05c723ac5f8c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "395bddbb-51d1-4656-8965-eaffe0301b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcee99d6-8540-4b7a-9fa7-fbc002ceb828",
        "cursor": {
          "ref": "f19a38a4-bd4c-4a48-96e6-034f97314c88",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e2acf5d1-c8d5-4391-a332-fe00ed8cb1c3"
        },
        "item": {
          "id": "fcee99d6-8540-4b7a-9fa7-fbc002ceb828",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bf4c5361-80cf-436e-9ba3-a99eb07e0bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51747443-6995-4762-9414-d718acdd9c14",
        "cursor": {
          "ref": "f32404ef-a7bd-4690-9884-882931803099",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fd585d3c-6cea-4da3-a62a-a4c53af60879"
        },
        "item": {
          "id": "51747443-6995-4762-9414-d718acdd9c14",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fe47f273-41d6-45dd-93e8-1721d0789436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400a102d-8ee1-4ff1-acbe-fdc4602fe1d9",
        "cursor": {
          "ref": "96d79d77-89c6-47e2-b82e-20b9c314b46b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7c2fa6fd-c511-4b46-88d8-c662af0ffbb0"
        },
        "item": {
          "id": "400a102d-8ee1-4ff1-acbe-fdc4602fe1d9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a2104e0e-6e4b-416f-b3a4-88fda19be556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc897ab-b4fb-4bb6-871a-c9e148c37893",
        "cursor": {
          "ref": "f26abf6c-507c-4540-bc22-cb1b6e231854",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "100cdb90-3a20-47bf-90bb-c060ffca0318"
        },
        "item": {
          "id": "8cc897ab-b4fb-4bb6-871a-c9e148c37893",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd5716e0-0d2f-4e86-b827-8d771e92d9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b609b4-5318-413f-ae80-9b1820db8afc",
        "cursor": {
          "ref": "4bb107c7-da7e-48d7-8394-0d0c64cd2301",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "02e464f2-70bb-483c-9b6a-2e7b779af45e"
        },
        "item": {
          "id": "34b609b4-5318-413f-ae80-9b1820db8afc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1668e8a7-f813-491d-8d85-3ecbf334ae73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea54afbd-4867-4e18-9c74-a5ac4efb557b",
        "cursor": {
          "ref": "43ee7a82-3bef-4871-abfa-cf4911c40b7e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b5786496-ca5f-42f6-845e-ed04c39d0a46"
        },
        "item": {
          "id": "ea54afbd-4867-4e18-9c74-a5ac4efb557b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "abd67847-68e9-4e2a-93ef-edd8c44aaa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f212ad2-4241-45a0-9756-091537c0dccb",
        "cursor": {
          "ref": "4eaf1252-e94b-424a-9a66-e126450bdab2",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a5de9541-72b5-478b-90f7-bd6cb1e6e6c5"
        },
        "item": {
          "id": "8f212ad2-4241-45a0-9756-091537c0dccb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9e12f6d9-21d1-4fae-9934-120380e05eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04b4ccd-1fe8-42a6-b613-7517866ec603",
        "cursor": {
          "ref": "a59953d6-3951-44f2-9ada-a03fac59ab6b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b7a3ea2b-21e5-4025-a90d-72292cf28fa1"
        },
        "item": {
          "id": "f04b4ccd-1fe8-42a6-b613-7517866ec603",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2d6ef02e-b878-48d1-a060-d277bf162d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012886e4-731a-4d6b-9af4-11f17aed2f87",
        "cursor": {
          "ref": "f03b41e4-ee40-47b9-911c-01a0bc8cc0ce",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2b0d4ce5-1716-4da4-8fdd-72a93f79f830"
        },
        "item": {
          "id": "012886e4-731a-4d6b-9af4-11f17aed2f87",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0a71a6c6-eaff-422c-b07e-310f10e13eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f05599-95fc-4749-bf49-afd194f0e026",
        "cursor": {
          "ref": "b5b65d6a-ba2c-4055-a955-b0eaff853204",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c59d0ada-bef7-4385-b176-08e2e682bb22"
        },
        "item": {
          "id": "51f05599-95fc-4749-bf49-afd194f0e026",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "082afd3d-c3a1-472e-81fd-fa731ad68b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf7f89c-14ef-4c27-86bd-1d0005642e49",
        "cursor": {
          "ref": "4ff46596-9959-4dd1-a0e7-eac1ddf5dff6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1f19bdac-c7d2-4066-bec5-72c7e15e4041"
        },
        "item": {
          "id": "6bf7f89c-14ef-4c27-86bd-1d0005642e49",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c30ce17e-cb10-4e6e-aceb-9322753c493a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c3d63b-d20d-48b9-9524-dadb74210be2",
        "cursor": {
          "ref": "9ec407e6-9d3a-4da7-98d0-41bf4cfd33bf",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b5dc51bb-5d8a-4a39-bb78-77f3e7878ebe"
        },
        "item": {
          "id": "b0c3d63b-d20d-48b9-9524-dadb74210be2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "72d3ec01-457a-4b1c-9ee5-a08db7234bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d987c4e5-f833-4346-a0b6-f2accfc9df68",
        "cursor": {
          "ref": "514be48b-6d53-4ee4-ba92-df8eb548f627",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "11efd4c8-25f7-4385-b6e6-f87079d08c20"
        },
        "item": {
          "id": "d987c4e5-f833-4346-a0b6-f2accfc9df68",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dc67f7a7-9c71-4982-995c-d373678f2452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0881b7c-9ce0-46d1-be23-c0ca90725e68",
        "cursor": {
          "ref": "f33de605-09fb-4dab-b084-1047a43e9de8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "741f10b2-5476-4214-869b-a0f8e8aff4c2"
        },
        "item": {
          "id": "c0881b7c-9ce0-46d1-be23-c0ca90725e68",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cf35776e-2837-4946-86d2-528450558854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1cc8d9-88a1-4049-a736-0765b380aa52",
        "cursor": {
          "ref": "a03dddc9-edaf-4fe2-8c5b-cf62fc4353e9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fcaa7a74-97b3-49d1-9ffb-a487453108f3"
        },
        "item": {
          "id": "2d1cc8d9-88a1-4049-a736-0765b380aa52",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "21123f64-76f2-4ff0-9091-bfe39a4411b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3872981f-ef9d-4117-971b-4d6f2058f9e5",
        "cursor": {
          "ref": "c5e944bd-0477-41c0-9c23-9238e0a7d748",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "53761ae8-c146-4563-9f90-88d6afec2e9b"
        },
        "item": {
          "id": "3872981f-ef9d-4117-971b-4d6f2058f9e5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0089d25b-1011-4c22-adb0-142a181de550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8991c35-24f0-40e6-9601-fb48fe06c99f",
        "cursor": {
          "ref": "7c972689-f030-4594-908a-7d0d7c093042",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2f4114af-328f-4b73-98a3-4f216f06bbc6"
        },
        "item": {
          "id": "d8991c35-24f0-40e6-9601-fb48fe06c99f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "af83578e-a485-4525-922f-6444ed9a64fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2206ab92-2a6f-4060-bb32-e6e8abb2e2ee",
        "cursor": {
          "ref": "1b4355bc-53d4-47e7-8ed3-b77b9a033f36",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e8fa6820-4679-4494-9100-e886797f6fd6"
        },
        "item": {
          "id": "2206ab92-2a6f-4060-bb32-e6e8abb2e2ee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6883d15f-fb6f-4137-b6eb-7b8eec66c186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ae85e1-4fa6-496c-9171-5da5a845d0e7",
        "cursor": {
          "ref": "4740fc06-6fff-4afd-be46-71e5b33932d2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "988f264d-5eed-4348-990a-7e0eaafa347f"
        },
        "item": {
          "id": "e4ae85e1-4fa6-496c-9171-5da5a845d0e7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "53145bb8-9106-484a-b1df-1a95ead0cf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e077dd-c5e1-41a6-b175-52d6a0eb1c43",
        "cursor": {
          "ref": "f2eb5eaa-f543-4f24-bf4a-6ce9a6a7aab1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b9ba8481-bea5-4485-b5e5-67c31c5f7b44"
        },
        "item": {
          "id": "e3e077dd-c5e1-41a6-b175-52d6a0eb1c43",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0ed2835f-465b-477c-812f-ad9ca0de8657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f50659-341a-4aab-ad7b-864a1cd40fc3",
        "cursor": {
          "ref": "4653379e-820d-47b0-a0db-4ceaff6f128f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9859f808-60ad-4fbc-a1d5-11b93cb11387"
        },
        "item": {
          "id": "39f50659-341a-4aab-ad7b-864a1cd40fc3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ca81ea03-392b-4b43-9395-1ad2079bd8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47efdab2-6b03-4370-810a-e54da3cf0d2a",
        "cursor": {
          "ref": "ebd8e5c3-5eee-44cf-a04e-c4e5d6019c1d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0818a9c7-dd30-4c9d-a1a6-641ec01beb2b"
        },
        "item": {
          "id": "47efdab2-6b03-4370-810a-e54da3cf0d2a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "10afc79a-72e9-40e4-9878-d9d014cc4197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0629f6-1e84-4600-94fc-5c94b3cf9185",
        "cursor": {
          "ref": "967360c6-9f0f-44d4-88c2-2af7c48eecd5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "861dec56-1172-4f85-b9c9-a9bb2d89f571"
        },
        "item": {
          "id": "7b0629f6-1e84-4600-94fc-5c94b3cf9185",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "caf38dd0-7b6e-4535-8db5-1133b6c8cd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7097f4f7-1291-4c09-921d-25f04f613877",
        "cursor": {
          "ref": "586c9fa0-490f-463d-9142-045f5267c664",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e3a7b9b6-ac00-4876-958f-59f07a6e86cc"
        },
        "item": {
          "id": "7097f4f7-1291-4c09-921d-25f04f613877",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "02a34f1d-f505-42b5-add8-8f82ae3ac49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11ce240-b627-473b-a578-b27ba40816a1",
        "cursor": {
          "ref": "e220dcdc-f6f5-4dd9-88e9-4e886d436c94",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fe682988-e88e-4fcf-b776-913bc154f052"
        },
        "item": {
          "id": "f11ce240-b627-473b-a578-b27ba40816a1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a2c8fac8-e714-4cd8-9540-fc0f409ed0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e4f9c7-4107-43ce-85d6-569a6fbf09e7",
        "cursor": {
          "ref": "f33cbf91-3c3a-4f18-8504-0181274ad254",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5602f9ac-4480-4537-851a-683464fb88d0"
        },
        "item": {
          "id": "d9e4f9c7-4107-43ce-85d6-569a6fbf09e7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ef679b71-fe03-49e0-a4e8-5afb5aa170fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce65994-2366-41d5-a5b0-5e6a36fd131e",
        "cursor": {
          "ref": "6fd586da-338d-4ccc-84a4-3565b8cbbc6f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "237815cc-a3d7-4e25-ae6e-3bf3f1df9704"
        },
        "item": {
          "id": "3ce65994-2366-41d5-a5b0-5e6a36fd131e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7d2760a5-1ec4-4bb8-9d6e-fd2b79d06c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dfa61a-633a-4d8e-8b9f-f432addadc45",
        "cursor": {
          "ref": "cc7c7255-764e-4d04-ba06-86ee3cd174c4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "229ad0c8-ddce-4a58-8b40-6107b0fcd796"
        },
        "item": {
          "id": "00dfa61a-633a-4d8e-8b9f-f432addadc45",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3738035f-c2e9-489a-b1ca-e2bb123a4566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7cae2a-2668-4253-9a03-17a2621cd40f",
        "cursor": {
          "ref": "7f4f05f6-238e-4901-a930-c227b2cf9410",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd664600-a389-43f0-9b4d-3635ce1b2b62"
        },
        "item": {
          "id": "fd7cae2a-2668-4253-9a03-17a2621cd40f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "eddf2d85-b92b-477e-9dbb-bd81a390da1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38426534-4818-4c86-9187-377041099533",
        "cursor": {
          "ref": "a28d7947-b553-456c-8427-c8b7e8e8ffbb",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dd69f0a8-61c1-4b4f-ab65-d2a585763a80"
        },
        "item": {
          "id": "38426534-4818-4c86-9187-377041099533",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "503a915f-9cc1-434a-b053-54f0bf442ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd629ef-f148-402d-b058-eb233c1dcc9d",
        "cursor": {
          "ref": "66bddde0-cde6-4277-b9f7-fa438ceed3d6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "37c1bbec-a63b-4264-8563-2d796b468e49"
        },
        "item": {
          "id": "fcd629ef-f148-402d-b058-eb233c1dcc9d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "88cc38be-3352-4dc5-b9c7-805710e26895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ae2c74-23b5-4bf8-ae3d-228dba7a3c78",
        "cursor": {
          "ref": "3f50e847-fba3-4513-868b-ace55a3e89a2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "647514ff-1e48-4bb1-ac03-d8dc0a434cf3"
        },
        "item": {
          "id": "64ae2c74-23b5-4bf8-ae3d-228dba7a3c78",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e1eb4209-07f1-45bc-90d9-f669e170ef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6c24ed-e6f3-4d24-93a0-55a326ef341d",
        "cursor": {
          "ref": "2fb26113-ddb2-480f-b96b-926f5960e560",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d8460d1c-4d84-4c0d-b942-5de9bd379c0d"
        },
        "item": {
          "id": "eb6c24ed-e6f3-4d24-93a0-55a326ef341d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e75523e1-60f8-4b9e-b9b5-d2e888e5db32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cf97d3-2858-4434-8e85-9baaf70ebdc5",
        "cursor": {
          "ref": "6aed65d5-bfa2-4f1b-8445-69cc7c8f232e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5c5ea660-7501-49bf-a450-d8cb592521f0"
        },
        "item": {
          "id": "07cf97d3-2858-4434-8e85-9baaf70ebdc5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8e9f2592-eef3-4079-9afc-99718e029dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5145f7f-fd55-4cad-9f8d-f71e6b077e68",
        "cursor": {
          "ref": "84ba3103-c45f-4b0e-9c43-d610b36cbebd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "471f3fd5-a4be-4d1d-973c-1b86f7fe8cfe"
        },
        "item": {
          "id": "a5145f7f-fd55-4cad-9f8d-f71e6b077e68",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0b256dbe-34e6-41f6-880c-120a9e9bcac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83520fa6-bd6c-4bdc-ac32-c93e2759658a",
        "cursor": {
          "ref": "7f06fc3a-1247-423e-8117-ece41d3d1d7e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "214b4325-84f2-462e-a0f3-5504e4596c25"
        },
        "item": {
          "id": "83520fa6-bd6c-4bdc-ac32-c93e2759658a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d09bf5d-2d29-430f-ad84-8225630e3b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe8bbb-2960-440c-82bb-44873471ed2f",
        "cursor": {
          "ref": "4428e12e-6edb-4300-82cc-143d4493fdc3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "058862f1-04a8-4fe4-8c97-99b5f88a887f"
        },
        "item": {
          "id": "8cfe8bbb-2960-440c-82bb-44873471ed2f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "812ddfdf-11ea-45e8-81ba-08de4469cc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d481ae-57ae-47b4-8686-85c9e17ab9bb",
        "cursor": {
          "ref": "0617d9e0-fde3-47d4-8545-6f668c21be43",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eaec2bf0-d239-437a-9a4e-be0d471612d1"
        },
        "item": {
          "id": "96d481ae-57ae-47b4-8686-85c9e17ab9bb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "92ae2af6-a541-4533-aa1b-5137e6fa4b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2459106-c9f9-4d9e-8f1b-29d264f9f9a6",
        "cursor": {
          "ref": "166e22b7-b0f0-4fa6-beaf-af813ffe5535",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "87f7e6f0-33e0-464d-ac96-f88a18f6c7a5"
        },
        "item": {
          "id": "e2459106-c9f9-4d9e-8f1b-29d264f9f9a6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ef0f2c98-0384-4fca-b01b-06430e31af3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bb75ff-cb7b-427d-aee0-4482dc5a541f",
        "cursor": {
          "ref": "d3f1c461-fc67-427b-84a5-9aba1c92c9a8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bf8a9efa-571d-4c7d-bae5-d29f60228b8a"
        },
        "item": {
          "id": "e1bb75ff-cb7b-427d-aee0-4482dc5a541f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f18acc11-48a7-4804-b2b4-c4ec7bbb64e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e87a7a6-2930-4368-87b6-698333376a74",
        "cursor": {
          "ref": "fca09b62-030d-47b0-8e81-ed57e3506106",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3e621516-ddd3-43fe-9c75-f86188d8ad25"
        },
        "item": {
          "id": "0e87a7a6-2930-4368-87b6-698333376a74",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "350f21fe-d0b0-4b10-8062-32dfa9370e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a947e799-bb86-4a7e-b153-f457d87fa908",
        "cursor": {
          "ref": "1d09d3e4-a65b-4804-9d10-5f0ad2b718e5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0dadde5a-317c-4f48-b8c1-1875e55d80b5"
        },
        "item": {
          "id": "a947e799-bb86-4a7e-b153-f457d87fa908",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a61053e1-3a21-4b41-8f97-8c4415f7345d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbac7d70-0137-4ea7-b21e-b82bcef10868",
        "cursor": {
          "ref": "573175d0-c5fd-45c2-a4f0-58ad0ace70a2",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3ac8d331-c55e-4504-a7d0-2f6b6a20a0f5"
        },
        "item": {
          "id": "bbac7d70-0137-4ea7-b21e-b82bcef10868",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ca0570b3-4ac7-440f-9a71-9934db69e951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59030b1-e360-4257-921e-e49769b18f1a",
        "cursor": {
          "ref": "40f705a0-d373-4c6b-9bb0-9852b8bb31aa",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9fb4dc64-fd0e-4efd-af7f-e645eb21228b"
        },
        "item": {
          "id": "a59030b1-e360-4257-921e-e49769b18f1a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e29ffcb3-519c-44d0-b201-e2c3f58d8f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6704464-49e2-4db3-8542-164dfe86fb8c",
        "cursor": {
          "ref": "7b2d940b-462c-4fd5-94a8-c87dfdc05f42",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7cf05cb3-d627-4ab7-a5a2-1660261b7cd1"
        },
        "item": {
          "id": "c6704464-49e2-4db3-8542-164dfe86fb8c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1b2eaa1b-f537-43d3-950c-97e7bfdf4a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c74b0e-6a8d-41b0-a6a8-74e8d1ca1bcf",
        "cursor": {
          "ref": "c1ce9f9e-1f81-4f08-858e-279b95cd224e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aba91c5c-fa5b-407c-9824-a027aa27ca3f"
        },
        "item": {
          "id": "96c74b0e-6a8d-41b0-a6a8-74e8d1ca1bcf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e45e926d-0461-433d-a137-905bc3d63b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250809fc-5393-4d1d-a233-0fa291d9e650",
        "cursor": {
          "ref": "dcc12c26-e496-42cf-9813-1bee78b18393",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d4f5277c-e15b-4047-b084-8936939dfcb0"
        },
        "item": {
          "id": "250809fc-5393-4d1d-a233-0fa291d9e650",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "41fd3f8e-1a96-466f-8b65-4e6960f35b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a9ffe4-61dd-482a-8a24-81f99f0c5865",
        "cursor": {
          "ref": "c503d9c8-db40-4865-8e3b-9f874550cdd0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "51ce57df-81a1-4930-97fc-341c9d8455ea"
        },
        "item": {
          "id": "76a9ffe4-61dd-482a-8a24-81f99f0c5865",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4c8620a4-b82b-4a5c-b527-e2097aaffcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981ff855-1dde-4d1c-9054-4611316e104f",
        "cursor": {
          "ref": "7e8d6f84-e158-4e33-9678-6802bd7c51c3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5263dcb6-2afd-4fc6-9142-4455577eb9a9"
        },
        "item": {
          "id": "981ff855-1dde-4d1c-9054-4611316e104f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ca2d4cda-ce96-4048-874a-8bb6fe88ea4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b2e1c4-8eb7-43c7-9bae-8452533b4242",
        "cursor": {
          "ref": "3f856a34-87a0-475d-9644-d6d8bd00b874",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6ba6b33b-7090-465e-8309-0f440bb8d8b8"
        },
        "item": {
          "id": "16b2e1c4-8eb7-43c7-9bae-8452533b4242",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0c287eb9-a43c-4113-a6ca-f65cdd85690f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb528371-860e-4f42-877c-23f6926d7a34",
        "cursor": {
          "ref": "001e7eb3-2fd3-41e6-bbf4-587587cc0c74",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "28d014e7-4b4c-4d87-9476-6001adfe6cd7"
        },
        "item": {
          "id": "fb528371-860e-4f42-877c-23f6926d7a34",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2ff50e13-4cbb-4699-96f1-af44b37cae48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1572ea5a-9153-4185-bf65-5527628ac93b",
        "cursor": {
          "ref": "ec28d0be-d268-46b9-a1f5-10f639aeef1e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9878e63a-4936-4584-8022-fce6b7d61b6e"
        },
        "item": {
          "id": "1572ea5a-9153-4185-bf65-5527628ac93b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "be53d3a7-21fa-4e6d-a893-770e084b6656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abc298b-eec7-442a-b778-bd5864b3a3ce",
        "cursor": {
          "ref": "3a0778f7-caab-4a9f-bd4f-5ac355d2b71a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0ea6a43d-c5ca-4152-a21e-439ae5fd7426"
        },
        "item": {
          "id": "9abc298b-eec7-442a-b778-bd5864b3a3ce",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "716bc3c1-03ee-4af4-b6b8-f4576d1a67aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3540fb-3542-4a82-960a-13339458f298",
        "cursor": {
          "ref": "ed499356-6d7c-415b-a6ca-1d3108daa4ff",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9ed7b0d-28b5-4305-873c-bfd02ec482ef"
        },
        "item": {
          "id": "6e3540fb-3542-4a82-960a-13339458f298",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "79257aa7-fcef-438c-8549-f5d0aaa21906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8f10cf-1f51-4497-92ea-0f702cfc3f7a",
        "cursor": {
          "ref": "52f9f403-1823-4f5d-921b-46e93f1dbf09",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0b35418c-0ab4-49ac-a211-0630d3cf5020"
        },
        "item": {
          "id": "cb8f10cf-1f51-4497-92ea-0f702cfc3f7a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f2cea8bb-521a-4ed2-b864-060ef6f744de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b065b51-4cd3-42f8-a190-f126a78bd4db",
        "cursor": {
          "ref": "5ad1f240-1efc-4a4d-be7e-8b98c1c04a7a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f5dc48b9-2e66-4166-9376-15fdabb7d81e"
        },
        "item": {
          "id": "7b065b51-4cd3-42f8-a190-f126a78bd4db",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d37d8183-2c56-4a46-8629-e32b77dc91e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbcdf9d-0ef6-4ab8-b374-2f3c9aa6abde",
        "cursor": {
          "ref": "cfd87f1a-6a61-4864-bda0-cad518162c87",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5cf3a2c0-63e6-4858-aef1-8272b766a9a3"
        },
        "item": {
          "id": "9fbcdf9d-0ef6-4ab8-b374-2f3c9aa6abde",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eb8840b0-36e7-4d3c-b383-39be0600dbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2879792f-1819-4d28-9c59-ef62f36c1b25",
        "cursor": {
          "ref": "af82421d-5a63-4974-8616-27169a3267f8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "431e8431-6e15-4576-a57b-283f80f2116f"
        },
        "item": {
          "id": "2879792f-1819-4d28-9c59-ef62f36c1b25",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9f6c9c46-6de9-4ea0-8348-8cce0553e242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298b837b-e946-4146-819f-8b706baa98d1",
        "cursor": {
          "ref": "a06a51e7-f4fd-440a-b531-d52f2f342fc2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3ebee51c-77d9-49db-9da6-f7d2bf8650d2"
        },
        "item": {
          "id": "298b837b-e946-4146-819f-8b706baa98d1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3502ad33-ba02-45e0-b6d0-770a9d860337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8615c760-20cd-42b4-a050-ff2fed740d9a",
        "cursor": {
          "ref": "0bf2a554-973a-414f-b3ea-43979b499a2d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "245a3a78-fe4d-427a-b4c7-6b3eec9aa8b0"
        },
        "item": {
          "id": "8615c760-20cd-42b4-a050-ff2fed740d9a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1621c628-5360-415e-a3ab-95e944683c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e301dc-6cca-4cf0-a2b2-62b3fec938be",
        "cursor": {
          "ref": "368e26ca-63ce-441e-934c-817ff988cf84",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "34f373d6-82a6-4dc1-b48f-5f8960c057e6"
        },
        "item": {
          "id": "95e301dc-6cca-4cf0-a2b2-62b3fec938be",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6bc2f829-416f-492f-8c12-9f54f23d1750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89eb666f-9de2-4a16-a786-9883af4a173e",
        "cursor": {
          "ref": "0eb252af-f940-451e-8633-2f99a318b73e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9be16696-2a74-4838-9238-cc3afa26b818"
        },
        "item": {
          "id": "89eb666f-9de2-4a16-a786-9883af4a173e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2498e0f8-7b13-4666-b1a9-819bd09bd056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f4ace0-e423-4b37-aed0-1c855a6bef07",
        "cursor": {
          "ref": "a766da2f-6634-4dba-8f8c-873e91991988",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c592710e-8095-430e-9e0e-95ccc0e785cb"
        },
        "item": {
          "id": "d4f4ace0-e423-4b37-aed0-1c855a6bef07",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "34ba081d-2249-46fb-b849-d0f18c6f89f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf935a6e-cc0d-41cd-abfd-f5a7b4077566",
        "cursor": {
          "ref": "8ddf79ca-7553-4f12-a1bf-bfe6edf779a2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "71d993fa-2ff2-4f8d-a6ac-8de775cb6a4b"
        },
        "item": {
          "id": "bf935a6e-cc0d-41cd-abfd-f5a7b4077566",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f0d248e8-0f4f-47e6-9298-ac24a81f8d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cde8ee7-8beb-437f-8087-66f3bc76c633",
        "cursor": {
          "ref": "5adb6c7c-8fb3-4c9c-a3e4-ba58f5a43ce8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "50d40589-77b4-4980-8174-299dc582a3c3"
        },
        "item": {
          "id": "5cde8ee7-8beb-437f-8087-66f3bc76c633",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "98f5fc1f-878e-46b4-aae5-d08bec790a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6b6769-a850-4221-bd80-b876b9309a31",
        "cursor": {
          "ref": "24355a3d-341a-44f2-a2e1-442b56c98422",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b8433bf0-98f9-4e7c-b36c-b5a1a19c785d"
        },
        "item": {
          "id": "1a6b6769-a850-4221-bd80-b876b9309a31",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "65644495-fff4-45d4-baa6-5fad2a5e3a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b71eb4-0a16-4e8a-a79d-464b089a92fc",
        "cursor": {
          "ref": "7ae5f3b2-7fff-4565-85f5-62174ee04475",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "871d1a03-35f5-4452-8373-6a01fa9dffa2"
        },
        "item": {
          "id": "49b71eb4-0a16-4e8a-a79d-464b089a92fc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8344e7e6-6b61-4868-ac6c-be155466f86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3777c2f6-cdf7-4493-a372-0edc49808ca4",
        "cursor": {
          "ref": "858b1114-0eeb-477e-9926-1d6b1e989735",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ea1ab9c5-76a3-4baf-b12c-91acd941ccd1"
        },
        "item": {
          "id": "3777c2f6-cdf7-4493-a372-0edc49808ca4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "30a29e3b-c540-42c6-82a3-5ff222ec258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdef3bf4-c07b-4559-ac58-8e8573c4f1de",
        "cursor": {
          "ref": "8fec2125-62ab-41a6-b801-63ff2aaa5770",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7c3c3eda-3ee1-4d23-a776-d0271a030592"
        },
        "item": {
          "id": "fdef3bf4-c07b-4559-ac58-8e8573c4f1de",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e9c49f64-6cd7-474e-88f0-908c6dfae8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98efd105-a60a-4d7a-9e4b-f5d3a760c46b",
        "cursor": {
          "ref": "203f3f8b-e4fb-48b7-a352-a6184770a0f7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "971476db-0505-48a8-91a6-40ee54c998d4"
        },
        "item": {
          "id": "98efd105-a60a-4d7a-9e4b-f5d3a760c46b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d5f913dc-9fbb-4879-8290-8c0b861f745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0e1419-32ec-4377-8137-1eebaedb5892",
        "cursor": {
          "ref": "5808bbbb-d5bd-4909-9197-de0adb27930c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7ca28f4c-f5e7-4d53-88dc-523327ee0527"
        },
        "item": {
          "id": "ca0e1419-32ec-4377-8137-1eebaedb5892",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7f71c2b4-670a-4caf-aa04-cf5a0d4f8176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77165050-bda0-4a45-bcab-298748ffa72c",
        "cursor": {
          "ref": "ce1d907f-4f78-4fa3-9da1-086be67c0b58",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2865e422-ce6b-456e-a442-6acf3edca5c1"
        },
        "item": {
          "id": "77165050-bda0-4a45-bcab-298748ffa72c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "679608a4-7ca1-41d1-a7a9-02df62f0add4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d7733e-5151-4799-8f18-d7bcea6a4f68",
        "cursor": {
          "ref": "7e2b1aca-1dfb-4b5d-a2d4-207d4c914a89",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b272ee62-cc05-4243-a425-aa638208936d"
        },
        "item": {
          "id": "29d7733e-5151-4799-8f18-d7bcea6a4f68",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "10bd0376-6c2b-4890-a28b-8f10cd5a9a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9546ee6-bc7b-4593-a25f-d8f7ca257038",
        "cursor": {
          "ref": "3251a98a-0123-40a0-9d59-e38ce3fe6b8b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bc082b9d-f19a-4da7-b131-3ccac45be495"
        },
        "item": {
          "id": "b9546ee6-bc7b-4593-a25f-d8f7ca257038",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "61a26d61-9166-403a-9b35-a5e21436456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd7cf1d-1cd0-4dd3-a410-b6be18770605",
        "cursor": {
          "ref": "db817d05-6498-4942-87a4-c50408835a15",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9f56d568-2398-460f-ad4f-cb4d5d502e0e"
        },
        "item": {
          "id": "ccd7cf1d-1cd0-4dd3-a410-b6be18770605",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "53386c60-5a9a-4ff9-9d33-57204fba2803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2774752-5fc9-4a8b-ab01-6f79fa347619",
        "cursor": {
          "ref": "4f6b1288-a563-431e-8abb-2157f2b81950",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "198c6bfb-7cc2-4056-b0b7-ab8a0954b273"
        },
        "item": {
          "id": "f2774752-5fc9-4a8b-ab01-6f79fa347619",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aef691ff-99de-4f16-9aa2-efb964397d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a263229e-cf7b-4db0-b1a9-08ce649165d9",
        "cursor": {
          "ref": "e5a78a80-464c-4147-bad3-3d216e157f88",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "62910dc2-4b42-41a6-a2c9-d71dedabd164"
        },
        "item": {
          "id": "a263229e-cf7b-4db0-b1a9-08ce649165d9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d117e1f0-bc62-45d5-b2b6-e2b3f3d103ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4474419d-a0b9-403c-a553-c5c150f98fd1",
        "cursor": {
          "ref": "c2e83405-4c3e-4874-ba04-18ba65446b74",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2bf3b72c-f408-4aa9-bfaf-6a531baf888d"
        },
        "item": {
          "id": "4474419d-a0b9-403c-a553-c5c150f98fd1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cdf92494-7350-45ee-8561-7037033c8ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd62c31-2d93-4477-a1bc-1fe2982218ba",
        "cursor": {
          "ref": "3dea345b-6062-4ce2-a0cb-d0935675cb13",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f296801a-af79-4dbf-8ae4-9ac4f5dfc0c2"
        },
        "item": {
          "id": "0dd62c31-2d93-4477-a1bc-1fe2982218ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e4e6a93c-6033-42c7-b985-88b02d4a460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9609072c-4a6f-4680-8524-a80178299035",
        "cursor": {
          "ref": "45a50ac2-2194-4f0d-a049-977977cd474f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "660b0d71-ea2c-436f-b738-a067c6781de4"
        },
        "item": {
          "id": "9609072c-4a6f-4680-8524-a80178299035",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "25b8dae9-1f0b-4a0a-827b-b0d5e65022ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f2d3fc-87d1-4544-ab35-135abaa6440f",
        "cursor": {
          "ref": "9fdb3df1-d23a-48e6-9efd-458103d3a226",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "27207167-ec05-4381-b31c-eddb5aaf10f1"
        },
        "item": {
          "id": "99f2d3fc-87d1-4544-ab35-135abaa6440f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "229cd677-17b9-4550-ba44-99e4f164cf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "7fb55744-ea0f-4d94-b3c5-243bb8daacd5",
        "cursor": {
          "ref": "4122705e-57c2-4018-b0c7-5008c9cfd590",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "978cacf9-3f11-4fd4-9a42-655df76ec694"
        },
        "item": {
          "id": "7fb55744-ea0f-4d94-b3c5-243bb8daacd5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bd8fb989-541f-4505-a5b6-68e3f99ef08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "d3ced803-1da9-44ff-b933-84ed31de6ed6",
        "cursor": {
          "ref": "f2881058-dea5-4b73-91b2-815e2365dc48",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "99330d20-eab7-48d4-bb07-e6b0d6edd636"
        },
        "item": {
          "id": "d3ced803-1da9-44ff-b933-84ed31de6ed6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "151017a4-d011-41d6-b27d-ef1bb9be598f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "1c7f6131-f952-45d5-9015-bc146556babe",
        "cursor": {
          "ref": "39306208-909f-4cc5-b9ee-faf010ab0bc6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "329984b4-cd97-4551-b297-e339a7229bb2"
        },
        "item": {
          "id": "1c7f6131-f952-45d5-9015-bc146556babe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aedaeb8b-58bc-4cab-925c-52f4b3763e90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7f6131-f952-45d5-9015-bc146556babe",
        "cursor": {
          "ref": "39306208-909f-4cc5-b9ee-faf010ab0bc6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "329984b4-cd97-4551-b297-e339a7229bb2"
        },
        "item": {
          "id": "1c7f6131-f952-45d5-9015-bc146556babe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aedaeb8b-58bc-4cab-925c-52f4b3763e90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19303544-82b4-4b8b-863b-a7e83263e207",
        "cursor": {
          "ref": "3b1a4bc5-47ac-4e67-a8a4-5d71d57cf68e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "be37a9c2-a652-4ec8-b4b3-b272f283a20d"
        },
        "item": {
          "id": "19303544-82b4-4b8b-863b-a7e83263e207",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0bf298e8-6a7b-4195-99ca-8df5d62e1ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8751f8-977d-4671-9ddd-9821369cf3a0",
        "cursor": {
          "ref": "b0c4bf14-b916-4d7f-900f-35dbe3dbc9f3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eda53730-ed92-4a4e-9506-9dc6dfc2f030"
        },
        "item": {
          "id": "1a8751f8-977d-4671-9ddd-9821369cf3a0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c6fdca2d-21b1-4f29-8fa7-5c6fb1073643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}